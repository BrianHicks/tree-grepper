---
source: src/main.rs
expression: "call(&[\"tree-grepper\", \"-q\", \"rust\", \"(_)\", \"--format=pretty-json\", \"--sort\",\n       \"--no-gitignore\", \"vendor/tree-sitter-rust/examples\"])"

---
[
  {
    "file": "vendor/tree-sitter-rust/examples/ast.rs",
    "file_type": "rust",
    "matches": [
      {
        "kind": "source_file",
        "name": "query",
        "text": "// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n// file at the top-level directory of this distribution and at\n// http://rust-lang.org/COPYRIGHT.\n//\n// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n// option. This file may not be copied, modified, or distributed\n// except according to those terms.\n\n// The Rust abstract syntax tree.\n\npub use self::TyParamBound::*;\npub use self::UnsafeSource::*;\npub use self::PathParameters::*;\npub use symbol::{Ident, Symbol as Name};\npub use util::ThinVec;\npub use util::parser::ExprPrecedence;\n\nuse syntax_pos::{Span, DUMMY_SP};\nuse codemap::{respan, Spanned};\nuse abi::Abi;\nuse ext::hygiene::{Mark, SyntaxContext};\nuse print::pprust;\nuse ptr::P;\nuse rustc_data_structures::indexed_vec;\nuse symbol::{Symbol, keywords};\nuse tokenstream::{ThinTokenStream, TokenStream};\n\nuse serialize::{self, Encoder, Decoder};\nuse std::collections::HashSet;\nuse std::fmt;\nuse std::rc::Rc;\nuse std::u32;\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy)]\npub struct Lifetime {\n    pub id: NodeId,\n    pub span: Span,\n    pub ident: Ident,\n}\n\nimpl fmt::Debug for Lifetime {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"lifetime({}: {})\", self.id, pprust::lifetime_to_string(self))\n    }\n}\n\n/// A lifetime definition, e.g. `'a: 'b+'c+'d`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct LifetimeDef {\n    pub attrs: ThinVec<Attribute>,\n    pub lifetime: Lifetime,\n    pub bounds: Vec<Lifetime>\n}\n\n/// A \"Path\" is essentially Rust's notion of a name.\n///\n/// It's represented as a sequence of identifiers,\n/// along with a bunch of supporting information.\n///\n/// E.g. `std::cmp::PartialEq`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]\npub struct Path {\n    pub span: Span,\n    /// The segments in the path: the things separated by `::`.\n    /// Global paths begin with `keywords::CrateRoot`.\n    pub segments: Vec<PathSegment>,\n}\n\nimpl<'a> PartialEq<&'a str> for Path {\n    fn eq(&self, string: &&'a str) -> bool {\n        self.segments.len() == 1 && self.segments[0].identifier.name == *string\n    }\n}\n\nimpl fmt::Debug for Path {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"path({})\", pprust::path_to_string(self))\n    }\n}\n\nimpl fmt::Display for Path {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", pprust::path_to_string(self))\n    }\n}\n\nimpl Path {\n    // convert a span and an identifier to the corresponding\n    // 1-segment path\n    pub fn from_ident(s: Span, identifier: Ident) -> Path {\n        Path {\n            span: s,\n            segments: vec![PathSegment::from_ident(identifier, s)],\n        }\n    }\n\n    // Add starting \"crate root\" segment to all paths except those that\n    // already have it or start with `self`, `super`, `Self` or `$crate`.\n    pub fn default_to_global(mut self) -> Path {\n        if !self.is_global() {\n            let ident = self.segments[0].identifier;\n            if !::parse::token::Ident(ident).is_path_segment_keyword() ||\n               ident.name == keywords::Crate.name() {\n                self.segments.insert(0, PathSegment::crate_root(self.span));\n            }\n        }\n        self\n    }\n\n    pub fn is_global(&self) -> bool {\n        !self.segments.is_empty() && self.segments[0].identifier.name == keywords::CrateRoot.name()\n    }\n}\n\n/// A segment of a path: an identifier, an optional lifetime, and a set of types.\n///\n/// E.g. `std`, `String` or `Box<T>`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct PathSegment {\n    /// The identifier portion of this path segment.\n    pub identifier: Ident,\n    /// Span of the segment identifier.\n    pub span: Span,\n\n    /// Type/lifetime parameters attached to this path. They come in\n    /// two flavors: `Path<A,B,C>` and `Path(A,B) -> C`.\n    /// `None` means that no parameter list is supplied (`Path`),\n    /// `Some` means that parameter list is supplied (`Path<X, Y>`)\n    /// but it can be empty (`Path<>`).\n    /// `P` is used as a size optimization for the common case with no parameters.\n    pub parameters: Option<P<PathParameters>>,\n}\n\nimpl PathSegment {\n    pub fn from_ident(ident: Ident, span: Span) -> Self {\n        PathSegment { identifier: ident, span: span, parameters: None }\n    }\n    pub fn crate_root(span: Span) -> Self {\n        PathSegment {\n            identifier: Ident { ctxt: span.ctxt(), ..keywords::CrateRoot.ident() },\n            span,\n            parameters: None,\n        }\n    }\n}\n\n/// Parameters of a path segment.\n///\n/// E.g. `<A, B>` as in `Foo<A, B>` or `(A, B)` as in `Foo(A, B)`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum PathParameters {\n    /// The `<'a, A,B,C>` in `foo::bar::baz::<'a, A,B,C>`\n    AngleBracketed(AngleBracketedParameterData),\n    /// The `(A,B)` and `C` in `Foo(A,B) -> C`\n    Parenthesized(ParenthesizedParameterData),\n}\n\nimpl PathParameters {\n    pub fn span(&self) -> Span {\n        match *self {\n            AngleBracketed(ref data) => data.span,\n            Parenthesized(ref data) => data.span,\n        }\n    }\n}\n\n/// A path like `Foo<'a, T>`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Default)]\npub struct AngleBracketedParameterData {\n    /// Overall span\n    pub span: Span,\n    /// The lifetime parameters for this path segment.\n    pub lifetimes: Vec<Lifetime>,\n    /// The type parameters for this path segment, if present.\n    pub types: Vec<P<Ty>>,\n    /// Bindings (equality constraints) on associated types, if present.\n    ///\n    /// E.g., `Foo<A=Bar>`.\n    pub bindings: Vec<TypeBinding>,\n}\n\nimpl Into<Option<P<PathParameters>>> for AngleBracketedParameterData {\n    fn into(self) -> Option<P<PathParameters>> {\n        Some(P(PathParameters::AngleBracketed(self)))\n    }\n}\n\nimpl Into<Option<P<PathParameters>>> for ParenthesizedParameterData {\n    fn into(self) -> Option<P<PathParameters>> {\n        Some(P(PathParameters::Parenthesized(self)))\n    }\n}\n\n/// A path like `Foo(A,B) -> C`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct ParenthesizedParameterData {\n    /// Overall span\n    pub span: Span,\n\n    /// `(A,B)`\n    pub inputs: Vec<P<Ty>>,\n\n    /// `C`\n    pub output: Option<P<Ty>>,\n}\n\n#[derive(Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Hash, Debug)]\npub struct NodeId(u32);\n\nimpl NodeId {\n    pub fn new(x: usize) -> NodeId {\n        assert!(x < (u32::MAX as usize));\n        NodeId(x as u32)\n    }\n\n    pub fn from_u32(x: u32) -> NodeId {\n        NodeId(x)\n    }\n\n    pub fn as_usize(&self) -> usize {\n        self.0 as usize\n    }\n\n    pub fn as_u32(&self) -> u32 {\n        self.0\n    }\n\n    pub fn placeholder_from_mark(mark: Mark) -> Self {\n        NodeId(mark.as_u32())\n    }\n\n    pub fn placeholder_to_mark(self) -> Mark {\n        Mark::from_u32(self.0)\n    }\n}\n\nimpl fmt::Display for NodeId {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(&self.0, f)\n    }\n}\n\nimpl serialize::UseSpecializedEncodable for NodeId {\n    fn default_encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n        s.emit_u32(self.0)\n    }\n}\n\nimpl serialize::UseSpecializedDecodable for NodeId {\n    fn default_decode<D: Decoder>(d: &mut D) -> Result<NodeId, D::Error> {\n        d.read_u32().map(NodeId)\n    }\n}\n\nimpl indexed_vec::Idx for NodeId {\n    fn new(idx: usize) -> Self {\n        NodeId::new(idx)\n    }\n\n    fn index(self) -> usize {\n        self.as_usize()\n    }\n}\n\n/// Node id used to represent the root of the crate.\npub const CRATE_NODE_ID: NodeId = NodeId(0);\n\n/// When parsing and doing expansions, we initially give all AST nodes this AST\n/// node value. Then later, in the renumber pass, we renumber them to have\n/// small, positive ids.\npub const DUMMY_NODE_ID: NodeId = NodeId(!0);\n\n/// The AST represents all type param bounds as types.\n/// typeck::collect::compute_bounds matches these against\n/// the \"special\" built-in traits (see middle::lang_items) and\n/// detects Copy, Send and Sync.\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum TyParamBound {\n    TraitTyParamBound(PolyTraitRef, TraitBoundModifier),\n    RegionTyParamBound(Lifetime)\n}\n\n/// A modifier on a bound, currently this is only used for `?Sized`, where the\n/// modifier is `Maybe`. Negative bounds should also be handled here.\n#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum TraitBoundModifier {\n    None,\n    Maybe,\n}\n\npub type TyParamBounds = Vec<TyParamBound>;\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct TyParam {\n    pub attrs: ThinVec<Attribute>,\n    pub ident: Ident,\n    pub id: NodeId,\n    pub bounds: TyParamBounds,\n    pub default: Option<P<Ty>>,\n    pub span: Span,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum GenericParam {\n    Lifetime(LifetimeDef),\n    Type(TyParam),\n}\n\nimpl GenericParam {\n    pub fn is_lifetime_param(&self) -> bool {\n        match *self {\n            GenericParam::Lifetime(_) => true,\n            _ => false,\n        }\n    }\n\n    pub fn is_type_param(&self) -> bool {\n        match *self {\n            GenericParam::Type(_) => true,\n            _ => false,\n        }\n    }\n}\n\n/// Represents lifetime, type and const parameters attached to a declaration of\n/// a function, enum, trait, etc.\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct Generics {\n    pub params: Vec<GenericParam>,\n    pub where_clause: WhereClause,\n    pub span: Span,\n}\n\nimpl Generics {\n    pub fn is_lt_parameterized(&self) -> bool {\n        self.params.iter().any(|param| param.is_lifetime_param())\n    }\n\n    pub fn is_type_parameterized(&self) -> bool {\n        self.params.iter().any(|param| param.is_type_param())\n    }\n\n    pub fn is_parameterized(&self) -> bool {\n        !self.params.is_empty()\n    }\n\n    pub fn span_for_name(&self, name: &str) -> Option<Span> {\n        for param in &self.params {\n            if let GenericParam::Type(ref t) = *param {\n                if t.ident.name == name {\n                    return Some(t.span);\n                }\n            }\n        }\n        None\n    }\n}\n\nimpl Default for Generics {\n    /// Creates an instance of `Generics`.\n    fn default() ->  Generics {\n        Generics {\n            params: Vec::new(),\n            where_clause: WhereClause {\n                id: DUMMY_NODE_ID,\n                predicates: Vec::new(),\n                span: DUMMY_SP,\n            },\n            span: DUMMY_SP,\n        }\n    }\n}\n\n/// A `where` clause in a definition\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct WhereClause {\n    pub id: NodeId,\n    pub predicates: Vec<WherePredicate>,\n    pub span: Span,\n}\n\n/// A single predicate in a `where` clause\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum WherePredicate {\n    /// A type binding, e.g. `for<'c> Foo: Send+Clone+'c`\n    BoundPredicate(WhereBoundPredicate),\n    /// A lifetime predicate, e.g. `'a: 'b+'c`\n    RegionPredicate(WhereRegionPredicate),\n    /// An equality predicate (unsupported)\n    EqPredicate(WhereEqPredicate),\n}\n\n/// A type bound.\n///\n/// E.g. `for<'c> Foo: Send+Clone+'c`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct WhereBoundPredicate {\n    pub span: Span,\n    /// Any generics from a `for` binding\n    pub bound_generic_params: Vec<GenericParam>,\n    /// The type being bounded\n    pub bounded_ty: P<Ty>,\n    /// Trait and lifetime bounds (`Clone+Send+'static`)\n    pub bounds: TyParamBounds,\n}\n\n/// A lifetime predicate.\n///\n/// E.g. `'a: 'b+'c`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct WhereRegionPredicate {\n    pub span: Span,\n    pub lifetime: Lifetime,\n    pub bounds: Vec<Lifetime>,\n}\n\n/// An equality predicate (unsupported).\n///\n/// E.g. `T=int`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct WhereEqPredicate {\n    pub id: NodeId,\n    pub span: Span,\n    pub lhs_ty: P<Ty>,\n    pub rhs_ty: P<Ty>,\n}\n\n/// The set of MetaItems that define the compilation environment of the crate,\n/// used to drive conditional compilation\npub type CrateConfig = HashSet<(Name, Option<Symbol>)>;\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct Crate {\n    pub module: Mod,\n    pub attrs: Vec<Attribute>,\n    pub span: Span,\n}\n\n/// A spanned compile-time attribute list item.\npub type NestedMetaItem = Spanned<NestedMetaItemKind>;\n\n/// Possible values inside of compile-time attribute lists.\n///\n/// E.g. the '..' in `#[name(..)]`.\n#[derive(Clone, Eq, RustcEncodable, RustcDecodable, Hash, Debug, PartialEq)]\npub enum NestedMetaItemKind {\n    /// A full MetaItem, for recursive meta items.\n    MetaItem(MetaItem),\n    /// A literal.\n    ///\n    /// E.g. \"foo\", 64, true\n    Literal(Lit),\n}\n\n/// A spanned compile-time attribute item.\n///\n/// E.g. `#[test]`, `#[derive(..)]` or `#[feature = \"foo\"]`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct MetaItem {\n    pub name: Name,\n    pub node: MetaItemKind,\n    pub span: Span,\n}\n\n/// A compile-time attribute item.\n///\n/// E.g. `#[test]`, `#[derive(..)]` or `#[feature = \"foo\"]`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum MetaItemKind {\n    /// Word meta item.\n    ///\n    /// E.g. `test` as in `#[test]`\n    Word,\n    /// List meta item.\n    ///\n    /// E.g. `derive(..)` as in `#[derive(..)]`\n    List(Vec<NestedMetaItem>),\n    /// Name value meta item.\n    ///\n    /// E.g. `feature = \"foo\"` as in `#[feature = \"foo\"]`\n    NameValue(Lit)\n}\n\n/// A Block (`{ .. }`).\n///\n/// E.g. `{ .. }` as in `fn foo() { .. }`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct Block {\n    /// Statements in a block\n    pub stmts: Vec<Stmt>,\n    pub id: NodeId,\n    /// Distinguishes between `unsafe { ... }` and `{ ... }`\n    pub rules: BlockCheckMode,\n    pub span: Span,\n    pub recovered: bool,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]\npub struct Pat {\n    pub id: NodeId,\n    pub node: PatKind,\n    pub span: Span,\n}\n\nimpl fmt::Debug for Pat {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"pat({}: {})\", self.id, pprust::pat_to_string(self))\n    }\n}\n\nimpl Pat {\n    pub(super) fn to_ty(&self) -> Option<P<Ty>> {\n        let node = match &self.node {\n            PatKind::Wild => TyKind::Infer,\n            PatKind::Ident(BindingMode::ByValue(Mutability::Immutable), ident, None) =>\n                TyKind::Path(None, Path::from_ident(ident.span, ident.node)),\n            PatKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            PatKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            PatKind::Ref(pat, mutbl) =>\n                pat.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            PatKind::Slice(pats, None, _) if pats.len() == 1 =>\n                pats[0].to_ty().map(TyKind::Slice)?,\n            PatKind::Tuple(pats, None) => {\n                let mut tys = Vec::new();\n                for pat in pats {\n                    tys.push(pat.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            _ => return None,\n        };\n\n        Some(P(Ty { node, id: self.id, span: self.span }))\n    }\n\n    pub fn walk<F>(&self, it: &mut F) -> bool\n        where F: FnMut(&Pat) -> bool\n    {\n        if !it(self) {\n            return false;\n        }\n\n        match self.node {\n            PatKind::Ident(_, _, Some(ref p)) => p.walk(it),\n            PatKind::Struct(_, ref fields, _) => {\n                fields.iter().all(|field| field.node.pat.walk(it))\n            }\n            PatKind::TupleStruct(_, ref s, _) | PatKind::Tuple(ref s, _) => {\n                s.iter().all(|p| p.walk(it))\n            }\n            PatKind::Box(ref s) | PatKind::Ref(ref s, _) => {\n                s.walk(it)\n            }\n            PatKind::Slice(ref before, ref slice, ref after) => {\n                before.iter().all(|p| p.walk(it)) &&\n                slice.iter().all(|p| p.walk(it)) &&\n                after.iter().all(|p| p.walk(it))\n            }\n            PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..) |\n            PatKind::Ident(..) |\n            PatKind::Path(..) |\n            PatKind::Mac(_) => {\n                true\n            }\n        }\n    }\n}\n\n/// A single field in a struct pattern\n///\n/// Patterns like the fields of Foo `{ x, ref y, ref mut z }`\n/// are treated the same as` x: x, y: ref y, z: ref mut z`,\n/// except is_shorthand is true\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct FieldPat {\n    /// The identifier for the field\n    pub ident: Ident,\n    /// The pattern the field is destructured to\n    pub pat: P<Pat>,\n    pub is_shorthand: bool,\n    pub attrs: ThinVec<Attribute>,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub enum BindingMode {\n    ByRef(Mutability),\n    ByValue(Mutability),\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum RangeEnd {\n    Included(RangeSyntax),\n    Excluded,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum RangeSyntax {\n    DotDotDot,\n    DotDotEq,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum PatKind {\n    /// Represents a wildcard pattern (`_`)\n    Wild,\n\n    /// A `PatKind::Ident` may either be a new bound variable (`ref mut binding @ OPT_SUBPATTERN`),\n    /// or a unit struct/variant pattern, or a const pattern (in the last two cases the third\n    /// field must be `None`). Disambiguation cannot be done with parser alone, so it happens\n    /// during name resolution.\n    Ident(BindingMode, SpannedIdent, Option<P<Pat>>),\n\n    /// A struct or struct variant pattern, e.g. `Variant {x, y, ..}`.\n    /// The `bool` is `true` in the presence of a `..`.\n    Struct(Path, Vec<Spanned<FieldPat>>, bool),\n\n    /// A tuple struct/variant pattern `Variant(x, y, .., z)`.\n    /// If the `..` pattern fragment is present, then `Option<usize>` denotes its position.\n    /// 0 <= position <= subpats.len()\n    TupleStruct(Path, Vec<P<Pat>>, Option<usize>),\n\n    /// A possibly qualified path pattern.\n    /// Unqualified path patterns `A::B::C` can legally refer to variants, structs, constants\n    /// or associated constants. Qualified path patterns `<A>::B::C`/`<A as Trait>::B::C` can\n    /// only legally refer to associated constants.\n    Path(Option<QSelf>, Path),\n\n    /// A tuple pattern `(a, b)`.\n    /// If the `..` pattern fragment is present, then `Option<usize>` denotes its position.\n    /// 0 <= position <= subpats.len()\n    Tuple(Vec<P<Pat>>, Option<usize>),\n    /// A `box` pattern\n    Box(P<Pat>),\n    /// A reference pattern, e.g. `&mut (a, b)`\n    Ref(P<Pat>, Mutability),\n    /// A literal\n    Lit(P<Expr>),\n    /// A range pattern, e.g. `1...2`, `1..=2` or `1..2`\n    Range(P<Expr>, P<Expr>, RangeEnd),\n    /// `[a, b, ..i, y, z]` is represented as:\n    ///     `PatKind::Slice(box [a, b], Some(i), box [y, z])`\n    Slice(Vec<P<Pat>>, Option<P<Pat>>, Vec<P<Pat>>),\n    /// A macro pattern; pre-expansion\n    Mac(Mac),\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub enum Mutability {\n    Mutable,\n    Immutable,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub enum BinOpKind {\n    /// The `+` operator (addition)\n    Add,\n    /// The `-` operator (subtraction)\n    Sub,\n    /// The `*` operator (multiplication)\n    Mul,\n    /// The `/` operator (division)\n    Div,\n    /// The `%` operator (modulus)\n    Rem,\n    /// The `&&` operator (logical and)\n    And,\n    /// The `||` operator (logical or)\n    Or,\n    /// The `^` operator (bitwise xor)\n    BitXor,\n    /// The `&` operator (bitwise and)\n    BitAnd,\n    /// The `|` operator (bitwise or)\n    BitOr,\n    /// The `<<` operator (shift left)\n    Shl,\n    /// The `>>` operator (shift right)\n    Shr,\n    /// The `==` operator (equality)\n    Eq,\n    /// The `<` operator (less than)\n    Lt,\n    /// The `<=` operator (less than or equal to)\n    Le,\n    /// The `!=` operator (not equal to)\n    Ne,\n    /// The `>=` operator (greater than or equal to)\n    Ge,\n    /// The `>` operator (greater than)\n    Gt,\n}\n\nimpl BinOpKind {\n    pub fn to_string(&self) -> &'static str {\n        use self::BinOpKind::*;\n        match *self {\n            Add => \"+\",\n            Sub => \"-\",\n            Mul => \"*\",\n            Div => \"/\",\n            Rem => \"%\",\n            And => \"&&\",\n            Or => \"||\",\n            BitXor => \"^\",\n            BitAnd => \"&\",\n            BitOr => \"|\",\n            Shl => \"<<\",\n            Shr => \">>\",\n            Eq => \"==\",\n            Lt => \"<\",\n            Le => \"<=\",\n            Ne => \"!=\",\n            Ge => \">=\",\n            Gt => \">\",\n        }\n    }\n    pub fn lazy(&self) -> bool {\n        match *self {\n            BinOpKind::And | BinOpKind::Or => true,\n            _ => false\n        }\n    }\n\n    pub fn is_shift(&self) -> bool {\n        match *self {\n            BinOpKind::Shl | BinOpKind::Shr => true,\n            _ => false\n        }\n    }\n\n    pub fn is_comparison(&self) -> bool {\n        use self::BinOpKind::*;\n        match *self {\n            Eq | Lt | Le | Ne | Gt | Ge =>\n            true,\n            And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd | BitOr | Shl | Shr =>\n            false,\n        }\n    }\n\n    /// Returns `true` if the binary operator takes its arguments by value\n    pub fn is_by_value(&self) -> bool {\n        !self.is_comparison()\n    }\n}\n\npub type BinOp = Spanned<BinOpKind>;\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub enum UnOp {\n    /// The `*` operator for dereferencing\n    Deref,\n    /// The `!` operator for logical inversion\n    Not,\n    /// The `-` operator for negation\n    Neg,\n}\n\nimpl UnOp {\n    /// Returns `true` if the unary operator takes its argument by value\n    pub fn is_by_value(u: UnOp) -> bool {\n        match u {\n            UnOp::Neg | UnOp::Not => true,\n            _ => false,\n        }\n    }\n\n    pub fn to_string(op: UnOp) -> &'static str {\n        match op {\n            UnOp::Deref => \"*\",\n            UnOp::Not => \"!\",\n            UnOp::Neg => \"-\",\n        }\n    }\n}\n\n/// A statement\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]\npub struct Stmt {\n    pub id: NodeId,\n    pub node: StmtKind,\n    pub span: Span,\n}\n\nimpl Stmt {\n    pub fn add_trailing_semicolon(mut self) -> Self {\n        self.node = match self.node {\n            StmtKind::Expr(expr) => StmtKind::Semi(expr),\n            StmtKind::Mac(mac) => StmtKind::Mac(mac.map(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            })),\n            node => node,\n        };\n        self\n    }\n\n    pub fn is_item(&self) -> bool {\n        match self.node {\n            StmtKind::Local(_) => true,\n            _ => false,\n        }\n    }\n}\n\nimpl fmt::Debug for Stmt {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"stmt({}: {})\", self.id.to_string(), pprust::stmt_to_string(self))\n    }\n}\n\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]\npub enum StmtKind {\n    /// A local (let) binding.\n    Local(P<Local>),\n\n    /// An item definition.\n    Item(P<Item>),\n\n    /// Expr without trailing semi-colon.\n    Expr(P<Expr>),\n    /// Expr with a trailing semi-colon.\n    Semi(P<Expr>),\n    /// Macro.\n    Mac(P<(Mac, MacStmtStyle, ThinVec<Attribute>)>),\n}\n\n#[derive(Clone, Copy, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum MacStmtStyle {\n    /// The macro statement had a trailing semicolon, e.g. `foo! { ... };`\n    /// `foo!(...);`, `foo![...];`\n    Semicolon,\n    /// The macro statement had braces; e.g. foo! { ... }\n    Braces,\n    /// The macro statement had parentheses or brackets and no semicolon; e.g.\n    /// `foo!(...)`. All of these will end up being converted into macro\n    /// expressions.\n    NoBraces,\n}\n\n/// Local represents a `let` statement, e.g., `let <pat>:<ty> = <expr>;`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct Local {\n    pub pat: P<Pat>,\n    pub ty: Option<P<Ty>>,\n    /// Initializer expression to set the value, if any\n    pub init: Option<P<Expr>>,\n    pub id: NodeId,\n    pub span: Span,\n    pub attrs: ThinVec<Attribute>,\n}\n\n/// An arm of a 'match'.\n///\n/// E.g. `0...10 => { println!(\"match!\") }` as in\n///\n/// ```\n/// match 123 {\n///     0...10 => { println!(\"match!\") },\n///     _ => { println!(\"no match!\") },\n/// }\n/// ```\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct Arm {\n    pub attrs: Vec<Attribute>,\n    pub pats: Vec<P<Pat>>,\n    pub guard: Option<P<Expr>>,\n    pub body: P<Expr>,\n    pub beginning_vert: Option<Span>, // For RFC 1925 feature gate\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct Field {\n    pub ident: SpannedIdent,\n    pub expr: P<Expr>,\n    pub span: Span,\n    pub is_shorthand: bool,\n    pub attrs: ThinVec<Attribute>,\n}\n\npub type SpannedIdent = Spanned<Ident>;\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub enum BlockCheckMode {\n    Default,\n    Unsafe(UnsafeSource),\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub enum UnsafeSource {\n    CompilerGenerated,\n    UserProvided,\n}\n\n/// An expression\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash,)]\npub struct Expr {\n    pub id: NodeId,\n    pub node: ExprKind,\n    pub span: Span,\n    pub attrs: ThinVec<Attribute>\n}\n\nimpl Expr {\n    /// Wether this expression would be valid somewhere that expects a value, for example, an `if`\n    /// condition.\n    pub fn returns(&self) -> bool {\n        if let ExprKind::Block(ref block) = self.node {\n            match block.stmts.last().map(|last_stmt| &last_stmt.node) {\n                // implicit return\n                Some(&StmtKind::Expr(_)) => true,\n                Some(&StmtKind::Semi(ref expr)) => {\n                    if let ExprKind::Ret(_) = expr.node {\n                        // last statement is explicit return\n                        true\n                    } else {\n                        false\n                    }\n                }\n                // This is a block that doesn't end in either an implicit or explicit return\n                _ => false,\n            }\n        } else {\n            // This is not a block, it is a value\n            true\n        }\n    }\n\n    fn to_bound(&self) -> Option<TyParamBound> {\n        match &self.node {\n            ExprKind::Path(None, path) =>\n                Some(TraitTyParamBound(PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n                                       TraitBoundModifier::None)),\n            _ => None,\n        }\n    }\n\n    pub(super) fn to_ty(&self) -> Option<P<Ty>> {\n        let node = match &self.node {\n            ExprKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            ExprKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            ExprKind::Paren(expr) => expr.to_ty().map(TyKind::Paren)?,\n            ExprKind::AddrOf(mutbl, expr) =>\n                expr.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            ExprKind::Repeat(expr, expr_len) =>\n                expr.to_ty().map(|ty| TyKind::Array(ty, expr_len.clone()))?,\n            ExprKind::Array(exprs) if exprs.len() == 1 =>\n                exprs[0].to_ty().map(TyKind::Slice)?,\n            ExprKind::Tup(exprs) => {\n                let mut tys = Vec::new();\n                for expr in exprs {\n                    tys.push(expr.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            ExprKind::Binary(binop, lhs, rhs) if binop.node == BinOpKind::Add =>\n                if let (Some(lhs), Some(rhs)) = (lhs.to_bound(), rhs.to_bound()) {\n                    TyKind::TraitObject(vec![lhs, rhs], TraitObjectSyntax::None)\n                } else {\n                    return None;\n                }\n            _ => return None,\n        };\n\n        Some(P(Ty { node, id: self.id, span: self.span }))\n    }\n\n    pub fn precedence(&self) -> ExprPrecedence {\n        match self.node {\n            ExprKind::Box(_) => ExprPrecedence::Box,\n            ExprKind::InPlace(..) => ExprPrecedence::InPlace,\n            ExprKind::Array(_) => ExprPrecedence::Array,\n            ExprKind::Call(..) => ExprPrecedence::Call,\n            ExprKind::MethodCall(..) => ExprPrecedence::MethodCall,\n            ExprKind::Tup(_) => ExprPrecedence::Tup,\n            ExprKind::Binary(op, ..) => ExprPrecedence::Binary(op.node),\n            ExprKind::Unary(..) => ExprPrecedence::Unary,\n            ExprKind::Lit(_) => ExprPrecedence::Lit,\n            ExprKind::Type(..) | ExprKind::Cast(..) => ExprPrecedence::Cast,\n            ExprKind::If(..) => ExprPrecedence::If,\n            ExprKind::IfLet(..) => ExprPrecedence::IfLet,\n            ExprKind::While(..) => ExprPrecedence::While,\n            ExprKind::WhileLet(..) => ExprPrecedence::WhileLet,\n            ExprKind::ForLoop(..) => ExprPrecedence::ForLoop,\n            ExprKind::Loop(..) => ExprPrecedence::Loop,\n            ExprKind::Match(..) => ExprPrecedence::Match,\n            ExprKind::Closure(..) => ExprPrecedence::Closure,\n            ExprKind::Block(..) => ExprPrecedence::Block,\n            ExprKind::Catch(..) => ExprPrecedence::Catch,\n            ExprKind::Assign(..) => ExprPrecedence::Assign,\n            ExprKind::AssignOp(..) => ExprPrecedence::AssignOp,\n            ExprKind::Field(..) => ExprPrecedence::Field,\n            ExprKind::TupField(..) => ExprPrecedence::TupField,\n            ExprKind::Index(..) => ExprPrecedence::Index,\n            ExprKind::Range(..) => ExprPrecedence::Range,\n            ExprKind::Path(..) => ExprPrecedence::Path,\n            ExprKind::AddrOf(..) => ExprPrecedence::AddrOf,\n            ExprKind::Break(..) => ExprPrecedence::Break,\n            ExprKind::Continue(..) => ExprPrecedence::Continue,\n            ExprKind::Ret(..) => ExprPrecedence::Ret,\n            ExprKind::InlineAsm(..) => ExprPrecedence::InlineAsm,\n            ExprKind::Mac(..) => ExprPrecedence::Mac,\n            ExprKind::Struct(..) => ExprPrecedence::Struct,\n            ExprKind::Repeat(..) => ExprPrecedence::Repeat,\n            ExprKind::Paren(..) => ExprPrecedence::Paren,\n            ExprKind::Try(..) => ExprPrecedence::Try,\n            ExprKind::Yield(..) => ExprPrecedence::Yield,\n        }\n    }\n}\n\nimpl fmt::Debug for Expr {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"expr({}: {})\", self.id, pprust::expr_to_string(self))\n    }\n}\n\n/// Limit types of a range (inclusive or exclusive)\n#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum RangeLimits {\n    /// Inclusive at the beginning, exclusive at the end\n    HalfOpen,\n    /// Inclusive at the beginning and end\n    Closed,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum ExprKind {\n    /// A `box x` expression.\n    Box(P<Expr>),\n    /// First expr is the place; second expr is the value.\n    InPlace(P<Expr>, P<Expr>),\n    /// An array (`[a, b, c, d]`)\n    Array(Vec<P<Expr>>),\n    /// A function call\n    ///\n    /// The first field resolves to the function itself,\n    /// and the second field is the list of arguments.\n    /// This also represents calling the constructor of\n    /// tuple-like ADTs such as tuple structs and enum variants.\n    Call(P<Expr>, Vec<P<Expr>>),\n    /// A method call (`x.foo::<'static, Bar, Baz>(a, b, c, d)`)\n    ///\n    /// The `PathSegment` represents the method name and its generic arguments\n    /// (within the angle brackets).\n    /// The first element of the vector of `Expr`s is the expression that evaluates\n    /// to the object on which the method is being called on (the receiver),\n    /// and the remaining elements are the rest of the arguments.\n    /// Thus, `x.foo::<Bar, Baz>(a, b, c, d)` is represented as\n    /// `ExprKind::MethodCall(PathSegment { foo, [Bar, Baz] }, [x, a, b, c, d])`.\n    MethodCall(PathSegment, Vec<P<Expr>>),\n    /// A tuple (`(a, b, c ,d)`)\n    Tup(Vec<P<Expr>>),\n    /// A binary operation (For example: `a + b`, `a * b`)\n    Binary(BinOp, P<Expr>, P<Expr>),\n    /// A unary operation (For example: `!x`, `*x`)\n    Unary(UnOp, P<Expr>),\n    /// A literal (For example: `1`, `\"foo\"`)\n    Lit(P<Lit>),\n    /// A cast (`foo as f64`)\n    Cast(P<Expr>, P<Ty>),\n    Type(P<Expr>, P<Ty>),\n    /// An `if` block, with an optional else block\n    ///\n    /// `if expr { block } else { expr }`\n    If(P<Expr>, P<Block>, Option<P<Expr>>),\n    /// An `if let` expression with an optional else block\n    ///\n    /// `if let pat = expr { block } else { expr }`\n    ///\n    /// This is desugared to a `match` expression.\n    IfLet(P<Pat>, P<Expr>, P<Block>, Option<P<Expr>>),\n    /// A while loop, with an optional label\n    ///\n    /// `'label: while expr { block }`\n    While(P<Expr>, P<Block>, Option<SpannedIdent>),\n    /// A while-let loop, with an optional label\n    ///\n    /// `'label: while let pat = expr { block }`\n    ///\n    /// This is desugared to a combination of `loop` and `match` expressions.\n    WhileLet(P<Pat>, P<Expr>, P<Block>, Option<SpannedIdent>),\n    /// A for loop, with an optional label\n    ///\n    /// `'label: for pat in expr { block }`\n    ///\n    /// This is desugared to a combination of `loop` and `match` expressions.\n    ForLoop(P<Pat>, P<Expr>, P<Block>, Option<SpannedIdent>),\n    /// Conditionless loop (can be exited with break, continue, or return)\n    ///\n    /// `'label: loop { block }`\n    Loop(P<Block>, Option<SpannedIdent>),\n    /// A `match` block.\n    Match(P<Expr>, Vec<Arm>),\n    /// A closure (for example, `move |a, b, c| a + b + c`)\n    ///\n    /// The final span is the span of the argument block `|...|`\n    Closure(CaptureBy, P<FnDecl>, P<Expr>, Span),\n    /// A block (`{ ... }`)\n    Block(P<Block>),\n    /// A catch block (`catch { ... }`)\n    Catch(P<Block>),\n\n    /// An assignment (`a = foo()`)\n    Assign(P<Expr>, P<Expr>),\n    /// An assignment with an operator\n    ///\n    /// For example, `a += 1`.\n    AssignOp(BinOp, P<Expr>, P<Expr>),\n    /// Access of a named struct field (`obj.foo`)\n    Field(P<Expr>, SpannedIdent),\n    /// Access of an unnamed field of a struct or tuple-struct\n    ///\n    /// For example, `foo.0`.\n    TupField(P<Expr>, Spanned<usize>),\n    /// An indexing operation (`foo[2]`)\n    Index(P<Expr>, P<Expr>),\n    /// A range (`1..2`, `1..`, `..2`, `1...2`, `1...`, `...2`)\n    Range(Option<P<Expr>>, Option<P<Expr>>, RangeLimits),\n\n    /// Variable reference, possibly containing `::` and/or type\n    /// parameters, e.g. foo::bar::<baz>.\n    ///\n    /// Optionally \"qualified\",\n    /// E.g. `<Vec<T> as SomeTrait>::SomeType`.\n    Path(Option<QSelf>, Path),\n\n    /// A referencing operation (`&a` or `&mut a`)\n    AddrOf(Mutability, P<Expr>),\n    /// A `break`, with an optional label to break, and an optional expression\n    Break(Option<SpannedIdent>, Option<P<Expr>>),\n    /// A `continue`, with an optional label\n    Continue(Option<SpannedIdent>),\n    /// A `return`, with an optional value to be returned\n    Ret(Option<P<Expr>>),\n\n    /// Output of the `asm!()` macro\n    InlineAsm(P<InlineAsm>),\n\n    /// A macro invocation; pre-expansion\n    Mac(Mac),\n\n    /// A struct literal expression.\n    ///\n    /// For example, `Foo {x: 1, y: 2}`, or\n    /// `Foo {x: 1, .. base}`, where `base` is the `Option<Expr>`.\n    Struct(Path, Vec<Field>, Option<P<Expr>>),\n\n    /// An array literal constructed from one repeated element.\n    ///\n    /// For example, `[1; 5]`. The first expression is the element\n    /// to be repeated; the second is the number of times to repeat it.\n    Repeat(P<Expr>, P<Expr>),\n\n    /// No-op: used solely so we can pretty-print faithfully\n    Paren(P<Expr>),\n\n    /// `expr?`\n    Try(P<Expr>),\n\n    /// A `yield`, with an optional value to be yielded\n    Yield(Option<P<Expr>>),\n}\n\n/// The explicit Self type in a \"qualified path\". The actual\n/// path, including the trait and the associated item, is stored\n/// separately. `position` represents the index of the associated\n/// item qualified with this Self type.\n///\n/// ```ignore (only-for-syntax-highlight)\n/// <Vec<T> as a::b::Trait>::AssociatedItem\n///  ^~~~~     ~~~~~~~~~~~~~~^\n///  ty        position = 3\n///\n/// <Vec<T>>::AssociatedItem\n///  ^~~~~    ^\n///  ty       position = 0\n/// ```\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct QSelf {\n    pub ty: P<Ty>,\n    pub position: usize\n}\n\n/// A capture clause\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub enum CaptureBy {\n    Value,\n    Ref,\n}\n\npub type Mac = Spanned<Mac_>;\n\n/// Represents a macro invocation. The Path indicates which macro\n/// is being invoked, and the vector of token-trees contains the source\n/// of the macro invocation.\n///\n/// NB: the additional ident for a macro_rules-style macro is actually\n/// stored in the enclosing item. Oog.\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct Mac_ {\n    pub path: Path,\n    pub tts: ThinTokenStream,\n}\n\nimpl Mac_ {\n    pub fn stream(&self) -> TokenStream {\n        self.tts.clone().into()\n    }\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct MacroDef {\n    pub tokens: ThinTokenStream,\n    pub legacy: bool,\n}\n\nimpl MacroDef {\n    pub fn stream(&self) -> TokenStream {\n        self.tokens.clone().into()\n    }\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub enum StrStyle {\n    /// A regular string, like `\"foo\"`\n    Cooked,\n    /// A raw string, like `r##\"foo\"##`\n    ///\n    /// The uint is the number of `#` symbols used\n    Raw(usize)\n}\n\n/// A literal\npub type Lit = Spanned<LitKind>;\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub enum LitIntType {\n    Signed(IntTy),\n    Unsigned(UintTy),\n    Unsuffixed,\n}\n\n/// Literal kind.\n///\n/// E.g. `\"foo\"`, `42`, `12.34` or `bool`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum LitKind {\n    /// A string literal (`\"foo\"`)\n    Str(Symbol, StrStyle),\n    /// A byte string (`b\"foo\"`)\n    ByteStr(Rc<Vec<u8>>),\n    /// A byte char (`b'f'`)\n    Byte(u8),\n    /// A character literal (`'a'`)\n    Char(char),\n    /// An integer literal (`1`)\n    Int(u128, LitIntType),\n    /// A float literal (`1f64` or `1E10f64`)\n    Float(Symbol, FloatTy),\n    /// A float literal without a suffix (`1.0 or 1.0E10`)\n    FloatUnsuffixed(Symbol),\n    /// A boolean literal\n    Bool(bool),\n}\n\nimpl LitKind {\n    /// Returns true if this literal is a string and false otherwise.\n    pub fn is_str(&self) -> bool {\n        match *self {\n            LitKind::Str(..) => true,\n            _ => false,\n        }\n    }\n\n    /// Returns true if this literal has no suffix. Note: this will return true\n    /// for literals with prefixes such as raw strings and byte strings.\n    pub fn is_unsuffixed(&self) -> bool {\n        match *self {\n            // unsuffixed variants\n            LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..) |\n            LitKind::Int(_, LitIntType::Unsuffixed) |\n            LitKind::FloatUnsuffixed(..) |\n            LitKind::Bool(..) => true,\n            // suffixed variants\n            LitKind::Int(_, LitIntType::Signed(..)) |\n            LitKind::Int(_, LitIntType::Unsigned(..)) |\n            LitKind::Float(..) => false,\n        }\n    }\n\n    /// Returns true if this literal has a suffix.\n    pub fn is_suffixed(&self) -> bool {\n        !self.is_unsuffixed()\n    }\n}\n\n// NB: If you change this, you'll probably want to change the corresponding\n// type structure in middle/ty.rs as well.\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct MutTy {\n    pub ty: P<Ty>,\n    pub mutbl: Mutability,\n}\n\n/// Represents a method's signature in a trait declaration,\n/// or in an implementation.\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct MethodSig {\n    pub unsafety: Unsafety,\n    pub constness: Spanned<Constness>,\n    pub abi: Abi,\n    pub decl: P<FnDecl>,\n}\n\n/// Represents an item declaration within a trait declaration,\n/// possibly including a default implementation. A trait item is\n/// either required (meaning it doesn't have an implementation, just a\n/// signature) or provided (meaning it has a default implementation).\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct TraitItem {\n    pub id: NodeId,\n    pub ident: Ident,\n    pub attrs: Vec<Attribute>,\n    pub generics: Generics,\n    pub node: TraitItemKind,\n    pub span: Span,\n    /// See `Item::tokens` for what this is\n    pub tokens: Option<TokenStream>,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum TraitItemKind {\n    Const(P<Ty>, Option<P<Expr>>),\n    Method(MethodSig, Option<P<Block>>),\n    Type(TyParamBounds, Option<P<Ty>>),\n    Macro(Mac),\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct ImplItem {\n    pub id: NodeId,\n    pub ident: Ident,\n    pub vis: Visibility,\n    pub defaultness: Defaultness,\n    pub attrs: Vec<Attribute>,\n    pub generics: Generics,\n    pub node: ImplItemKind,\n    pub span: Span,\n    /// See `Item::tokens` for what this is\n    pub tokens: Option<TokenStream>,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum ImplItemKind {\n    Const(P<Ty>, P<Expr>),\n    Method(MethodSig, P<Block>),\n    Type(P<Ty>),\n    Macro(Mac),\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy,\n         PartialOrd, Ord)]\npub enum IntTy {\n    Isize,\n    I8,\n    I16,\n    I32,\n    I64,\n    I128,\n}\n\nimpl fmt::Debug for IntTy {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(self, f)\n    }\n}\n\nimpl fmt::Display for IntTy {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.ty_to_string())\n    }\n}\n\nimpl IntTy {\n    pub fn ty_to_string(&self) -> &'static str {\n        match *self {\n            IntTy::Isize => \"isize\",\n            IntTy::I8 => \"i8\",\n            IntTy::I16 => \"i16\",\n            IntTy::I32 => \"i32\",\n            IntTy::I64 => \"i64\",\n            IntTy::I128 => \"i128\",\n        }\n    }\n\n    pub fn val_to_string(&self, val: i128) -> String {\n        // cast to a u128 so we can correctly print INT128_MIN. All integral types\n        // are parsed as u128, so we wouldn't want to print an extra negative\n        // sign.\n        format!(\"{}{}\", val as u128, self.ty_to_string())\n    }\n\n    pub fn bit_width(&self) -> Option<usize> {\n        Some(match *self {\n            IntTy::Isize => return None,\n            IntTy::I8 => 8,\n            IntTy::I16 => 16,\n            IntTy::I32 => 32,\n            IntTy::I64 => 64,\n            IntTy::I128 => 128,\n        })\n    }\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy,\n         PartialOrd, Ord)]\npub enum UintTy {\n    Usize,\n    U8,\n    U16,\n    U32,\n    U64,\n    U128,\n}\n\nimpl UintTy {\n    pub fn ty_to_string(&self) -> &'static str {\n        match *self {\n            UintTy::Usize => \"usize\",\n            UintTy::U8 => \"u8\",\n            UintTy::U16 => \"u16\",\n            UintTy::U32 => \"u32\",\n            UintTy::U64 => \"u64\",\n            UintTy::U128 => \"u128\",\n        }\n    }\n\n    pub fn val_to_string(&self, val: u128) -> String {\n        format!(\"{}{}\", val, self.ty_to_string())\n    }\n\n    pub fn bit_width(&self) -> Option<usize> {\n        Some(match *self {\n            UintTy::Usize => return None,\n            UintTy::U8 => 8,\n            UintTy::U16 => 16,\n            UintTy::U32 => 32,\n            UintTy::U64 => 64,\n            UintTy::U128 => 128,\n        })\n    }\n}\n\nimpl fmt::Debug for UintTy {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(self, f)\n    }\n}\n\nimpl fmt::Display for UintTy {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.ty_to_string())\n    }\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy,\n         PartialOrd, Ord)]\npub enum FloatTy {\n    F32,\n    F64,\n}\n\nimpl fmt::Debug for FloatTy {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(self, f)\n    }\n}\n\nimpl fmt::Display for FloatTy {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.ty_to_string())\n    }\n}\n\nimpl FloatTy {\n    pub fn ty_to_string(&self) -> &'static str {\n        match *self {\n            FloatTy::F32 => \"f32\",\n            FloatTy::F64 => \"f64\",\n        }\n    }\n\n    pub fn bit_width(&self) -> usize {\n        match *self {\n            FloatTy::F32 => 32,\n            FloatTy::F64 => 64,\n        }\n    }\n}\n\n// Bind a type to an associated type: `A=Foo`.\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct TypeBinding {\n    pub id: NodeId,\n    pub ident: Ident,\n    pub ty: P<Ty>,\n    pub span: Span,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]\npub struct Ty {\n    pub id: NodeId,\n    pub node: TyKind,\n    pub span: Span,\n}\n\nimpl fmt::Debug for Ty {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"type({})\", pprust::ty_to_string(self))\n    }\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct BareFnTy {\n    pub unsafety: Unsafety,\n    pub abi: Abi,\n    pub generic_params: Vec<GenericParam>,\n    pub decl: P<FnDecl>\n}\n\n/// The different kinds of types recognized by the compiler\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum TyKind {\n    /// A variable-length slice (`[T]`)\n    Slice(P<Ty>),\n    /// A fixed length array (`[T; n]`)\n    Array(P<Ty>, P<Expr>),\n    /// A raw pointer (`*const T` or `*mut T`)\n    Ptr(MutTy),\n    /// A reference (`&'a T` or `&'a mut T`)\n    Rptr(Option<Lifetime>, MutTy),\n    /// A bare function (e.g. `fn(usize) -> bool`)\n    BareFn(P<BareFnTy>),\n    /// The never type (`!`)\n    Never,\n    /// A tuple (`(A, B, C, D,...)`)\n    Tup(Vec<P<Ty>> ),\n    /// A path (`module::module::...::Type`), optionally\n    /// \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.\n    ///\n    /// Type parameters are stored in the Path itself\n    Path(Option<QSelf>, Path),\n    /// A trait object type `Bound1 + Bound2 + Bound3`\n    /// where `Bound` is a trait or a lifetime.\n    TraitObject(TyParamBounds, TraitObjectSyntax),\n    /// An `impl Bound1 + Bound2 + Bound3` type\n    /// where `Bound` is a trait or a lifetime.\n    ImplTrait(TyParamBounds),\n    /// No-op; kept solely so that we can pretty-print faithfully\n    Paren(P<Ty>),\n    /// Unused for now\n    Typeof(P<Expr>),\n    /// TyKind::Infer means the type should be inferred instead of it having been\n    /// specified. This can appear anywhere in a type.\n    Infer,\n    /// Inferred type of a `self` or `&self` argument in a method.\n    ImplicitSelf,\n    // A macro in the type position.\n    Mac(Mac),\n    /// Placeholder for a kind that has failed to be defined.\n    Err,\n}\n\n/// Syntax used to declare a trait object.\n#[derive(Clone, Copy, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum TraitObjectSyntax {\n    Dyn,\n    None,\n}\n\n/// Inline assembly dialect.\n///\n/// E.g. `\"intel\"` as in `asm!(\"mov eax, 2\" : \"={eax}\"(result) : : : \"intel\")`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub enum AsmDialect {\n    Att,\n    Intel,\n}\n\n/// Inline assembly.\n///\n/// E.g. `\"={eax}\"(result)` as in `asm!(\"mov eax, 2\" : \"={eax}\"(result) : : : \"intel\")`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct InlineAsmOutput {\n    pub constraint: Symbol,\n    pub expr: P<Expr>,\n    pub is_rw: bool,\n    pub is_indirect: bool,\n}\n\n/// Inline assembly.\n///\n/// E.g. `asm!(\"NOP\");`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct InlineAsm {\n    pub asm: Symbol,\n    pub asm_str_style: StrStyle,\n    pub outputs: Vec<InlineAsmOutput>,\n    pub inputs: Vec<(Symbol, P<Expr>)>,\n    pub clobbers: Vec<Symbol>,\n    pub volatile: bool,\n    pub alignstack: bool,\n    pub dialect: AsmDialect,\n    pub ctxt: SyntaxContext,\n}\n\n/// An argument in a function header.\n///\n/// E.g. `bar: usize` as in `fn foo(bar: usize)`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct Arg {\n    pub ty: P<Ty>,\n    pub pat: P<Pat>,\n    pub id: NodeId,\n}\n\n/// Alternative representation for `Arg`s describing `self` parameter of methods.\n///\n/// E.g. `&mut self` as in `fn foo(&mut self)`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum SelfKind {\n    /// `self`, `mut self`\n    Value(Mutability),\n    /// `&'lt self`, `&'lt mut self`\n    Region(Option<Lifetime>, Mutability),\n    /// `self: TYPE`, `mut self: TYPE`\n    Explicit(P<Ty>, Mutability),\n}\n\npub type ExplicitSelf = Spanned<SelfKind>;\n\nimpl Arg {\n    pub fn to_self(&self) -> Option<ExplicitSelf> {\n        if let PatKind::Ident(BindingMode::ByValue(mutbl), ident, _) = self.pat.node {\n            if ident.node.name == keywords::SelfValue.name() {\n                return match self.ty.node {\n                    TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                    TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }\n                    _ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),\n                }\n            }\n        }\n        None\n    }\n\n    pub fn is_self(&self) -> bool {\n        if let PatKind::Ident(_, ident, _) = self.pat.node {\n            ident.node.name == keywords::SelfValue.name()\n        } else {\n            false\n        }\n    }\n\n    pub fn from_self(eself: ExplicitSelf, eself_ident: SpannedIdent) -> Arg {\n        let span = eself.span.to(eself_ident.span);\n        let infer_ty = P(Ty {\n            id: DUMMY_NODE_ID,\n            node: TyKind::ImplicitSelf,\n            span,\n        });\n        let arg = |mutbl, ty| Arg {\n            pat: P(Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            }),\n            ty,\n            id: DUMMY_NODE_ID,\n        };\n        match eself.node {\n            SelfKind::Explicit(ty, mutbl) => arg(mutbl, ty),\n            SelfKind::Value(mutbl) => arg(mutbl, infer_ty),\n            SelfKind::Region(lt, mutbl) => arg(Mutability::Immutable, P(Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            })),\n        }\n    }\n}\n\n/// Header (not the body) of a function declaration.\n///\n/// E.g. `fn foo(bar: baz)`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct FnDecl {\n    pub inputs: Vec<Arg>,\n    pub output: FunctionRetTy,\n    pub variadic: bool\n}\n\nimpl FnDecl {\n    pub fn get_self(&self) -> Option<ExplicitSelf> {\n        self.inputs.get(0).and_then(Arg::to_self)\n    }\n    pub fn has_self(&self) -> bool {\n        self.inputs.get(0).map(Arg::is_self).unwrap_or(false)\n    }\n}\n\n/// Is the trait definition an auto trait?\n#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum IsAuto {\n    Yes,\n    No\n}\n\n#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum Unsafety {\n    Unsafe,\n    Normal,\n}\n\n#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum Constness {\n    Const,\n    NotConst,\n}\n\n#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum Defaultness {\n    Default,\n    Final,\n}\n\nimpl fmt::Display for Unsafety {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(match *self {\n            Unsafety::Normal => \"normal\",\n            Unsafety::Unsafe => \"unsafe\",\n        }, f)\n    }\n}\n\n#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]\npub enum ImplPolarity {\n    /// `impl Trait for Type`\n    Positive,\n    /// `impl !Trait for Type`\n    Negative,\n}\n\nimpl fmt::Debug for ImplPolarity {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        match *self {\n            ImplPolarity::Positive => \"positive\".fmt(f),\n            ImplPolarity::Negative => \"negative\".fmt(f),\n        }\n    }\n}\n\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum FunctionRetTy {\n    /// Return type is not specified.\n    ///\n    /// Functions default to `()` and\n    /// closures default to inference. Span points to where return\n    /// type would be inserted.\n    Default(Span),\n    /// Everything else\n    Ty(P<Ty>),\n}\n\nimpl FunctionRetTy {\n    pub fn span(&self) -> Span {\n        match *self {\n            FunctionRetTy::Default(span) => span,\n            FunctionRetTy::Ty(ref ty) => ty.span,\n        }\n    }\n}\n\n/// Module declaration.\n///\n/// E.g. `mod foo;` or `mod foo { .. }`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct Mod {\n    /// A span from the first token past `{` to the last token until `}`.\n    /// For `mod foo;`, the inner span ranges from the first token\n    /// to the last token in the external file.\n    pub inner: Span,\n    pub items: Vec<P<Item>>,\n}\n\n/// Foreign module declaration.\n///\n/// E.g. `extern { .. }` or `extern C { .. }`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct ForeignMod {\n    pub abi: Abi,\n    pub items: Vec<ForeignItem>,\n}\n\n/// Global inline assembly\n///\n/// aka module-level assembly or file-scoped assembly\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub struct GlobalAsm {\n    pub asm: Symbol,\n    pub ctxt: SyntaxContext,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct EnumDef {\n    pub variants: Vec<Variant>,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct Variant_ {\n    pub name: Ident,\n    pub attrs: Vec<Attribute>,\n    pub data: VariantData,\n    /// Explicit discriminant, e.g. `Foo = 1`\n    pub disr_expr: Option<P<Expr>>,\n}\n\npub type Variant = Spanned<Variant_>;\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum UseTreeKind {\n    Simple(Ident),\n    Glob,\n    Nested(Vec<(UseTree, NodeId)>),\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct UseTree {\n    pub kind: UseTreeKind,\n    pub prefix: Path,\n    pub span: Span,\n}\n\n/// Distinguishes between Attributes that decorate items and Attributes that\n/// are contained as statements within items. These two cases need to be\n/// distinguished for pretty-printing.\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub enum AttrStyle {\n    Outer,\n    Inner,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\npub struct AttrId(pub usize);\n\n/// Meta-data associated with an item\n/// Doc-comments are promoted to attributes that have is_sugared_doc = true\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct Attribute {\n    pub id: AttrId,\n    pub style: AttrStyle,\n    pub path: Path,\n    pub tokens: TokenStream,\n    pub is_sugared_doc: bool,\n    pub span: Span,\n}\n\n/// TraitRef's appear in impls.\n///\n/// resolve maps each TraitRef's ref_id to its defining trait; that's all\n/// that the ref_id is for. The impl_id maps to the \"self type\" of this impl.\n/// If this impl is an ItemKind::Impl, the impl_id is redundant (it could be the\n/// same as the impl's node id).\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct TraitRef {\n    pub path: Path,\n    pub ref_id: NodeId,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct PolyTraitRef {\n    /// The `'a` in `<'a> Foo<&'a T>`\n    pub bound_generic_params: Vec<GenericParam>,\n\n    /// The `Foo<&'a T>` in `<'a> Foo<&'a T>`\n    pub trait_ref: TraitRef,\n\n    pub span: Span,\n}\n\nimpl PolyTraitRef {\n    pub fn new(generic_params: Vec<GenericParam>, path: Path, span: Span) -> Self {\n        PolyTraitRef {\n            bound_generic_params: generic_params,\n            trait_ref: TraitRef { path: path, ref_id: DUMMY_NODE_ID },\n            span,\n        }\n    }\n}\n\n#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum CrateSugar {\n    /// Source is `pub(crate)`\n    PubCrate,\n\n    /// Source is (just) `crate`\n    JustCrate,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum Visibility {\n    Public,\n    Crate(Span, CrateSugar),\n    Restricted { path: P<Path>, id: NodeId },\n    Inherited,\n}\n\n/// Field of a struct.\n///\n/// E.g. `bar: usize` as in `struct Foo { bar: usize }`\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct StructField {\n    pub span: Span,\n    pub ident: Option<Ident>,\n    pub vis: Visibility,\n    pub id: NodeId,\n    pub ty: P<Ty>,\n    pub attrs: Vec<Attribute>,\n}\n\n/// Fields and Ids of enum variants and structs\n///\n/// For enum variants: `NodeId` represents both an Id of the variant itself (relevant for all\n/// variant kinds) and an Id of the variant's constructor (not relevant for `Struct`-variants).\n/// One shared Id can be successfully used for these two purposes.\n/// Id of the whole enum lives in `Item`.\n///\n/// For structs: `NodeId` represents an Id of the structure's constructor, so it is not actually\n/// used for `Struct`-structs (but still presents). Structures don't have an analogue of \"Id of\n/// the variant itself\" from enum variants.\n/// Id of the whole struct lives in `Item`.\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum VariantData {\n    /// Struct variant.\n    ///\n    /// E.g. `Bar { .. }` as in `enum Foo { Bar { .. } }`\n    Struct(Vec<StructField>, NodeId),\n    /// Tuple variant.\n    ///\n    /// E.g. `Bar(..)` as in `enum Foo { Bar(..) }`\n    Tuple(Vec<StructField>, NodeId),\n    /// Unit variant.\n    ///\n    /// E.g. `Bar = ..` as in `enum Foo { Bar = .. }`\n    Unit(NodeId),\n}\n\nimpl VariantData {\n    pub fn fields(&self) -> &[StructField] {\n        match *self {\n            VariantData::Struct(ref fields, _) | VariantData::Tuple(ref fields, _) => fields,\n            _ => &[],\n        }\n    }\n    pub fn id(&self) -> NodeId {\n        match *self {\n            VariantData::Struct(_, id) | VariantData::Tuple(_, id) | VariantData::Unit(id) => id\n        }\n    }\n    pub fn is_struct(&self) -> bool {\n        if let VariantData::Struct(..) = *self { true } else { false }\n    }\n    pub fn is_tuple(&self) -> bool {\n        if let VariantData::Tuple(..) = *self { true } else { false }\n    }\n    pub fn is_unit(&self) -> bool {\n        if let VariantData::Unit(..) = *self { true } else { false }\n    }\n}\n\n/// An item\n///\n/// The name might be a dummy name in case of anonymous items\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct Item {\n    pub ident: Ident,\n    pub attrs: Vec<Attribute>,\n    pub id: NodeId,\n    pub node: ItemKind,\n    pub vis: Visibility,\n    pub span: Span,\n\n    /// Original tokens this item was parsed from. This isn't necessarily\n    /// available for all items, although over time more and more items should\n    /// have this be `Some`. Right now this is primarily used for procedural\n    /// macros, notably custom attributes.\n    ///\n    /// Note that the tokens here do not include the outer attributes, but will\n    /// include inner attributes.\n    pub tokens: Option<TokenStream>,\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum ItemKind {\n    /// An `extern crate` item, with optional original crate name.\n    ///\n    /// E.g. `extern crate foo` or `extern crate foo_bar as foo`\n    ExternCrate(Option<Name>),\n    /// A use declaration (`use` or `pub use`) item.\n    ///\n    /// E.g. `use foo;`, `use foo::bar;` or `use foo::bar as FooBar;`\n    Use(P<UseTree>),\n    /// A static item (`static` or `pub static`).\n    ///\n    /// E.g. `static FOO: i32 = 42;` or `static FOO: &'static str = \"bar\";`\n    Static(P<Ty>, Mutability, P<Expr>),\n    /// A constant item (`const` or `pub const`).\n    ///\n    /// E.g. `const FOO: i32 = 42;`\n    Const(P<Ty>, P<Expr>),\n    /// A function declaration (`fn` or `pub fn`).\n    ///\n    /// E.g. `fn foo(bar: usize) -> usize { .. }`\n    Fn(P<FnDecl>, Unsafety, Spanned<Constness>, Abi, Generics, P<Block>),\n    /// A module declaration (`mod` or `pub mod`).\n    ///\n    /// E.g. `mod foo;` or `mod foo { .. }`\n    Mod(Mod),\n    /// An external module (`extern` or `pub extern`).\n    ///\n    /// E.g. `extern {}` or `extern \"C\" {}`\n    ForeignMod(ForeignMod),\n    /// Module-level inline assembly (from `global_asm!()`)\n    GlobalAsm(P<GlobalAsm>),\n    /// A type alias (`type` or `pub type`).\n    ///\n    /// E.g. `type Foo = Bar<u8>;`\n    Ty(P<Ty>, Generics),\n    /// An enum definition (`enum` or `pub enum`).\n    ///\n    /// E.g. `enum Foo<A, B> { C<A>, D<B> }`\n    Enum(EnumDef, Generics),\n    /// A struct definition (`struct` or `pub struct`).\n    ///\n    /// E.g. `struct Foo<A> { x: A }`\n    Struct(VariantData, Generics),\n    /// A union definition (`union` or `pub union`).\n    ///\n    /// E.g. `union Foo<A, B> { x: A, y: B }`\n    Union(VariantData, Generics),\n    /// A Trait declaration (`trait` or `pub trait`).\n    ///\n    /// E.g. `trait Foo { .. }`, `trait Foo<T> { .. }` or `auto trait Foo {}`\n    Trait(IsAuto, Unsafety, Generics, TyParamBounds, Vec<TraitItem>),\n    /// Trait alias\n    ///\n    /// E.g. `trait Foo = Bar + Quux;`\n    TraitAlias(Generics, TyParamBounds),\n    /// An implementation.\n    ///\n    /// E.g. `impl<A> Foo<A> { .. }` or `impl<A> Trait for Foo<A> { .. }`\n    Impl(Unsafety,\n             ImplPolarity,\n             Defaultness,\n             Generics,\n             Option<TraitRef>, // (optional) trait this impl implements\n             P<Ty>, // self\n             Vec<ImplItem>),\n    /// A macro invocation.\n    ///\n    /// E.g. `macro_rules! foo { .. }` or `foo!(..)`\n    Mac(Mac),\n\n    /// A macro definition.\n    MacroDef(MacroDef),\n}\n\nimpl ItemKind {\n    pub fn descriptive_variant(&self) -> &str {\n        match *self {\n            ItemKind::ExternCrate(..) => \"extern crate\",\n            ItemKind::Use(..) => \"use\",\n            ItemKind::Static(..) => \"static item\",\n            ItemKind::Const(..) => \"constant item\",\n            ItemKind::Fn(..) => \"function\",\n            ItemKind::Mod(..) => \"module\",\n            ItemKind::ForeignMod(..) => \"foreign module\",\n            ItemKind::GlobalAsm(..) => \"global asm\",\n            ItemKind::Ty(..) => \"type alias\",\n            ItemKind::Enum(..) => \"enum\",\n            ItemKind::Struct(..) => \"struct\",\n            ItemKind::Union(..) => \"union\",\n            ItemKind::Trait(..) => \"trait\",\n            ItemKind::TraitAlias(..) => \"trait alias\",\n            ItemKind::Mac(..) |\n            ItemKind::MacroDef(..) |\n            ItemKind::Impl(..) => \"item\"\n        }\n    }\n}\n\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub struct ForeignItem {\n    pub ident: Ident,\n    pub attrs: Vec<Attribute>,\n    pub node: ForeignItemKind,\n    pub id: NodeId,\n    pub span: Span,\n    pub vis: Visibility,\n}\n\n/// An item within an `extern` block\n#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\npub enum ForeignItemKind {\n    /// A foreign function\n    Fn(P<FnDecl>, Generics),\n    /// A foreign static item (`static ext: u8`), with optional mutability\n    /// (the boolean is true when mutable)\n    Static(P<Ty>, bool),\n    /// A foreign type\n    Ty,\n}\n\nimpl ForeignItemKind {\n    pub fn descriptive_variant(&self) -> &str {\n        match *self {\n            ForeignItemKind::Fn(..) => \"foreign function\",\n            ForeignItemKind::Static(..) => \"foreign static item\",\n            ForeignItemKind::Ty => \"foreign type\",\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use serialize;\n    use super::*;\n\n    // are ASTs encodable?\n    #[test]\n    fn check_asts_encodable() {\n        fn assert_encodable<T: serialize::Encodable>() {}\n        assert_encodable::<Crate>();\n    }\n}\n",
        "start": {
          "row": 1,
          "column": 1
        },
        "end": {
          "row": 2158,
          "column": 1
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT",
        "start": {
          "row": 1,
          "column": 1
        },
        "end": {
          "row": 1,
          "column": 70
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// file at the top-level directory of this distribution and at",
        "start": {
          "row": 2,
          "column": 1
        },
        "end": {
          "row": 2,
          "column": 63
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// http://rust-lang.org/COPYRIGHT.",
        "start": {
          "row": 3,
          "column": 1
        },
        "end": {
          "row": 3,
          "column": 35
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//",
        "start": {
          "row": 4,
          "column": 1
        },
        "end": {
          "row": 4,
          "column": 3
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or",
        "start": {
          "row": 5,
          "column": 1
        },
        "end": {
          "row": 5,
          "column": 69
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license",
        "start": {
          "row": 6,
          "column": 1
        },
        "end": {
          "row": 6,
          "column": 66
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your",
        "start": {
          "row": 7,
          "column": 1
        },
        "end": {
          "row": 7,
          "column": 64
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// option. This file may not be copied, modified, or distributed",
        "start": {
          "row": 8,
          "column": 1
        },
        "end": {
          "row": 8,
          "column": 65
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// except according to those terms.",
        "start": {
          "row": 9,
          "column": 1
        },
        "end": {
          "row": 9,
          "column": 36
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// The Rust abstract syntax tree.",
        "start": {
          "row": 11,
          "column": 1
        },
        "end": {
          "row": 11,
          "column": 34
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "pub use self::TyParamBound::*;",
        "start": {
          "row": 13,
          "column": 1
        },
        "end": {
          "row": 13,
          "column": 31
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 13,
          "column": 1
        },
        "end": {
          "row": 13,
          "column": 4
        }
      },
      {
        "kind": "use_wildcard",
        "name": "query",
        "text": "self::TyParamBound::*",
        "start": {
          "row": 13,
          "column": 9
        },
        "end": {
          "row": 13,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "self::TyParamBound",
        "start": {
          "row": 13,
          "column": 9
        },
        "end": {
          "row": 13,
          "column": 27
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 13,
          "column": 9
        },
        "end": {
          "row": 13,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyParamBound",
        "start": {
          "row": 13,
          "column": 15
        },
        "end": {
          "row": 13,
          "column": 27
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "pub use self::UnsafeSource::*;",
        "start": {
          "row": 14,
          "column": 1
        },
        "end": {
          "row": 14,
          "column": 31
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 14,
          "column": 1
        },
        "end": {
          "row": 14,
          "column": 4
        }
      },
      {
        "kind": "use_wildcard",
        "name": "query",
        "text": "self::UnsafeSource::*",
        "start": {
          "row": 14,
          "column": 9
        },
        "end": {
          "row": 14,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "self::UnsafeSource",
        "start": {
          "row": 14,
          "column": 9
        },
        "end": {
          "row": 14,
          "column": 27
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 14,
          "column": 9
        },
        "end": {
          "row": 14,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UnsafeSource",
        "start": {
          "row": 14,
          "column": 15
        },
        "end": {
          "row": 14,
          "column": 27
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "pub use self::PathParameters::*;",
        "start": {
          "row": 15,
          "column": 1
        },
        "end": {
          "row": 15,
          "column": 33
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 15,
          "column": 1
        },
        "end": {
          "row": 15,
          "column": 4
        }
      },
      {
        "kind": "use_wildcard",
        "name": "query",
        "text": "self::PathParameters::*",
        "start": {
          "row": 15,
          "column": 9
        },
        "end": {
          "row": 15,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "self::PathParameters",
        "start": {
          "row": 15,
          "column": 9
        },
        "end": {
          "row": 15,
          "column": 29
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 15,
          "column": 9
        },
        "end": {
          "row": 15,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PathParameters",
        "start": {
          "row": 15,
          "column": 15
        },
        "end": {
          "row": 15,
          "column": 29
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "pub use symbol::{Ident, Symbol as Name};",
        "start": {
          "row": 16,
          "column": 1
        },
        "end": {
          "row": 16,
          "column": 41
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 16,
          "column": 1
        },
        "end": {
          "row": 16,
          "column": 4
        }
      },
      {
        "kind": "scoped_use_list",
        "name": "query",
        "text": "symbol::{Ident, Symbol as Name}",
        "start": {
          "row": 16,
          "column": 9
        },
        "end": {
          "row": 16,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "symbol",
        "start": {
          "row": 16,
          "column": 9
        },
        "end": {
          "row": 16,
          "column": 15
        }
      },
      {
        "kind": "use_list",
        "name": "query",
        "text": "{Ident, Symbol as Name}",
        "start": {
          "row": 16,
          "column": 17
        },
        "end": {
          "row": 16,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 16,
          "column": 18
        },
        "end": {
          "row": 16,
          "column": 23
        }
      },
      {
        "kind": "use_as_clause",
        "name": "query",
        "text": "Symbol as Name",
        "start": {
          "row": 16,
          "column": 25
        },
        "end": {
          "row": 16,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Symbol",
        "start": {
          "row": 16,
          "column": 25
        },
        "end": {
          "row": 16,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Name",
        "start": {
          "row": 16,
          "column": 35
        },
        "end": {
          "row": 16,
          "column": 39
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "pub use util::ThinVec;",
        "start": {
          "row": 17,
          "column": 1
        },
        "end": {
          "row": 17,
          "column": 23
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 17,
          "column": 1
        },
        "end": {
          "row": 17,
          "column": 4
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "util::ThinVec",
        "start": {
          "row": 17,
          "column": 9
        },
        "end": {
          "row": 17,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "util",
        "start": {
          "row": 17,
          "column": 9
        },
        "end": {
          "row": 17,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ThinVec",
        "start": {
          "row": 17,
          "column": 15
        },
        "end": {
          "row": 17,
          "column": 22
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "pub use util::parser::ExprPrecedence;",
        "start": {
          "row": 18,
          "column": 1
        },
        "end": {
          "row": 18,
          "column": 38
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 18,
          "column": 1
        },
        "end": {
          "row": 18,
          "column": 4
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "util::parser::ExprPrecedence",
        "start": {
          "row": 18,
          "column": 9
        },
        "end": {
          "row": 18,
          "column": 37
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "util::parser",
        "start": {
          "row": 18,
          "column": 9
        },
        "end": {
          "row": 18,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "util",
        "start": {
          "row": 18,
          "column": 9
        },
        "end": {
          "row": 18,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "parser",
        "start": {
          "row": 18,
          "column": 15
        },
        "end": {
          "row": 18,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 18,
          "column": 23
        },
        "end": {
          "row": 18,
          "column": 37
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use syntax_pos::{Span, DUMMY_SP};",
        "start": {
          "row": 20,
          "column": 1
        },
        "end": {
          "row": 20,
          "column": 34
        }
      },
      {
        "kind": "scoped_use_list",
        "name": "query",
        "text": "syntax_pos::{Span, DUMMY_SP}",
        "start": {
          "row": 20,
          "column": 5
        },
        "end": {
          "row": 20,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "syntax_pos",
        "start": {
          "row": 20,
          "column": 5
        },
        "end": {
          "row": 20,
          "column": 15
        }
      },
      {
        "kind": "use_list",
        "name": "query",
        "text": "{Span, DUMMY_SP}",
        "start": {
          "row": 20,
          "column": 17
        },
        "end": {
          "row": 20,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 20,
          "column": 18
        },
        "end": {
          "row": 20,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "DUMMY_SP",
        "start": {
          "row": 20,
          "column": 24
        },
        "end": {
          "row": 20,
          "column": 32
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use codemap::{respan, Spanned};",
        "start": {
          "row": 21,
          "column": 1
        },
        "end": {
          "row": 21,
          "column": 32
        }
      },
      {
        "kind": "scoped_use_list",
        "name": "query",
        "text": "codemap::{respan, Spanned}",
        "start": {
          "row": 21,
          "column": 5
        },
        "end": {
          "row": 21,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "codemap",
        "start": {
          "row": 21,
          "column": 5
        },
        "end": {
          "row": 21,
          "column": 12
        }
      },
      {
        "kind": "use_list",
        "name": "query",
        "text": "{respan, Spanned}",
        "start": {
          "row": 21,
          "column": 14
        },
        "end": {
          "row": 21,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "respan",
        "start": {
          "row": 21,
          "column": 15
        },
        "end": {
          "row": 21,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Spanned",
        "start": {
          "row": 21,
          "column": 23
        },
        "end": {
          "row": 21,
          "column": 30
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use abi::Abi;",
        "start": {
          "row": 22,
          "column": 1
        },
        "end": {
          "row": 22,
          "column": 14
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "abi::Abi",
        "start": {
          "row": 22,
          "column": 5
        },
        "end": {
          "row": 22,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "abi",
        "start": {
          "row": 22,
          "column": 5
        },
        "end": {
          "row": 22,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Abi",
        "start": {
          "row": 22,
          "column": 10
        },
        "end": {
          "row": 22,
          "column": 13
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use ext::hygiene::{Mark, SyntaxContext};",
        "start": {
          "row": 23,
          "column": 1
        },
        "end": {
          "row": 23,
          "column": 41
        }
      },
      {
        "kind": "scoped_use_list",
        "name": "query",
        "text": "ext::hygiene::{Mark, SyntaxContext}",
        "start": {
          "row": 23,
          "column": 5
        },
        "end": {
          "row": 23,
          "column": 40
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ext::hygiene",
        "start": {
          "row": 23,
          "column": 5
        },
        "end": {
          "row": 23,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ext",
        "start": {
          "row": 23,
          "column": 5
        },
        "end": {
          "row": 23,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "hygiene",
        "start": {
          "row": 23,
          "column": 10
        },
        "end": {
          "row": 23,
          "column": 17
        }
      },
      {
        "kind": "use_list",
        "name": "query",
        "text": "{Mark, SyntaxContext}",
        "start": {
          "row": 23,
          "column": 19
        },
        "end": {
          "row": 23,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mark",
        "start": {
          "row": 23,
          "column": 20
        },
        "end": {
          "row": 23,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "SyntaxContext",
        "start": {
          "row": 23,
          "column": 26
        },
        "end": {
          "row": 23,
          "column": 39
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use print::pprust;",
        "start": {
          "row": 24,
          "column": 1
        },
        "end": {
          "row": 24,
          "column": 19
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "print::pprust",
        "start": {
          "row": 24,
          "column": 5
        },
        "end": {
          "row": 24,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "print",
        "start": {
          "row": 24,
          "column": 5
        },
        "end": {
          "row": 24,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pprust",
        "start": {
          "row": 24,
          "column": 12
        },
        "end": {
          "row": 24,
          "column": 18
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use ptr::P;",
        "start": {
          "row": 25,
          "column": 1
        },
        "end": {
          "row": 25,
          "column": 12
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ptr::P",
        "start": {
          "row": 25,
          "column": 5
        },
        "end": {
          "row": 25,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ptr",
        "start": {
          "row": 25,
          "column": 5
        },
        "end": {
          "row": 25,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 25,
          "column": 10
        },
        "end": {
          "row": 25,
          "column": 11
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use rustc_data_structures::indexed_vec;",
        "start": {
          "row": 26,
          "column": 1
        },
        "end": {
          "row": 26,
          "column": 40
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "rustc_data_structures::indexed_vec",
        "start": {
          "row": 26,
          "column": 5
        },
        "end": {
          "row": 26,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "rustc_data_structures",
        "start": {
          "row": 26,
          "column": 5
        },
        "end": {
          "row": 26,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "indexed_vec",
        "start": {
          "row": 26,
          "column": 28
        },
        "end": {
          "row": 26,
          "column": 39
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use symbol::{Symbol, keywords};",
        "start": {
          "row": 27,
          "column": 1
        },
        "end": {
          "row": 27,
          "column": 32
        }
      },
      {
        "kind": "scoped_use_list",
        "name": "query",
        "text": "symbol::{Symbol, keywords}",
        "start": {
          "row": 27,
          "column": 5
        },
        "end": {
          "row": 27,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "symbol",
        "start": {
          "row": 27,
          "column": 5
        },
        "end": {
          "row": 27,
          "column": 11
        }
      },
      {
        "kind": "use_list",
        "name": "query",
        "text": "{Symbol, keywords}",
        "start": {
          "row": 27,
          "column": 13
        },
        "end": {
          "row": 27,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Symbol",
        "start": {
          "row": 27,
          "column": 14
        },
        "end": {
          "row": 27,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "keywords",
        "start": {
          "row": 27,
          "column": 22
        },
        "end": {
          "row": 27,
          "column": 30
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use tokenstream::{ThinTokenStream, TokenStream};",
        "start": {
          "row": 28,
          "column": 1
        },
        "end": {
          "row": 28,
          "column": 49
        }
      },
      {
        "kind": "scoped_use_list",
        "name": "query",
        "text": "tokenstream::{ThinTokenStream, TokenStream}",
        "start": {
          "row": 28,
          "column": 5
        },
        "end": {
          "row": 28,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tokenstream",
        "start": {
          "row": 28,
          "column": 5
        },
        "end": {
          "row": 28,
          "column": 16
        }
      },
      {
        "kind": "use_list",
        "name": "query",
        "text": "{ThinTokenStream, TokenStream}",
        "start": {
          "row": 28,
          "column": 18
        },
        "end": {
          "row": 28,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ThinTokenStream",
        "start": {
          "row": 28,
          "column": 19
        },
        "end": {
          "row": 28,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TokenStream",
        "start": {
          "row": 28,
          "column": 36
        },
        "end": {
          "row": 28,
          "column": 47
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use serialize::{self, Encoder, Decoder};",
        "start": {
          "row": 30,
          "column": 1
        },
        "end": {
          "row": 30,
          "column": 41
        }
      },
      {
        "kind": "scoped_use_list",
        "name": "query",
        "text": "serialize::{self, Encoder, Decoder}",
        "start": {
          "row": 30,
          "column": 5
        },
        "end": {
          "row": 30,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "serialize",
        "start": {
          "row": 30,
          "column": 5
        },
        "end": {
          "row": 30,
          "column": 14
        }
      },
      {
        "kind": "use_list",
        "name": "query",
        "text": "{self, Encoder, Decoder}",
        "start": {
          "row": 30,
          "column": 16
        },
        "end": {
          "row": 30,
          "column": 40
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 30,
          "column": 17
        },
        "end": {
          "row": 30,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Encoder",
        "start": {
          "row": 30,
          "column": 23
        },
        "end": {
          "row": 30,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Decoder",
        "start": {
          "row": 30,
          "column": 32
        },
        "end": {
          "row": 30,
          "column": 39
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use std::collections::HashSet;",
        "start": {
          "row": 31,
          "column": 1
        },
        "end": {
          "row": 31,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "std::collections::HashSet",
        "start": {
          "row": 31,
          "column": 5
        },
        "end": {
          "row": 31,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "std::collections",
        "start": {
          "row": 31,
          "column": 5
        },
        "end": {
          "row": 31,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "std",
        "start": {
          "row": 31,
          "column": 5
        },
        "end": {
          "row": 31,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "collections",
        "start": {
          "row": 31,
          "column": 10
        },
        "end": {
          "row": 31,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "HashSet",
        "start": {
          "row": 31,
          "column": 23
        },
        "end": {
          "row": 31,
          "column": 30
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use std::fmt;",
        "start": {
          "row": 32,
          "column": 1
        },
        "end": {
          "row": 32,
          "column": 14
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "std::fmt",
        "start": {
          "row": 32,
          "column": 5
        },
        "end": {
          "row": 32,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "std",
        "start": {
          "row": 32,
          "column": 5
        },
        "end": {
          "row": 32,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 32,
          "column": 10
        },
        "end": {
          "row": 32,
          "column": 13
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use std::rc::Rc;",
        "start": {
          "row": 33,
          "column": 1
        },
        "end": {
          "row": 33,
          "column": 17
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "std::rc::Rc",
        "start": {
          "row": 33,
          "column": 5
        },
        "end": {
          "row": 33,
          "column": 16
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "std::rc",
        "start": {
          "row": 33,
          "column": 5
        },
        "end": {
          "row": 33,
          "column": 12
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "std",
        "start": {
          "row": 33,
          "column": 5
        },
        "end": {
          "row": 33,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "rc",
        "start": {
          "row": 33,
          "column": 10
        },
        "end": {
          "row": 33,
          "column": 12
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Rc",
        "start": {
          "row": 33,
          "column": 14
        },
        "end": {
          "row": 33,
          "column": 16
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use std::u32;",
        "start": {
          "row": 34,
          "column": 1
        },
        "end": {
          "row": 34,
          "column": 14
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "std::u32",
        "start": {
          "row": 34,
          "column": 5
        },
        "end": {
          "row": 34,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "std",
        "start": {
          "row": 34,
          "column": 5
        },
        "end": {
          "row": 34,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "u32",
        "start": {
          "row": 34,
          "column": 10
        },
        "end": {
          "row": 34,
          "column": 13
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy)]",
        "start": {
          "row": 36,
          "column": 1
        },
        "end": {
          "row": 36,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy)",
        "start": {
          "row": 36,
          "column": 3
        },
        "end": {
          "row": 36,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 36,
          "column": 3
        },
        "end": {
          "row": 36,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy)",
        "start": {
          "row": 36,
          "column": 9
        },
        "end": {
          "row": 36,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 36,
          "column": 10
        },
        "end": {
          "row": 36,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 36,
          "column": 10
        },
        "end": {
          "row": 36,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 36,
          "column": 17
        },
        "end": {
          "row": 36,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 36,
          "column": 17
        },
        "end": {
          "row": 36,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 36,
          "column": 28
        },
        "end": {
          "row": 36,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 36,
          "column": 28
        },
        "end": {
          "row": 36,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 36,
          "column": 32
        },
        "end": {
          "row": 36,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 36,
          "column": 32
        },
        "end": {
          "row": 36,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 36,
          "column": 48
        },
        "end": {
          "row": 36,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 36,
          "column": 48
        },
        "end": {
          "row": 36,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 36,
          "column": 64
        },
        "end": {
          "row": 36,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 36,
          "column": 64
        },
        "end": {
          "row": 36,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 36,
          "column": 70
        },
        "end": {
          "row": 36,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 36,
          "column": 70
        },
        "end": {
          "row": 36,
          "column": 74
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Lifetime {\n    pub id: NodeId,\n    pub span: Span,\n    pub ident: Ident,\n}",
        "start": {
          "row": 37,
          "column": 1
        },
        "end": {
          "row": 41,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 37,
          "column": 1
        },
        "end": {
          "row": 37,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lifetime",
        "start": {
          "row": 37,
          "column": 12
        },
        "end": {
          "row": 37,
          "column": 20
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub id: NodeId,\n    pub span: Span,\n    pub ident: Ident,\n}",
        "start": {
          "row": 37,
          "column": 21
        },
        "end": {
          "row": 41,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 38,
          "column": 5
        },
        "end": {
          "row": 38,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 38,
          "column": 5
        },
        "end": {
          "row": 38,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 38,
          "column": 9
        },
        "end": {
          "row": 38,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 38,
          "column": 13
        },
        "end": {
          "row": 38,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 39,
          "column": 5
        },
        "end": {
          "row": 39,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 39,
          "column": 5
        },
        "end": {
          "row": 39,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 39,
          "column": 9
        },
        "end": {
          "row": 39,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 39,
          "column": 15
        },
        "end": {
          "row": 39,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ident: Ident",
        "start": {
          "row": 40,
          "column": 5
        },
        "end": {
          "row": 40,
          "column": 21
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 40,
          "column": 5
        },
        "end": {
          "row": 40,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 40,
          "column": 9
        },
        "end": {
          "row": 40,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 40,
          "column": 16
        },
        "end": {
          "row": 40,
          "column": 21
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Debug for Lifetime {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"lifetime({}: {})\", self.id, pprust::lifetime_to_string(self))\n    }\n}",
        "start": {
          "row": 43,
          "column": 1
        },
        "end": {
          "row": 47,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Debug",
        "start": {
          "row": 43,
          "column": 6
        },
        "end": {
          "row": 43,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 43,
          "column": 6
        },
        "end": {
          "row": 43,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 43,
          "column": 11
        },
        "end": {
          "row": 43,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lifetime",
        "start": {
          "row": 43,
          "column": 21
        },
        "end": {
          "row": 43,
          "column": 29
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"lifetime({}: {})\", self.id, pprust::lifetime_to_string(self))\n    }\n}",
        "start": {
          "row": 43,
          "column": 30
        },
        "end": {
          "row": 47,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"lifetime({}: {})\", self.id, pprust::lifetime_to_string(self))\n    }",
        "start": {
          "row": 44,
          "column": 5
        },
        "end": {
          "row": 46,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 44,
          "column": 8
        },
        "end": {
          "row": 44,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 44,
          "column": 11
        },
        "end": {
          "row": 44,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 44,
          "column": 12
        },
        "end": {
          "row": 44,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 44,
          "column": 13
        },
        "end": {
          "row": 44,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 44,
          "column": 19
        },
        "end": {
          "row": 44,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 44,
          "column": 19
        },
        "end": {
          "row": 44,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 44,
          "column": 22
        },
        "end": {
          "row": 44,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 44,
          "column": 23
        },
        "end": {
          "row": 44,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 44,
          "column": 27
        },
        "end": {
          "row": 44,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 44,
          "column": 27
        },
        "end": {
          "row": 44,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 44,
          "column": 32
        },
        "end": {
          "row": 44,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 44,
          "column": 46
        },
        "end": {
          "row": 44,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 44,
          "column": 46
        },
        "end": {
          "row": 44,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 44,
          "column": 51
        },
        "end": {
          "row": 44,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        write!(f, \"lifetime({}: {})\", self.id, pprust::lifetime_to_string(self))\n    }",
        "start": {
          "row": 44,
          "column": 58
        },
        "end": {
          "row": 46,
          "column": 6
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "write!(f, \"lifetime({}: {})\", self.id, pprust::lifetime_to_string(self))",
        "start": {
          "row": 45,
          "column": 9
        },
        "end": {
          "row": 45,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "write",
        "start": {
          "row": 45,
          "column": 9
        },
        "end": {
          "row": 45,
          "column": 14
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(f, \"lifetime({}: {})\", self.id, pprust::lifetime_to_string(self))",
        "start": {
          "row": 45,
          "column": 15
        },
        "end": {
          "row": 45,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 45,
          "column": 16
        },
        "end": {
          "row": 45,
          "column": 17
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"lifetime({}: {})\"",
        "start": {
          "row": 45,
          "column": 19
        },
        "end": {
          "row": 45,
          "column": 37
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 45,
          "column": 39
        },
        "end": {
          "row": 45,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 45,
          "column": 44
        },
        "end": {
          "row": 45,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pprust",
        "start": {
          "row": 45,
          "column": 48
        },
        "end": {
          "row": 45,
          "column": 54
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "lifetime_to_string",
        "start": {
          "row": 45,
          "column": 56
        },
        "end": {
          "row": 45,
          "column": 74
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 45,
          "column": 74
        },
        "end": {
          "row": 45,
          "column": 80
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 45,
          "column": 75
        },
        "end": {
          "row": 45,
          "column": 79
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A lifetime definition, e.g. `'a: 'b+'c+'d`",
        "start": {
          "row": 49,
          "column": 1
        },
        "end": {
          "row": 49,
          "column": 47
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 50,
          "column": 1
        },
        "end": {
          "row": 50,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 50,
          "column": 3
        },
        "end": {
          "row": 50,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 50,
          "column": 3
        },
        "end": {
          "row": 50,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 50,
          "column": 9
        },
        "end": {
          "row": 50,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 50,
          "column": 10
        },
        "end": {
          "row": 50,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 50,
          "column": 10
        },
        "end": {
          "row": 50,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 50,
          "column": 17
        },
        "end": {
          "row": 50,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 50,
          "column": 17
        },
        "end": {
          "row": 50,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 50,
          "column": 28
        },
        "end": {
          "row": 50,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 50,
          "column": 28
        },
        "end": {
          "row": 50,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 50,
          "column": 32
        },
        "end": {
          "row": 50,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 50,
          "column": 32
        },
        "end": {
          "row": 50,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 50,
          "column": 48
        },
        "end": {
          "row": 50,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 50,
          "column": 48
        },
        "end": {
          "row": 50,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 50,
          "column": 64
        },
        "end": {
          "row": 50,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 50,
          "column": 64
        },
        "end": {
          "row": 50,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 50,
          "column": 70
        },
        "end": {
          "row": 50,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 50,
          "column": 70
        },
        "end": {
          "row": 50,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct LifetimeDef {\n    pub attrs: ThinVec<Attribute>,\n    pub lifetime: Lifetime,\n    pub bounds: Vec<Lifetime>\n}",
        "start": {
          "row": 51,
          "column": 1
        },
        "end": {
          "row": 55,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 51,
          "column": 1
        },
        "end": {
          "row": 51,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "LifetimeDef",
        "start": {
          "row": 51,
          "column": 12
        },
        "end": {
          "row": 51,
          "column": 23
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub attrs: ThinVec<Attribute>,\n    pub lifetime: Lifetime,\n    pub bounds: Vec<Lifetime>\n}",
        "start": {
          "row": 51,
          "column": 24
        },
        "end": {
          "row": 55,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: ThinVec<Attribute>",
        "start": {
          "row": 52,
          "column": 5
        },
        "end": {
          "row": 52,
          "column": 34
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 52,
          "column": 5
        },
        "end": {
          "row": 52,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 52,
          "column": 9
        },
        "end": {
          "row": 52,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "ThinVec<Attribute>",
        "start": {
          "row": 52,
          "column": 16
        },
        "end": {
          "row": 52,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ThinVec",
        "start": {
          "row": 52,
          "column": 16
        },
        "end": {
          "row": 52,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 52,
          "column": 23
        },
        "end": {
          "row": 52,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 52,
          "column": 24
        },
        "end": {
          "row": 52,
          "column": 33
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub lifetime: Lifetime",
        "start": {
          "row": 53,
          "column": 5
        },
        "end": {
          "row": 53,
          "column": 27
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 53,
          "column": 5
        },
        "end": {
          "row": 53,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "lifetime",
        "start": {
          "row": 53,
          "column": 9
        },
        "end": {
          "row": 53,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lifetime",
        "start": {
          "row": 53,
          "column": 19
        },
        "end": {
          "row": 53,
          "column": 27
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub bounds: Vec<Lifetime>",
        "start": {
          "row": 54,
          "column": 5
        },
        "end": {
          "row": 54,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 54,
          "column": 5
        },
        "end": {
          "row": 54,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "bounds",
        "start": {
          "row": 54,
          "column": 9
        },
        "end": {
          "row": 54,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Lifetime>",
        "start": {
          "row": 54,
          "column": 17
        },
        "end": {
          "row": 54,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 54,
          "column": 17
        },
        "end": {
          "row": 54,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Lifetime>",
        "start": {
          "row": 54,
          "column": 20
        },
        "end": {
          "row": 54,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lifetime",
        "start": {
          "row": 54,
          "column": 21
        },
        "end": {
          "row": 54,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A \"Path\" is essentially Rust's notion of a name.",
        "start": {
          "row": 57,
          "column": 1
        },
        "end": {
          "row": 57,
          "column": 53
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 58,
          "column": 1
        },
        "end": {
          "row": 58,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// It's represented as a sequence of identifiers,",
        "start": {
          "row": 59,
          "column": 1
        },
        "end": {
          "row": 59,
          "column": 51
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// along with a bunch of supporting information.",
        "start": {
          "row": 60,
          "column": 1
        },
        "end": {
          "row": 60,
          "column": 50
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 61,
          "column": 1
        },
        "end": {
          "row": 61,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `std::cmp::PartialEq`",
        "start": {
          "row": 62,
          "column": 1
        },
        "end": {
          "row": 62,
          "column": 31
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]",
        "start": {
          "row": 63,
          "column": 1
        },
        "end": {
          "row": 63,
          "column": 70
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)",
        "start": {
          "row": 63,
          "column": 3
        },
        "end": {
          "row": 63,
          "column": 69
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 63,
          "column": 3
        },
        "end": {
          "row": 63,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)",
        "start": {
          "row": 63,
          "column": 9
        },
        "end": {
          "row": 63,
          "column": 69
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 63,
          "column": 10
        },
        "end": {
          "row": 63,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 63,
          "column": 10
        },
        "end": {
          "row": 63,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 63,
          "column": 17
        },
        "end": {
          "row": 63,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 63,
          "column": 17
        },
        "end": {
          "row": 63,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 63,
          "column": 28
        },
        "end": {
          "row": 63,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 63,
          "column": 28
        },
        "end": {
          "row": 63,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 63,
          "column": 32
        },
        "end": {
          "row": 63,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 63,
          "column": 32
        },
        "end": {
          "row": 63,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 63,
          "column": 48
        },
        "end": {
          "row": 63,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 63,
          "column": 48
        },
        "end": {
          "row": 63,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 63,
          "column": 64
        },
        "end": {
          "row": 63,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 63,
          "column": 64
        },
        "end": {
          "row": 63,
          "column": 68
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Path {\n    pub span: Span,\n    /// The segments in the path: the things separated by `::`.\n    /// Global paths begin with `keywords::CrateRoot`.\n    pub segments: Vec<PathSegment>,\n}",
        "start": {
          "row": 64,
          "column": 1
        },
        "end": {
          "row": 69,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 64,
          "column": 1
        },
        "end": {
          "row": 64,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 64,
          "column": 12
        },
        "end": {
          "row": 64,
          "column": 16
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub span: Span,\n    /// The segments in the path: the things separated by `::`.\n    /// Global paths begin with `keywords::CrateRoot`.\n    pub segments: Vec<PathSegment>,\n}",
        "start": {
          "row": 64,
          "column": 17
        },
        "end": {
          "row": 69,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 65,
          "column": 5
        },
        "end": {
          "row": 65,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 65,
          "column": 5
        },
        "end": {
          "row": 65,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 65,
          "column": 9
        },
        "end": {
          "row": 65,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 65,
          "column": 15
        },
        "end": {
          "row": 65,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The segments in the path: the things separated by `::`.",
        "start": {
          "row": 66,
          "column": 5
        },
        "end": {
          "row": 66,
          "column": 64
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Global paths begin with `keywords::CrateRoot`.",
        "start": {
          "row": 67,
          "column": 5
        },
        "end": {
          "row": 67,
          "column": 55
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub segments: Vec<PathSegment>",
        "start": {
          "row": 68,
          "column": 5
        },
        "end": {
          "row": 68,
          "column": 35
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 68,
          "column": 5
        },
        "end": {
          "row": 68,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "segments",
        "start": {
          "row": 68,
          "column": 9
        },
        "end": {
          "row": 68,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<PathSegment>",
        "start": {
          "row": 68,
          "column": 19
        },
        "end": {
          "row": 68,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 68,
          "column": 19
        },
        "end": {
          "row": 68,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<PathSegment>",
        "start": {
          "row": 68,
          "column": 22
        },
        "end": {
          "row": 68,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathSegment",
        "start": {
          "row": 68,
          "column": 23
        },
        "end": {
          "row": 68,
          "column": 34
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl<'a> PartialEq<&'a str> for Path {\n    fn eq(&self, string: &&'a str) -> bool {\n        self.segments.len() == 1 && self.segments[0].identifier.name == *string\n    }\n}",
        "start": {
          "row": 71,
          "column": 1
        },
        "end": {
          "row": 75,
          "column": 2
        }
      },
      {
        "kind": "type_parameters",
        "name": "query",
        "text": "<'a>",
        "start": {
          "row": 71,
          "column": 5
        },
        "end": {
          "row": 71,
          "column": 9
        }
      },
      {
        "kind": "lifetime",
        "name": "query",
        "text": "'a",
        "start": {
          "row": 71,
          "column": 6
        },
        "end": {
          "row": 71,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "a",
        "start": {
          "row": 71,
          "column": 7
        },
        "end": {
          "row": 71,
          "column": 8
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "PartialEq<&'a str>",
        "start": {
          "row": 71,
          "column": 10
        },
        "end": {
          "row": 71,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 71,
          "column": 10
        },
        "end": {
          "row": 71,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<&'a str>",
        "start": {
          "row": 71,
          "column": 19
        },
        "end": {
          "row": 71,
          "column": 28
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&'a str",
        "start": {
          "row": 71,
          "column": 20
        },
        "end": {
          "row": 71,
          "column": 27
        }
      },
      {
        "kind": "lifetime",
        "name": "query",
        "text": "'a",
        "start": {
          "row": 71,
          "column": 21
        },
        "end": {
          "row": 71,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "a",
        "start": {
          "row": 71,
          "column": 22
        },
        "end": {
          "row": 71,
          "column": 23
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 71,
          "column": 24
        },
        "end": {
          "row": 71,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 71,
          "column": 33
        },
        "end": {
          "row": 71,
          "column": 37
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn eq(&self, string: &&'a str) -> bool {\n        self.segments.len() == 1 && self.segments[0].identifier.name == *string\n    }\n}",
        "start": {
          "row": 71,
          "column": 38
        },
        "end": {
          "row": 75,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn eq(&self, string: &&'a str) -> bool {\n        self.segments.len() == 1 && self.segments[0].identifier.name == *string\n    }",
        "start": {
          "row": 72,
          "column": 5
        },
        "end": {
          "row": 74,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "eq",
        "start": {
          "row": 72,
          "column": 8
        },
        "end": {
          "row": 72,
          "column": 10
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, string: &&'a str)",
        "start": {
          "row": 72,
          "column": 10
        },
        "end": {
          "row": 72,
          "column": 35
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 72,
          "column": 11
        },
        "end": {
          "row": 72,
          "column": 16
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 72,
          "column": 12
        },
        "end": {
          "row": 72,
          "column": 16
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "string: &&'a str",
        "start": {
          "row": 72,
          "column": 18
        },
        "end": {
          "row": 72,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "string",
        "start": {
          "row": 72,
          "column": 18
        },
        "end": {
          "row": 72,
          "column": 24
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&&'a str",
        "start": {
          "row": 72,
          "column": 26
        },
        "end": {
          "row": 72,
          "column": 34
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&'a str",
        "start": {
          "row": 72,
          "column": 27
        },
        "end": {
          "row": 72,
          "column": 34
        }
      },
      {
        "kind": "lifetime",
        "name": "query",
        "text": "'a",
        "start": {
          "row": 72,
          "column": 28
        },
        "end": {
          "row": 72,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "a",
        "start": {
          "row": 72,
          "column": 29
        },
        "end": {
          "row": 72,
          "column": 30
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 72,
          "column": 31
        },
        "end": {
          "row": 72,
          "column": 34
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 72,
          "column": 39
        },
        "end": {
          "row": 72,
          "column": 43
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        self.segments.len() == 1 && self.segments[0].identifier.name == *string\n    }",
        "start": {
          "row": 72,
          "column": 44
        },
        "end": {
          "row": 74,
          "column": 6
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "self.segments.len() == 1 && self.segments[0].identifier.name == *string",
        "start": {
          "row": 73,
          "column": 9
        },
        "end": {
          "row": 73,
          "column": 80
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "self.segments.len() == 1",
        "start": {
          "row": 73,
          "column": 9
        },
        "end": {
          "row": 73,
          "column": 33
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.segments.len()",
        "start": {
          "row": 73,
          "column": 9
        },
        "end": {
          "row": 73,
          "column": 28
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments.len",
        "start": {
          "row": 73,
          "column": 9
        },
        "end": {
          "row": 73,
          "column": 26
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments",
        "start": {
          "row": 73,
          "column": 9
        },
        "end": {
          "row": 73,
          "column": 22
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 73,
          "column": 9
        },
        "end": {
          "row": 73,
          "column": 13
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "segments",
        "start": {
          "row": 73,
          "column": 14
        },
        "end": {
          "row": 73,
          "column": 22
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "len",
        "start": {
          "row": 73,
          "column": 23
        },
        "end": {
          "row": 73,
          "column": 26
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 73,
          "column": 26
        },
        "end": {
          "row": 73,
          "column": 28
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "1",
        "start": {
          "row": 73,
          "column": 32
        },
        "end": {
          "row": 73,
          "column": 33
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "self.segments[0].identifier.name == *string",
        "start": {
          "row": 73,
          "column": 37
        },
        "end": {
          "row": 73,
          "column": 80
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments[0].identifier.name",
        "start": {
          "row": 73,
          "column": 37
        },
        "end": {
          "row": 73,
          "column": 69
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments[0].identifier",
        "start": {
          "row": 73,
          "column": 37
        },
        "end": {
          "row": 73,
          "column": 64
        }
      },
      {
        "kind": "index_expression",
        "name": "query",
        "text": "self.segments[0]",
        "start": {
          "row": 73,
          "column": 37
        },
        "end": {
          "row": 73,
          "column": 53
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments",
        "start": {
          "row": 73,
          "column": 37
        },
        "end": {
          "row": 73,
          "column": 50
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 73,
          "column": 37
        },
        "end": {
          "row": 73,
          "column": 41
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "segments",
        "start": {
          "row": 73,
          "column": 42
        },
        "end": {
          "row": 73,
          "column": 50
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 73,
          "column": 51
        },
        "end": {
          "row": 73,
          "column": 52
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "identifier",
        "start": {
          "row": 73,
          "column": 54
        },
        "end": {
          "row": 73,
          "column": 64
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 73,
          "column": 65
        },
        "end": {
          "row": 73,
          "column": 69
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*string",
        "start": {
          "row": 73,
          "column": 73
        },
        "end": {
          "row": 73,
          "column": 80
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "string",
        "start": {
          "row": 73,
          "column": 74
        },
        "end": {
          "row": 73,
          "column": 80
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Debug for Path {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"path({})\", pprust::path_to_string(self))\n    }\n}",
        "start": {
          "row": 77,
          "column": 1
        },
        "end": {
          "row": 81,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Debug",
        "start": {
          "row": 77,
          "column": 6
        },
        "end": {
          "row": 77,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 77,
          "column": 6
        },
        "end": {
          "row": 77,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 77,
          "column": 11
        },
        "end": {
          "row": 77,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 77,
          "column": 21
        },
        "end": {
          "row": 77,
          "column": 25
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"path({})\", pprust::path_to_string(self))\n    }\n}",
        "start": {
          "row": 77,
          "column": 26
        },
        "end": {
          "row": 81,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"path({})\", pprust::path_to_string(self))\n    }",
        "start": {
          "row": 78,
          "column": 5
        },
        "end": {
          "row": 80,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 78,
          "column": 8
        },
        "end": {
          "row": 78,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 78,
          "column": 11
        },
        "end": {
          "row": 78,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 78,
          "column": 12
        },
        "end": {
          "row": 78,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 78,
          "column": 13
        },
        "end": {
          "row": 78,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 78,
          "column": 19
        },
        "end": {
          "row": 78,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 78,
          "column": 19
        },
        "end": {
          "row": 78,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 78,
          "column": 22
        },
        "end": {
          "row": 78,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 78,
          "column": 23
        },
        "end": {
          "row": 78,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 78,
          "column": 27
        },
        "end": {
          "row": 78,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 78,
          "column": 27
        },
        "end": {
          "row": 78,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 78,
          "column": 32
        },
        "end": {
          "row": 78,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 78,
          "column": 46
        },
        "end": {
          "row": 78,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 78,
          "column": 46
        },
        "end": {
          "row": 78,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 78,
          "column": 51
        },
        "end": {
          "row": 78,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        write!(f, \"path({})\", pprust::path_to_string(self))\n    }",
        "start": {
          "row": 78,
          "column": 58
        },
        "end": {
          "row": 80,
          "column": 6
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "write!(f, \"path({})\", pprust::path_to_string(self))",
        "start": {
          "row": 79,
          "column": 9
        },
        "end": {
          "row": 79,
          "column": 60
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "write",
        "start": {
          "row": 79,
          "column": 9
        },
        "end": {
          "row": 79,
          "column": 14
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(f, \"path({})\", pprust::path_to_string(self))",
        "start": {
          "row": 79,
          "column": 15
        },
        "end": {
          "row": 79,
          "column": 60
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 79,
          "column": 16
        },
        "end": {
          "row": 79,
          "column": 17
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"path({})\"",
        "start": {
          "row": 79,
          "column": 19
        },
        "end": {
          "row": 79,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pprust",
        "start": {
          "row": 79,
          "column": 31
        },
        "end": {
          "row": 79,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "path_to_string",
        "start": {
          "row": 79,
          "column": 39
        },
        "end": {
          "row": 79,
          "column": 53
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 79,
          "column": 53
        },
        "end": {
          "row": 79,
          "column": 59
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 79,
          "column": 54
        },
        "end": {
          "row": 79,
          "column": 58
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Display for Path {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", pprust::path_to_string(self))\n    }\n}",
        "start": {
          "row": 83,
          "column": 1
        },
        "end": {
          "row": 87,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Display",
        "start": {
          "row": 83,
          "column": 6
        },
        "end": {
          "row": 83,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 83,
          "column": 6
        },
        "end": {
          "row": 83,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Display",
        "start": {
          "row": 83,
          "column": 11
        },
        "end": {
          "row": 83,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 83,
          "column": 23
        },
        "end": {
          "row": 83,
          "column": 27
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", pprust::path_to_string(self))\n    }\n}",
        "start": {
          "row": 83,
          "column": 28
        },
        "end": {
          "row": 87,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", pprust::path_to_string(self))\n    }",
        "start": {
          "row": 84,
          "column": 5
        },
        "end": {
          "row": 86,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 84,
          "column": 8
        },
        "end": {
          "row": 84,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 84,
          "column": 11
        },
        "end": {
          "row": 84,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 84,
          "column": 12
        },
        "end": {
          "row": 84,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 84,
          "column": 13
        },
        "end": {
          "row": 84,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 84,
          "column": 19
        },
        "end": {
          "row": 84,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 84,
          "column": 19
        },
        "end": {
          "row": 84,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 84,
          "column": 22
        },
        "end": {
          "row": 84,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 84,
          "column": 23
        },
        "end": {
          "row": 84,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 84,
          "column": 27
        },
        "end": {
          "row": 84,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 84,
          "column": 27
        },
        "end": {
          "row": 84,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 84,
          "column": 32
        },
        "end": {
          "row": 84,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 84,
          "column": 46
        },
        "end": {
          "row": 84,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 84,
          "column": 46
        },
        "end": {
          "row": 84,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 84,
          "column": 51
        },
        "end": {
          "row": 84,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        write!(f, \"{}\", pprust::path_to_string(self))\n    }",
        "start": {
          "row": 84,
          "column": 58
        },
        "end": {
          "row": 86,
          "column": 6
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "write!(f, \"{}\", pprust::path_to_string(self))",
        "start": {
          "row": 85,
          "column": 9
        },
        "end": {
          "row": 85,
          "column": 54
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "write",
        "start": {
          "row": 85,
          "column": 9
        },
        "end": {
          "row": 85,
          "column": 14
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(f, \"{}\", pprust::path_to_string(self))",
        "start": {
          "row": 85,
          "column": 15
        },
        "end": {
          "row": 85,
          "column": 54
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 85,
          "column": 16
        },
        "end": {
          "row": 85,
          "column": 17
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"{}\"",
        "start": {
          "row": 85,
          "column": 19
        },
        "end": {
          "row": 85,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pprust",
        "start": {
          "row": 85,
          "column": 25
        },
        "end": {
          "row": 85,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "path_to_string",
        "start": {
          "row": 85,
          "column": 33
        },
        "end": {
          "row": 85,
          "column": 47
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 85,
          "column": 47
        },
        "end": {
          "row": 85,
          "column": 53
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 85,
          "column": 48
        },
        "end": {
          "row": 85,
          "column": 52
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl Path {\n    // convert a span and an identifier to the corresponding\n    // 1-segment path\n    pub fn from_ident(s: Span, identifier: Ident) -> Path {\n        Path {\n            span: s,\n            segments: vec![PathSegment::from_ident(identifier, s)],\n        }\n    }\n\n    // Add starting \"crate root\" segment to all paths except those that\n    // already have it or start with `self`, `super`, `Self` or `$crate`.\n    pub fn default_to_global(mut self) -> Path {\n        if !self.is_global() {\n            let ident = self.segments[0].identifier;\n            if !::parse::token::Ident(ident).is_path_segment_keyword() ||\n               ident.name == keywords::Crate.name() {\n                self.segments.insert(0, PathSegment::crate_root(self.span));\n            }\n        }\n        self\n    }\n\n    pub fn is_global(&self) -> bool {\n        !self.segments.is_empty() && self.segments[0].identifier.name == keywords::CrateRoot.name()\n    }\n}",
        "start": {
          "row": 89,
          "column": 1
        },
        "end": {
          "row": 115,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 89,
          "column": 6
        },
        "end": {
          "row": 89,
          "column": 10
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    // convert a span and an identifier to the corresponding\n    // 1-segment path\n    pub fn from_ident(s: Span, identifier: Ident) -> Path {\n        Path {\n            span: s,\n            segments: vec![PathSegment::from_ident(identifier, s)],\n        }\n    }\n\n    // Add starting \"crate root\" segment to all paths except those that\n    // already have it or start with `self`, `super`, `Self` or `$crate`.\n    pub fn default_to_global(mut self) -> Path {\n        if !self.is_global() {\n            let ident = self.segments[0].identifier;\n            if !::parse::token::Ident(ident).is_path_segment_keyword() ||\n               ident.name == keywords::Crate.name() {\n                self.segments.insert(0, PathSegment::crate_root(self.span));\n            }\n        }\n        self\n    }\n\n    pub fn is_global(&self) -> bool {\n        !self.segments.is_empty() && self.segments[0].identifier.name == keywords::CrateRoot.name()\n    }\n}",
        "start": {
          "row": 89,
          "column": 11
        },
        "end": {
          "row": 115,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// convert a span and an identifier to the corresponding",
        "start": {
          "row": 90,
          "column": 5
        },
        "end": {
          "row": 90,
          "column": 61
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// 1-segment path",
        "start": {
          "row": 91,
          "column": 5
        },
        "end": {
          "row": 91,
          "column": 22
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn from_ident(s: Span, identifier: Ident) -> Path {\n        Path {\n            span: s,\n            segments: vec![PathSegment::from_ident(identifier, s)],\n        }\n    }",
        "start": {
          "row": 92,
          "column": 5
        },
        "end": {
          "row": 97,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 92,
          "column": 5
        },
        "end": {
          "row": 92,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "from_ident",
        "start": {
          "row": 92,
          "column": 12
        },
        "end": {
          "row": 92,
          "column": 22
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(s: Span, identifier: Ident)",
        "start": {
          "row": 92,
          "column": 22
        },
        "end": {
          "row": 92,
          "column": 50
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "s: Span",
        "start": {
          "row": 92,
          "column": 23
        },
        "end": {
          "row": 92,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "s",
        "start": {
          "row": 92,
          "column": 23
        },
        "end": {
          "row": 92,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 92,
          "column": 26
        },
        "end": {
          "row": 92,
          "column": 30
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "identifier: Ident",
        "start": {
          "row": 92,
          "column": 32
        },
        "end": {
          "row": 92,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "identifier",
        "start": {
          "row": 92,
          "column": 32
        },
        "end": {
          "row": 92,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 92,
          "column": 44
        },
        "end": {
          "row": 92,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 92,
          "column": 54
        },
        "end": {
          "row": 92,
          "column": 58
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        Path {\n            span: s,\n            segments: vec![PathSegment::from_ident(identifier, s)],\n        }\n    }",
        "start": {
          "row": 92,
          "column": 59
        },
        "end": {
          "row": 97,
          "column": 6
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "Path {\n            span: s,\n            segments: vec![PathSegment::from_ident(identifier, s)],\n        }",
        "start": {
          "row": 93,
          "column": 9
        },
        "end": {
          "row": 96,
          "column": 10
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 93,
          "column": 9
        },
        "end": {
          "row": 93,
          "column": 13
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{\n            span: s,\n            segments: vec![PathSegment::from_ident(identifier, s)],\n        }",
        "start": {
          "row": 93,
          "column": 14
        },
        "end": {
          "row": 96,
          "column": 10
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "span: s",
        "start": {
          "row": 94,
          "column": 13
        },
        "end": {
          "row": 94,
          "column": 20
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 94,
          "column": 13
        },
        "end": {
          "row": 94,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "s",
        "start": {
          "row": 94,
          "column": 19
        },
        "end": {
          "row": 94,
          "column": 20
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "segments: vec![PathSegment::from_ident(identifier, s)]",
        "start": {
          "row": 95,
          "column": 13
        },
        "end": {
          "row": 95,
          "column": 67
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "segments",
        "start": {
          "row": 95,
          "column": 13
        },
        "end": {
          "row": 95,
          "column": 21
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "vec![PathSegment::from_ident(identifier, s)]",
        "start": {
          "row": 95,
          "column": 23
        },
        "end": {
          "row": 95,
          "column": 67
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "vec",
        "start": {
          "row": 95,
          "column": 23
        },
        "end": {
          "row": 95,
          "column": 26
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "[PathSegment::from_ident(identifier, s)]",
        "start": {
          "row": 95,
          "column": 27
        },
        "end": {
          "row": 95,
          "column": 67
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PathSegment",
        "start": {
          "row": 95,
          "column": 28
        },
        "end": {
          "row": 95,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "from_ident",
        "start": {
          "row": 95,
          "column": 41
        },
        "end": {
          "row": 95,
          "column": 51
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(identifier, s)",
        "start": {
          "row": 95,
          "column": 51
        },
        "end": {
          "row": 95,
          "column": 66
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "identifier",
        "start": {
          "row": 95,
          "column": 52
        },
        "end": {
          "row": 95,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "s",
        "start": {
          "row": 95,
          "column": 64
        },
        "end": {
          "row": 95,
          "column": 65
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// Add starting \"crate root\" segment to all paths except those that",
        "start": {
          "row": 99,
          "column": 5
        },
        "end": {
          "row": 99,
          "column": 72
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// already have it or start with `self`, `super`, `Self` or `$crate`.",
        "start": {
          "row": 100,
          "column": 5
        },
        "end": {
          "row": 100,
          "column": 74
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn default_to_global(mut self) -> Path {\n        if !self.is_global() {\n            let ident = self.segments[0].identifier;\n            if !::parse::token::Ident(ident).is_path_segment_keyword() ||\n               ident.name == keywords::Crate.name() {\n                self.segments.insert(0, PathSegment::crate_root(self.span));\n            }\n        }\n        self\n    }",
        "start": {
          "row": 101,
          "column": 5
        },
        "end": {
          "row": 110,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 101,
          "column": 5
        },
        "end": {
          "row": 101,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "default_to_global",
        "start": {
          "row": 101,
          "column": 12
        },
        "end": {
          "row": 101,
          "column": 29
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(mut self)",
        "start": {
          "row": 101,
          "column": 29
        },
        "end": {
          "row": 101,
          "column": 39
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "mut self",
        "start": {
          "row": 101,
          "column": 30
        },
        "end": {
          "row": 101,
          "column": 38
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 101,
          "column": 30
        },
        "end": {
          "row": 101,
          "column": 33
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 101,
          "column": 34
        },
        "end": {
          "row": 101,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 101,
          "column": 43
        },
        "end": {
          "row": 101,
          "column": 47
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        if !self.is_global() {\n            let ident = self.segments[0].identifier;\n            if !::parse::token::Ident(ident).is_path_segment_keyword() ||\n               ident.name == keywords::Crate.name() {\n                self.segments.insert(0, PathSegment::crate_root(self.span));\n            }\n        }\n        self\n    }",
        "start": {
          "row": 101,
          "column": 48
        },
        "end": {
          "row": 110,
          "column": 6
        }
      },
      {
        "kind": "if_expression",
        "name": "query",
        "text": "if !self.is_global() {\n            let ident = self.segments[0].identifier;\n            if !::parse::token::Ident(ident).is_path_segment_keyword() ||\n               ident.name == keywords::Crate.name() {\n                self.segments.insert(0, PathSegment::crate_root(self.span));\n            }\n        }",
        "start": {
          "row": 102,
          "column": 9
        },
        "end": {
          "row": 108,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "!self.is_global()",
        "start": {
          "row": 102,
          "column": 12
        },
        "end": {
          "row": 102,
          "column": 29
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.is_global()",
        "start": {
          "row": 102,
          "column": 13
        },
        "end": {
          "row": 102,
          "column": 29
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.is_global",
        "start": {
          "row": 102,
          "column": 13
        },
        "end": {
          "row": 102,
          "column": 27
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 102,
          "column": 13
        },
        "end": {
          "row": 102,
          "column": 17
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_global",
        "start": {
          "row": 102,
          "column": 18
        },
        "end": {
          "row": 102,
          "column": 27
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 102,
          "column": 27
        },
        "end": {
          "row": 102,
          "column": 29
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n            let ident = self.segments[0].identifier;\n            if !::parse::token::Ident(ident).is_path_segment_keyword() ||\n               ident.name == keywords::Crate.name() {\n                self.segments.insert(0, PathSegment::crate_root(self.span));\n            }\n        }",
        "start": {
          "row": 102,
          "column": 30
        },
        "end": {
          "row": 108,
          "column": 10
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let ident = self.segments[0].identifier;",
        "start": {
          "row": 103,
          "column": 13
        },
        "end": {
          "row": 103,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 103,
          "column": 17
        },
        "end": {
          "row": 103,
          "column": 22
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments[0].identifier",
        "start": {
          "row": 103,
          "column": 25
        },
        "end": {
          "row": 103,
          "column": 52
        }
      },
      {
        "kind": "index_expression",
        "name": "query",
        "text": "self.segments[0]",
        "start": {
          "row": 103,
          "column": 25
        },
        "end": {
          "row": 103,
          "column": 41
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments",
        "start": {
          "row": 103,
          "column": 25
        },
        "end": {
          "row": 103,
          "column": 38
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 103,
          "column": 25
        },
        "end": {
          "row": 103,
          "column": 29
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "segments",
        "start": {
          "row": 103,
          "column": 30
        },
        "end": {
          "row": 103,
          "column": 38
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 103,
          "column": 39
        },
        "end": {
          "row": 103,
          "column": 40
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "identifier",
        "start": {
          "row": 103,
          "column": 42
        },
        "end": {
          "row": 103,
          "column": 52
        }
      },
      {
        "kind": "if_expression",
        "name": "query",
        "text": "if !::parse::token::Ident(ident).is_path_segment_keyword() ||\n               ident.name == keywords::Crate.name() {\n                self.segments.insert(0, PathSegment::crate_root(self.span));\n            }",
        "start": {
          "row": 104,
          "column": 13
        },
        "end": {
          "row": 107,
          "column": 14
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "!::parse::token::Ident(ident).is_path_segment_keyword() ||\n               ident.name == keywords::Crate.name()",
        "start": {
          "row": 104,
          "column": 16
        },
        "end": {
          "row": 105,
          "column": 52
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "!::parse::token::Ident(ident).is_path_segment_keyword()",
        "start": {
          "row": 104,
          "column": 16
        },
        "end": {
          "row": 104,
          "column": 71
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "::parse::token::Ident(ident).is_path_segment_keyword()",
        "start": {
          "row": 104,
          "column": 17
        },
        "end": {
          "row": 104,
          "column": 71
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "::parse::token::Ident(ident).is_path_segment_keyword",
        "start": {
          "row": 104,
          "column": 17
        },
        "end": {
          "row": 104,
          "column": 69
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "::parse::token::Ident(ident)",
        "start": {
          "row": 104,
          "column": 17
        },
        "end": {
          "row": 104,
          "column": 45
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "::parse::token::Ident",
        "start": {
          "row": 104,
          "column": 17
        },
        "end": {
          "row": 104,
          "column": 38
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "::parse::token",
        "start": {
          "row": 104,
          "column": 17
        },
        "end": {
          "row": 104,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "::parse",
        "start": {
          "row": 104,
          "column": 17
        },
        "end": {
          "row": 104,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "parse",
        "start": {
          "row": 104,
          "column": 19
        },
        "end": {
          "row": 104,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "token",
        "start": {
          "row": 104,
          "column": 26
        },
        "end": {
          "row": 104,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 104,
          "column": 33
        },
        "end": {
          "row": 104,
          "column": 38
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(ident)",
        "start": {
          "row": 104,
          "column": 38
        },
        "end": {
          "row": 104,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 104,
          "column": 39
        },
        "end": {
          "row": 104,
          "column": 44
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_path_segment_keyword",
        "start": {
          "row": 104,
          "column": 46
        },
        "end": {
          "row": 104,
          "column": 69
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 104,
          "column": 69
        },
        "end": {
          "row": 104,
          "column": 71
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "ident.name == keywords::Crate.name()",
        "start": {
          "row": 105,
          "column": 16
        },
        "end": {
          "row": 105,
          "column": 52
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "ident.name",
        "start": {
          "row": 105,
          "column": 16
        },
        "end": {
          "row": 105,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 105,
          "column": 16
        },
        "end": {
          "row": 105,
          "column": 21
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 105,
          "column": 22
        },
        "end": {
          "row": 105,
          "column": 26
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "keywords::Crate.name()",
        "start": {
          "row": 105,
          "column": 30
        },
        "end": {
          "row": 105,
          "column": 52
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "keywords::Crate.name",
        "start": {
          "row": 105,
          "column": 30
        },
        "end": {
          "row": 105,
          "column": 50
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "keywords::Crate",
        "start": {
          "row": 105,
          "column": 30
        },
        "end": {
          "row": 105,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "keywords",
        "start": {
          "row": 105,
          "column": 30
        },
        "end": {
          "row": 105,
          "column": 38
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Crate",
        "start": {
          "row": 105,
          "column": 40
        },
        "end": {
          "row": 105,
          "column": 45
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 105,
          "column": 46
        },
        "end": {
          "row": 105,
          "column": 50
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 105,
          "column": 50
        },
        "end": {
          "row": 105,
          "column": 52
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                self.segments.insert(0, PathSegment::crate_root(self.span));\n            }",
        "start": {
          "row": 105,
          "column": 53
        },
        "end": {
          "row": 107,
          "column": 14
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.segments.insert(0, PathSegment::crate_root(self.span))",
        "start": {
          "row": 106,
          "column": 17
        },
        "end": {
          "row": 106,
          "column": 76
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments.insert",
        "start": {
          "row": 106,
          "column": 17
        },
        "end": {
          "row": 106,
          "column": 37
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments",
        "start": {
          "row": 106,
          "column": 17
        },
        "end": {
          "row": 106,
          "column": 30
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 106,
          "column": 17
        },
        "end": {
          "row": 106,
          "column": 21
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "segments",
        "start": {
          "row": 106,
          "column": 22
        },
        "end": {
          "row": 106,
          "column": 30
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "insert",
        "start": {
          "row": 106,
          "column": 31
        },
        "end": {
          "row": 106,
          "column": 37
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(0, PathSegment::crate_root(self.span))",
        "start": {
          "row": 106,
          "column": 37
        },
        "end": {
          "row": 106,
          "column": 76
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 106,
          "column": 38
        },
        "end": {
          "row": 106,
          "column": 39
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "PathSegment::crate_root(self.span)",
        "start": {
          "row": 106,
          "column": 41
        },
        "end": {
          "row": 106,
          "column": 75
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PathSegment::crate_root",
        "start": {
          "row": 106,
          "column": 41
        },
        "end": {
          "row": 106,
          "column": 64
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PathSegment",
        "start": {
          "row": 106,
          "column": 41
        },
        "end": {
          "row": 106,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "crate_root",
        "start": {
          "row": 106,
          "column": 54
        },
        "end": {
          "row": 106,
          "column": 64
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self.span)",
        "start": {
          "row": 106,
          "column": 64
        },
        "end": {
          "row": 106,
          "column": 75
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.span",
        "start": {
          "row": 106,
          "column": 65
        },
        "end": {
          "row": 106,
          "column": 74
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 106,
          "column": 65
        },
        "end": {
          "row": 106,
          "column": 69
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 106,
          "column": 70
        },
        "end": {
          "row": 106,
          "column": 74
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 109,
          "column": 9
        },
        "end": {
          "row": 109,
          "column": 13
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_global(&self) -> bool {\n        !self.segments.is_empty() && self.segments[0].identifier.name == keywords::CrateRoot.name()\n    }",
        "start": {
          "row": 112,
          "column": 5
        },
        "end": {
          "row": 114,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 112,
          "column": 5
        },
        "end": {
          "row": 112,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_global",
        "start": {
          "row": 112,
          "column": 12
        },
        "end": {
          "row": 112,
          "column": 21
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 112,
          "column": 21
        },
        "end": {
          "row": 112,
          "column": 28
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 112,
          "column": 22
        },
        "end": {
          "row": 112,
          "column": 27
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 112,
          "column": 23
        },
        "end": {
          "row": 112,
          "column": 27
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 112,
          "column": 32
        },
        "end": {
          "row": 112,
          "column": 36
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        !self.segments.is_empty() && self.segments[0].identifier.name == keywords::CrateRoot.name()\n    }",
        "start": {
          "row": 112,
          "column": 37
        },
        "end": {
          "row": 114,
          "column": 6
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "!self.segments.is_empty() && self.segments[0].identifier.name == keywords::CrateRoot.name()",
        "start": {
          "row": 113,
          "column": 9
        },
        "end": {
          "row": 113,
          "column": 100
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "!self.segments.is_empty()",
        "start": {
          "row": 113,
          "column": 9
        },
        "end": {
          "row": 113,
          "column": 34
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.segments.is_empty()",
        "start": {
          "row": 113,
          "column": 10
        },
        "end": {
          "row": 113,
          "column": 34
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments.is_empty",
        "start": {
          "row": 113,
          "column": 10
        },
        "end": {
          "row": 113,
          "column": 32
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments",
        "start": {
          "row": 113,
          "column": 10
        },
        "end": {
          "row": 113,
          "column": 23
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 113,
          "column": 10
        },
        "end": {
          "row": 113,
          "column": 14
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "segments",
        "start": {
          "row": 113,
          "column": 15
        },
        "end": {
          "row": 113,
          "column": 23
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_empty",
        "start": {
          "row": 113,
          "column": 24
        },
        "end": {
          "row": 113,
          "column": 32
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 113,
          "column": 32
        },
        "end": {
          "row": 113,
          "column": 34
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "self.segments[0].identifier.name == keywords::CrateRoot.name()",
        "start": {
          "row": 113,
          "column": 38
        },
        "end": {
          "row": 113,
          "column": 100
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments[0].identifier.name",
        "start": {
          "row": 113,
          "column": 38
        },
        "end": {
          "row": 113,
          "column": 70
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments[0].identifier",
        "start": {
          "row": 113,
          "column": 38
        },
        "end": {
          "row": 113,
          "column": 65
        }
      },
      {
        "kind": "index_expression",
        "name": "query",
        "text": "self.segments[0]",
        "start": {
          "row": 113,
          "column": 38
        },
        "end": {
          "row": 113,
          "column": 54
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.segments",
        "start": {
          "row": 113,
          "column": 38
        },
        "end": {
          "row": 113,
          "column": 51
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 113,
          "column": 38
        },
        "end": {
          "row": 113,
          "column": 42
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "segments",
        "start": {
          "row": 113,
          "column": 43
        },
        "end": {
          "row": 113,
          "column": 51
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 113,
          "column": 52
        },
        "end": {
          "row": 113,
          "column": 53
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "identifier",
        "start": {
          "row": 113,
          "column": 55
        },
        "end": {
          "row": 113,
          "column": 65
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 113,
          "column": 66
        },
        "end": {
          "row": 113,
          "column": 70
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "keywords::CrateRoot.name()",
        "start": {
          "row": 113,
          "column": 74
        },
        "end": {
          "row": 113,
          "column": 100
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "keywords::CrateRoot.name",
        "start": {
          "row": 113,
          "column": 74
        },
        "end": {
          "row": 113,
          "column": 98
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "keywords::CrateRoot",
        "start": {
          "row": 113,
          "column": 74
        },
        "end": {
          "row": 113,
          "column": 93
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "keywords",
        "start": {
          "row": 113,
          "column": 74
        },
        "end": {
          "row": 113,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "CrateRoot",
        "start": {
          "row": 113,
          "column": 84
        },
        "end": {
          "row": 113,
          "column": 93
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 113,
          "column": 94
        },
        "end": {
          "row": 113,
          "column": 98
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 113,
          "column": 98
        },
        "end": {
          "row": 113,
          "column": 100
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A segment of a path: an identifier, an optional lifetime, and a set of types.",
        "start": {
          "row": 117,
          "column": 1
        },
        "end": {
          "row": 117,
          "column": 82
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 118,
          "column": 1
        },
        "end": {
          "row": 118,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `std`, `String` or `Box<T>`",
        "start": {
          "row": 119,
          "column": 1
        },
        "end": {
          "row": 119,
          "column": 37
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 120,
          "column": 1
        },
        "end": {
          "row": 120,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 120,
          "column": 3
        },
        "end": {
          "row": 120,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 120,
          "column": 3
        },
        "end": {
          "row": 120,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 120,
          "column": 9
        },
        "end": {
          "row": 120,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 120,
          "column": 10
        },
        "end": {
          "row": 120,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 120,
          "column": 10
        },
        "end": {
          "row": 120,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 120,
          "column": 17
        },
        "end": {
          "row": 120,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 120,
          "column": 17
        },
        "end": {
          "row": 120,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 120,
          "column": 28
        },
        "end": {
          "row": 120,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 120,
          "column": 28
        },
        "end": {
          "row": 120,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 120,
          "column": 32
        },
        "end": {
          "row": 120,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 120,
          "column": 32
        },
        "end": {
          "row": 120,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 120,
          "column": 48
        },
        "end": {
          "row": 120,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 120,
          "column": 48
        },
        "end": {
          "row": 120,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 120,
          "column": 64
        },
        "end": {
          "row": 120,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 120,
          "column": 64
        },
        "end": {
          "row": 120,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 120,
          "column": 70
        },
        "end": {
          "row": 120,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 120,
          "column": 70
        },
        "end": {
          "row": 120,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct PathSegment {\n    /// The identifier portion of this path segment.\n    pub identifier: Ident,\n    /// Span of the segment identifier.\n    pub span: Span,\n\n    /// Type/lifetime parameters attached to this path. They come in\n    /// two flavors: `Path<A,B,C>` and `Path(A,B) -> C`.\n    /// `None` means that no parameter list is supplied (`Path`),\n    /// `Some` means that parameter list is supplied (`Path<X, Y>`)\n    /// but it can be empty (`Path<>`).\n    /// `P` is used as a size optimization for the common case with no parameters.\n    pub parameters: Option<P<PathParameters>>,\n}",
        "start": {
          "row": 121,
          "column": 1
        },
        "end": {
          "row": 134,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 121,
          "column": 1
        },
        "end": {
          "row": 121,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathSegment",
        "start": {
          "row": 121,
          "column": 12
        },
        "end": {
          "row": 121,
          "column": 23
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    /// The identifier portion of this path segment.\n    pub identifier: Ident,\n    /// Span of the segment identifier.\n    pub span: Span,\n\n    /// Type/lifetime parameters attached to this path. They come in\n    /// two flavors: `Path<A,B,C>` and `Path(A,B) -> C`.\n    /// `None` means that no parameter list is supplied (`Path`),\n    /// `Some` means that parameter list is supplied (`Path<X, Y>`)\n    /// but it can be empty (`Path<>`).\n    /// `P` is used as a size optimization for the common case with no parameters.\n    pub parameters: Option<P<PathParameters>>,\n}",
        "start": {
          "row": 121,
          "column": 24
        },
        "end": {
          "row": 134,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The identifier portion of this path segment.",
        "start": {
          "row": 122,
          "column": 5
        },
        "end": {
          "row": 122,
          "column": 53
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub identifier: Ident",
        "start": {
          "row": 123,
          "column": 5
        },
        "end": {
          "row": 123,
          "column": 26
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 123,
          "column": 5
        },
        "end": {
          "row": 123,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "identifier",
        "start": {
          "row": 123,
          "column": 9
        },
        "end": {
          "row": 123,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 123,
          "column": 21
        },
        "end": {
          "row": 123,
          "column": 26
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Span of the segment identifier.",
        "start": {
          "row": 124,
          "column": 5
        },
        "end": {
          "row": 124,
          "column": 40
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 125,
          "column": 5
        },
        "end": {
          "row": 125,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 125,
          "column": 5
        },
        "end": {
          "row": 125,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 125,
          "column": 9
        },
        "end": {
          "row": 125,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 125,
          "column": 15
        },
        "end": {
          "row": 125,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Type/lifetime parameters attached to this path. They come in",
        "start": {
          "row": 127,
          "column": 5
        },
        "end": {
          "row": 127,
          "column": 69
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// two flavors: `Path<A,B,C>` and `Path(A,B) -> C`.",
        "start": {
          "row": 128,
          "column": 5
        },
        "end": {
          "row": 128,
          "column": 57
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `None` means that no parameter list is supplied (`Path`),",
        "start": {
          "row": 129,
          "column": 5
        },
        "end": {
          "row": 129,
          "column": 66
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `Some` means that parameter list is supplied (`Path<X, Y>`)",
        "start": {
          "row": 130,
          "column": 5
        },
        "end": {
          "row": 130,
          "column": 68
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// but it can be empty (`Path<>`).",
        "start": {
          "row": 131,
          "column": 5
        },
        "end": {
          "row": 131,
          "column": 40
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `P` is used as a size optimization for the common case with no parameters.",
        "start": {
          "row": 132,
          "column": 5
        },
        "end": {
          "row": 132,
          "column": 83
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub parameters: Option<P<PathParameters>>",
        "start": {
          "row": 133,
          "column": 5
        },
        "end": {
          "row": 133,
          "column": 46
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 133,
          "column": 5
        },
        "end": {
          "row": 133,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "parameters",
        "start": {
          "row": 133,
          "column": 9
        },
        "end": {
          "row": 133,
          "column": 19
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<PathParameters>>",
        "start": {
          "row": 133,
          "column": 21
        },
        "end": {
          "row": 133,
          "column": 46
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 133,
          "column": 21
        },
        "end": {
          "row": 133,
          "column": 27
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<PathParameters>>",
        "start": {
          "row": 133,
          "column": 27
        },
        "end": {
          "row": 133,
          "column": 46
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<PathParameters>",
        "start": {
          "row": 133,
          "column": 28
        },
        "end": {
          "row": 133,
          "column": 45
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 133,
          "column": 28
        },
        "end": {
          "row": 133,
          "column": 29
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<PathParameters>",
        "start": {
          "row": 133,
          "column": 29
        },
        "end": {
          "row": 133,
          "column": 45
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathParameters",
        "start": {
          "row": 133,
          "column": 30
        },
        "end": {
          "row": 133,
          "column": 44
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl PathSegment {\n    pub fn from_ident(ident: Ident, span: Span) -> Self {\n        PathSegment { identifier: ident, span: span, parameters: None }\n    }\n    pub fn crate_root(span: Span) -> Self {\n        PathSegment {\n            identifier: Ident { ctxt: span.ctxt(), ..keywords::CrateRoot.ident() },\n            span,\n            parameters: None,\n        }\n    }\n}",
        "start": {
          "row": 136,
          "column": 1
        },
        "end": {
          "row": 147,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathSegment",
        "start": {
          "row": 136,
          "column": 6
        },
        "end": {
          "row": 136,
          "column": 17
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn from_ident(ident: Ident, span: Span) -> Self {\n        PathSegment { identifier: ident, span: span, parameters: None }\n    }\n    pub fn crate_root(span: Span) -> Self {\n        PathSegment {\n            identifier: Ident { ctxt: span.ctxt(), ..keywords::CrateRoot.ident() },\n            span,\n            parameters: None,\n        }\n    }\n}",
        "start": {
          "row": 136,
          "column": 18
        },
        "end": {
          "row": 147,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn from_ident(ident: Ident, span: Span) -> Self {\n        PathSegment { identifier: ident, span: span, parameters: None }\n    }",
        "start": {
          "row": 137,
          "column": 5
        },
        "end": {
          "row": 139,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 137,
          "column": 5
        },
        "end": {
          "row": 137,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "from_ident",
        "start": {
          "row": 137,
          "column": 12
        },
        "end": {
          "row": 137,
          "column": 22
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(ident: Ident, span: Span)",
        "start": {
          "row": 137,
          "column": 22
        },
        "end": {
          "row": 137,
          "column": 48
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "ident: Ident",
        "start": {
          "row": 137,
          "column": 23
        },
        "end": {
          "row": 137,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 137,
          "column": 23
        },
        "end": {
          "row": 137,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 137,
          "column": 30
        },
        "end": {
          "row": 137,
          "column": 35
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "span: Span",
        "start": {
          "row": 137,
          "column": 37
        },
        "end": {
          "row": 137,
          "column": 47
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 137,
          "column": 37
        },
        "end": {
          "row": 137,
          "column": 41
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 137,
          "column": 43
        },
        "end": {
          "row": 137,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Self",
        "start": {
          "row": 137,
          "column": 52
        },
        "end": {
          "row": 137,
          "column": 56
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        PathSegment { identifier: ident, span: span, parameters: None }\n    }",
        "start": {
          "row": 137,
          "column": 57
        },
        "end": {
          "row": 139,
          "column": 6
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "PathSegment { identifier: ident, span: span, parameters: None }",
        "start": {
          "row": 138,
          "column": 9
        },
        "end": {
          "row": 138,
          "column": 72
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathSegment",
        "start": {
          "row": 138,
          "column": 9
        },
        "end": {
          "row": 138,
          "column": 20
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{ identifier: ident, span: span, parameters: None }",
        "start": {
          "row": 138,
          "column": 21
        },
        "end": {
          "row": 138,
          "column": 72
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "identifier: ident",
        "start": {
          "row": 138,
          "column": 23
        },
        "end": {
          "row": 138,
          "column": 40
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "identifier",
        "start": {
          "row": 138,
          "column": 23
        },
        "end": {
          "row": 138,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 138,
          "column": 35
        },
        "end": {
          "row": 138,
          "column": 40
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "span: span",
        "start": {
          "row": 138,
          "column": 42
        },
        "end": {
          "row": 138,
          "column": 52
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 138,
          "column": 42
        },
        "end": {
          "row": 138,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 138,
          "column": 48
        },
        "end": {
          "row": 138,
          "column": 52
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "parameters: None",
        "start": {
          "row": 138,
          "column": 54
        },
        "end": {
          "row": 138,
          "column": 70
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "parameters",
        "start": {
          "row": 138,
          "column": 54
        },
        "end": {
          "row": 138,
          "column": 64
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 138,
          "column": 66
        },
        "end": {
          "row": 138,
          "column": 70
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn crate_root(span: Span) -> Self {\n        PathSegment {\n            identifier: Ident { ctxt: span.ctxt(), ..keywords::CrateRoot.ident() },\n            span,\n            parameters: None,\n        }\n    }",
        "start": {
          "row": 140,
          "column": 5
        },
        "end": {
          "row": 146,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 140,
          "column": 5
        },
        "end": {
          "row": 140,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "crate_root",
        "start": {
          "row": 140,
          "column": 12
        },
        "end": {
          "row": 140,
          "column": 22
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(span: Span)",
        "start": {
          "row": 140,
          "column": 22
        },
        "end": {
          "row": 140,
          "column": 34
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "span: Span",
        "start": {
          "row": 140,
          "column": 23
        },
        "end": {
          "row": 140,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 140,
          "column": 23
        },
        "end": {
          "row": 140,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 140,
          "column": 29
        },
        "end": {
          "row": 140,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Self",
        "start": {
          "row": 140,
          "column": 38
        },
        "end": {
          "row": 140,
          "column": 42
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        PathSegment {\n            identifier: Ident { ctxt: span.ctxt(), ..keywords::CrateRoot.ident() },\n            span,\n            parameters: None,\n        }\n    }",
        "start": {
          "row": 140,
          "column": 43
        },
        "end": {
          "row": 146,
          "column": 6
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "PathSegment {\n            identifier: Ident { ctxt: span.ctxt(), ..keywords::CrateRoot.ident() },\n            span,\n            parameters: None,\n        }",
        "start": {
          "row": 141,
          "column": 9
        },
        "end": {
          "row": 145,
          "column": 10
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathSegment",
        "start": {
          "row": 141,
          "column": 9
        },
        "end": {
          "row": 141,
          "column": 20
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{\n            identifier: Ident { ctxt: span.ctxt(), ..keywords::CrateRoot.ident() },\n            span,\n            parameters: None,\n        }",
        "start": {
          "row": 141,
          "column": 21
        },
        "end": {
          "row": 145,
          "column": 10
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "identifier: Ident { ctxt: span.ctxt(), ..keywords::CrateRoot.ident() }",
        "start": {
          "row": 142,
          "column": 13
        },
        "end": {
          "row": 142,
          "column": 83
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "identifier",
        "start": {
          "row": 142,
          "column": 13
        },
        "end": {
          "row": 142,
          "column": 23
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "Ident { ctxt: span.ctxt(), ..keywords::CrateRoot.ident() }",
        "start": {
          "row": 142,
          "column": 25
        },
        "end": {
          "row": 142,
          "column": 83
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 142,
          "column": 25
        },
        "end": {
          "row": 142,
          "column": 30
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{ ctxt: span.ctxt(), ..keywords::CrateRoot.ident() }",
        "start": {
          "row": 142,
          "column": 31
        },
        "end": {
          "row": 142,
          "column": 83
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "ctxt: span.ctxt()",
        "start": {
          "row": 142,
          "column": 33
        },
        "end": {
          "row": 142,
          "column": 50
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ctxt",
        "start": {
          "row": 142,
          "column": 33
        },
        "end": {
          "row": 142,
          "column": 37
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "span.ctxt()",
        "start": {
          "row": 142,
          "column": 39
        },
        "end": {
          "row": 142,
          "column": 50
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "span.ctxt",
        "start": {
          "row": 142,
          "column": 39
        },
        "end": {
          "row": 142,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 142,
          "column": 39
        },
        "end": {
          "row": 142,
          "column": 43
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ctxt",
        "start": {
          "row": 142,
          "column": 44
        },
        "end": {
          "row": 142,
          "column": 48
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 142,
          "column": 48
        },
        "end": {
          "row": 142,
          "column": 50
        }
      },
      {
        "kind": "base_field_initializer",
        "name": "query",
        "text": "..keywords::CrateRoot.ident()",
        "start": {
          "row": 142,
          "column": 52
        },
        "end": {
          "row": 142,
          "column": 81
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "keywords::CrateRoot.ident()",
        "start": {
          "row": 142,
          "column": 54
        },
        "end": {
          "row": 142,
          "column": 81
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "keywords::CrateRoot.ident",
        "start": {
          "row": 142,
          "column": 54
        },
        "end": {
          "row": 142,
          "column": 79
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "keywords::CrateRoot",
        "start": {
          "row": 142,
          "column": 54
        },
        "end": {
          "row": 142,
          "column": 73
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "keywords",
        "start": {
          "row": 142,
          "column": 54
        },
        "end": {
          "row": 142,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "CrateRoot",
        "start": {
          "row": 142,
          "column": 64
        },
        "end": {
          "row": 142,
          "column": 73
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 142,
          "column": 74
        },
        "end": {
          "row": 142,
          "column": 79
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 142,
          "column": 79
        },
        "end": {
          "row": 142,
          "column": 81
        }
      },
      {
        "kind": "shorthand_field_initializer",
        "name": "query",
        "text": "span",
        "start": {
          "row": 143,
          "column": 13
        },
        "end": {
          "row": 143,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 143,
          "column": 13
        },
        "end": {
          "row": 143,
          "column": 17
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "parameters: None",
        "start": {
          "row": 144,
          "column": 13
        },
        "end": {
          "row": 144,
          "column": 29
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "parameters",
        "start": {
          "row": 144,
          "column": 13
        },
        "end": {
          "row": 144,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 144,
          "column": 25
        },
        "end": {
          "row": 144,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Parameters of a path segment.",
        "start": {
          "row": 149,
          "column": 1
        },
        "end": {
          "row": 149,
          "column": 34
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 150,
          "column": 1
        },
        "end": {
          "row": 150,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `<A, B>` as in `Foo<A, B>` or `(A, B)` as in `Foo(A, B)`",
        "start": {
          "row": 151,
          "column": 1
        },
        "end": {
          "row": 151,
          "column": 66
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 152,
          "column": 1
        },
        "end": {
          "row": 152,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 152,
          "column": 3
        },
        "end": {
          "row": 152,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 152,
          "column": 3
        },
        "end": {
          "row": 152,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 152,
          "column": 9
        },
        "end": {
          "row": 152,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 152,
          "column": 10
        },
        "end": {
          "row": 152,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 152,
          "column": 10
        },
        "end": {
          "row": 152,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 152,
          "column": 17
        },
        "end": {
          "row": 152,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 152,
          "column": 17
        },
        "end": {
          "row": 152,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 152,
          "column": 28
        },
        "end": {
          "row": 152,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 152,
          "column": 28
        },
        "end": {
          "row": 152,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 152,
          "column": 32
        },
        "end": {
          "row": 152,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 152,
          "column": 32
        },
        "end": {
          "row": 152,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 152,
          "column": 48
        },
        "end": {
          "row": 152,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 152,
          "column": 48
        },
        "end": {
          "row": 152,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 152,
          "column": 64
        },
        "end": {
          "row": 152,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 152,
          "column": 64
        },
        "end": {
          "row": 152,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 152,
          "column": 70
        },
        "end": {
          "row": 152,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 152,
          "column": 70
        },
        "end": {
          "row": 152,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum PathParameters {\n    /// The `<'a, A,B,C>` in `foo::bar::baz::<'a, A,B,C>`\n    AngleBracketed(AngleBracketedParameterData),\n    /// The `(A,B)` and `C` in `Foo(A,B) -> C`\n    Parenthesized(ParenthesizedParameterData),\n}",
        "start": {
          "row": 153,
          "column": 1
        },
        "end": {
          "row": 158,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 153,
          "column": 1
        },
        "end": {
          "row": 153,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathParameters",
        "start": {
          "row": 153,
          "column": 10
        },
        "end": {
          "row": 153,
          "column": 24
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// The `<'a, A,B,C>` in `foo::bar::baz::<'a, A,B,C>`\n    AngleBracketed(AngleBracketedParameterData),\n    /// The `(A,B)` and `C` in `Foo(A,B) -> C`\n    Parenthesized(ParenthesizedParameterData),\n}",
        "start": {
          "row": 153,
          "column": 25
        },
        "end": {
          "row": 158,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `<'a, A,B,C>` in `foo::bar::baz::<'a, A,B,C>`",
        "start": {
          "row": 154,
          "column": 5
        },
        "end": {
          "row": 154,
          "column": 58
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "AngleBracketed(AngleBracketedParameterData)",
        "start": {
          "row": 155,
          "column": 5
        },
        "end": {
          "row": 155,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "AngleBracketed",
        "start": {
          "row": 155,
          "column": 5
        },
        "end": {
          "row": 155,
          "column": 19
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(AngleBracketedParameterData)",
        "start": {
          "row": 155,
          "column": 19
        },
        "end": {
          "row": 155,
          "column": 48
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "AngleBracketedParameterData",
        "start": {
          "row": 155,
          "column": 20
        },
        "end": {
          "row": 155,
          "column": 47
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `(A,B)` and `C` in `Foo(A,B) -> C`",
        "start": {
          "row": 156,
          "column": 5
        },
        "end": {
          "row": 156,
          "column": 47
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Parenthesized(ParenthesizedParameterData)",
        "start": {
          "row": 157,
          "column": 5
        },
        "end": {
          "row": 157,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Parenthesized",
        "start": {
          "row": 157,
          "column": 5
        },
        "end": {
          "row": 157,
          "column": 18
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(ParenthesizedParameterData)",
        "start": {
          "row": 157,
          "column": 18
        },
        "end": {
          "row": 157,
          "column": 46
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ParenthesizedParameterData",
        "start": {
          "row": 157,
          "column": 19
        },
        "end": {
          "row": 157,
          "column": 45
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl PathParameters {\n    pub fn span(&self) -> Span {\n        match *self {\n            AngleBracketed(ref data) => data.span,\n            Parenthesized(ref data) => data.span,\n        }\n    }\n}",
        "start": {
          "row": 160,
          "column": 1
        },
        "end": {
          "row": 167,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathParameters",
        "start": {
          "row": 160,
          "column": 6
        },
        "end": {
          "row": 160,
          "column": 20
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn span(&self) -> Span {\n        match *self {\n            AngleBracketed(ref data) => data.span,\n            Parenthesized(ref data) => data.span,\n        }\n    }\n}",
        "start": {
          "row": 160,
          "column": 21
        },
        "end": {
          "row": 167,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn span(&self) -> Span {\n        match *self {\n            AngleBracketed(ref data) => data.span,\n            Parenthesized(ref data) => data.span,\n        }\n    }",
        "start": {
          "row": 161,
          "column": 5
        },
        "end": {
          "row": 166,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 161,
          "column": 5
        },
        "end": {
          "row": 161,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 161,
          "column": 12
        },
        "end": {
          "row": 161,
          "column": 16
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 161,
          "column": 16
        },
        "end": {
          "row": 161,
          "column": 23
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 161,
          "column": 17
        },
        "end": {
          "row": 161,
          "column": 22
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 161,
          "column": 18
        },
        "end": {
          "row": 161,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 161,
          "column": 27
        },
        "end": {
          "row": 161,
          "column": 31
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            AngleBracketed(ref data) => data.span,\n            Parenthesized(ref data) => data.span,\n        }\n    }",
        "start": {
          "row": 161,
          "column": 32
        },
        "end": {
          "row": 166,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            AngleBracketed(ref data) => data.span,\n            Parenthesized(ref data) => data.span,\n        }",
        "start": {
          "row": 162,
          "column": 9
        },
        "end": {
          "row": 165,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 162,
          "column": 15
        },
        "end": {
          "row": 162,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 162,
          "column": 16
        },
        "end": {
          "row": 162,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            AngleBracketed(ref data) => data.span,\n            Parenthesized(ref data) => data.span,\n        }",
        "start": {
          "row": 162,
          "column": 21
        },
        "end": {
          "row": 165,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "AngleBracketed(ref data) => data.span,",
        "start": {
          "row": 163,
          "column": 13
        },
        "end": {
          "row": 163,
          "column": 51
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "AngleBracketed(ref data)",
        "start": {
          "row": 163,
          "column": 13
        },
        "end": {
          "row": 163,
          "column": 37
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "AngleBracketed(ref data)",
        "start": {
          "row": 163,
          "column": 13
        },
        "end": {
          "row": 163,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "AngleBracketed",
        "start": {
          "row": 163,
          "column": 13
        },
        "end": {
          "row": 163,
          "column": 27
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref data",
        "start": {
          "row": 163,
          "column": 28
        },
        "end": {
          "row": 163,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "data",
        "start": {
          "row": 163,
          "column": 32
        },
        "end": {
          "row": 163,
          "column": 36
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "data.span",
        "start": {
          "row": 163,
          "column": 41
        },
        "end": {
          "row": 163,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "data",
        "start": {
          "row": 163,
          "column": 41
        },
        "end": {
          "row": 163,
          "column": 45
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 163,
          "column": 46
        },
        "end": {
          "row": 163,
          "column": 50
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Parenthesized(ref data) => data.span,",
        "start": {
          "row": 164,
          "column": 13
        },
        "end": {
          "row": 164,
          "column": 50
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Parenthesized(ref data)",
        "start": {
          "row": 164,
          "column": 13
        },
        "end": {
          "row": 164,
          "column": 36
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "Parenthesized(ref data)",
        "start": {
          "row": 164,
          "column": 13
        },
        "end": {
          "row": 164,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Parenthesized",
        "start": {
          "row": 164,
          "column": 13
        },
        "end": {
          "row": 164,
          "column": 26
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref data",
        "start": {
          "row": 164,
          "column": 27
        },
        "end": {
          "row": 164,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "data",
        "start": {
          "row": 164,
          "column": 31
        },
        "end": {
          "row": 164,
          "column": 35
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "data.span",
        "start": {
          "row": 164,
          "column": 40
        },
        "end": {
          "row": 164,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "data",
        "start": {
          "row": 164,
          "column": 40
        },
        "end": {
          "row": 164,
          "column": 44
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 164,
          "column": 45
        },
        "end": {
          "row": 164,
          "column": 49
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A path like `Foo<'a, T>`",
        "start": {
          "row": 169,
          "column": 1
        },
        "end": {
          "row": 169,
          "column": 29
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Default)]",
        "start": {
          "row": 170,
          "column": 1
        },
        "end": {
          "row": 170,
          "column": 86
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Default)",
        "start": {
          "row": 170,
          "column": 3
        },
        "end": {
          "row": 170,
          "column": 85
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 170,
          "column": 3
        },
        "end": {
          "row": 170,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Default)",
        "start": {
          "row": 170,
          "column": 9
        },
        "end": {
          "row": 170,
          "column": 85
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 170,
          "column": 10
        },
        "end": {
          "row": 170,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 170,
          "column": 10
        },
        "end": {
          "row": 170,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 170,
          "column": 17
        },
        "end": {
          "row": 170,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 170,
          "column": 17
        },
        "end": {
          "row": 170,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 170,
          "column": 28
        },
        "end": {
          "row": 170,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 170,
          "column": 28
        },
        "end": {
          "row": 170,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 170,
          "column": 32
        },
        "end": {
          "row": 170,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 170,
          "column": 32
        },
        "end": {
          "row": 170,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 170,
          "column": 48
        },
        "end": {
          "row": 170,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 170,
          "column": 48
        },
        "end": {
          "row": 170,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 170,
          "column": 64
        },
        "end": {
          "row": 170,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 170,
          "column": 64
        },
        "end": {
          "row": 170,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 170,
          "column": 70
        },
        "end": {
          "row": 170,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 170,
          "column": 70
        },
        "end": {
          "row": 170,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Default",
        "start": {
          "row": 170,
          "column": 77
        },
        "end": {
          "row": 170,
          "column": 84
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Default",
        "start": {
          "row": 170,
          "column": 77
        },
        "end": {
          "row": 170,
          "column": 84
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct AngleBracketedParameterData {\n    /// Overall span\n    pub span: Span,\n    /// The lifetime parameters for this path segment.\n    pub lifetimes: Vec<Lifetime>,\n    /// The type parameters for this path segment, if present.\n    pub types: Vec<P<Ty>>,\n    /// Bindings (equality constraints) on associated types, if present.\n    ///\n    /// E.g., `Foo<A=Bar>`.\n    pub bindings: Vec<TypeBinding>,\n}",
        "start": {
          "row": 171,
          "column": 1
        },
        "end": {
          "row": 182,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 171,
          "column": 1
        },
        "end": {
          "row": 171,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "AngleBracketedParameterData",
        "start": {
          "row": 171,
          "column": 12
        },
        "end": {
          "row": 171,
          "column": 39
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    /// Overall span\n    pub span: Span,\n    /// The lifetime parameters for this path segment.\n    pub lifetimes: Vec<Lifetime>,\n    /// The type parameters for this path segment, if present.\n    pub types: Vec<P<Ty>>,\n    /// Bindings (equality constraints) on associated types, if present.\n    ///\n    /// E.g., `Foo<A=Bar>`.\n    pub bindings: Vec<TypeBinding>,\n}",
        "start": {
          "row": 171,
          "column": 40
        },
        "end": {
          "row": 182,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Overall span",
        "start": {
          "row": 172,
          "column": 5
        },
        "end": {
          "row": 172,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 173,
          "column": 5
        },
        "end": {
          "row": 173,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 173,
          "column": 5
        },
        "end": {
          "row": 173,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 173,
          "column": 9
        },
        "end": {
          "row": 173,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 173,
          "column": 15
        },
        "end": {
          "row": 173,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The lifetime parameters for this path segment.",
        "start": {
          "row": 174,
          "column": 5
        },
        "end": {
          "row": 174,
          "column": 55
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub lifetimes: Vec<Lifetime>",
        "start": {
          "row": 175,
          "column": 5
        },
        "end": {
          "row": 175,
          "column": 33
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 175,
          "column": 5
        },
        "end": {
          "row": 175,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "lifetimes",
        "start": {
          "row": 175,
          "column": 9
        },
        "end": {
          "row": 175,
          "column": 18
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Lifetime>",
        "start": {
          "row": 175,
          "column": 20
        },
        "end": {
          "row": 175,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 175,
          "column": 20
        },
        "end": {
          "row": 175,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Lifetime>",
        "start": {
          "row": 175,
          "column": 23
        },
        "end": {
          "row": 175,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lifetime",
        "start": {
          "row": 175,
          "column": 24
        },
        "end": {
          "row": 175,
          "column": 32
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The type parameters for this path segment, if present.",
        "start": {
          "row": 176,
          "column": 5
        },
        "end": {
          "row": 176,
          "column": 63
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub types: Vec<P<Ty>>",
        "start": {
          "row": 177,
          "column": 5
        },
        "end": {
          "row": 177,
          "column": 26
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 177,
          "column": 5
        },
        "end": {
          "row": 177,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "types",
        "start": {
          "row": 177,
          "column": 9
        },
        "end": {
          "row": 177,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Ty>>",
        "start": {
          "row": 177,
          "column": 16
        },
        "end": {
          "row": 177,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 177,
          "column": 16
        },
        "end": {
          "row": 177,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Ty>>",
        "start": {
          "row": 177,
          "column": 19
        },
        "end": {
          "row": 177,
          "column": 26
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 177,
          "column": 20
        },
        "end": {
          "row": 177,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 177,
          "column": 20
        },
        "end": {
          "row": 177,
          "column": 21
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 177,
          "column": 21
        },
        "end": {
          "row": 177,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 177,
          "column": 22
        },
        "end": {
          "row": 177,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Bindings (equality constraints) on associated types, if present.",
        "start": {
          "row": 178,
          "column": 5
        },
        "end": {
          "row": 178,
          "column": 73
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 179,
          "column": 5
        },
        "end": {
          "row": 179,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g., `Foo<A=Bar>`.",
        "start": {
          "row": 180,
          "column": 5
        },
        "end": {
          "row": 180,
          "column": 28
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub bindings: Vec<TypeBinding>",
        "start": {
          "row": 181,
          "column": 5
        },
        "end": {
          "row": 181,
          "column": 35
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 181,
          "column": 5
        },
        "end": {
          "row": 181,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "bindings",
        "start": {
          "row": 181,
          "column": 9
        },
        "end": {
          "row": 181,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<TypeBinding>",
        "start": {
          "row": 181,
          "column": 19
        },
        "end": {
          "row": 181,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 181,
          "column": 19
        },
        "end": {
          "row": 181,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<TypeBinding>",
        "start": {
          "row": 181,
          "column": 22
        },
        "end": {
          "row": 181,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TypeBinding",
        "start": {
          "row": 181,
          "column": 23
        },
        "end": {
          "row": 181,
          "column": 34
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl Into<Option<P<PathParameters>>> for AngleBracketedParameterData {\n    fn into(self) -> Option<P<PathParameters>> {\n        Some(P(PathParameters::AngleBracketed(self)))\n    }\n}",
        "start": {
          "row": 184,
          "column": 1
        },
        "end": {
          "row": 188,
          "column": 2
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Into<Option<P<PathParameters>>>",
        "start": {
          "row": 184,
          "column": 6
        },
        "end": {
          "row": 184,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Into",
        "start": {
          "row": 184,
          "column": 6
        },
        "end": {
          "row": 184,
          "column": 10
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Option<P<PathParameters>>>",
        "start": {
          "row": 184,
          "column": 10
        },
        "end": {
          "row": 184,
          "column": 37
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<PathParameters>>",
        "start": {
          "row": 184,
          "column": 11
        },
        "end": {
          "row": 184,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 184,
          "column": 11
        },
        "end": {
          "row": 184,
          "column": 17
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<PathParameters>>",
        "start": {
          "row": 184,
          "column": 17
        },
        "end": {
          "row": 184,
          "column": 36
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<PathParameters>",
        "start": {
          "row": 184,
          "column": 18
        },
        "end": {
          "row": 184,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 184,
          "column": 18
        },
        "end": {
          "row": 184,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<PathParameters>",
        "start": {
          "row": 184,
          "column": 19
        },
        "end": {
          "row": 184,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathParameters",
        "start": {
          "row": 184,
          "column": 20
        },
        "end": {
          "row": 184,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "AngleBracketedParameterData",
        "start": {
          "row": 184,
          "column": 42
        },
        "end": {
          "row": 184,
          "column": 69
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn into(self) -> Option<P<PathParameters>> {\n        Some(P(PathParameters::AngleBracketed(self)))\n    }\n}",
        "start": {
          "row": 184,
          "column": 70
        },
        "end": {
          "row": 188,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn into(self) -> Option<P<PathParameters>> {\n        Some(P(PathParameters::AngleBracketed(self)))\n    }",
        "start": {
          "row": 185,
          "column": 5
        },
        "end": {
          "row": 187,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "into",
        "start": {
          "row": 185,
          "column": 8
        },
        "end": {
          "row": 185,
          "column": 12
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 185,
          "column": 12
        },
        "end": {
          "row": 185,
          "column": 18
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "self",
        "start": {
          "row": 185,
          "column": 13
        },
        "end": {
          "row": 185,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 185,
          "column": 13
        },
        "end": {
          "row": 185,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<PathParameters>>",
        "start": {
          "row": 185,
          "column": 22
        },
        "end": {
          "row": 185,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 185,
          "column": 22
        },
        "end": {
          "row": 185,
          "column": 28
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<PathParameters>>",
        "start": {
          "row": 185,
          "column": 28
        },
        "end": {
          "row": 185,
          "column": 47
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<PathParameters>",
        "start": {
          "row": 185,
          "column": 29
        },
        "end": {
          "row": 185,
          "column": 46
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 185,
          "column": 29
        },
        "end": {
          "row": 185,
          "column": 30
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<PathParameters>",
        "start": {
          "row": 185,
          "column": 30
        },
        "end": {
          "row": 185,
          "column": 46
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathParameters",
        "start": {
          "row": 185,
          "column": 31
        },
        "end": {
          "row": 185,
          "column": 45
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        Some(P(PathParameters::AngleBracketed(self)))\n    }",
        "start": {
          "row": 185,
          "column": 48
        },
        "end": {
          "row": 187,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Some(P(PathParameters::AngleBracketed(self)))",
        "start": {
          "row": 186,
          "column": 9
        },
        "end": {
          "row": 186,
          "column": 54
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 186,
          "column": 9
        },
        "end": {
          "row": 186,
          "column": 13
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(P(PathParameters::AngleBracketed(self)))",
        "start": {
          "row": 186,
          "column": 13
        },
        "end": {
          "row": 186,
          "column": 54
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "P(PathParameters::AngleBracketed(self))",
        "start": {
          "row": 186,
          "column": 14
        },
        "end": {
          "row": 186,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 186,
          "column": 14
        },
        "end": {
          "row": 186,
          "column": 15
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(PathParameters::AngleBracketed(self))",
        "start": {
          "row": 186,
          "column": 15
        },
        "end": {
          "row": 186,
          "column": 53
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "PathParameters::AngleBracketed(self)",
        "start": {
          "row": 186,
          "column": 16
        },
        "end": {
          "row": 186,
          "column": 52
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PathParameters::AngleBracketed",
        "start": {
          "row": 186,
          "column": 16
        },
        "end": {
          "row": 186,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PathParameters",
        "start": {
          "row": 186,
          "column": 16
        },
        "end": {
          "row": 186,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "AngleBracketed",
        "start": {
          "row": 186,
          "column": 32
        },
        "end": {
          "row": 186,
          "column": 46
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 186,
          "column": 46
        },
        "end": {
          "row": 186,
          "column": 52
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 186,
          "column": 47
        },
        "end": {
          "row": 186,
          "column": 51
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl Into<Option<P<PathParameters>>> for ParenthesizedParameterData {\n    fn into(self) -> Option<P<PathParameters>> {\n        Some(P(PathParameters::Parenthesized(self)))\n    }\n}",
        "start": {
          "row": 190,
          "column": 1
        },
        "end": {
          "row": 194,
          "column": 2
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Into<Option<P<PathParameters>>>",
        "start": {
          "row": 190,
          "column": 6
        },
        "end": {
          "row": 190,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Into",
        "start": {
          "row": 190,
          "column": 6
        },
        "end": {
          "row": 190,
          "column": 10
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Option<P<PathParameters>>>",
        "start": {
          "row": 190,
          "column": 10
        },
        "end": {
          "row": 190,
          "column": 37
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<PathParameters>>",
        "start": {
          "row": 190,
          "column": 11
        },
        "end": {
          "row": 190,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 190,
          "column": 11
        },
        "end": {
          "row": 190,
          "column": 17
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<PathParameters>>",
        "start": {
          "row": 190,
          "column": 17
        },
        "end": {
          "row": 190,
          "column": 36
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<PathParameters>",
        "start": {
          "row": 190,
          "column": 18
        },
        "end": {
          "row": 190,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 190,
          "column": 18
        },
        "end": {
          "row": 190,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<PathParameters>",
        "start": {
          "row": 190,
          "column": 19
        },
        "end": {
          "row": 190,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathParameters",
        "start": {
          "row": 190,
          "column": 20
        },
        "end": {
          "row": 190,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ParenthesizedParameterData",
        "start": {
          "row": 190,
          "column": 42
        },
        "end": {
          "row": 190,
          "column": 68
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn into(self) -> Option<P<PathParameters>> {\n        Some(P(PathParameters::Parenthesized(self)))\n    }\n}",
        "start": {
          "row": 190,
          "column": 69
        },
        "end": {
          "row": 194,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn into(self) -> Option<P<PathParameters>> {\n        Some(P(PathParameters::Parenthesized(self)))\n    }",
        "start": {
          "row": 191,
          "column": 5
        },
        "end": {
          "row": 193,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "into",
        "start": {
          "row": 191,
          "column": 8
        },
        "end": {
          "row": 191,
          "column": 12
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 191,
          "column": 12
        },
        "end": {
          "row": 191,
          "column": 18
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "self",
        "start": {
          "row": 191,
          "column": 13
        },
        "end": {
          "row": 191,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 191,
          "column": 13
        },
        "end": {
          "row": 191,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<PathParameters>>",
        "start": {
          "row": 191,
          "column": 22
        },
        "end": {
          "row": 191,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 191,
          "column": 22
        },
        "end": {
          "row": 191,
          "column": 28
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<PathParameters>>",
        "start": {
          "row": 191,
          "column": 28
        },
        "end": {
          "row": 191,
          "column": 47
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<PathParameters>",
        "start": {
          "row": 191,
          "column": 29
        },
        "end": {
          "row": 191,
          "column": 46
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 191,
          "column": 29
        },
        "end": {
          "row": 191,
          "column": 30
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<PathParameters>",
        "start": {
          "row": 191,
          "column": 30
        },
        "end": {
          "row": 191,
          "column": 46
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathParameters",
        "start": {
          "row": 191,
          "column": 31
        },
        "end": {
          "row": 191,
          "column": 45
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        Some(P(PathParameters::Parenthesized(self)))\n    }",
        "start": {
          "row": 191,
          "column": 48
        },
        "end": {
          "row": 193,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Some(P(PathParameters::Parenthesized(self)))",
        "start": {
          "row": 192,
          "column": 9
        },
        "end": {
          "row": 192,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 192,
          "column": 9
        },
        "end": {
          "row": 192,
          "column": 13
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(P(PathParameters::Parenthesized(self)))",
        "start": {
          "row": 192,
          "column": 13
        },
        "end": {
          "row": 192,
          "column": 53
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "P(PathParameters::Parenthesized(self))",
        "start": {
          "row": 192,
          "column": 14
        },
        "end": {
          "row": 192,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 192,
          "column": 14
        },
        "end": {
          "row": 192,
          "column": 15
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(PathParameters::Parenthesized(self))",
        "start": {
          "row": 192,
          "column": 15
        },
        "end": {
          "row": 192,
          "column": 52
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "PathParameters::Parenthesized(self)",
        "start": {
          "row": 192,
          "column": 16
        },
        "end": {
          "row": 192,
          "column": 51
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PathParameters::Parenthesized",
        "start": {
          "row": 192,
          "column": 16
        },
        "end": {
          "row": 192,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PathParameters",
        "start": {
          "row": 192,
          "column": 16
        },
        "end": {
          "row": 192,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Parenthesized",
        "start": {
          "row": 192,
          "column": 32
        },
        "end": {
          "row": 192,
          "column": 45
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 192,
          "column": 45
        },
        "end": {
          "row": 192,
          "column": 51
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 192,
          "column": 46
        },
        "end": {
          "row": 192,
          "column": 50
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A path like `Foo(A,B) -> C`",
        "start": {
          "row": 196,
          "column": 1
        },
        "end": {
          "row": 196,
          "column": 32
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 197,
          "column": 1
        },
        "end": {
          "row": 197,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 197,
          "column": 3
        },
        "end": {
          "row": 197,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 197,
          "column": 3
        },
        "end": {
          "row": 197,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 197,
          "column": 9
        },
        "end": {
          "row": 197,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 197,
          "column": 10
        },
        "end": {
          "row": 197,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 197,
          "column": 10
        },
        "end": {
          "row": 197,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 197,
          "column": 17
        },
        "end": {
          "row": 197,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 197,
          "column": 17
        },
        "end": {
          "row": 197,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 197,
          "column": 28
        },
        "end": {
          "row": 197,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 197,
          "column": 28
        },
        "end": {
          "row": 197,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 197,
          "column": 32
        },
        "end": {
          "row": 197,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 197,
          "column": 32
        },
        "end": {
          "row": 197,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 197,
          "column": 48
        },
        "end": {
          "row": 197,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 197,
          "column": 48
        },
        "end": {
          "row": 197,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 197,
          "column": 64
        },
        "end": {
          "row": 197,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 197,
          "column": 64
        },
        "end": {
          "row": 197,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 197,
          "column": 70
        },
        "end": {
          "row": 197,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 197,
          "column": 70
        },
        "end": {
          "row": 197,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct ParenthesizedParameterData {\n    /// Overall span\n    pub span: Span,\n\n    /// `(A,B)`\n    pub inputs: Vec<P<Ty>>,\n\n    /// `C`\n    pub output: Option<P<Ty>>,\n}",
        "start": {
          "row": 198,
          "column": 1
        },
        "end": {
          "row": 207,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 198,
          "column": 1
        },
        "end": {
          "row": 198,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ParenthesizedParameterData",
        "start": {
          "row": 198,
          "column": 12
        },
        "end": {
          "row": 198,
          "column": 38
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    /// Overall span\n    pub span: Span,\n\n    /// `(A,B)`\n    pub inputs: Vec<P<Ty>>,\n\n    /// `C`\n    pub output: Option<P<Ty>>,\n}",
        "start": {
          "row": 198,
          "column": 39
        },
        "end": {
          "row": 207,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Overall span",
        "start": {
          "row": 199,
          "column": 5
        },
        "end": {
          "row": 199,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 200,
          "column": 5
        },
        "end": {
          "row": 200,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 200,
          "column": 5
        },
        "end": {
          "row": 200,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 200,
          "column": 9
        },
        "end": {
          "row": 200,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 200,
          "column": 15
        },
        "end": {
          "row": 200,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `(A,B)`",
        "start": {
          "row": 202,
          "column": 5
        },
        "end": {
          "row": 202,
          "column": 16
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub inputs: Vec<P<Ty>>",
        "start": {
          "row": 203,
          "column": 5
        },
        "end": {
          "row": 203,
          "column": 27
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 203,
          "column": 5
        },
        "end": {
          "row": 203,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "inputs",
        "start": {
          "row": 203,
          "column": 9
        },
        "end": {
          "row": 203,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Ty>>",
        "start": {
          "row": 203,
          "column": 17
        },
        "end": {
          "row": 203,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 203,
          "column": 17
        },
        "end": {
          "row": 203,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Ty>>",
        "start": {
          "row": 203,
          "column": 20
        },
        "end": {
          "row": 203,
          "column": 27
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 203,
          "column": 21
        },
        "end": {
          "row": 203,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 203,
          "column": 21
        },
        "end": {
          "row": 203,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 203,
          "column": 22
        },
        "end": {
          "row": 203,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 203,
          "column": 23
        },
        "end": {
          "row": 203,
          "column": 25
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `C`",
        "start": {
          "row": 205,
          "column": 5
        },
        "end": {
          "row": 205,
          "column": 12
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub output: Option<P<Ty>>",
        "start": {
          "row": 206,
          "column": 5
        },
        "end": {
          "row": 206,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 206,
          "column": 5
        },
        "end": {
          "row": 206,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "output",
        "start": {
          "row": 206,
          "column": 9
        },
        "end": {
          "row": 206,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Ty>>",
        "start": {
          "row": 206,
          "column": 17
        },
        "end": {
          "row": 206,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 206,
          "column": 17
        },
        "end": {
          "row": 206,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Ty>>",
        "start": {
          "row": 206,
          "column": 23
        },
        "end": {
          "row": 206,
          "column": 30
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 206,
          "column": 24
        },
        "end": {
          "row": 206,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 206,
          "column": 24
        },
        "end": {
          "row": 206,
          "column": 25
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 206,
          "column": 25
        },
        "end": {
          "row": 206,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 206,
          "column": 26
        },
        "end": {
          "row": 206,
          "column": 28
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Hash, Debug)]",
        "start": {
          "row": 209,
          "column": 1
        },
        "end": {
          "row": 209,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Hash, Debug)",
        "start": {
          "row": 209,
          "column": 3
        },
        "end": {
          "row": 209,
          "column": 67
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 209,
          "column": 3
        },
        "end": {
          "row": 209,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Hash, Debug)",
        "start": {
          "row": 209,
          "column": 9
        },
        "end": {
          "row": 209,
          "column": 67
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 209,
          "column": 10
        },
        "end": {
          "row": 209,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 209,
          "column": 10
        },
        "end": {
          "row": 209,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 209,
          "column": 17
        },
        "end": {
          "row": 209,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 209,
          "column": 17
        },
        "end": {
          "row": 209,
          "column": 21
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 209,
          "column": 23
        },
        "end": {
          "row": 209,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 209,
          "column": 23
        },
        "end": {
          "row": 209,
          "column": 32
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialOrd",
        "start": {
          "row": 209,
          "column": 34
        },
        "end": {
          "row": 209,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialOrd",
        "start": {
          "row": 209,
          "column": 34
        },
        "end": {
          "row": 209,
          "column": 44
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 209,
          "column": 46
        },
        "end": {
          "row": 209,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 209,
          "column": 46
        },
        "end": {
          "row": 209,
          "column": 48
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Ord",
        "start": {
          "row": 209,
          "column": 50
        },
        "end": {
          "row": 209,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ord",
        "start": {
          "row": 209,
          "column": 50
        },
        "end": {
          "row": 209,
          "column": 53
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 209,
          "column": 55
        },
        "end": {
          "row": 209,
          "column": 59
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 209,
          "column": 55
        },
        "end": {
          "row": 209,
          "column": 59
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 209,
          "column": 61
        },
        "end": {
          "row": 209,
          "column": 66
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 209,
          "column": 61
        },
        "end": {
          "row": 209,
          "column": 66
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct NodeId(u32);",
        "start": {
          "row": 210,
          "column": 1
        },
        "end": {
          "row": 210,
          "column": 24
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 210,
          "column": 1
        },
        "end": {
          "row": 210,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 210,
          "column": 12
        },
        "end": {
          "row": 210,
          "column": 18
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(u32)",
        "start": {
          "row": 210,
          "column": 18
        },
        "end": {
          "row": 210,
          "column": 23
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "u32",
        "start": {
          "row": 210,
          "column": 19
        },
        "end": {
          "row": 210,
          "column": 22
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl NodeId {\n    pub fn new(x: usize) -> NodeId {\n        assert!(x < (u32::MAX as usize));\n        NodeId(x as u32)\n    }\n\n    pub fn from_u32(x: u32) -> NodeId {\n        NodeId(x)\n    }\n\n    pub fn as_usize(&self) -> usize {\n        self.0 as usize\n    }\n\n    pub fn as_u32(&self) -> u32 {\n        self.0\n    }\n\n    pub fn placeholder_from_mark(mark: Mark) -> Self {\n        NodeId(mark.as_u32())\n    }\n\n    pub fn placeholder_to_mark(self) -> Mark {\n        Mark::from_u32(self.0)\n    }\n}",
        "start": {
          "row": 212,
          "column": 1
        },
        "end": {
          "row": 237,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 212,
          "column": 6
        },
        "end": {
          "row": 212,
          "column": 12
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn new(x: usize) -> NodeId {\n        assert!(x < (u32::MAX as usize));\n        NodeId(x as u32)\n    }\n\n    pub fn from_u32(x: u32) -> NodeId {\n        NodeId(x)\n    }\n\n    pub fn as_usize(&self) -> usize {\n        self.0 as usize\n    }\n\n    pub fn as_u32(&self) -> u32 {\n        self.0\n    }\n\n    pub fn placeholder_from_mark(mark: Mark) -> Self {\n        NodeId(mark.as_u32())\n    }\n\n    pub fn placeholder_to_mark(self) -> Mark {\n        Mark::from_u32(self.0)\n    }\n}",
        "start": {
          "row": 212,
          "column": 13
        },
        "end": {
          "row": 237,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn new(x: usize) -> NodeId {\n        assert!(x < (u32::MAX as usize));\n        NodeId(x as u32)\n    }",
        "start": {
          "row": 213,
          "column": 5
        },
        "end": {
          "row": 216,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 213,
          "column": 5
        },
        "end": {
          "row": 213,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 213,
          "column": 12
        },
        "end": {
          "row": 213,
          "column": 15
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(x: usize)",
        "start": {
          "row": 213,
          "column": 15
        },
        "end": {
          "row": 213,
          "column": 25
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "x: usize",
        "start": {
          "row": 213,
          "column": 16
        },
        "end": {
          "row": 213,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "x",
        "start": {
          "row": 213,
          "column": 16
        },
        "end": {
          "row": 213,
          "column": 17
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 213,
          "column": 19
        },
        "end": {
          "row": 213,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 213,
          "column": 29
        },
        "end": {
          "row": 213,
          "column": 35
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        assert!(x < (u32::MAX as usize));\n        NodeId(x as u32)\n    }",
        "start": {
          "row": 213,
          "column": 36
        },
        "end": {
          "row": 216,
          "column": 6
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "assert!(x < (u32::MAX as usize))",
        "start": {
          "row": 214,
          "column": 9
        },
        "end": {
          "row": 214,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "assert",
        "start": {
          "row": 214,
          "column": 9
        },
        "end": {
          "row": 214,
          "column": 15
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(x < (u32::MAX as usize))",
        "start": {
          "row": 214,
          "column": 16
        },
        "end": {
          "row": 214,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "x",
        "start": {
          "row": 214,
          "column": 17
        },
        "end": {
          "row": 214,
          "column": 18
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(u32::MAX as usize)",
        "start": {
          "row": 214,
          "column": 21
        },
        "end": {
          "row": 214,
          "column": 40
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "u32",
        "start": {
          "row": 214,
          "column": 22
        },
        "end": {
          "row": 214,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "MAX",
        "start": {
          "row": 214,
          "column": 27
        },
        "end": {
          "row": 214,
          "column": 30
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 214,
          "column": 34
        },
        "end": {
          "row": 214,
          "column": 39
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "NodeId(x as u32)",
        "start": {
          "row": 215,
          "column": 9
        },
        "end": {
          "row": 215,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 215,
          "column": 9
        },
        "end": {
          "row": 215,
          "column": 15
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(x as u32)",
        "start": {
          "row": 215,
          "column": 15
        },
        "end": {
          "row": 215,
          "column": 25
        }
      },
      {
        "kind": "type_cast_expression",
        "name": "query",
        "text": "x as u32",
        "start": {
          "row": 215,
          "column": 16
        },
        "end": {
          "row": 215,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "x",
        "start": {
          "row": 215,
          "column": 16
        },
        "end": {
          "row": 215,
          "column": 17
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "u32",
        "start": {
          "row": 215,
          "column": 21
        },
        "end": {
          "row": 215,
          "column": 24
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn from_u32(x: u32) -> NodeId {\n        NodeId(x)\n    }",
        "start": {
          "row": 218,
          "column": 5
        },
        "end": {
          "row": 220,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 218,
          "column": 5
        },
        "end": {
          "row": 218,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "from_u32",
        "start": {
          "row": 218,
          "column": 12
        },
        "end": {
          "row": 218,
          "column": 20
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(x: u32)",
        "start": {
          "row": 218,
          "column": 20
        },
        "end": {
          "row": 218,
          "column": 28
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "x: u32",
        "start": {
          "row": 218,
          "column": 21
        },
        "end": {
          "row": 218,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "x",
        "start": {
          "row": 218,
          "column": 21
        },
        "end": {
          "row": 218,
          "column": 22
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "u32",
        "start": {
          "row": 218,
          "column": 24
        },
        "end": {
          "row": 218,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 218,
          "column": 32
        },
        "end": {
          "row": 218,
          "column": 38
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        NodeId(x)\n    }",
        "start": {
          "row": 218,
          "column": 39
        },
        "end": {
          "row": 220,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "NodeId(x)",
        "start": {
          "row": 219,
          "column": 9
        },
        "end": {
          "row": 219,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 219,
          "column": 9
        },
        "end": {
          "row": 219,
          "column": 15
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(x)",
        "start": {
          "row": 219,
          "column": 15
        },
        "end": {
          "row": 219,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "x",
        "start": {
          "row": 219,
          "column": 16
        },
        "end": {
          "row": 219,
          "column": 17
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn as_usize(&self) -> usize {\n        self.0 as usize\n    }",
        "start": {
          "row": 222,
          "column": 5
        },
        "end": {
          "row": 224,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 222,
          "column": 5
        },
        "end": {
          "row": 222,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "as_usize",
        "start": {
          "row": 222,
          "column": 12
        },
        "end": {
          "row": 222,
          "column": 20
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 222,
          "column": 20
        },
        "end": {
          "row": 222,
          "column": 27
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 222,
          "column": 21
        },
        "end": {
          "row": 222,
          "column": 26
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 222,
          "column": 22
        },
        "end": {
          "row": 222,
          "column": 26
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 222,
          "column": 31
        },
        "end": {
          "row": 222,
          "column": 36
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        self.0 as usize\n    }",
        "start": {
          "row": 222,
          "column": 37
        },
        "end": {
          "row": 224,
          "column": 6
        }
      },
      {
        "kind": "type_cast_expression",
        "name": "query",
        "text": "self.0 as usize",
        "start": {
          "row": 223,
          "column": 9
        },
        "end": {
          "row": 223,
          "column": 24
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.0",
        "start": {
          "row": 223,
          "column": 9
        },
        "end": {
          "row": 223,
          "column": 15
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 223,
          "column": 9
        },
        "end": {
          "row": 223,
          "column": 13
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 223,
          "column": 14
        },
        "end": {
          "row": 223,
          "column": 15
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 223,
          "column": 19
        },
        "end": {
          "row": 223,
          "column": 24
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn as_u32(&self) -> u32 {\n        self.0\n    }",
        "start": {
          "row": 226,
          "column": 5
        },
        "end": {
          "row": 228,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 226,
          "column": 5
        },
        "end": {
          "row": 226,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "as_u32",
        "start": {
          "row": 226,
          "column": 12
        },
        "end": {
          "row": 226,
          "column": 18
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 226,
          "column": 18
        },
        "end": {
          "row": 226,
          "column": 25
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 226,
          "column": 19
        },
        "end": {
          "row": 226,
          "column": 24
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 226,
          "column": 20
        },
        "end": {
          "row": 226,
          "column": 24
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "u32",
        "start": {
          "row": 226,
          "column": 29
        },
        "end": {
          "row": 226,
          "column": 32
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        self.0\n    }",
        "start": {
          "row": 226,
          "column": 33
        },
        "end": {
          "row": 228,
          "column": 6
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.0",
        "start": {
          "row": 227,
          "column": 9
        },
        "end": {
          "row": 227,
          "column": 15
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 227,
          "column": 9
        },
        "end": {
          "row": 227,
          "column": 13
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 227,
          "column": 14
        },
        "end": {
          "row": 227,
          "column": 15
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn placeholder_from_mark(mark: Mark) -> Self {\n        NodeId(mark.as_u32())\n    }",
        "start": {
          "row": 230,
          "column": 5
        },
        "end": {
          "row": 232,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 230,
          "column": 5
        },
        "end": {
          "row": 230,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "placeholder_from_mark",
        "start": {
          "row": 230,
          "column": 12
        },
        "end": {
          "row": 230,
          "column": 33
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(mark: Mark)",
        "start": {
          "row": 230,
          "column": 33
        },
        "end": {
          "row": 230,
          "column": 45
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "mark: Mark",
        "start": {
          "row": 230,
          "column": 34
        },
        "end": {
          "row": 230,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mark",
        "start": {
          "row": 230,
          "column": 34
        },
        "end": {
          "row": 230,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mark",
        "start": {
          "row": 230,
          "column": 40
        },
        "end": {
          "row": 230,
          "column": 44
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Self",
        "start": {
          "row": 230,
          "column": 49
        },
        "end": {
          "row": 230,
          "column": 53
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        NodeId(mark.as_u32())\n    }",
        "start": {
          "row": 230,
          "column": 54
        },
        "end": {
          "row": 232,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "NodeId(mark.as_u32())",
        "start": {
          "row": 231,
          "column": 9
        },
        "end": {
          "row": 231,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 231,
          "column": 9
        },
        "end": {
          "row": 231,
          "column": 15
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(mark.as_u32())",
        "start": {
          "row": 231,
          "column": 15
        },
        "end": {
          "row": 231,
          "column": 30
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "mark.as_u32()",
        "start": {
          "row": 231,
          "column": 16
        },
        "end": {
          "row": 231,
          "column": 29
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "mark.as_u32",
        "start": {
          "row": 231,
          "column": 16
        },
        "end": {
          "row": 231,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mark",
        "start": {
          "row": 231,
          "column": 16
        },
        "end": {
          "row": 231,
          "column": 20
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "as_u32",
        "start": {
          "row": 231,
          "column": 21
        },
        "end": {
          "row": 231,
          "column": 27
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 231,
          "column": 27
        },
        "end": {
          "row": 231,
          "column": 29
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn placeholder_to_mark(self) -> Mark {\n        Mark::from_u32(self.0)\n    }",
        "start": {
          "row": 234,
          "column": 5
        },
        "end": {
          "row": 236,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 234,
          "column": 5
        },
        "end": {
          "row": 234,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "placeholder_to_mark",
        "start": {
          "row": 234,
          "column": 12
        },
        "end": {
          "row": 234,
          "column": 31
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 234,
          "column": 31
        },
        "end": {
          "row": 234,
          "column": 37
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "self",
        "start": {
          "row": 234,
          "column": 32
        },
        "end": {
          "row": 234,
          "column": 36
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 234,
          "column": 32
        },
        "end": {
          "row": 234,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mark",
        "start": {
          "row": 234,
          "column": 41
        },
        "end": {
          "row": 234,
          "column": 45
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        Mark::from_u32(self.0)\n    }",
        "start": {
          "row": 234,
          "column": 46
        },
        "end": {
          "row": 236,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Mark::from_u32(self.0)",
        "start": {
          "row": 235,
          "column": 9
        },
        "end": {
          "row": 235,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Mark::from_u32",
        "start": {
          "row": 235,
          "column": 9
        },
        "end": {
          "row": 235,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mark",
        "start": {
          "row": 235,
          "column": 9
        },
        "end": {
          "row": 235,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "from_u32",
        "start": {
          "row": 235,
          "column": 15
        },
        "end": {
          "row": 235,
          "column": 23
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self.0)",
        "start": {
          "row": 235,
          "column": 23
        },
        "end": {
          "row": 235,
          "column": 31
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.0",
        "start": {
          "row": 235,
          "column": 24
        },
        "end": {
          "row": 235,
          "column": 30
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 235,
          "column": 24
        },
        "end": {
          "row": 235,
          "column": 28
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 235,
          "column": 29
        },
        "end": {
          "row": 235,
          "column": 30
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Display for NodeId {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(&self.0, f)\n    }\n}",
        "start": {
          "row": 239,
          "column": 1
        },
        "end": {
          "row": 243,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Display",
        "start": {
          "row": 239,
          "column": 6
        },
        "end": {
          "row": 239,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 239,
          "column": 6
        },
        "end": {
          "row": 239,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Display",
        "start": {
          "row": 239,
          "column": 11
        },
        "end": {
          "row": 239,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 239,
          "column": 23
        },
        "end": {
          "row": 239,
          "column": 29
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(&self.0, f)\n    }\n}",
        "start": {
          "row": 239,
          "column": 30
        },
        "end": {
          "row": 243,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(&self.0, f)\n    }",
        "start": {
          "row": 240,
          "column": 5
        },
        "end": {
          "row": 242,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 240,
          "column": 8
        },
        "end": {
          "row": 240,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 240,
          "column": 11
        },
        "end": {
          "row": 240,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 240,
          "column": 12
        },
        "end": {
          "row": 240,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 240,
          "column": 13
        },
        "end": {
          "row": 240,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 240,
          "column": 19
        },
        "end": {
          "row": 240,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 240,
          "column": 19
        },
        "end": {
          "row": 240,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 240,
          "column": 22
        },
        "end": {
          "row": 240,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 240,
          "column": 23
        },
        "end": {
          "row": 240,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 240,
          "column": 27
        },
        "end": {
          "row": 240,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 240,
          "column": 27
        },
        "end": {
          "row": 240,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 240,
          "column": 32
        },
        "end": {
          "row": 240,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 240,
          "column": 46
        },
        "end": {
          "row": 240,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 240,
          "column": 46
        },
        "end": {
          "row": 240,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 240,
          "column": 51
        },
        "end": {
          "row": 240,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        fmt::Display::fmt(&self.0, f)\n    }",
        "start": {
          "row": 240,
          "column": 58
        },
        "end": {
          "row": 242,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "fmt::Display::fmt(&self.0, f)",
        "start": {
          "row": 241,
          "column": 9
        },
        "end": {
          "row": 241,
          "column": 38
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "fmt::Display::fmt",
        "start": {
          "row": 241,
          "column": 9
        },
        "end": {
          "row": 241,
          "column": 26
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "fmt::Display",
        "start": {
          "row": 241,
          "column": 9
        },
        "end": {
          "row": 241,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 241,
          "column": 9
        },
        "end": {
          "row": 241,
          "column": 12
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Display",
        "start": {
          "row": 241,
          "column": 14
        },
        "end": {
          "row": 241,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 241,
          "column": 23
        },
        "end": {
          "row": 241,
          "column": 26
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(&self.0, f)",
        "start": {
          "row": 241,
          "column": 26
        },
        "end": {
          "row": 241,
          "column": 38
        }
      },
      {
        "kind": "reference_expression",
        "name": "query",
        "text": "&self.0",
        "start": {
          "row": 241,
          "column": 27
        },
        "end": {
          "row": 241,
          "column": 34
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.0",
        "start": {
          "row": 241,
          "column": 28
        },
        "end": {
          "row": 241,
          "column": 34
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 241,
          "column": 28
        },
        "end": {
          "row": 241,
          "column": 32
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 241,
          "column": 33
        },
        "end": {
          "row": 241,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 241,
          "column": 36
        },
        "end": {
          "row": 241,
          "column": 37
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl serialize::UseSpecializedEncodable for NodeId {\n    fn default_encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n        s.emit_u32(self.0)\n    }\n}",
        "start": {
          "row": 245,
          "column": 1
        },
        "end": {
          "row": 249,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "serialize::UseSpecializedEncodable",
        "start": {
          "row": 245,
          "column": 6
        },
        "end": {
          "row": 245,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "serialize",
        "start": {
          "row": 245,
          "column": 6
        },
        "end": {
          "row": 245,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UseSpecializedEncodable",
        "start": {
          "row": 245,
          "column": 17
        },
        "end": {
          "row": 245,
          "column": 40
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 245,
          "column": 45
        },
        "end": {
          "row": 245,
          "column": 51
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn default_encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n        s.emit_u32(self.0)\n    }\n}",
        "start": {
          "row": 245,
          "column": 52
        },
        "end": {
          "row": 249,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn default_encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n        s.emit_u32(self.0)\n    }",
        "start": {
          "row": 246,
          "column": 5
        },
        "end": {
          "row": 248,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "default_encode",
        "start": {
          "row": 246,
          "column": 8
        },
        "end": {
          "row": 246,
          "column": 22
        }
      },
      {
        "kind": "type_parameters",
        "name": "query",
        "text": "<S: Encoder>",
        "start": {
          "row": 246,
          "column": 22
        },
        "end": {
          "row": 246,
          "column": 34
        }
      },
      {
        "kind": "constrained_type_parameter",
        "name": "query",
        "text": "S: Encoder",
        "start": {
          "row": 246,
          "column": 23
        },
        "end": {
          "row": 246,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "S",
        "start": {
          "row": 246,
          "column": 23
        },
        "end": {
          "row": 246,
          "column": 24
        }
      },
      {
        "kind": "trait_bounds",
        "name": "query",
        "text": ": Encoder",
        "start": {
          "row": 246,
          "column": 24
        },
        "end": {
          "row": 246,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Encoder",
        "start": {
          "row": 246,
          "column": 26
        },
        "end": {
          "row": 246,
          "column": 33
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, s: &mut S)",
        "start": {
          "row": 246,
          "column": 34
        },
        "end": {
          "row": 246,
          "column": 52
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 246,
          "column": 35
        },
        "end": {
          "row": 246,
          "column": 40
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 246,
          "column": 36
        },
        "end": {
          "row": 246,
          "column": 40
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "s: &mut S",
        "start": {
          "row": 246,
          "column": 42
        },
        "end": {
          "row": 246,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "s",
        "start": {
          "row": 246,
          "column": 42
        },
        "end": {
          "row": 246,
          "column": 43
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut S",
        "start": {
          "row": 246,
          "column": 45
        },
        "end": {
          "row": 246,
          "column": 51
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 246,
          "column": 46
        },
        "end": {
          "row": 246,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "S",
        "start": {
          "row": 246,
          "column": 50
        },
        "end": {
          "row": 246,
          "column": 51
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Result<(), S::Error>",
        "start": {
          "row": 246,
          "column": 56
        },
        "end": {
          "row": 246,
          "column": 76
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 246,
          "column": 56
        },
        "end": {
          "row": 246,
          "column": 62
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<(), S::Error>",
        "start": {
          "row": 246,
          "column": 62
        },
        "end": {
          "row": 246,
          "column": 76
        }
      },
      {
        "kind": "unit_type",
        "name": "query",
        "text": "()",
        "start": {
          "row": 246,
          "column": 63
        },
        "end": {
          "row": 246,
          "column": 65
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "S::Error",
        "start": {
          "row": 246,
          "column": 67
        },
        "end": {
          "row": 246,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "S",
        "start": {
          "row": 246,
          "column": 67
        },
        "end": {
          "row": 246,
          "column": 68
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Error",
        "start": {
          "row": 246,
          "column": 70
        },
        "end": {
          "row": 246,
          "column": 75
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        s.emit_u32(self.0)\n    }",
        "start": {
          "row": 246,
          "column": 77
        },
        "end": {
          "row": 248,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "s.emit_u32(self.0)",
        "start": {
          "row": 247,
          "column": 9
        },
        "end": {
          "row": 247,
          "column": 27
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "s.emit_u32",
        "start": {
          "row": 247,
          "column": 9
        },
        "end": {
          "row": 247,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "s",
        "start": {
          "row": 247,
          "column": 9
        },
        "end": {
          "row": 247,
          "column": 10
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "emit_u32",
        "start": {
          "row": 247,
          "column": 11
        },
        "end": {
          "row": 247,
          "column": 19
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self.0)",
        "start": {
          "row": 247,
          "column": 19
        },
        "end": {
          "row": 247,
          "column": 27
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.0",
        "start": {
          "row": 247,
          "column": 20
        },
        "end": {
          "row": 247,
          "column": 26
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 247,
          "column": 20
        },
        "end": {
          "row": 247,
          "column": 24
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 247,
          "column": 25
        },
        "end": {
          "row": 247,
          "column": 26
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl serialize::UseSpecializedDecodable for NodeId {\n    fn default_decode<D: Decoder>(d: &mut D) -> Result<NodeId, D::Error> {\n        d.read_u32().map(NodeId)\n    }\n}",
        "start": {
          "row": 251,
          "column": 1
        },
        "end": {
          "row": 255,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "serialize::UseSpecializedDecodable",
        "start": {
          "row": 251,
          "column": 6
        },
        "end": {
          "row": 251,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "serialize",
        "start": {
          "row": 251,
          "column": 6
        },
        "end": {
          "row": 251,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UseSpecializedDecodable",
        "start": {
          "row": 251,
          "column": 17
        },
        "end": {
          "row": 251,
          "column": 40
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 251,
          "column": 45
        },
        "end": {
          "row": 251,
          "column": 51
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn default_decode<D: Decoder>(d: &mut D) -> Result<NodeId, D::Error> {\n        d.read_u32().map(NodeId)\n    }\n}",
        "start": {
          "row": 251,
          "column": 52
        },
        "end": {
          "row": 255,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn default_decode<D: Decoder>(d: &mut D) -> Result<NodeId, D::Error> {\n        d.read_u32().map(NodeId)\n    }",
        "start": {
          "row": 252,
          "column": 5
        },
        "end": {
          "row": 254,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "default_decode",
        "start": {
          "row": 252,
          "column": 8
        },
        "end": {
          "row": 252,
          "column": 22
        }
      },
      {
        "kind": "type_parameters",
        "name": "query",
        "text": "<D: Decoder>",
        "start": {
          "row": 252,
          "column": 22
        },
        "end": {
          "row": 252,
          "column": 34
        }
      },
      {
        "kind": "constrained_type_parameter",
        "name": "query",
        "text": "D: Decoder",
        "start": {
          "row": 252,
          "column": 23
        },
        "end": {
          "row": 252,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "D",
        "start": {
          "row": 252,
          "column": 23
        },
        "end": {
          "row": 252,
          "column": 24
        }
      },
      {
        "kind": "trait_bounds",
        "name": "query",
        "text": ": Decoder",
        "start": {
          "row": 252,
          "column": 24
        },
        "end": {
          "row": 252,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Decoder",
        "start": {
          "row": 252,
          "column": 26
        },
        "end": {
          "row": 252,
          "column": 33
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(d: &mut D)",
        "start": {
          "row": 252,
          "column": 34
        },
        "end": {
          "row": 252,
          "column": 45
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "d: &mut D",
        "start": {
          "row": 252,
          "column": 35
        },
        "end": {
          "row": 252,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "d",
        "start": {
          "row": 252,
          "column": 35
        },
        "end": {
          "row": 252,
          "column": 36
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut D",
        "start": {
          "row": 252,
          "column": 38
        },
        "end": {
          "row": 252,
          "column": 44
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 252,
          "column": 39
        },
        "end": {
          "row": 252,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "D",
        "start": {
          "row": 252,
          "column": 43
        },
        "end": {
          "row": 252,
          "column": 44
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Result<NodeId, D::Error>",
        "start": {
          "row": 252,
          "column": 49
        },
        "end": {
          "row": 252,
          "column": 73
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 252,
          "column": 49
        },
        "end": {
          "row": 252,
          "column": 55
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<NodeId, D::Error>",
        "start": {
          "row": 252,
          "column": 55
        },
        "end": {
          "row": 252,
          "column": 73
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 252,
          "column": 56
        },
        "end": {
          "row": 252,
          "column": 62
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "D::Error",
        "start": {
          "row": 252,
          "column": 64
        },
        "end": {
          "row": 252,
          "column": 72
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "D",
        "start": {
          "row": 252,
          "column": 64
        },
        "end": {
          "row": 252,
          "column": 65
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Error",
        "start": {
          "row": 252,
          "column": 67
        },
        "end": {
          "row": 252,
          "column": 72
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        d.read_u32().map(NodeId)\n    }",
        "start": {
          "row": 252,
          "column": 74
        },
        "end": {
          "row": 254,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "d.read_u32().map(NodeId)",
        "start": {
          "row": 253,
          "column": 9
        },
        "end": {
          "row": 253,
          "column": 33
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "d.read_u32().map",
        "start": {
          "row": 253,
          "column": 9
        },
        "end": {
          "row": 253,
          "column": 25
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "d.read_u32()",
        "start": {
          "row": 253,
          "column": 9
        },
        "end": {
          "row": 253,
          "column": 21
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "d.read_u32",
        "start": {
          "row": 253,
          "column": 9
        },
        "end": {
          "row": 253,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "d",
        "start": {
          "row": 253,
          "column": 9
        },
        "end": {
          "row": 253,
          "column": 10
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "read_u32",
        "start": {
          "row": 253,
          "column": 11
        },
        "end": {
          "row": 253,
          "column": 19
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 253,
          "column": 19
        },
        "end": {
          "row": 253,
          "column": 21
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "map",
        "start": {
          "row": 253,
          "column": 22
        },
        "end": {
          "row": 253,
          "column": 25
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(NodeId)",
        "start": {
          "row": 253,
          "column": 25
        },
        "end": {
          "row": 253,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 253,
          "column": 26
        },
        "end": {
          "row": 253,
          "column": 32
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl indexed_vec::Idx for NodeId {\n    fn new(idx: usize) -> Self {\n        NodeId::new(idx)\n    }\n\n    fn index(self) -> usize {\n        self.as_usize()\n    }\n}",
        "start": {
          "row": 257,
          "column": 1
        },
        "end": {
          "row": 265,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "indexed_vec::Idx",
        "start": {
          "row": 257,
          "column": 6
        },
        "end": {
          "row": 257,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "indexed_vec",
        "start": {
          "row": 257,
          "column": 6
        },
        "end": {
          "row": 257,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Idx",
        "start": {
          "row": 257,
          "column": 19
        },
        "end": {
          "row": 257,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 257,
          "column": 27
        },
        "end": {
          "row": 257,
          "column": 33
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn new(idx: usize) -> Self {\n        NodeId::new(idx)\n    }\n\n    fn index(self) -> usize {\n        self.as_usize()\n    }\n}",
        "start": {
          "row": 257,
          "column": 34
        },
        "end": {
          "row": 265,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn new(idx: usize) -> Self {\n        NodeId::new(idx)\n    }",
        "start": {
          "row": 258,
          "column": 5
        },
        "end": {
          "row": 260,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 258,
          "column": 8
        },
        "end": {
          "row": 258,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(idx: usize)",
        "start": {
          "row": 258,
          "column": 11
        },
        "end": {
          "row": 258,
          "column": 23
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "idx: usize",
        "start": {
          "row": 258,
          "column": 12
        },
        "end": {
          "row": 258,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "idx",
        "start": {
          "row": 258,
          "column": 12
        },
        "end": {
          "row": 258,
          "column": 15
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 258,
          "column": 17
        },
        "end": {
          "row": 258,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Self",
        "start": {
          "row": 258,
          "column": 27
        },
        "end": {
          "row": 258,
          "column": 31
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        NodeId::new(idx)\n    }",
        "start": {
          "row": 258,
          "column": 32
        },
        "end": {
          "row": 260,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "NodeId::new(idx)",
        "start": {
          "row": 259,
          "column": 9
        },
        "end": {
          "row": 259,
          "column": 25
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "NodeId::new",
        "start": {
          "row": 259,
          "column": 9
        },
        "end": {
          "row": 259,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 259,
          "column": 9
        },
        "end": {
          "row": 259,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 259,
          "column": 17
        },
        "end": {
          "row": 259,
          "column": 20
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(idx)",
        "start": {
          "row": 259,
          "column": 20
        },
        "end": {
          "row": 259,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "idx",
        "start": {
          "row": 259,
          "column": 21
        },
        "end": {
          "row": 259,
          "column": 24
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn index(self) -> usize {\n        self.as_usize()\n    }",
        "start": {
          "row": 262,
          "column": 5
        },
        "end": {
          "row": 264,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "index",
        "start": {
          "row": 262,
          "column": 8
        },
        "end": {
          "row": 262,
          "column": 13
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 262,
          "column": 13
        },
        "end": {
          "row": 262,
          "column": 19
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "self",
        "start": {
          "row": 262,
          "column": 14
        },
        "end": {
          "row": 262,
          "column": 18
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 262,
          "column": 14
        },
        "end": {
          "row": 262,
          "column": 18
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 262,
          "column": 23
        },
        "end": {
          "row": 262,
          "column": 28
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        self.as_usize()\n    }",
        "start": {
          "row": 262,
          "column": 29
        },
        "end": {
          "row": 264,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.as_usize()",
        "start": {
          "row": 263,
          "column": 9
        },
        "end": {
          "row": 263,
          "column": 24
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.as_usize",
        "start": {
          "row": 263,
          "column": 9
        },
        "end": {
          "row": 263,
          "column": 22
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 263,
          "column": 9
        },
        "end": {
          "row": 263,
          "column": 13
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "as_usize",
        "start": {
          "row": 263,
          "column": 14
        },
        "end": {
          "row": 263,
          "column": 22
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 263,
          "column": 22
        },
        "end": {
          "row": 263,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Node id used to represent the root of the crate.",
        "start": {
          "row": 267,
          "column": 1
        },
        "end": {
          "row": 267,
          "column": 53
        }
      },
      {
        "kind": "const_item",
        "name": "query",
        "text": "pub const CRATE_NODE_ID: NodeId = NodeId(0);",
        "start": {
          "row": 268,
          "column": 1
        },
        "end": {
          "row": 268,
          "column": 45
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 268,
          "column": 1
        },
        "end": {
          "row": 268,
          "column": 4
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "CRATE_NODE_ID",
        "start": {
          "row": 268,
          "column": 11
        },
        "end": {
          "row": 268,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 268,
          "column": 26
        },
        "end": {
          "row": 268,
          "column": 32
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "NodeId(0)",
        "start": {
          "row": 268,
          "column": 35
        },
        "end": {
          "row": 268,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 268,
          "column": 35
        },
        "end": {
          "row": 268,
          "column": 41
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(0)",
        "start": {
          "row": 268,
          "column": 41
        },
        "end": {
          "row": 268,
          "column": 44
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 268,
          "column": 42
        },
        "end": {
          "row": 268,
          "column": 43
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// When parsing and doing expansions, we initially give all AST nodes this AST",
        "start": {
          "row": 270,
          "column": 1
        },
        "end": {
          "row": 270,
          "column": 80
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// node value. Then later, in the renumber pass, we renumber them to have",
        "start": {
          "row": 271,
          "column": 1
        },
        "end": {
          "row": 271,
          "column": 75
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// small, positive ids.",
        "start": {
          "row": 272,
          "column": 1
        },
        "end": {
          "row": 272,
          "column": 25
        }
      },
      {
        "kind": "const_item",
        "name": "query",
        "text": "pub const DUMMY_NODE_ID: NodeId = NodeId(!0);",
        "start": {
          "row": 273,
          "column": 1
        },
        "end": {
          "row": 273,
          "column": 46
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 273,
          "column": 1
        },
        "end": {
          "row": 273,
          "column": 4
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "DUMMY_NODE_ID",
        "start": {
          "row": 273,
          "column": 11
        },
        "end": {
          "row": 273,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 273,
          "column": 26
        },
        "end": {
          "row": 273,
          "column": 32
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "NodeId(!0)",
        "start": {
          "row": 273,
          "column": 35
        },
        "end": {
          "row": 273,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 273,
          "column": 35
        },
        "end": {
          "row": 273,
          "column": 41
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(!0)",
        "start": {
          "row": 273,
          "column": 41
        },
        "end": {
          "row": 273,
          "column": 45
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "!0",
        "start": {
          "row": 273,
          "column": 42
        },
        "end": {
          "row": 273,
          "column": 44
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 273,
          "column": 43
        },
        "end": {
          "row": 273,
          "column": 44
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The AST represents all type param bounds as types.",
        "start": {
          "row": 275,
          "column": 1
        },
        "end": {
          "row": 275,
          "column": 55
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// typeck::collect::compute_bounds matches these against",
        "start": {
          "row": 276,
          "column": 1
        },
        "end": {
          "row": 276,
          "column": 58
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// the \"special\" built-in traits (see middle::lang_items) and",
        "start": {
          "row": 277,
          "column": 1
        },
        "end": {
          "row": 277,
          "column": 63
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// detects Copy, Send and Sync.",
        "start": {
          "row": 278,
          "column": 1
        },
        "end": {
          "row": 278,
          "column": 33
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 279,
          "column": 1
        },
        "end": {
          "row": 279,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 279,
          "column": 3
        },
        "end": {
          "row": 279,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 279,
          "column": 3
        },
        "end": {
          "row": 279,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 279,
          "column": 9
        },
        "end": {
          "row": 279,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 279,
          "column": 10
        },
        "end": {
          "row": 279,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 279,
          "column": 10
        },
        "end": {
          "row": 279,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 279,
          "column": 17
        },
        "end": {
          "row": 279,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 279,
          "column": 17
        },
        "end": {
          "row": 279,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 279,
          "column": 28
        },
        "end": {
          "row": 279,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 279,
          "column": 28
        },
        "end": {
          "row": 279,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 279,
          "column": 32
        },
        "end": {
          "row": 279,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 279,
          "column": 32
        },
        "end": {
          "row": 279,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 279,
          "column": 48
        },
        "end": {
          "row": 279,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 279,
          "column": 48
        },
        "end": {
          "row": 279,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 279,
          "column": 64
        },
        "end": {
          "row": 279,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 279,
          "column": 64
        },
        "end": {
          "row": 279,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 279,
          "column": 70
        },
        "end": {
          "row": 279,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 279,
          "column": 70
        },
        "end": {
          "row": 279,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum TyParamBound {\n    TraitTyParamBound(PolyTraitRef, TraitBoundModifier),\n    RegionTyParamBound(Lifetime)\n}",
        "start": {
          "row": 280,
          "column": 1
        },
        "end": {
          "row": 283,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 280,
          "column": 1
        },
        "end": {
          "row": 280,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParamBound",
        "start": {
          "row": 280,
          "column": 10
        },
        "end": {
          "row": 280,
          "column": 22
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    TraitTyParamBound(PolyTraitRef, TraitBoundModifier),\n    RegionTyParamBound(Lifetime)\n}",
        "start": {
          "row": 280,
          "column": 23
        },
        "end": {
          "row": 283,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "TraitTyParamBound(PolyTraitRef, TraitBoundModifier)",
        "start": {
          "row": 281,
          "column": 5
        },
        "end": {
          "row": 281,
          "column": 56
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TraitTyParamBound",
        "start": {
          "row": 281,
          "column": 5
        },
        "end": {
          "row": 281,
          "column": 22
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(PolyTraitRef, TraitBoundModifier)",
        "start": {
          "row": 281,
          "column": 22
        },
        "end": {
          "row": 281,
          "column": 56
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PolyTraitRef",
        "start": {
          "row": 281,
          "column": 23
        },
        "end": {
          "row": 281,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TraitBoundModifier",
        "start": {
          "row": 281,
          "column": 37
        },
        "end": {
          "row": 281,
          "column": 55
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "RegionTyParamBound(Lifetime)",
        "start": {
          "row": 282,
          "column": 5
        },
        "end": {
          "row": 282,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RegionTyParamBound",
        "start": {
          "row": 282,
          "column": 5
        },
        "end": {
          "row": 282,
          "column": 23
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Lifetime)",
        "start": {
          "row": 282,
          "column": 23
        },
        "end": {
          "row": 282,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lifetime",
        "start": {
          "row": 282,
          "column": 24
        },
        "end": {
          "row": 282,
          "column": 32
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A modifier on a bound, currently this is only used for `?Sized`, where the",
        "start": {
          "row": 285,
          "column": 1
        },
        "end": {
          "row": 285,
          "column": 79
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// modifier is `Maybe`. Negative bounds should also be handled here.",
        "start": {
          "row": 286,
          "column": 1
        },
        "end": {
          "row": 286,
          "column": 70
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 287,
          "column": 1
        },
        "end": {
          "row": 287,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 287,
          "column": 3
        },
        "end": {
          "row": 287,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 287,
          "column": 3
        },
        "end": {
          "row": 287,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 287,
          "column": 9
        },
        "end": {
          "row": 287,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 287,
          "column": 10
        },
        "end": {
          "row": 287,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 287,
          "column": 10
        },
        "end": {
          "row": 287,
          "column": 14
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 287,
          "column": 16
        },
        "end": {
          "row": 287,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 287,
          "column": 16
        },
        "end": {
          "row": 287,
          "column": 21
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 287,
          "column": 23
        },
        "end": {
          "row": 287,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 287,
          "column": 23
        },
        "end": {
          "row": 287,
          "column": 32
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 287,
          "column": 34
        },
        "end": {
          "row": 287,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 287,
          "column": 34
        },
        "end": {
          "row": 287,
          "column": 36
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 287,
          "column": 38
        },
        "end": {
          "row": 287,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 287,
          "column": 38
        },
        "end": {
          "row": 287,
          "column": 52
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 287,
          "column": 54
        },
        "end": {
          "row": 287,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 287,
          "column": 54
        },
        "end": {
          "row": 287,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 287,
          "column": 70
        },
        "end": {
          "row": 287,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 287,
          "column": 70
        },
        "end": {
          "row": 287,
          "column": 74
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 287,
          "column": 76
        },
        "end": {
          "row": 287,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 287,
          "column": 76
        },
        "end": {
          "row": 287,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum TraitBoundModifier {\n    None,\n    Maybe,\n}",
        "start": {
          "row": 288,
          "column": 1
        },
        "end": {
          "row": 291,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 288,
          "column": 1
        },
        "end": {
          "row": 288,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TraitBoundModifier",
        "start": {
          "row": 288,
          "column": 10
        },
        "end": {
          "row": 288,
          "column": 28
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    None,\n    Maybe,\n}",
        "start": {
          "row": 288,
          "column": 29
        },
        "end": {
          "row": 291,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "None",
        "start": {
          "row": 289,
          "column": 5
        },
        "end": {
          "row": 289,
          "column": 9
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 289,
          "column": 5
        },
        "end": {
          "row": 289,
          "column": 9
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Maybe",
        "start": {
          "row": 290,
          "column": 5
        },
        "end": {
          "row": 290,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Maybe",
        "start": {
          "row": 290,
          "column": 5
        },
        "end": {
          "row": 290,
          "column": 10
        }
      },
      {
        "kind": "type_item",
        "name": "query",
        "text": "pub type TyParamBounds = Vec<TyParamBound>;",
        "start": {
          "row": 293,
          "column": 1
        },
        "end": {
          "row": 293,
          "column": 44
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 293,
          "column": 1
        },
        "end": {
          "row": 293,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParamBounds",
        "start": {
          "row": 293,
          "column": 10
        },
        "end": {
          "row": 293,
          "column": 23
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<TyParamBound>",
        "start": {
          "row": 293,
          "column": 26
        },
        "end": {
          "row": 293,
          "column": 43
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 293,
          "column": 26
        },
        "end": {
          "row": 293,
          "column": 29
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<TyParamBound>",
        "start": {
          "row": 293,
          "column": 29
        },
        "end": {
          "row": 293,
          "column": 43
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParamBound",
        "start": {
          "row": 293,
          "column": 30
        },
        "end": {
          "row": 293,
          "column": 42
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 295,
          "column": 1
        },
        "end": {
          "row": 295,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 295,
          "column": 3
        },
        "end": {
          "row": 295,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 295,
          "column": 3
        },
        "end": {
          "row": 295,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 295,
          "column": 9
        },
        "end": {
          "row": 295,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 295,
          "column": 10
        },
        "end": {
          "row": 295,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 295,
          "column": 10
        },
        "end": {
          "row": 295,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 295,
          "column": 17
        },
        "end": {
          "row": 295,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 295,
          "column": 17
        },
        "end": {
          "row": 295,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 295,
          "column": 28
        },
        "end": {
          "row": 295,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 295,
          "column": 28
        },
        "end": {
          "row": 295,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 295,
          "column": 32
        },
        "end": {
          "row": 295,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 295,
          "column": 32
        },
        "end": {
          "row": 295,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 295,
          "column": 48
        },
        "end": {
          "row": 295,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 295,
          "column": 48
        },
        "end": {
          "row": 295,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 295,
          "column": 64
        },
        "end": {
          "row": 295,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 295,
          "column": 64
        },
        "end": {
          "row": 295,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 295,
          "column": 70
        },
        "end": {
          "row": 295,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 295,
          "column": 70
        },
        "end": {
          "row": 295,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct TyParam {\n    pub attrs: ThinVec<Attribute>,\n    pub ident: Ident,\n    pub id: NodeId,\n    pub bounds: TyParamBounds,\n    pub default: Option<P<Ty>>,\n    pub span: Span,\n}",
        "start": {
          "row": 296,
          "column": 1
        },
        "end": {
          "row": 303,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 296,
          "column": 1
        },
        "end": {
          "row": 296,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParam",
        "start": {
          "row": 296,
          "column": 12
        },
        "end": {
          "row": 296,
          "column": 19
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub attrs: ThinVec<Attribute>,\n    pub ident: Ident,\n    pub id: NodeId,\n    pub bounds: TyParamBounds,\n    pub default: Option<P<Ty>>,\n    pub span: Span,\n}",
        "start": {
          "row": 296,
          "column": 20
        },
        "end": {
          "row": 303,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: ThinVec<Attribute>",
        "start": {
          "row": 297,
          "column": 5
        },
        "end": {
          "row": 297,
          "column": 34
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 297,
          "column": 5
        },
        "end": {
          "row": 297,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 297,
          "column": 9
        },
        "end": {
          "row": 297,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "ThinVec<Attribute>",
        "start": {
          "row": 297,
          "column": 16
        },
        "end": {
          "row": 297,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ThinVec",
        "start": {
          "row": 297,
          "column": 16
        },
        "end": {
          "row": 297,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 297,
          "column": 23
        },
        "end": {
          "row": 297,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 297,
          "column": 24
        },
        "end": {
          "row": 297,
          "column": 33
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ident: Ident",
        "start": {
          "row": 298,
          "column": 5
        },
        "end": {
          "row": 298,
          "column": 21
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 298,
          "column": 5
        },
        "end": {
          "row": 298,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 298,
          "column": 9
        },
        "end": {
          "row": 298,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 298,
          "column": 16
        },
        "end": {
          "row": 298,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 299,
          "column": 5
        },
        "end": {
          "row": 299,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 299,
          "column": 5
        },
        "end": {
          "row": 299,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 299,
          "column": 9
        },
        "end": {
          "row": 299,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 299,
          "column": 13
        },
        "end": {
          "row": 299,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub bounds: TyParamBounds",
        "start": {
          "row": 300,
          "column": 5
        },
        "end": {
          "row": 300,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 300,
          "column": 5
        },
        "end": {
          "row": 300,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "bounds",
        "start": {
          "row": 300,
          "column": 9
        },
        "end": {
          "row": 300,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParamBounds",
        "start": {
          "row": 300,
          "column": 17
        },
        "end": {
          "row": 300,
          "column": 30
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub default: Option<P<Ty>>",
        "start": {
          "row": 301,
          "column": 5
        },
        "end": {
          "row": 301,
          "column": 31
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 301,
          "column": 5
        },
        "end": {
          "row": 301,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "default",
        "start": {
          "row": 301,
          "column": 9
        },
        "end": {
          "row": 301,
          "column": 16
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Ty>>",
        "start": {
          "row": 301,
          "column": 18
        },
        "end": {
          "row": 301,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 301,
          "column": 18
        },
        "end": {
          "row": 301,
          "column": 24
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Ty>>",
        "start": {
          "row": 301,
          "column": 24
        },
        "end": {
          "row": 301,
          "column": 31
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 301,
          "column": 25
        },
        "end": {
          "row": 301,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 301,
          "column": 25
        },
        "end": {
          "row": 301,
          "column": 26
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 301,
          "column": 26
        },
        "end": {
          "row": 301,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 301,
          "column": 27
        },
        "end": {
          "row": 301,
          "column": 29
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 302,
          "column": 5
        },
        "end": {
          "row": 302,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 302,
          "column": 5
        },
        "end": {
          "row": 302,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 302,
          "column": 9
        },
        "end": {
          "row": 302,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 302,
          "column": 15
        },
        "end": {
          "row": 302,
          "column": 19
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 305,
          "column": 1
        },
        "end": {
          "row": 305,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 305,
          "column": 3
        },
        "end": {
          "row": 305,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 305,
          "column": 3
        },
        "end": {
          "row": 305,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 305,
          "column": 9
        },
        "end": {
          "row": 305,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 305,
          "column": 10
        },
        "end": {
          "row": 305,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 305,
          "column": 10
        },
        "end": {
          "row": 305,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 305,
          "column": 17
        },
        "end": {
          "row": 305,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 305,
          "column": 17
        },
        "end": {
          "row": 305,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 305,
          "column": 28
        },
        "end": {
          "row": 305,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 305,
          "column": 28
        },
        "end": {
          "row": 305,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 305,
          "column": 32
        },
        "end": {
          "row": 305,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 305,
          "column": 32
        },
        "end": {
          "row": 305,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 305,
          "column": 48
        },
        "end": {
          "row": 305,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 305,
          "column": 48
        },
        "end": {
          "row": 305,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 305,
          "column": 64
        },
        "end": {
          "row": 305,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 305,
          "column": 64
        },
        "end": {
          "row": 305,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 305,
          "column": 70
        },
        "end": {
          "row": 305,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 305,
          "column": 70
        },
        "end": {
          "row": 305,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum GenericParam {\n    Lifetime(LifetimeDef),\n    Type(TyParam),\n}",
        "start": {
          "row": 306,
          "column": 1
        },
        "end": {
          "row": 309,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 306,
          "column": 1
        },
        "end": {
          "row": 306,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "GenericParam",
        "start": {
          "row": 306,
          "column": 10
        },
        "end": {
          "row": 306,
          "column": 22
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Lifetime(LifetimeDef),\n    Type(TyParam),\n}",
        "start": {
          "row": 306,
          "column": 23
        },
        "end": {
          "row": 309,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Lifetime(LifetimeDef)",
        "start": {
          "row": 307,
          "column": 5
        },
        "end": {
          "row": 307,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Lifetime",
        "start": {
          "row": 307,
          "column": 5
        },
        "end": {
          "row": 307,
          "column": 13
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(LifetimeDef)",
        "start": {
          "row": 307,
          "column": 13
        },
        "end": {
          "row": 307,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "LifetimeDef",
        "start": {
          "row": 307,
          "column": 14
        },
        "end": {
          "row": 307,
          "column": 25
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Type(TyParam)",
        "start": {
          "row": 308,
          "column": 5
        },
        "end": {
          "row": 308,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Type",
        "start": {
          "row": 308,
          "column": 5
        },
        "end": {
          "row": 308,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(TyParam)",
        "start": {
          "row": 308,
          "column": 9
        },
        "end": {
          "row": 308,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParam",
        "start": {
          "row": 308,
          "column": 10
        },
        "end": {
          "row": 308,
          "column": 17
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl GenericParam {\n    pub fn is_lifetime_param(&self) -> bool {\n        match *self {\n            GenericParam::Lifetime(_) => true,\n            _ => false,\n        }\n    }\n\n    pub fn is_type_param(&self) -> bool {\n        match *self {\n            GenericParam::Type(_) => true,\n            _ => false,\n        }\n    }\n}",
        "start": {
          "row": 311,
          "column": 1
        },
        "end": {
          "row": 325,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "GenericParam",
        "start": {
          "row": 311,
          "column": 6
        },
        "end": {
          "row": 311,
          "column": 18
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn is_lifetime_param(&self) -> bool {\n        match *self {\n            GenericParam::Lifetime(_) => true,\n            _ => false,\n        }\n    }\n\n    pub fn is_type_param(&self) -> bool {\n        match *self {\n            GenericParam::Type(_) => true,\n            _ => false,\n        }\n    }\n}",
        "start": {
          "row": 311,
          "column": 19
        },
        "end": {
          "row": 325,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_lifetime_param(&self) -> bool {\n        match *self {\n            GenericParam::Lifetime(_) => true,\n            _ => false,\n        }\n    }",
        "start": {
          "row": 312,
          "column": 5
        },
        "end": {
          "row": 317,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 312,
          "column": 5
        },
        "end": {
          "row": 312,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_lifetime_param",
        "start": {
          "row": 312,
          "column": 12
        },
        "end": {
          "row": 312,
          "column": 29
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 312,
          "column": 29
        },
        "end": {
          "row": 312,
          "column": 36
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 312,
          "column": 30
        },
        "end": {
          "row": 312,
          "column": 35
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 312,
          "column": 31
        },
        "end": {
          "row": 312,
          "column": 35
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 312,
          "column": 40
        },
        "end": {
          "row": 312,
          "column": 44
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            GenericParam::Lifetime(_) => true,\n            _ => false,\n        }\n    }",
        "start": {
          "row": 312,
          "column": 45
        },
        "end": {
          "row": 317,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            GenericParam::Lifetime(_) => true,\n            _ => false,\n        }",
        "start": {
          "row": 313,
          "column": 9
        },
        "end": {
          "row": 316,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 313,
          "column": 15
        },
        "end": {
          "row": 313,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 313,
          "column": 16
        },
        "end": {
          "row": 313,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            GenericParam::Lifetime(_) => true,\n            _ => false,\n        }",
        "start": {
          "row": 313,
          "column": 21
        },
        "end": {
          "row": 316,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "GenericParam::Lifetime(_) => true,",
        "start": {
          "row": 314,
          "column": 13
        },
        "end": {
          "row": 314,
          "column": 47
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "GenericParam::Lifetime(_)",
        "start": {
          "row": 314,
          "column": 13
        },
        "end": {
          "row": 314,
          "column": 38
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "GenericParam::Lifetime(_)",
        "start": {
          "row": 314,
          "column": 13
        },
        "end": {
          "row": 314,
          "column": 38
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "GenericParam::Lifetime",
        "start": {
          "row": 314,
          "column": 13
        },
        "end": {
          "row": 314,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "GenericParam",
        "start": {
          "row": 314,
          "column": 13
        },
        "end": {
          "row": 314,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Lifetime",
        "start": {
          "row": 314,
          "column": 27
        },
        "end": {
          "row": 314,
          "column": 35
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 314,
          "column": 42
        },
        "end": {
          "row": 314,
          "column": 46
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => false,",
        "start": {
          "row": 315,
          "column": 13
        },
        "end": {
          "row": 315,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 315,
          "column": 13
        },
        "end": {
          "row": 315,
          "column": 14
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 315,
          "column": 18
        },
        "end": {
          "row": 315,
          "column": 23
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_type_param(&self) -> bool {\n        match *self {\n            GenericParam::Type(_) => true,\n            _ => false,\n        }\n    }",
        "start": {
          "row": 319,
          "column": 5
        },
        "end": {
          "row": 324,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 319,
          "column": 5
        },
        "end": {
          "row": 319,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_type_param",
        "start": {
          "row": 319,
          "column": 12
        },
        "end": {
          "row": 319,
          "column": 25
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 319,
          "column": 25
        },
        "end": {
          "row": 319,
          "column": 32
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 319,
          "column": 26
        },
        "end": {
          "row": 319,
          "column": 31
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 319,
          "column": 27
        },
        "end": {
          "row": 319,
          "column": 31
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 319,
          "column": 36
        },
        "end": {
          "row": 319,
          "column": 40
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            GenericParam::Type(_) => true,\n            _ => false,\n        }\n    }",
        "start": {
          "row": 319,
          "column": 41
        },
        "end": {
          "row": 324,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            GenericParam::Type(_) => true,\n            _ => false,\n        }",
        "start": {
          "row": 320,
          "column": 9
        },
        "end": {
          "row": 323,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 320,
          "column": 15
        },
        "end": {
          "row": 320,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 320,
          "column": 16
        },
        "end": {
          "row": 320,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            GenericParam::Type(_) => true,\n            _ => false,\n        }",
        "start": {
          "row": 320,
          "column": 21
        },
        "end": {
          "row": 323,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "GenericParam::Type(_) => true,",
        "start": {
          "row": 321,
          "column": 13
        },
        "end": {
          "row": 321,
          "column": 43
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "GenericParam::Type(_)",
        "start": {
          "row": 321,
          "column": 13
        },
        "end": {
          "row": 321,
          "column": 34
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "GenericParam::Type(_)",
        "start": {
          "row": 321,
          "column": 13
        },
        "end": {
          "row": 321,
          "column": 34
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "GenericParam::Type",
        "start": {
          "row": 321,
          "column": 13
        },
        "end": {
          "row": 321,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "GenericParam",
        "start": {
          "row": 321,
          "column": 13
        },
        "end": {
          "row": 321,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Type",
        "start": {
          "row": 321,
          "column": 27
        },
        "end": {
          "row": 321,
          "column": 31
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 321,
          "column": 38
        },
        "end": {
          "row": 321,
          "column": 42
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => false,",
        "start": {
          "row": 322,
          "column": 13
        },
        "end": {
          "row": 322,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 322,
          "column": 13
        },
        "end": {
          "row": 322,
          "column": 14
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 322,
          "column": 18
        },
        "end": {
          "row": 322,
          "column": 23
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Represents lifetime, type and const parameters attached to a declaration of",
        "start": {
          "row": 327,
          "column": 1
        },
        "end": {
          "row": 327,
          "column": 80
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// a function, enum, trait, etc.",
        "start": {
          "row": 328,
          "column": 1
        },
        "end": {
          "row": 328,
          "column": 34
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 329,
          "column": 1
        },
        "end": {
          "row": 329,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 329,
          "column": 3
        },
        "end": {
          "row": 329,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 329,
          "column": 3
        },
        "end": {
          "row": 329,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 329,
          "column": 9
        },
        "end": {
          "row": 329,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 329,
          "column": 10
        },
        "end": {
          "row": 329,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 329,
          "column": 10
        },
        "end": {
          "row": 329,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 329,
          "column": 17
        },
        "end": {
          "row": 329,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 329,
          "column": 17
        },
        "end": {
          "row": 329,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 329,
          "column": 28
        },
        "end": {
          "row": 329,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 329,
          "column": 28
        },
        "end": {
          "row": 329,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 329,
          "column": 32
        },
        "end": {
          "row": 329,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 329,
          "column": 32
        },
        "end": {
          "row": 329,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 329,
          "column": 48
        },
        "end": {
          "row": 329,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 329,
          "column": 48
        },
        "end": {
          "row": 329,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 329,
          "column": 64
        },
        "end": {
          "row": 329,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 329,
          "column": 64
        },
        "end": {
          "row": 329,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 329,
          "column": 70
        },
        "end": {
          "row": 329,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 329,
          "column": 70
        },
        "end": {
          "row": 329,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Generics {\n    pub params: Vec<GenericParam>,\n    pub where_clause: WhereClause,\n    pub span: Span,\n}",
        "start": {
          "row": 330,
          "column": 1
        },
        "end": {
          "row": 334,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 330,
          "column": 1
        },
        "end": {
          "row": 330,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 330,
          "column": 12
        },
        "end": {
          "row": 330,
          "column": 20
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub params: Vec<GenericParam>,\n    pub where_clause: WhereClause,\n    pub span: Span,\n}",
        "start": {
          "row": 330,
          "column": 21
        },
        "end": {
          "row": 334,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub params: Vec<GenericParam>",
        "start": {
          "row": 331,
          "column": 5
        },
        "end": {
          "row": 331,
          "column": 34
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 331,
          "column": 5
        },
        "end": {
          "row": 331,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "params",
        "start": {
          "row": 331,
          "column": 9
        },
        "end": {
          "row": 331,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<GenericParam>",
        "start": {
          "row": 331,
          "column": 17
        },
        "end": {
          "row": 331,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 331,
          "column": 17
        },
        "end": {
          "row": 331,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<GenericParam>",
        "start": {
          "row": 331,
          "column": 20
        },
        "end": {
          "row": 331,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "GenericParam",
        "start": {
          "row": 331,
          "column": 21
        },
        "end": {
          "row": 331,
          "column": 33
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub where_clause: WhereClause",
        "start": {
          "row": 332,
          "column": 5
        },
        "end": {
          "row": 332,
          "column": 34
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 332,
          "column": 5
        },
        "end": {
          "row": 332,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "where_clause",
        "start": {
          "row": 332,
          "column": 9
        },
        "end": {
          "row": 332,
          "column": 21
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "WhereClause",
        "start": {
          "row": 332,
          "column": 23
        },
        "end": {
          "row": 332,
          "column": 34
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 333,
          "column": 5
        },
        "end": {
          "row": 333,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 333,
          "column": 5
        },
        "end": {
          "row": 333,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 333,
          "column": 9
        },
        "end": {
          "row": 333,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 333,
          "column": 15
        },
        "end": {
          "row": 333,
          "column": 19
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl Generics {\n    pub fn is_lt_parameterized(&self) -> bool {\n        self.params.iter().any(|param| param.is_lifetime_param())\n    }\n\n    pub fn is_type_parameterized(&self) -> bool {\n        self.params.iter().any(|param| param.is_type_param())\n    }\n\n    pub fn is_parameterized(&self) -> bool {\n        !self.params.is_empty()\n    }\n\n    pub fn span_for_name(&self, name: &str) -> Option<Span> {\n        for param in &self.params {\n            if let GenericParam::Type(ref t) = *param {\n                if t.ident.name == name {\n                    return Some(t.span);\n                }\n            }\n        }\n        None\n    }\n}",
        "start": {
          "row": 336,
          "column": 1
        },
        "end": {
          "row": 359,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 336,
          "column": 6
        },
        "end": {
          "row": 336,
          "column": 14
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn is_lt_parameterized(&self) -> bool {\n        self.params.iter().any(|param| param.is_lifetime_param())\n    }\n\n    pub fn is_type_parameterized(&self) -> bool {\n        self.params.iter().any(|param| param.is_type_param())\n    }\n\n    pub fn is_parameterized(&self) -> bool {\n        !self.params.is_empty()\n    }\n\n    pub fn span_for_name(&self, name: &str) -> Option<Span> {\n        for param in &self.params {\n            if let GenericParam::Type(ref t) = *param {\n                if t.ident.name == name {\n                    return Some(t.span);\n                }\n            }\n        }\n        None\n    }\n}",
        "start": {
          "row": 336,
          "column": 15
        },
        "end": {
          "row": 359,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_lt_parameterized(&self) -> bool {\n        self.params.iter().any(|param| param.is_lifetime_param())\n    }",
        "start": {
          "row": 337,
          "column": 5
        },
        "end": {
          "row": 339,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 337,
          "column": 5
        },
        "end": {
          "row": 337,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_lt_parameterized",
        "start": {
          "row": 337,
          "column": 12
        },
        "end": {
          "row": 337,
          "column": 31
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 337,
          "column": 31
        },
        "end": {
          "row": 337,
          "column": 38
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 337,
          "column": 32
        },
        "end": {
          "row": 337,
          "column": 37
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 337,
          "column": 33
        },
        "end": {
          "row": 337,
          "column": 37
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 337,
          "column": 42
        },
        "end": {
          "row": 337,
          "column": 46
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        self.params.iter().any(|param| param.is_lifetime_param())\n    }",
        "start": {
          "row": 337,
          "column": 47
        },
        "end": {
          "row": 339,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.params.iter().any(|param| param.is_lifetime_param())",
        "start": {
          "row": 338,
          "column": 9
        },
        "end": {
          "row": 338,
          "column": 66
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.params.iter().any",
        "start": {
          "row": 338,
          "column": 9
        },
        "end": {
          "row": 338,
          "column": 31
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.params.iter()",
        "start": {
          "row": 338,
          "column": 9
        },
        "end": {
          "row": 338,
          "column": 27
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.params.iter",
        "start": {
          "row": 338,
          "column": 9
        },
        "end": {
          "row": 338,
          "column": 25
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.params",
        "start": {
          "row": 338,
          "column": 9
        },
        "end": {
          "row": 338,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 338,
          "column": 9
        },
        "end": {
          "row": 338,
          "column": 13
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "params",
        "start": {
          "row": 338,
          "column": 14
        },
        "end": {
          "row": 338,
          "column": 20
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "iter",
        "start": {
          "row": 338,
          "column": 21
        },
        "end": {
          "row": 338,
          "column": 25
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 338,
          "column": 25
        },
        "end": {
          "row": 338,
          "column": 27
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "any",
        "start": {
          "row": 338,
          "column": 28
        },
        "end": {
          "row": 338,
          "column": 31
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(|param| param.is_lifetime_param())",
        "start": {
          "row": 338,
          "column": 31
        },
        "end": {
          "row": 338,
          "column": 66
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|param| param.is_lifetime_param()",
        "start": {
          "row": 338,
          "column": 32
        },
        "end": {
          "row": 338,
          "column": 65
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|param|",
        "start": {
          "row": 338,
          "column": 32
        },
        "end": {
          "row": 338,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "param",
        "start": {
          "row": 338,
          "column": 33
        },
        "end": {
          "row": 338,
          "column": 38
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "param.is_lifetime_param()",
        "start": {
          "row": 338,
          "column": 40
        },
        "end": {
          "row": 338,
          "column": 65
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "param.is_lifetime_param",
        "start": {
          "row": 338,
          "column": 40
        },
        "end": {
          "row": 338,
          "column": 63
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "param",
        "start": {
          "row": 338,
          "column": 40
        },
        "end": {
          "row": 338,
          "column": 45
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_lifetime_param",
        "start": {
          "row": 338,
          "column": 46
        },
        "end": {
          "row": 338,
          "column": 63
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 338,
          "column": 63
        },
        "end": {
          "row": 338,
          "column": 65
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_type_parameterized(&self) -> bool {\n        self.params.iter().any(|param| param.is_type_param())\n    }",
        "start": {
          "row": 341,
          "column": 5
        },
        "end": {
          "row": 343,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 341,
          "column": 5
        },
        "end": {
          "row": 341,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_type_parameterized",
        "start": {
          "row": 341,
          "column": 12
        },
        "end": {
          "row": 341,
          "column": 33
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 341,
          "column": 33
        },
        "end": {
          "row": 341,
          "column": 40
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 341,
          "column": 34
        },
        "end": {
          "row": 341,
          "column": 39
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 341,
          "column": 35
        },
        "end": {
          "row": 341,
          "column": 39
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 341,
          "column": 44
        },
        "end": {
          "row": 341,
          "column": 48
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        self.params.iter().any(|param| param.is_type_param())\n    }",
        "start": {
          "row": 341,
          "column": 49
        },
        "end": {
          "row": 343,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.params.iter().any(|param| param.is_type_param())",
        "start": {
          "row": 342,
          "column": 9
        },
        "end": {
          "row": 342,
          "column": 62
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.params.iter().any",
        "start": {
          "row": 342,
          "column": 9
        },
        "end": {
          "row": 342,
          "column": 31
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.params.iter()",
        "start": {
          "row": 342,
          "column": 9
        },
        "end": {
          "row": 342,
          "column": 27
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.params.iter",
        "start": {
          "row": 342,
          "column": 9
        },
        "end": {
          "row": 342,
          "column": 25
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.params",
        "start": {
          "row": 342,
          "column": 9
        },
        "end": {
          "row": 342,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 342,
          "column": 9
        },
        "end": {
          "row": 342,
          "column": 13
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "params",
        "start": {
          "row": 342,
          "column": 14
        },
        "end": {
          "row": 342,
          "column": 20
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "iter",
        "start": {
          "row": 342,
          "column": 21
        },
        "end": {
          "row": 342,
          "column": 25
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 342,
          "column": 25
        },
        "end": {
          "row": 342,
          "column": 27
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "any",
        "start": {
          "row": 342,
          "column": 28
        },
        "end": {
          "row": 342,
          "column": 31
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(|param| param.is_type_param())",
        "start": {
          "row": 342,
          "column": 31
        },
        "end": {
          "row": 342,
          "column": 62
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|param| param.is_type_param()",
        "start": {
          "row": 342,
          "column": 32
        },
        "end": {
          "row": 342,
          "column": 61
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|param|",
        "start": {
          "row": 342,
          "column": 32
        },
        "end": {
          "row": 342,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "param",
        "start": {
          "row": 342,
          "column": 33
        },
        "end": {
          "row": 342,
          "column": 38
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "param.is_type_param()",
        "start": {
          "row": 342,
          "column": 40
        },
        "end": {
          "row": 342,
          "column": 61
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "param.is_type_param",
        "start": {
          "row": 342,
          "column": 40
        },
        "end": {
          "row": 342,
          "column": 59
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "param",
        "start": {
          "row": 342,
          "column": 40
        },
        "end": {
          "row": 342,
          "column": 45
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_type_param",
        "start": {
          "row": 342,
          "column": 46
        },
        "end": {
          "row": 342,
          "column": 59
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 342,
          "column": 59
        },
        "end": {
          "row": 342,
          "column": 61
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_parameterized(&self) -> bool {\n        !self.params.is_empty()\n    }",
        "start": {
          "row": 345,
          "column": 5
        },
        "end": {
          "row": 347,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 345,
          "column": 5
        },
        "end": {
          "row": 345,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_parameterized",
        "start": {
          "row": 345,
          "column": 12
        },
        "end": {
          "row": 345,
          "column": 28
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 345,
          "column": 28
        },
        "end": {
          "row": 345,
          "column": 35
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 345,
          "column": 29
        },
        "end": {
          "row": 345,
          "column": 34
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 345,
          "column": 30
        },
        "end": {
          "row": 345,
          "column": 34
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 345,
          "column": 39
        },
        "end": {
          "row": 345,
          "column": 43
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        !self.params.is_empty()\n    }",
        "start": {
          "row": 345,
          "column": 44
        },
        "end": {
          "row": 347,
          "column": 6
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "!self.params.is_empty()",
        "start": {
          "row": 346,
          "column": 9
        },
        "end": {
          "row": 346,
          "column": 32
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.params.is_empty()",
        "start": {
          "row": 346,
          "column": 10
        },
        "end": {
          "row": 346,
          "column": 32
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.params.is_empty",
        "start": {
          "row": 346,
          "column": 10
        },
        "end": {
          "row": 346,
          "column": 30
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.params",
        "start": {
          "row": 346,
          "column": 10
        },
        "end": {
          "row": 346,
          "column": 21
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 346,
          "column": 10
        },
        "end": {
          "row": 346,
          "column": 14
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "params",
        "start": {
          "row": 346,
          "column": 15
        },
        "end": {
          "row": 346,
          "column": 21
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_empty",
        "start": {
          "row": 346,
          "column": 22
        },
        "end": {
          "row": 346,
          "column": 30
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 346,
          "column": 30
        },
        "end": {
          "row": 346,
          "column": 32
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn span_for_name(&self, name: &str) -> Option<Span> {\n        for param in &self.params {\n            if let GenericParam::Type(ref t) = *param {\n                if t.ident.name == name {\n                    return Some(t.span);\n                }\n            }\n        }\n        None\n    }",
        "start": {
          "row": 349,
          "column": 5
        },
        "end": {
          "row": 358,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 349,
          "column": 5
        },
        "end": {
          "row": 349,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span_for_name",
        "start": {
          "row": 349,
          "column": 12
        },
        "end": {
          "row": 349,
          "column": 25
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, name: &str)",
        "start": {
          "row": 349,
          "column": 25
        },
        "end": {
          "row": 349,
          "column": 44
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 349,
          "column": 26
        },
        "end": {
          "row": 349,
          "column": 31
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 349,
          "column": 27
        },
        "end": {
          "row": 349,
          "column": 31
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "name: &str",
        "start": {
          "row": 349,
          "column": 33
        },
        "end": {
          "row": 349,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 349,
          "column": 33
        },
        "end": {
          "row": 349,
          "column": 37
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&str",
        "start": {
          "row": 349,
          "column": 39
        },
        "end": {
          "row": 349,
          "column": 43
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 349,
          "column": 40
        },
        "end": {
          "row": 349,
          "column": 43
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<Span>",
        "start": {
          "row": 349,
          "column": 48
        },
        "end": {
          "row": 349,
          "column": 60
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 349,
          "column": 48
        },
        "end": {
          "row": 349,
          "column": 54
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Span>",
        "start": {
          "row": 349,
          "column": 54
        },
        "end": {
          "row": 349,
          "column": 60
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 349,
          "column": 55
        },
        "end": {
          "row": 349,
          "column": 59
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        for param in &self.params {\n            if let GenericParam::Type(ref t) = *param {\n                if t.ident.name == name {\n                    return Some(t.span);\n                }\n            }\n        }\n        None\n    }",
        "start": {
          "row": 349,
          "column": 61
        },
        "end": {
          "row": 358,
          "column": 6
        }
      },
      {
        "kind": "for_expression",
        "name": "query",
        "text": "for param in &self.params {\n            if let GenericParam::Type(ref t) = *param {\n                if t.ident.name == name {\n                    return Some(t.span);\n                }\n            }\n        }",
        "start": {
          "row": 350,
          "column": 9
        },
        "end": {
          "row": 356,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "param",
        "start": {
          "row": 350,
          "column": 13
        },
        "end": {
          "row": 350,
          "column": 18
        }
      },
      {
        "kind": "reference_expression",
        "name": "query",
        "text": "&self.params",
        "start": {
          "row": 350,
          "column": 22
        },
        "end": {
          "row": 350,
          "column": 34
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.params",
        "start": {
          "row": 350,
          "column": 23
        },
        "end": {
          "row": 350,
          "column": 34
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 350,
          "column": 23
        },
        "end": {
          "row": 350,
          "column": 27
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "params",
        "start": {
          "row": 350,
          "column": 28
        },
        "end": {
          "row": 350,
          "column": 34
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n            if let GenericParam::Type(ref t) = *param {\n                if t.ident.name == name {\n                    return Some(t.span);\n                }\n            }\n        }",
        "start": {
          "row": 350,
          "column": 35
        },
        "end": {
          "row": 356,
          "column": 10
        }
      },
      {
        "kind": "if_let_expression",
        "name": "query",
        "text": "if let GenericParam::Type(ref t) = *param {\n                if t.ident.name == name {\n                    return Some(t.span);\n                }\n            }",
        "start": {
          "row": 351,
          "column": 13
        },
        "end": {
          "row": 355,
          "column": 14
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "GenericParam::Type(ref t)",
        "start": {
          "row": 351,
          "column": 20
        },
        "end": {
          "row": 351,
          "column": 45
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "GenericParam::Type",
        "start": {
          "row": 351,
          "column": 20
        },
        "end": {
          "row": 351,
          "column": 38
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "GenericParam",
        "start": {
          "row": 351,
          "column": 20
        },
        "end": {
          "row": 351,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Type",
        "start": {
          "row": 351,
          "column": 34
        },
        "end": {
          "row": 351,
          "column": 38
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref t",
        "start": {
          "row": 351,
          "column": 39
        },
        "end": {
          "row": 351,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "t",
        "start": {
          "row": 351,
          "column": 43
        },
        "end": {
          "row": 351,
          "column": 44
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*param",
        "start": {
          "row": 351,
          "column": 48
        },
        "end": {
          "row": 351,
          "column": 54
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "param",
        "start": {
          "row": 351,
          "column": 49
        },
        "end": {
          "row": 351,
          "column": 54
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                if t.ident.name == name {\n                    return Some(t.span);\n                }\n            }",
        "start": {
          "row": 351,
          "column": 55
        },
        "end": {
          "row": 355,
          "column": 14
        }
      },
      {
        "kind": "if_expression",
        "name": "query",
        "text": "if t.ident.name == name {\n                    return Some(t.span);\n                }",
        "start": {
          "row": 352,
          "column": 17
        },
        "end": {
          "row": 354,
          "column": 18
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "t.ident.name == name",
        "start": {
          "row": 352,
          "column": 20
        },
        "end": {
          "row": 352,
          "column": 40
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "t.ident.name",
        "start": {
          "row": 352,
          "column": 20
        },
        "end": {
          "row": 352,
          "column": 32
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "t.ident",
        "start": {
          "row": 352,
          "column": 20
        },
        "end": {
          "row": 352,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "t",
        "start": {
          "row": 352,
          "column": 20
        },
        "end": {
          "row": 352,
          "column": 21
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 352,
          "column": 22
        },
        "end": {
          "row": 352,
          "column": 27
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 352,
          "column": 28
        },
        "end": {
          "row": 352,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 352,
          "column": 36
        },
        "end": {
          "row": 352,
          "column": 40
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                    return Some(t.span);\n                }",
        "start": {
          "row": 352,
          "column": 41
        },
        "end": {
          "row": 354,
          "column": 18
        }
      },
      {
        "kind": "return_expression",
        "name": "query",
        "text": "return Some(t.span)",
        "start": {
          "row": 353,
          "column": 21
        },
        "end": {
          "row": 353,
          "column": 40
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Some(t.span)",
        "start": {
          "row": 353,
          "column": 28
        },
        "end": {
          "row": 353,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 353,
          "column": 28
        },
        "end": {
          "row": 353,
          "column": 32
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(t.span)",
        "start": {
          "row": 353,
          "column": 32
        },
        "end": {
          "row": 353,
          "column": 40
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "t.span",
        "start": {
          "row": 353,
          "column": 33
        },
        "end": {
          "row": 353,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "t",
        "start": {
          "row": 353,
          "column": 33
        },
        "end": {
          "row": 353,
          "column": 34
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 353,
          "column": 35
        },
        "end": {
          "row": 353,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 357,
          "column": 9
        },
        "end": {
          "row": 357,
          "column": 13
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl Default for Generics {\n    /// Creates an instance of `Generics`.\n    fn default() ->  Generics {\n        Generics {\n            params: Vec::new(),\n            where_clause: WhereClause {\n                id: DUMMY_NODE_ID,\n                predicates: Vec::new(),\n                span: DUMMY_SP,\n            },\n            span: DUMMY_SP,\n        }\n    }\n}",
        "start": {
          "row": 361,
          "column": 1
        },
        "end": {
          "row": 374,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Default",
        "start": {
          "row": 361,
          "column": 6
        },
        "end": {
          "row": 361,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 361,
          "column": 18
        },
        "end": {
          "row": 361,
          "column": 26
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    /// Creates an instance of `Generics`.\n    fn default() ->  Generics {\n        Generics {\n            params: Vec::new(),\n            where_clause: WhereClause {\n                id: DUMMY_NODE_ID,\n                predicates: Vec::new(),\n                span: DUMMY_SP,\n            },\n            span: DUMMY_SP,\n        }\n    }\n}",
        "start": {
          "row": 361,
          "column": 27
        },
        "end": {
          "row": 374,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Creates an instance of `Generics`.",
        "start": {
          "row": 362,
          "column": 5
        },
        "end": {
          "row": 362,
          "column": 43
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn default() ->  Generics {\n        Generics {\n            params: Vec::new(),\n            where_clause: WhereClause {\n                id: DUMMY_NODE_ID,\n                predicates: Vec::new(),\n                span: DUMMY_SP,\n            },\n            span: DUMMY_SP,\n        }\n    }",
        "start": {
          "row": 363,
          "column": 5
        },
        "end": {
          "row": 373,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "default",
        "start": {
          "row": 363,
          "column": 8
        },
        "end": {
          "row": 363,
          "column": 15
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "()",
        "start": {
          "row": 363,
          "column": 15
        },
        "end": {
          "row": 363,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 363,
          "column": 22
        },
        "end": {
          "row": 363,
          "column": 30
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        Generics {\n            params: Vec::new(),\n            where_clause: WhereClause {\n                id: DUMMY_NODE_ID,\n                predicates: Vec::new(),\n                span: DUMMY_SP,\n            },\n            span: DUMMY_SP,\n        }\n    }",
        "start": {
          "row": 363,
          "column": 31
        },
        "end": {
          "row": 373,
          "column": 6
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "Generics {\n            params: Vec::new(),\n            where_clause: WhereClause {\n                id: DUMMY_NODE_ID,\n                predicates: Vec::new(),\n                span: DUMMY_SP,\n            },\n            span: DUMMY_SP,\n        }",
        "start": {
          "row": 364,
          "column": 9
        },
        "end": {
          "row": 372,
          "column": 10
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 364,
          "column": 9
        },
        "end": {
          "row": 364,
          "column": 17
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{\n            params: Vec::new(),\n            where_clause: WhereClause {\n                id: DUMMY_NODE_ID,\n                predicates: Vec::new(),\n                span: DUMMY_SP,\n            },\n            span: DUMMY_SP,\n        }",
        "start": {
          "row": 364,
          "column": 18
        },
        "end": {
          "row": 372,
          "column": 10
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "params: Vec::new()",
        "start": {
          "row": 365,
          "column": 13
        },
        "end": {
          "row": 365,
          "column": 31
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "params",
        "start": {
          "row": 365,
          "column": 13
        },
        "end": {
          "row": 365,
          "column": 19
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Vec::new()",
        "start": {
          "row": 365,
          "column": 21
        },
        "end": {
          "row": 365,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Vec::new",
        "start": {
          "row": 365,
          "column": 21
        },
        "end": {
          "row": 365,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 365,
          "column": 21
        },
        "end": {
          "row": 365,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 365,
          "column": 26
        },
        "end": {
          "row": 365,
          "column": 29
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 365,
          "column": 29
        },
        "end": {
          "row": 365,
          "column": 31
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "where_clause: WhereClause {\n                id: DUMMY_NODE_ID,\n                predicates: Vec::new(),\n                span: DUMMY_SP,\n            }",
        "start": {
          "row": 366,
          "column": 13
        },
        "end": {
          "row": 370,
          "column": 14
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "where_clause",
        "start": {
          "row": 366,
          "column": 13
        },
        "end": {
          "row": 366,
          "column": 25
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "WhereClause {\n                id: DUMMY_NODE_ID,\n                predicates: Vec::new(),\n                span: DUMMY_SP,\n            }",
        "start": {
          "row": 366,
          "column": 27
        },
        "end": {
          "row": 370,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "WhereClause",
        "start": {
          "row": 366,
          "column": 27
        },
        "end": {
          "row": 366,
          "column": 38
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{\n                id: DUMMY_NODE_ID,\n                predicates: Vec::new(),\n                span: DUMMY_SP,\n            }",
        "start": {
          "row": 366,
          "column": 39
        },
        "end": {
          "row": 370,
          "column": 14
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "id: DUMMY_NODE_ID",
        "start": {
          "row": 367,
          "column": 17
        },
        "end": {
          "row": 367,
          "column": 34
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 367,
          "column": 17
        },
        "end": {
          "row": 367,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "DUMMY_NODE_ID",
        "start": {
          "row": 367,
          "column": 21
        },
        "end": {
          "row": 367,
          "column": 34
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "predicates: Vec::new()",
        "start": {
          "row": 368,
          "column": 17
        },
        "end": {
          "row": 368,
          "column": 39
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "predicates",
        "start": {
          "row": 368,
          "column": 17
        },
        "end": {
          "row": 368,
          "column": 27
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Vec::new()",
        "start": {
          "row": 368,
          "column": 29
        },
        "end": {
          "row": 368,
          "column": 39
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Vec::new",
        "start": {
          "row": 368,
          "column": 29
        },
        "end": {
          "row": 368,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 368,
          "column": 29
        },
        "end": {
          "row": 368,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 368,
          "column": 34
        },
        "end": {
          "row": 368,
          "column": 37
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 368,
          "column": 37
        },
        "end": {
          "row": 368,
          "column": 39
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "span: DUMMY_SP",
        "start": {
          "row": 369,
          "column": 17
        },
        "end": {
          "row": 369,
          "column": 31
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 369,
          "column": 17
        },
        "end": {
          "row": 369,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "DUMMY_SP",
        "start": {
          "row": 369,
          "column": 23
        },
        "end": {
          "row": 369,
          "column": 31
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "span: DUMMY_SP",
        "start": {
          "row": 371,
          "column": 13
        },
        "end": {
          "row": 371,
          "column": 27
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 371,
          "column": 13
        },
        "end": {
          "row": 371,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "DUMMY_SP",
        "start": {
          "row": 371,
          "column": 19
        },
        "end": {
          "row": 371,
          "column": 27
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A `where` clause in a definition",
        "start": {
          "row": 376,
          "column": 1
        },
        "end": {
          "row": 376,
          "column": 37
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 377,
          "column": 1
        },
        "end": {
          "row": 377,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 377,
          "column": 3
        },
        "end": {
          "row": 377,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 377,
          "column": 3
        },
        "end": {
          "row": 377,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 377,
          "column": 9
        },
        "end": {
          "row": 377,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 377,
          "column": 10
        },
        "end": {
          "row": 377,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 377,
          "column": 10
        },
        "end": {
          "row": 377,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 377,
          "column": 17
        },
        "end": {
          "row": 377,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 377,
          "column": 17
        },
        "end": {
          "row": 377,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 377,
          "column": 28
        },
        "end": {
          "row": 377,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 377,
          "column": 28
        },
        "end": {
          "row": 377,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 377,
          "column": 32
        },
        "end": {
          "row": 377,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 377,
          "column": 32
        },
        "end": {
          "row": 377,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 377,
          "column": 48
        },
        "end": {
          "row": 377,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 377,
          "column": 48
        },
        "end": {
          "row": 377,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 377,
          "column": 64
        },
        "end": {
          "row": 377,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 377,
          "column": 64
        },
        "end": {
          "row": 377,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 377,
          "column": 70
        },
        "end": {
          "row": 377,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 377,
          "column": 70
        },
        "end": {
          "row": 377,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct WhereClause {\n    pub id: NodeId,\n    pub predicates: Vec<WherePredicate>,\n    pub span: Span,\n}",
        "start": {
          "row": 378,
          "column": 1
        },
        "end": {
          "row": 382,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 378,
          "column": 1
        },
        "end": {
          "row": 378,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "WhereClause",
        "start": {
          "row": 378,
          "column": 12
        },
        "end": {
          "row": 378,
          "column": 23
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub id: NodeId,\n    pub predicates: Vec<WherePredicate>,\n    pub span: Span,\n}",
        "start": {
          "row": 378,
          "column": 24
        },
        "end": {
          "row": 382,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 379,
          "column": 5
        },
        "end": {
          "row": 379,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 379,
          "column": 5
        },
        "end": {
          "row": 379,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 379,
          "column": 9
        },
        "end": {
          "row": 379,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 379,
          "column": 13
        },
        "end": {
          "row": 379,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub predicates: Vec<WherePredicate>",
        "start": {
          "row": 380,
          "column": 5
        },
        "end": {
          "row": 380,
          "column": 40
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 380,
          "column": 5
        },
        "end": {
          "row": 380,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "predicates",
        "start": {
          "row": 380,
          "column": 9
        },
        "end": {
          "row": 380,
          "column": 19
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<WherePredicate>",
        "start": {
          "row": 380,
          "column": 21
        },
        "end": {
          "row": 380,
          "column": 40
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 380,
          "column": 21
        },
        "end": {
          "row": 380,
          "column": 24
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<WherePredicate>",
        "start": {
          "row": 380,
          "column": 24
        },
        "end": {
          "row": 380,
          "column": 40
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "WherePredicate",
        "start": {
          "row": 380,
          "column": 25
        },
        "end": {
          "row": 380,
          "column": 39
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 381,
          "column": 5
        },
        "end": {
          "row": 381,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 381,
          "column": 5
        },
        "end": {
          "row": 381,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 381,
          "column": 9
        },
        "end": {
          "row": 381,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 381,
          "column": 15
        },
        "end": {
          "row": 381,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A single predicate in a `where` clause",
        "start": {
          "row": 384,
          "column": 1
        },
        "end": {
          "row": 384,
          "column": 43
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 385,
          "column": 1
        },
        "end": {
          "row": 385,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 385,
          "column": 3
        },
        "end": {
          "row": 385,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 385,
          "column": 3
        },
        "end": {
          "row": 385,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 385,
          "column": 9
        },
        "end": {
          "row": 385,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 385,
          "column": 10
        },
        "end": {
          "row": 385,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 385,
          "column": 10
        },
        "end": {
          "row": 385,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 385,
          "column": 17
        },
        "end": {
          "row": 385,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 385,
          "column": 17
        },
        "end": {
          "row": 385,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 385,
          "column": 28
        },
        "end": {
          "row": 385,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 385,
          "column": 28
        },
        "end": {
          "row": 385,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 385,
          "column": 32
        },
        "end": {
          "row": 385,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 385,
          "column": 32
        },
        "end": {
          "row": 385,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 385,
          "column": 48
        },
        "end": {
          "row": 385,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 385,
          "column": 48
        },
        "end": {
          "row": 385,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 385,
          "column": 64
        },
        "end": {
          "row": 385,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 385,
          "column": 64
        },
        "end": {
          "row": 385,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 385,
          "column": 70
        },
        "end": {
          "row": 385,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 385,
          "column": 70
        },
        "end": {
          "row": 385,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum WherePredicate {\n    /// A type binding, e.g. `for<'c> Foo: Send+Clone+'c`\n    BoundPredicate(WhereBoundPredicate),\n    /// A lifetime predicate, e.g. `'a: 'b+'c`\n    RegionPredicate(WhereRegionPredicate),\n    /// An equality predicate (unsupported)\n    EqPredicate(WhereEqPredicate),\n}",
        "start": {
          "row": 386,
          "column": 1
        },
        "end": {
          "row": 393,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 386,
          "column": 1
        },
        "end": {
          "row": 386,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "WherePredicate",
        "start": {
          "row": 386,
          "column": 10
        },
        "end": {
          "row": 386,
          "column": 24
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// A type binding, e.g. `for<'c> Foo: Send+Clone+'c`\n    BoundPredicate(WhereBoundPredicate),\n    /// A lifetime predicate, e.g. `'a: 'b+'c`\n    RegionPredicate(WhereRegionPredicate),\n    /// An equality predicate (unsupported)\n    EqPredicate(WhereEqPredicate),\n}",
        "start": {
          "row": 386,
          "column": 25
        },
        "end": {
          "row": 393,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A type binding, e.g. `for<'c> Foo: Send+Clone+'c`",
        "start": {
          "row": 387,
          "column": 5
        },
        "end": {
          "row": 387,
          "column": 58
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "BoundPredicate(WhereBoundPredicate)",
        "start": {
          "row": 388,
          "column": 5
        },
        "end": {
          "row": 388,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BoundPredicate",
        "start": {
          "row": 388,
          "column": 5
        },
        "end": {
          "row": 388,
          "column": 19
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(WhereBoundPredicate)",
        "start": {
          "row": 388,
          "column": 19
        },
        "end": {
          "row": 388,
          "column": 40
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "WhereBoundPredicate",
        "start": {
          "row": 388,
          "column": 20
        },
        "end": {
          "row": 388,
          "column": 39
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A lifetime predicate, e.g. `'a: 'b+'c`",
        "start": {
          "row": 389,
          "column": 5
        },
        "end": {
          "row": 389,
          "column": 47
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "RegionPredicate(WhereRegionPredicate)",
        "start": {
          "row": 390,
          "column": 5
        },
        "end": {
          "row": 390,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RegionPredicate",
        "start": {
          "row": 390,
          "column": 5
        },
        "end": {
          "row": 390,
          "column": 20
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(WhereRegionPredicate)",
        "start": {
          "row": 390,
          "column": 20
        },
        "end": {
          "row": 390,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "WhereRegionPredicate",
        "start": {
          "row": 390,
          "column": 21
        },
        "end": {
          "row": 390,
          "column": 41
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An equality predicate (unsupported)",
        "start": {
          "row": 391,
          "column": 5
        },
        "end": {
          "row": 391,
          "column": 44
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "EqPredicate(WhereEqPredicate)",
        "start": {
          "row": 392,
          "column": 5
        },
        "end": {
          "row": 392,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "EqPredicate",
        "start": {
          "row": 392,
          "column": 5
        },
        "end": {
          "row": 392,
          "column": 16
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(WhereEqPredicate)",
        "start": {
          "row": 392,
          "column": 16
        },
        "end": {
          "row": 392,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "WhereEqPredicate",
        "start": {
          "row": 392,
          "column": 17
        },
        "end": {
          "row": 392,
          "column": 33
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A type bound.",
        "start": {
          "row": 395,
          "column": 1
        },
        "end": {
          "row": 395,
          "column": 18
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 396,
          "column": 1
        },
        "end": {
          "row": 396,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `for<'c> Foo: Send+Clone+'c`",
        "start": {
          "row": 397,
          "column": 1
        },
        "end": {
          "row": 397,
          "column": 38
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 398,
          "column": 1
        },
        "end": {
          "row": 398,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 398,
          "column": 3
        },
        "end": {
          "row": 398,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 398,
          "column": 3
        },
        "end": {
          "row": 398,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 398,
          "column": 9
        },
        "end": {
          "row": 398,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 398,
          "column": 10
        },
        "end": {
          "row": 398,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 398,
          "column": 10
        },
        "end": {
          "row": 398,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 398,
          "column": 17
        },
        "end": {
          "row": 398,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 398,
          "column": 17
        },
        "end": {
          "row": 398,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 398,
          "column": 28
        },
        "end": {
          "row": 398,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 398,
          "column": 28
        },
        "end": {
          "row": 398,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 398,
          "column": 32
        },
        "end": {
          "row": 398,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 398,
          "column": 32
        },
        "end": {
          "row": 398,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 398,
          "column": 48
        },
        "end": {
          "row": 398,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 398,
          "column": 48
        },
        "end": {
          "row": 398,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 398,
          "column": 64
        },
        "end": {
          "row": 398,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 398,
          "column": 64
        },
        "end": {
          "row": 398,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 398,
          "column": 70
        },
        "end": {
          "row": 398,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 398,
          "column": 70
        },
        "end": {
          "row": 398,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct WhereBoundPredicate {\n    pub span: Span,\n    /// Any generics from a `for` binding\n    pub bound_generic_params: Vec<GenericParam>,\n    /// The type being bounded\n    pub bounded_ty: P<Ty>,\n    /// Trait and lifetime bounds (`Clone+Send+'static`)\n    pub bounds: TyParamBounds,\n}",
        "start": {
          "row": 399,
          "column": 1
        },
        "end": {
          "row": 407,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 399,
          "column": 1
        },
        "end": {
          "row": 399,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "WhereBoundPredicate",
        "start": {
          "row": 399,
          "column": 12
        },
        "end": {
          "row": 399,
          "column": 31
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub span: Span,\n    /// Any generics from a `for` binding\n    pub bound_generic_params: Vec<GenericParam>,\n    /// The type being bounded\n    pub bounded_ty: P<Ty>,\n    /// Trait and lifetime bounds (`Clone+Send+'static`)\n    pub bounds: TyParamBounds,\n}",
        "start": {
          "row": 399,
          "column": 32
        },
        "end": {
          "row": 407,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 400,
          "column": 5
        },
        "end": {
          "row": 400,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 400,
          "column": 5
        },
        "end": {
          "row": 400,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 400,
          "column": 9
        },
        "end": {
          "row": 400,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 400,
          "column": 15
        },
        "end": {
          "row": 400,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Any generics from a `for` binding",
        "start": {
          "row": 401,
          "column": 5
        },
        "end": {
          "row": 401,
          "column": 42
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub bound_generic_params: Vec<GenericParam>",
        "start": {
          "row": 402,
          "column": 5
        },
        "end": {
          "row": 402,
          "column": 48
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 402,
          "column": 5
        },
        "end": {
          "row": 402,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "bound_generic_params",
        "start": {
          "row": 402,
          "column": 9
        },
        "end": {
          "row": 402,
          "column": 29
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<GenericParam>",
        "start": {
          "row": 402,
          "column": 31
        },
        "end": {
          "row": 402,
          "column": 48
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 402,
          "column": 31
        },
        "end": {
          "row": 402,
          "column": 34
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<GenericParam>",
        "start": {
          "row": 402,
          "column": 34
        },
        "end": {
          "row": 402,
          "column": 48
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "GenericParam",
        "start": {
          "row": 402,
          "column": 35
        },
        "end": {
          "row": 402,
          "column": 47
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The type being bounded",
        "start": {
          "row": 403,
          "column": 5
        },
        "end": {
          "row": 403,
          "column": 31
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub bounded_ty: P<Ty>",
        "start": {
          "row": 404,
          "column": 5
        },
        "end": {
          "row": 404,
          "column": 26
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 404,
          "column": 5
        },
        "end": {
          "row": 404,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "bounded_ty",
        "start": {
          "row": 404,
          "column": 9
        },
        "end": {
          "row": 404,
          "column": 19
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 404,
          "column": 21
        },
        "end": {
          "row": 404,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 404,
          "column": 21
        },
        "end": {
          "row": 404,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 404,
          "column": 22
        },
        "end": {
          "row": 404,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 404,
          "column": 23
        },
        "end": {
          "row": 404,
          "column": 25
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Trait and lifetime bounds (`Clone+Send+'static`)",
        "start": {
          "row": 405,
          "column": 5
        },
        "end": {
          "row": 405,
          "column": 57
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub bounds: TyParamBounds",
        "start": {
          "row": 406,
          "column": 5
        },
        "end": {
          "row": 406,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 406,
          "column": 5
        },
        "end": {
          "row": 406,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "bounds",
        "start": {
          "row": 406,
          "column": 9
        },
        "end": {
          "row": 406,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParamBounds",
        "start": {
          "row": 406,
          "column": 17
        },
        "end": {
          "row": 406,
          "column": 30
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A lifetime predicate.",
        "start": {
          "row": 409,
          "column": 1
        },
        "end": {
          "row": 409,
          "column": 26
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 410,
          "column": 1
        },
        "end": {
          "row": 410,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `'a: 'b+'c`",
        "start": {
          "row": 411,
          "column": 1
        },
        "end": {
          "row": 411,
          "column": 21
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 412,
          "column": 1
        },
        "end": {
          "row": 412,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 412,
          "column": 3
        },
        "end": {
          "row": 412,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 412,
          "column": 3
        },
        "end": {
          "row": 412,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 412,
          "column": 9
        },
        "end": {
          "row": 412,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 412,
          "column": 10
        },
        "end": {
          "row": 412,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 412,
          "column": 10
        },
        "end": {
          "row": 412,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 412,
          "column": 17
        },
        "end": {
          "row": 412,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 412,
          "column": 17
        },
        "end": {
          "row": 412,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 412,
          "column": 28
        },
        "end": {
          "row": 412,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 412,
          "column": 28
        },
        "end": {
          "row": 412,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 412,
          "column": 32
        },
        "end": {
          "row": 412,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 412,
          "column": 32
        },
        "end": {
          "row": 412,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 412,
          "column": 48
        },
        "end": {
          "row": 412,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 412,
          "column": 48
        },
        "end": {
          "row": 412,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 412,
          "column": 64
        },
        "end": {
          "row": 412,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 412,
          "column": 64
        },
        "end": {
          "row": 412,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 412,
          "column": 70
        },
        "end": {
          "row": 412,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 412,
          "column": 70
        },
        "end": {
          "row": 412,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct WhereRegionPredicate {\n    pub span: Span,\n    pub lifetime: Lifetime,\n    pub bounds: Vec<Lifetime>,\n}",
        "start": {
          "row": 413,
          "column": 1
        },
        "end": {
          "row": 417,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 413,
          "column": 1
        },
        "end": {
          "row": 413,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "WhereRegionPredicate",
        "start": {
          "row": 413,
          "column": 12
        },
        "end": {
          "row": 413,
          "column": 32
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub span: Span,\n    pub lifetime: Lifetime,\n    pub bounds: Vec<Lifetime>,\n}",
        "start": {
          "row": 413,
          "column": 33
        },
        "end": {
          "row": 417,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 414,
          "column": 5
        },
        "end": {
          "row": 414,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 414,
          "column": 5
        },
        "end": {
          "row": 414,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 414,
          "column": 9
        },
        "end": {
          "row": 414,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 414,
          "column": 15
        },
        "end": {
          "row": 414,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub lifetime: Lifetime",
        "start": {
          "row": 415,
          "column": 5
        },
        "end": {
          "row": 415,
          "column": 27
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 415,
          "column": 5
        },
        "end": {
          "row": 415,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "lifetime",
        "start": {
          "row": 415,
          "column": 9
        },
        "end": {
          "row": 415,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lifetime",
        "start": {
          "row": 415,
          "column": 19
        },
        "end": {
          "row": 415,
          "column": 27
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub bounds: Vec<Lifetime>",
        "start": {
          "row": 416,
          "column": 5
        },
        "end": {
          "row": 416,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 416,
          "column": 5
        },
        "end": {
          "row": 416,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "bounds",
        "start": {
          "row": 416,
          "column": 9
        },
        "end": {
          "row": 416,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Lifetime>",
        "start": {
          "row": 416,
          "column": 17
        },
        "end": {
          "row": 416,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 416,
          "column": 17
        },
        "end": {
          "row": 416,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Lifetime>",
        "start": {
          "row": 416,
          "column": 20
        },
        "end": {
          "row": 416,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lifetime",
        "start": {
          "row": 416,
          "column": 21
        },
        "end": {
          "row": 416,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An equality predicate (unsupported).",
        "start": {
          "row": 419,
          "column": 1
        },
        "end": {
          "row": 419,
          "column": 41
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 420,
          "column": 1
        },
        "end": {
          "row": 420,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `T=int`",
        "start": {
          "row": 421,
          "column": 1
        },
        "end": {
          "row": 421,
          "column": 17
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 422,
          "column": 1
        },
        "end": {
          "row": 422,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 422,
          "column": 3
        },
        "end": {
          "row": 422,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 422,
          "column": 3
        },
        "end": {
          "row": 422,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 422,
          "column": 9
        },
        "end": {
          "row": 422,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 422,
          "column": 10
        },
        "end": {
          "row": 422,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 422,
          "column": 10
        },
        "end": {
          "row": 422,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 422,
          "column": 17
        },
        "end": {
          "row": 422,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 422,
          "column": 17
        },
        "end": {
          "row": 422,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 422,
          "column": 28
        },
        "end": {
          "row": 422,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 422,
          "column": 28
        },
        "end": {
          "row": 422,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 422,
          "column": 32
        },
        "end": {
          "row": 422,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 422,
          "column": 32
        },
        "end": {
          "row": 422,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 422,
          "column": 48
        },
        "end": {
          "row": 422,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 422,
          "column": 48
        },
        "end": {
          "row": 422,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 422,
          "column": 64
        },
        "end": {
          "row": 422,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 422,
          "column": 64
        },
        "end": {
          "row": 422,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 422,
          "column": 70
        },
        "end": {
          "row": 422,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 422,
          "column": 70
        },
        "end": {
          "row": 422,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct WhereEqPredicate {\n    pub id: NodeId,\n    pub span: Span,\n    pub lhs_ty: P<Ty>,\n    pub rhs_ty: P<Ty>,\n}",
        "start": {
          "row": 423,
          "column": 1
        },
        "end": {
          "row": 428,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 423,
          "column": 1
        },
        "end": {
          "row": 423,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "WhereEqPredicate",
        "start": {
          "row": 423,
          "column": 12
        },
        "end": {
          "row": 423,
          "column": 28
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub id: NodeId,\n    pub span: Span,\n    pub lhs_ty: P<Ty>,\n    pub rhs_ty: P<Ty>,\n}",
        "start": {
          "row": 423,
          "column": 29
        },
        "end": {
          "row": 428,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 424,
          "column": 5
        },
        "end": {
          "row": 424,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 424,
          "column": 5
        },
        "end": {
          "row": 424,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 424,
          "column": 9
        },
        "end": {
          "row": 424,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 424,
          "column": 13
        },
        "end": {
          "row": 424,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 425,
          "column": 5
        },
        "end": {
          "row": 425,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 425,
          "column": 5
        },
        "end": {
          "row": 425,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 425,
          "column": 9
        },
        "end": {
          "row": 425,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 425,
          "column": 15
        },
        "end": {
          "row": 425,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub lhs_ty: P<Ty>",
        "start": {
          "row": 426,
          "column": 5
        },
        "end": {
          "row": 426,
          "column": 22
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 426,
          "column": 5
        },
        "end": {
          "row": 426,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "lhs_ty",
        "start": {
          "row": 426,
          "column": 9
        },
        "end": {
          "row": 426,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 426,
          "column": 17
        },
        "end": {
          "row": 426,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 426,
          "column": 17
        },
        "end": {
          "row": 426,
          "column": 18
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 426,
          "column": 18
        },
        "end": {
          "row": 426,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 426,
          "column": 19
        },
        "end": {
          "row": 426,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub rhs_ty: P<Ty>",
        "start": {
          "row": 427,
          "column": 5
        },
        "end": {
          "row": 427,
          "column": 22
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 427,
          "column": 5
        },
        "end": {
          "row": 427,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "rhs_ty",
        "start": {
          "row": 427,
          "column": 9
        },
        "end": {
          "row": 427,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 427,
          "column": 17
        },
        "end": {
          "row": 427,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 427,
          "column": 17
        },
        "end": {
          "row": 427,
          "column": 18
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 427,
          "column": 18
        },
        "end": {
          "row": 427,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 427,
          "column": 19
        },
        "end": {
          "row": 427,
          "column": 21
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The set of MetaItems that define the compilation environment of the crate,",
        "start": {
          "row": 430,
          "column": 1
        },
        "end": {
          "row": 430,
          "column": 79
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// used to drive conditional compilation",
        "start": {
          "row": 431,
          "column": 1
        },
        "end": {
          "row": 431,
          "column": 42
        }
      },
      {
        "kind": "type_item",
        "name": "query",
        "text": "pub type CrateConfig = HashSet<(Name, Option<Symbol>)>;",
        "start": {
          "row": 432,
          "column": 1
        },
        "end": {
          "row": 432,
          "column": 56
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 432,
          "column": 1
        },
        "end": {
          "row": 432,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "CrateConfig",
        "start": {
          "row": 432,
          "column": 10
        },
        "end": {
          "row": 432,
          "column": 21
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "HashSet<(Name, Option<Symbol>)>",
        "start": {
          "row": 432,
          "column": 24
        },
        "end": {
          "row": 432,
          "column": 55
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "HashSet",
        "start": {
          "row": 432,
          "column": 24
        },
        "end": {
          "row": 432,
          "column": 31
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<(Name, Option<Symbol>)>",
        "start": {
          "row": 432,
          "column": 31
        },
        "end": {
          "row": 432,
          "column": 55
        }
      },
      {
        "kind": "tuple_type",
        "name": "query",
        "text": "(Name, Option<Symbol>)",
        "start": {
          "row": 432,
          "column": 32
        },
        "end": {
          "row": 432,
          "column": 54
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Name",
        "start": {
          "row": 432,
          "column": 33
        },
        "end": {
          "row": 432,
          "column": 37
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<Symbol>",
        "start": {
          "row": 432,
          "column": 39
        },
        "end": {
          "row": 432,
          "column": 53
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 432,
          "column": 39
        },
        "end": {
          "row": 432,
          "column": 45
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Symbol>",
        "start": {
          "row": 432,
          "column": 45
        },
        "end": {
          "row": 432,
          "column": 53
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Symbol",
        "start": {
          "row": 432,
          "column": 46
        },
        "end": {
          "row": 432,
          "column": 52
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 434,
          "column": 1
        },
        "end": {
          "row": 434,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 434,
          "column": 3
        },
        "end": {
          "row": 434,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 434,
          "column": 3
        },
        "end": {
          "row": 434,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 434,
          "column": 9
        },
        "end": {
          "row": 434,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 434,
          "column": 10
        },
        "end": {
          "row": 434,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 434,
          "column": 10
        },
        "end": {
          "row": 434,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 434,
          "column": 17
        },
        "end": {
          "row": 434,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 434,
          "column": 17
        },
        "end": {
          "row": 434,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 434,
          "column": 28
        },
        "end": {
          "row": 434,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 434,
          "column": 28
        },
        "end": {
          "row": 434,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 434,
          "column": 32
        },
        "end": {
          "row": 434,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 434,
          "column": 32
        },
        "end": {
          "row": 434,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 434,
          "column": 48
        },
        "end": {
          "row": 434,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 434,
          "column": 48
        },
        "end": {
          "row": 434,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 434,
          "column": 64
        },
        "end": {
          "row": 434,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 434,
          "column": 64
        },
        "end": {
          "row": 434,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 434,
          "column": 70
        },
        "end": {
          "row": 434,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 434,
          "column": 70
        },
        "end": {
          "row": 434,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Crate {\n    pub module: Mod,\n    pub attrs: Vec<Attribute>,\n    pub span: Span,\n}",
        "start": {
          "row": 435,
          "column": 1
        },
        "end": {
          "row": 439,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 435,
          "column": 1
        },
        "end": {
          "row": 435,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Crate",
        "start": {
          "row": 435,
          "column": 12
        },
        "end": {
          "row": 435,
          "column": 17
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub module: Mod,\n    pub attrs: Vec<Attribute>,\n    pub span: Span,\n}",
        "start": {
          "row": 435,
          "column": 18
        },
        "end": {
          "row": 439,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub module: Mod",
        "start": {
          "row": 436,
          "column": 5
        },
        "end": {
          "row": 436,
          "column": 20
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 436,
          "column": 5
        },
        "end": {
          "row": 436,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "module",
        "start": {
          "row": 436,
          "column": 9
        },
        "end": {
          "row": 436,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mod",
        "start": {
          "row": 436,
          "column": 17
        },
        "end": {
          "row": 436,
          "column": 20
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: Vec<Attribute>",
        "start": {
          "row": 437,
          "column": 5
        },
        "end": {
          "row": 437,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 437,
          "column": 5
        },
        "end": {
          "row": 437,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 437,
          "column": 9
        },
        "end": {
          "row": 437,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Attribute>",
        "start": {
          "row": 437,
          "column": 16
        },
        "end": {
          "row": 437,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 437,
          "column": 16
        },
        "end": {
          "row": 437,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 437,
          "column": 19
        },
        "end": {
          "row": 437,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 437,
          "column": 20
        },
        "end": {
          "row": 437,
          "column": 29
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 438,
          "column": 5
        },
        "end": {
          "row": 438,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 438,
          "column": 5
        },
        "end": {
          "row": 438,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 438,
          "column": 9
        },
        "end": {
          "row": 438,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 438,
          "column": 15
        },
        "end": {
          "row": 438,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A spanned compile-time attribute list item.",
        "start": {
          "row": 441,
          "column": 1
        },
        "end": {
          "row": 441,
          "column": 48
        }
      },
      {
        "kind": "type_item",
        "name": "query",
        "text": "pub type NestedMetaItem = Spanned<NestedMetaItemKind>;",
        "start": {
          "row": 442,
          "column": 1
        },
        "end": {
          "row": 442,
          "column": 55
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 442,
          "column": 1
        },
        "end": {
          "row": 442,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NestedMetaItem",
        "start": {
          "row": 442,
          "column": 10
        },
        "end": {
          "row": 442,
          "column": 24
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Spanned<NestedMetaItemKind>",
        "start": {
          "row": 442,
          "column": 27
        },
        "end": {
          "row": 442,
          "column": 54
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Spanned",
        "start": {
          "row": 442,
          "column": 27
        },
        "end": {
          "row": 442,
          "column": 34
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<NestedMetaItemKind>",
        "start": {
          "row": 442,
          "column": 34
        },
        "end": {
          "row": 442,
          "column": 54
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NestedMetaItemKind",
        "start": {
          "row": 442,
          "column": 35
        },
        "end": {
          "row": 442,
          "column": 53
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Possible values inside of compile-time attribute lists.",
        "start": {
          "row": 444,
          "column": 1
        },
        "end": {
          "row": 444,
          "column": 60
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 445,
          "column": 1
        },
        "end": {
          "row": 445,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. the '..' in `#[name(..)]`.",
        "start": {
          "row": 446,
          "column": 1
        },
        "end": {
          "row": 446,
          "column": 36
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, Eq, RustcEncodable, RustcDecodable, Hash, Debug, PartialEq)]",
        "start": {
          "row": 447,
          "column": 1
        },
        "end": {
          "row": 447,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, Eq, RustcEncodable, RustcDecodable, Hash, Debug, PartialEq)",
        "start": {
          "row": 447,
          "column": 3
        },
        "end": {
          "row": 447,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 447,
          "column": 3
        },
        "end": {
          "row": 447,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, Eq, RustcEncodable, RustcDecodable, Hash, Debug, PartialEq)",
        "start": {
          "row": 447,
          "column": 9
        },
        "end": {
          "row": 447,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 447,
          "column": 10
        },
        "end": {
          "row": 447,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 447,
          "column": 10
        },
        "end": {
          "row": 447,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 447,
          "column": 17
        },
        "end": {
          "row": 447,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 447,
          "column": 17
        },
        "end": {
          "row": 447,
          "column": 19
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 447,
          "column": 21
        },
        "end": {
          "row": 447,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 447,
          "column": 21
        },
        "end": {
          "row": 447,
          "column": 35
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 447,
          "column": 37
        },
        "end": {
          "row": 447,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 447,
          "column": 37
        },
        "end": {
          "row": 447,
          "column": 51
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 447,
          "column": 53
        },
        "end": {
          "row": 447,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 447,
          "column": 53
        },
        "end": {
          "row": 447,
          "column": 57
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 447,
          "column": 59
        },
        "end": {
          "row": 447,
          "column": 64
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 447,
          "column": 59
        },
        "end": {
          "row": 447,
          "column": 64
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 447,
          "column": 66
        },
        "end": {
          "row": 447,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 447,
          "column": 66
        },
        "end": {
          "row": 447,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum NestedMetaItemKind {\n    /// A full MetaItem, for recursive meta items.\n    MetaItem(MetaItem),\n    /// A literal.\n    ///\n    /// E.g. \"foo\", 64, true\n    Literal(Lit),\n}",
        "start": {
          "row": 448,
          "column": 1
        },
        "end": {
          "row": 455,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 448,
          "column": 1
        },
        "end": {
          "row": 448,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NestedMetaItemKind",
        "start": {
          "row": 448,
          "column": 10
        },
        "end": {
          "row": 448,
          "column": 28
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// A full MetaItem, for recursive meta items.\n    MetaItem(MetaItem),\n    /// A literal.\n    ///\n    /// E.g. \"foo\", 64, true\n    Literal(Lit),\n}",
        "start": {
          "row": 448,
          "column": 29
        },
        "end": {
          "row": 455,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A full MetaItem, for recursive meta items.",
        "start": {
          "row": 449,
          "column": 5
        },
        "end": {
          "row": 449,
          "column": 51
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "MetaItem(MetaItem)",
        "start": {
          "row": 450,
          "column": 5
        },
        "end": {
          "row": 450,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "MetaItem",
        "start": {
          "row": 450,
          "column": 5
        },
        "end": {
          "row": 450,
          "column": 13
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(MetaItem)",
        "start": {
          "row": 450,
          "column": 13
        },
        "end": {
          "row": 450,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MetaItem",
        "start": {
          "row": 450,
          "column": 14
        },
        "end": {
          "row": 450,
          "column": 22
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A literal.",
        "start": {
          "row": 451,
          "column": 5
        },
        "end": {
          "row": 451,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 452,
          "column": 5
        },
        "end": {
          "row": 452,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. \"foo\", 64, true",
        "start": {
          "row": 453,
          "column": 5
        },
        "end": {
          "row": 453,
          "column": 29
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Literal(Lit)",
        "start": {
          "row": 454,
          "column": 5
        },
        "end": {
          "row": 454,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Literal",
        "start": {
          "row": 454,
          "column": 5
        },
        "end": {
          "row": 454,
          "column": 12
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Lit)",
        "start": {
          "row": 454,
          "column": 12
        },
        "end": {
          "row": 454,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lit",
        "start": {
          "row": 454,
          "column": 13
        },
        "end": {
          "row": 454,
          "column": 16
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A spanned compile-time attribute item.",
        "start": {
          "row": 457,
          "column": 1
        },
        "end": {
          "row": 457,
          "column": 43
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 458,
          "column": 1
        },
        "end": {
          "row": 458,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `#[test]`, `#[derive(..)]` or `#[feature = \"foo\"]`",
        "start": {
          "row": 459,
          "column": 1
        },
        "end": {
          "row": 459,
          "column": 60
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 460,
          "column": 1
        },
        "end": {
          "row": 460,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 460,
          "column": 3
        },
        "end": {
          "row": 460,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 460,
          "column": 3
        },
        "end": {
          "row": 460,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 460,
          "column": 9
        },
        "end": {
          "row": 460,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 460,
          "column": 10
        },
        "end": {
          "row": 460,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 460,
          "column": 10
        },
        "end": {
          "row": 460,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 460,
          "column": 17
        },
        "end": {
          "row": 460,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 460,
          "column": 17
        },
        "end": {
          "row": 460,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 460,
          "column": 28
        },
        "end": {
          "row": 460,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 460,
          "column": 28
        },
        "end": {
          "row": 460,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 460,
          "column": 32
        },
        "end": {
          "row": 460,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 460,
          "column": 32
        },
        "end": {
          "row": 460,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 460,
          "column": 48
        },
        "end": {
          "row": 460,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 460,
          "column": 48
        },
        "end": {
          "row": 460,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 460,
          "column": 64
        },
        "end": {
          "row": 460,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 460,
          "column": 64
        },
        "end": {
          "row": 460,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 460,
          "column": 70
        },
        "end": {
          "row": 460,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 460,
          "column": 70
        },
        "end": {
          "row": 460,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct MetaItem {\n    pub name: Name,\n    pub node: MetaItemKind,\n    pub span: Span,\n}",
        "start": {
          "row": 461,
          "column": 1
        },
        "end": {
          "row": 465,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 461,
          "column": 1
        },
        "end": {
          "row": 461,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MetaItem",
        "start": {
          "row": 461,
          "column": 12
        },
        "end": {
          "row": 461,
          "column": 20
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub name: Name,\n    pub node: MetaItemKind,\n    pub span: Span,\n}",
        "start": {
          "row": 461,
          "column": 21
        },
        "end": {
          "row": 465,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub name: Name",
        "start": {
          "row": 462,
          "column": 5
        },
        "end": {
          "row": 462,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 462,
          "column": 5
        },
        "end": {
          "row": 462,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 462,
          "column": 9
        },
        "end": {
          "row": 462,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Name",
        "start": {
          "row": 462,
          "column": 15
        },
        "end": {
          "row": 462,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub node: MetaItemKind",
        "start": {
          "row": 463,
          "column": 5
        },
        "end": {
          "row": 463,
          "column": 27
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 463,
          "column": 5
        },
        "end": {
          "row": 463,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 463,
          "column": 9
        },
        "end": {
          "row": 463,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MetaItemKind",
        "start": {
          "row": 463,
          "column": 15
        },
        "end": {
          "row": 463,
          "column": 27
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 464,
          "column": 5
        },
        "end": {
          "row": 464,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 464,
          "column": 5
        },
        "end": {
          "row": 464,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 464,
          "column": 9
        },
        "end": {
          "row": 464,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 464,
          "column": 15
        },
        "end": {
          "row": 464,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A compile-time attribute item.",
        "start": {
          "row": 467,
          "column": 1
        },
        "end": {
          "row": 467,
          "column": 35
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 468,
          "column": 1
        },
        "end": {
          "row": 468,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `#[test]`, `#[derive(..)]` or `#[feature = \"foo\"]`",
        "start": {
          "row": 469,
          "column": 1
        },
        "end": {
          "row": 469,
          "column": 60
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 470,
          "column": 1
        },
        "end": {
          "row": 470,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 470,
          "column": 3
        },
        "end": {
          "row": 470,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 470,
          "column": 3
        },
        "end": {
          "row": 470,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 470,
          "column": 9
        },
        "end": {
          "row": 470,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 470,
          "column": 10
        },
        "end": {
          "row": 470,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 470,
          "column": 10
        },
        "end": {
          "row": 470,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 470,
          "column": 17
        },
        "end": {
          "row": 470,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 470,
          "column": 17
        },
        "end": {
          "row": 470,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 470,
          "column": 28
        },
        "end": {
          "row": 470,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 470,
          "column": 28
        },
        "end": {
          "row": 470,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 470,
          "column": 32
        },
        "end": {
          "row": 470,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 470,
          "column": 32
        },
        "end": {
          "row": 470,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 470,
          "column": 48
        },
        "end": {
          "row": 470,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 470,
          "column": 48
        },
        "end": {
          "row": 470,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 470,
          "column": 64
        },
        "end": {
          "row": 470,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 470,
          "column": 64
        },
        "end": {
          "row": 470,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 470,
          "column": 70
        },
        "end": {
          "row": 470,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 470,
          "column": 70
        },
        "end": {
          "row": 470,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum MetaItemKind {\n    /// Word meta item.\n    ///\n    /// E.g. `test` as in `#[test]`\n    Word,\n    /// List meta item.\n    ///\n    /// E.g. `derive(..)` as in `#[derive(..)]`\n    List(Vec<NestedMetaItem>),\n    /// Name value meta item.\n    ///\n    /// E.g. `feature = \"foo\"` as in `#[feature = \"foo\"]`\n    NameValue(Lit)\n}",
        "start": {
          "row": 471,
          "column": 1
        },
        "end": {
          "row": 484,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 471,
          "column": 1
        },
        "end": {
          "row": 471,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MetaItemKind",
        "start": {
          "row": 471,
          "column": 10
        },
        "end": {
          "row": 471,
          "column": 22
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// Word meta item.\n    ///\n    /// E.g. `test` as in `#[test]`\n    Word,\n    /// List meta item.\n    ///\n    /// E.g. `derive(..)` as in `#[derive(..)]`\n    List(Vec<NestedMetaItem>),\n    /// Name value meta item.\n    ///\n    /// E.g. `feature = \"foo\"` as in `#[feature = \"foo\"]`\n    NameValue(Lit)\n}",
        "start": {
          "row": 471,
          "column": 23
        },
        "end": {
          "row": 484,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Word meta item.",
        "start": {
          "row": 472,
          "column": 5
        },
        "end": {
          "row": 472,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 473,
          "column": 5
        },
        "end": {
          "row": 473,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `test` as in `#[test]`",
        "start": {
          "row": 474,
          "column": 5
        },
        "end": {
          "row": 474,
          "column": 36
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Word",
        "start": {
          "row": 475,
          "column": 5
        },
        "end": {
          "row": 475,
          "column": 9
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Word",
        "start": {
          "row": 475,
          "column": 5
        },
        "end": {
          "row": 475,
          "column": 9
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// List meta item.",
        "start": {
          "row": 476,
          "column": 5
        },
        "end": {
          "row": 476,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 477,
          "column": 5
        },
        "end": {
          "row": 477,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `derive(..)` as in `#[derive(..)]`",
        "start": {
          "row": 478,
          "column": 5
        },
        "end": {
          "row": 478,
          "column": 48
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "List(Vec<NestedMetaItem>)",
        "start": {
          "row": 479,
          "column": 5
        },
        "end": {
          "row": 479,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "List",
        "start": {
          "row": 479,
          "column": 5
        },
        "end": {
          "row": 479,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Vec<NestedMetaItem>)",
        "start": {
          "row": 479,
          "column": 9
        },
        "end": {
          "row": 479,
          "column": 30
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<NestedMetaItem>",
        "start": {
          "row": 479,
          "column": 10
        },
        "end": {
          "row": 479,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 479,
          "column": 10
        },
        "end": {
          "row": 479,
          "column": 13
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<NestedMetaItem>",
        "start": {
          "row": 479,
          "column": 13
        },
        "end": {
          "row": 479,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NestedMetaItem",
        "start": {
          "row": 479,
          "column": 14
        },
        "end": {
          "row": 479,
          "column": 28
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Name value meta item.",
        "start": {
          "row": 480,
          "column": 5
        },
        "end": {
          "row": 480,
          "column": 30
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 481,
          "column": 5
        },
        "end": {
          "row": 481,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `feature = \"foo\"` as in `#[feature = \"foo\"]`",
        "start": {
          "row": 482,
          "column": 5
        },
        "end": {
          "row": 482,
          "column": 58
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "NameValue(Lit)",
        "start": {
          "row": 483,
          "column": 5
        },
        "end": {
          "row": 483,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "NameValue",
        "start": {
          "row": 483,
          "column": 5
        },
        "end": {
          "row": 483,
          "column": 14
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Lit)",
        "start": {
          "row": 483,
          "column": 14
        },
        "end": {
          "row": 483,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lit",
        "start": {
          "row": 483,
          "column": 15
        },
        "end": {
          "row": 483,
          "column": 18
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A Block (`{ .. }`).",
        "start": {
          "row": 486,
          "column": 1
        },
        "end": {
          "row": 486,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 487,
          "column": 1
        },
        "end": {
          "row": 487,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `{ .. }` as in `fn foo() { .. }`",
        "start": {
          "row": 488,
          "column": 1
        },
        "end": {
          "row": 488,
          "column": 42
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 489,
          "column": 1
        },
        "end": {
          "row": 489,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 489,
          "column": 3
        },
        "end": {
          "row": 489,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 489,
          "column": 3
        },
        "end": {
          "row": 489,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 489,
          "column": 9
        },
        "end": {
          "row": 489,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 489,
          "column": 10
        },
        "end": {
          "row": 489,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 489,
          "column": 10
        },
        "end": {
          "row": 489,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 489,
          "column": 17
        },
        "end": {
          "row": 489,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 489,
          "column": 17
        },
        "end": {
          "row": 489,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 489,
          "column": 28
        },
        "end": {
          "row": 489,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 489,
          "column": 28
        },
        "end": {
          "row": 489,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 489,
          "column": 32
        },
        "end": {
          "row": 489,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 489,
          "column": 32
        },
        "end": {
          "row": 489,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 489,
          "column": 48
        },
        "end": {
          "row": 489,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 489,
          "column": 48
        },
        "end": {
          "row": 489,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 489,
          "column": 64
        },
        "end": {
          "row": 489,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 489,
          "column": 64
        },
        "end": {
          "row": 489,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 489,
          "column": 70
        },
        "end": {
          "row": 489,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 489,
          "column": 70
        },
        "end": {
          "row": 489,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Block {\n    /// Statements in a block\n    pub stmts: Vec<Stmt>,\n    pub id: NodeId,\n    /// Distinguishes between `unsafe { ... }` and `{ ... }`\n    pub rules: BlockCheckMode,\n    pub span: Span,\n    pub recovered: bool,\n}",
        "start": {
          "row": 490,
          "column": 1
        },
        "end": {
          "row": 498,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 490,
          "column": 1
        },
        "end": {
          "row": 490,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 490,
          "column": 12
        },
        "end": {
          "row": 490,
          "column": 17
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    /// Statements in a block\n    pub stmts: Vec<Stmt>,\n    pub id: NodeId,\n    /// Distinguishes between `unsafe { ... }` and `{ ... }`\n    pub rules: BlockCheckMode,\n    pub span: Span,\n    pub recovered: bool,\n}",
        "start": {
          "row": 490,
          "column": 18
        },
        "end": {
          "row": 498,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Statements in a block",
        "start": {
          "row": 491,
          "column": 5
        },
        "end": {
          "row": 491,
          "column": 30
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub stmts: Vec<Stmt>",
        "start": {
          "row": 492,
          "column": 5
        },
        "end": {
          "row": 492,
          "column": 25
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 492,
          "column": 5
        },
        "end": {
          "row": 492,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "stmts",
        "start": {
          "row": 492,
          "column": 9
        },
        "end": {
          "row": 492,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Stmt>",
        "start": {
          "row": 492,
          "column": 16
        },
        "end": {
          "row": 492,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 492,
          "column": 16
        },
        "end": {
          "row": 492,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Stmt>",
        "start": {
          "row": 492,
          "column": 19
        },
        "end": {
          "row": 492,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Stmt",
        "start": {
          "row": 492,
          "column": 20
        },
        "end": {
          "row": 492,
          "column": 24
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 493,
          "column": 5
        },
        "end": {
          "row": 493,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 493,
          "column": 5
        },
        "end": {
          "row": 493,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 493,
          "column": 9
        },
        "end": {
          "row": 493,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 493,
          "column": 13
        },
        "end": {
          "row": 493,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Distinguishes between `unsafe { ... }` and `{ ... }`",
        "start": {
          "row": 494,
          "column": 5
        },
        "end": {
          "row": 494,
          "column": 61
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub rules: BlockCheckMode",
        "start": {
          "row": 495,
          "column": 5
        },
        "end": {
          "row": 495,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 495,
          "column": 5
        },
        "end": {
          "row": 495,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "rules",
        "start": {
          "row": 495,
          "column": 9
        },
        "end": {
          "row": 495,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "BlockCheckMode",
        "start": {
          "row": 495,
          "column": 16
        },
        "end": {
          "row": 495,
          "column": 30
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 496,
          "column": 5
        },
        "end": {
          "row": 496,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 496,
          "column": 5
        },
        "end": {
          "row": 496,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 496,
          "column": 9
        },
        "end": {
          "row": 496,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 496,
          "column": 15
        },
        "end": {
          "row": 496,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub recovered: bool",
        "start": {
          "row": 497,
          "column": 5
        },
        "end": {
          "row": 497,
          "column": 24
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 497,
          "column": 5
        },
        "end": {
          "row": 497,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "recovered",
        "start": {
          "row": 497,
          "column": 9
        },
        "end": {
          "row": 497,
          "column": 18
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 497,
          "column": 20
        },
        "end": {
          "row": 497,
          "column": 24
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]",
        "start": {
          "row": 500,
          "column": 1
        },
        "end": {
          "row": 500,
          "column": 70
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)",
        "start": {
          "row": 500,
          "column": 3
        },
        "end": {
          "row": 500,
          "column": 69
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 500,
          "column": 3
        },
        "end": {
          "row": 500,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)",
        "start": {
          "row": 500,
          "column": 9
        },
        "end": {
          "row": 500,
          "column": 69
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 500,
          "column": 10
        },
        "end": {
          "row": 500,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 500,
          "column": 10
        },
        "end": {
          "row": 500,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 500,
          "column": 17
        },
        "end": {
          "row": 500,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 500,
          "column": 17
        },
        "end": {
          "row": 500,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 500,
          "column": 28
        },
        "end": {
          "row": 500,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 500,
          "column": 28
        },
        "end": {
          "row": 500,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 500,
          "column": 32
        },
        "end": {
          "row": 500,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 500,
          "column": 32
        },
        "end": {
          "row": 500,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 500,
          "column": 48
        },
        "end": {
          "row": 500,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 500,
          "column": 48
        },
        "end": {
          "row": 500,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 500,
          "column": 64
        },
        "end": {
          "row": 500,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 500,
          "column": 64
        },
        "end": {
          "row": 500,
          "column": 68
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Pat {\n    pub id: NodeId,\n    pub node: PatKind,\n    pub span: Span,\n}",
        "start": {
          "row": 501,
          "column": 1
        },
        "end": {
          "row": 505,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 501,
          "column": 1
        },
        "end": {
          "row": 501,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 501,
          "column": 12
        },
        "end": {
          "row": 501,
          "column": 15
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub id: NodeId,\n    pub node: PatKind,\n    pub span: Span,\n}",
        "start": {
          "row": 501,
          "column": 16
        },
        "end": {
          "row": 505,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 502,
          "column": 5
        },
        "end": {
          "row": 502,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 502,
          "column": 5
        },
        "end": {
          "row": 502,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 502,
          "column": 9
        },
        "end": {
          "row": 502,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 502,
          "column": 13
        },
        "end": {
          "row": 502,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub node: PatKind",
        "start": {
          "row": 503,
          "column": 5
        },
        "end": {
          "row": 503,
          "column": 22
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 503,
          "column": 5
        },
        "end": {
          "row": 503,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 503,
          "column": 9
        },
        "end": {
          "row": 503,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 503,
          "column": 15
        },
        "end": {
          "row": 503,
          "column": 22
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 504,
          "column": 5
        },
        "end": {
          "row": 504,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 504,
          "column": 5
        },
        "end": {
          "row": 504,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 504,
          "column": 9
        },
        "end": {
          "row": 504,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 504,
          "column": 15
        },
        "end": {
          "row": 504,
          "column": 19
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Debug for Pat {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"pat({}: {})\", self.id, pprust::pat_to_string(self))\n    }\n}",
        "start": {
          "row": 507,
          "column": 1
        },
        "end": {
          "row": 511,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Debug",
        "start": {
          "row": 507,
          "column": 6
        },
        "end": {
          "row": 507,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 507,
          "column": 6
        },
        "end": {
          "row": 507,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 507,
          "column": 11
        },
        "end": {
          "row": 507,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 507,
          "column": 21
        },
        "end": {
          "row": 507,
          "column": 24
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"pat({}: {})\", self.id, pprust::pat_to_string(self))\n    }\n}",
        "start": {
          "row": 507,
          "column": 25
        },
        "end": {
          "row": 511,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"pat({}: {})\", self.id, pprust::pat_to_string(self))\n    }",
        "start": {
          "row": 508,
          "column": 5
        },
        "end": {
          "row": 510,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 508,
          "column": 8
        },
        "end": {
          "row": 508,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 508,
          "column": 11
        },
        "end": {
          "row": 508,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 508,
          "column": 12
        },
        "end": {
          "row": 508,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 508,
          "column": 13
        },
        "end": {
          "row": 508,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 508,
          "column": 19
        },
        "end": {
          "row": 508,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 508,
          "column": 19
        },
        "end": {
          "row": 508,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 508,
          "column": 22
        },
        "end": {
          "row": 508,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 508,
          "column": 23
        },
        "end": {
          "row": 508,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 508,
          "column": 27
        },
        "end": {
          "row": 508,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 508,
          "column": 27
        },
        "end": {
          "row": 508,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 508,
          "column": 32
        },
        "end": {
          "row": 508,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 508,
          "column": 46
        },
        "end": {
          "row": 508,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 508,
          "column": 46
        },
        "end": {
          "row": 508,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 508,
          "column": 51
        },
        "end": {
          "row": 508,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        write!(f, \"pat({}: {})\", self.id, pprust::pat_to_string(self))\n    }",
        "start": {
          "row": 508,
          "column": 58
        },
        "end": {
          "row": 510,
          "column": 6
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "write!(f, \"pat({}: {})\", self.id, pprust::pat_to_string(self))",
        "start": {
          "row": 509,
          "column": 9
        },
        "end": {
          "row": 509,
          "column": 71
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "write",
        "start": {
          "row": 509,
          "column": 9
        },
        "end": {
          "row": 509,
          "column": 14
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(f, \"pat({}: {})\", self.id, pprust::pat_to_string(self))",
        "start": {
          "row": 509,
          "column": 15
        },
        "end": {
          "row": 509,
          "column": 71
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 509,
          "column": 16
        },
        "end": {
          "row": 509,
          "column": 17
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"pat({}: {})\"",
        "start": {
          "row": 509,
          "column": 19
        },
        "end": {
          "row": 509,
          "column": 32
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 509,
          "column": 34
        },
        "end": {
          "row": 509,
          "column": 38
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 509,
          "column": 39
        },
        "end": {
          "row": 509,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pprust",
        "start": {
          "row": 509,
          "column": 43
        },
        "end": {
          "row": 509,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pat_to_string",
        "start": {
          "row": 509,
          "column": 51
        },
        "end": {
          "row": 509,
          "column": 64
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 509,
          "column": 64
        },
        "end": {
          "row": 509,
          "column": 70
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 509,
          "column": 65
        },
        "end": {
          "row": 509,
          "column": 69
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl Pat {\n    pub(super) fn to_ty(&self) -> Option<P<Ty>> {\n        let node = match &self.node {\n            PatKind::Wild => TyKind::Infer,\n            PatKind::Ident(BindingMode::ByValue(Mutability::Immutable), ident, None) =>\n                TyKind::Path(None, Path::from_ident(ident.span, ident.node)),\n            PatKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            PatKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            PatKind::Ref(pat, mutbl) =>\n                pat.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            PatKind::Slice(pats, None, _) if pats.len() == 1 =>\n                pats[0].to_ty().map(TyKind::Slice)?,\n            PatKind::Tuple(pats, None) => {\n                let mut tys = Vec::new();\n                for pat in pats {\n                    tys.push(pat.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            _ => return None,\n        };\n\n        Some(P(Ty { node, id: self.id, span: self.span }))\n    }\n\n    pub fn walk<F>(&self, it: &mut F) -> bool\n        where F: FnMut(&Pat) -> bool\n    {\n        if !it(self) {\n            return false;\n        }\n\n        match self.node {\n            PatKind::Ident(_, _, Some(ref p)) => p.walk(it),\n            PatKind::Struct(_, ref fields, _) => {\n                fields.iter().all(|field| field.node.pat.walk(it))\n            }\n            PatKind::TupleStruct(_, ref s, _) | PatKind::Tuple(ref s, _) => {\n                s.iter().all(|p| p.walk(it))\n            }\n            PatKind::Box(ref s) | PatKind::Ref(ref s, _) => {\n                s.walk(it)\n            }\n            PatKind::Slice(ref before, ref slice, ref after) => {\n                before.iter().all(|p| p.walk(it)) &&\n                slice.iter().all(|p| p.walk(it)) &&\n                after.iter().all(|p| p.walk(it))\n            }\n            PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..) |\n            PatKind::Ident(..) |\n            PatKind::Path(..) |\n            PatKind::Mac(_) => {\n                true\n            }\n        }\n    }\n}",
        "start": {
          "row": 513,
          "column": 1
        },
        "end": {
          "row": 571,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 513,
          "column": 6
        },
        "end": {
          "row": 513,
          "column": 9
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub(super) fn to_ty(&self) -> Option<P<Ty>> {\n        let node = match &self.node {\n            PatKind::Wild => TyKind::Infer,\n            PatKind::Ident(BindingMode::ByValue(Mutability::Immutable), ident, None) =>\n                TyKind::Path(None, Path::from_ident(ident.span, ident.node)),\n            PatKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            PatKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            PatKind::Ref(pat, mutbl) =>\n                pat.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            PatKind::Slice(pats, None, _) if pats.len() == 1 =>\n                pats[0].to_ty().map(TyKind::Slice)?,\n            PatKind::Tuple(pats, None) => {\n                let mut tys = Vec::new();\n                for pat in pats {\n                    tys.push(pat.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            _ => return None,\n        };\n\n        Some(P(Ty { node, id: self.id, span: self.span }))\n    }\n\n    pub fn walk<F>(&self, it: &mut F) -> bool\n        where F: FnMut(&Pat) -> bool\n    {\n        if !it(self) {\n            return false;\n        }\n\n        match self.node {\n            PatKind::Ident(_, _, Some(ref p)) => p.walk(it),\n            PatKind::Struct(_, ref fields, _) => {\n                fields.iter().all(|field| field.node.pat.walk(it))\n            }\n            PatKind::TupleStruct(_, ref s, _) | PatKind::Tuple(ref s, _) => {\n                s.iter().all(|p| p.walk(it))\n            }\n            PatKind::Box(ref s) | PatKind::Ref(ref s, _) => {\n                s.walk(it)\n            }\n            PatKind::Slice(ref before, ref slice, ref after) => {\n                before.iter().all(|p| p.walk(it)) &&\n                slice.iter().all(|p| p.walk(it)) &&\n                after.iter().all(|p| p.walk(it))\n            }\n            PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..) |\n            PatKind::Ident(..) |\n            PatKind::Path(..) |\n            PatKind::Mac(_) => {\n                true\n            }\n        }\n    }\n}",
        "start": {
          "row": 513,
          "column": 10
        },
        "end": {
          "row": 571,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub(super) fn to_ty(&self) -> Option<P<Ty>> {\n        let node = match &self.node {\n            PatKind::Wild => TyKind::Infer,\n            PatKind::Ident(BindingMode::ByValue(Mutability::Immutable), ident, None) =>\n                TyKind::Path(None, Path::from_ident(ident.span, ident.node)),\n            PatKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            PatKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            PatKind::Ref(pat, mutbl) =>\n                pat.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            PatKind::Slice(pats, None, _) if pats.len() == 1 =>\n                pats[0].to_ty().map(TyKind::Slice)?,\n            PatKind::Tuple(pats, None) => {\n                let mut tys = Vec::new();\n                for pat in pats {\n                    tys.push(pat.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            _ => return None,\n        };\n\n        Some(P(Ty { node, id: self.id, span: self.span }))\n    }",
        "start": {
          "row": 514,
          "column": 5
        },
        "end": {
          "row": 536,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub(super)",
        "start": {
          "row": 514,
          "column": 5
        },
        "end": {
          "row": 514,
          "column": 15
        }
      },
      {
        "kind": "super",
        "name": "query",
        "text": "super",
        "start": {
          "row": 514,
          "column": 9
        },
        "end": {
          "row": 514,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "to_ty",
        "start": {
          "row": 514,
          "column": 19
        },
        "end": {
          "row": 514,
          "column": 24
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 514,
          "column": 24
        },
        "end": {
          "row": 514,
          "column": 31
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 514,
          "column": 25
        },
        "end": {
          "row": 514,
          "column": 30
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 514,
          "column": 26
        },
        "end": {
          "row": 514,
          "column": 30
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Ty>>",
        "start": {
          "row": 514,
          "column": 35
        },
        "end": {
          "row": 514,
          "column": 48
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 514,
          "column": 35
        },
        "end": {
          "row": 514,
          "column": 41
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Ty>>",
        "start": {
          "row": 514,
          "column": 41
        },
        "end": {
          "row": 514,
          "column": 48
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 514,
          "column": 42
        },
        "end": {
          "row": 514,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 514,
          "column": 42
        },
        "end": {
          "row": 514,
          "column": 43
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 514,
          "column": 43
        },
        "end": {
          "row": 514,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 514,
          "column": 44
        },
        "end": {
          "row": 514,
          "column": 46
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        let node = match &self.node {\n            PatKind::Wild => TyKind::Infer,\n            PatKind::Ident(BindingMode::ByValue(Mutability::Immutable), ident, None) =>\n                TyKind::Path(None, Path::from_ident(ident.span, ident.node)),\n            PatKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            PatKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            PatKind::Ref(pat, mutbl) =>\n                pat.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            PatKind::Slice(pats, None, _) if pats.len() == 1 =>\n                pats[0].to_ty().map(TyKind::Slice)?,\n            PatKind::Tuple(pats, None) => {\n                let mut tys = Vec::new();\n                for pat in pats {\n                    tys.push(pat.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            _ => return None,\n        };\n\n        Some(P(Ty { node, id: self.id, span: self.span }))\n    }",
        "start": {
          "row": 514,
          "column": 49
        },
        "end": {
          "row": 536,
          "column": 6
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let node = match &self.node {\n            PatKind::Wild => TyKind::Infer,\n            PatKind::Ident(BindingMode::ByValue(Mutability::Immutable), ident, None) =>\n                TyKind::Path(None, Path::from_ident(ident.span, ident.node)),\n            PatKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            PatKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            PatKind::Ref(pat, mutbl) =>\n                pat.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            PatKind::Slice(pats, None, _) if pats.len() == 1 =>\n                pats[0].to_ty().map(TyKind::Slice)?,\n            PatKind::Tuple(pats, None) => {\n                let mut tys = Vec::new();\n                for pat in pats {\n                    tys.push(pat.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            _ => return None,\n        };",
        "start": {
          "row": 515,
          "column": 9
        },
        "end": {
          "row": 533,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 515,
          "column": 13
        },
        "end": {
          "row": 515,
          "column": 17
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match &self.node {\n            PatKind::Wild => TyKind::Infer,\n            PatKind::Ident(BindingMode::ByValue(Mutability::Immutable), ident, None) =>\n                TyKind::Path(None, Path::from_ident(ident.span, ident.node)),\n            PatKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            PatKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            PatKind::Ref(pat, mutbl) =>\n                pat.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            PatKind::Slice(pats, None, _) if pats.len() == 1 =>\n                pats[0].to_ty().map(TyKind::Slice)?,\n            PatKind::Tuple(pats, None) => {\n                let mut tys = Vec::new();\n                for pat in pats {\n                    tys.push(pat.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            _ => return None,\n        }",
        "start": {
          "row": 515,
          "column": 20
        },
        "end": {
          "row": 533,
          "column": 10
        }
      },
      {
        "kind": "reference_expression",
        "name": "query",
        "text": "&self.node",
        "start": {
          "row": 515,
          "column": 26
        },
        "end": {
          "row": 515,
          "column": 36
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.node",
        "start": {
          "row": 515,
          "column": 27
        },
        "end": {
          "row": 515,
          "column": 36
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 515,
          "column": 27
        },
        "end": {
          "row": 515,
          "column": 31
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 515,
          "column": 32
        },
        "end": {
          "row": 515,
          "column": 36
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            PatKind::Wild => TyKind::Infer,\n            PatKind::Ident(BindingMode::ByValue(Mutability::Immutable), ident, None) =>\n                TyKind::Path(None, Path::from_ident(ident.span, ident.node)),\n            PatKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            PatKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            PatKind::Ref(pat, mutbl) =>\n                pat.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            PatKind::Slice(pats, None, _) if pats.len() == 1 =>\n                pats[0].to_ty().map(TyKind::Slice)?,\n            PatKind::Tuple(pats, None) => {\n                let mut tys = Vec::new();\n                for pat in pats {\n                    tys.push(pat.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            _ => return None,\n        }",
        "start": {
          "row": 515,
          "column": 37
        },
        "end": {
          "row": 533,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::Wild => TyKind::Infer,",
        "start": {
          "row": 516,
          "column": 13
        },
        "end": {
          "row": 516,
          "column": 44
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::Wild",
        "start": {
          "row": 516,
          "column": 13
        },
        "end": {
          "row": 516,
          "column": 26
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Wild",
        "start": {
          "row": 516,
          "column": 13
        },
        "end": {
          "row": 516,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 516,
          "column": 13
        },
        "end": {
          "row": 516,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Wild",
        "start": {
          "row": 516,
          "column": 22
        },
        "end": {
          "row": 516,
          "column": 26
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Infer",
        "start": {
          "row": 516,
          "column": 30
        },
        "end": {
          "row": 516,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 516,
          "column": 30
        },
        "end": {
          "row": 516,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Infer",
        "start": {
          "row": 516,
          "column": 38
        },
        "end": {
          "row": 516,
          "column": 43
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::Ident(BindingMode::ByValue(Mutability::Immutable), ident, None) =>\n                TyKind::Path(None, Path::from_ident(ident.span, ident.node)),",
        "start": {
          "row": 517,
          "column": 13
        },
        "end": {
          "row": 518,
          "column": 78
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::Ident(BindingMode::ByValue(Mutability::Immutable), ident, None)",
        "start": {
          "row": 517,
          "column": 13
        },
        "end": {
          "row": 517,
          "column": 85
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Ident(BindingMode::ByValue(Mutability::Immutable), ident, None)",
        "start": {
          "row": 517,
          "column": 13
        },
        "end": {
          "row": 517,
          "column": 85
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Ident",
        "start": {
          "row": 517,
          "column": 13
        },
        "end": {
          "row": 517,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 517,
          "column": 13
        },
        "end": {
          "row": 517,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 517,
          "column": 22
        },
        "end": {
          "row": 517,
          "column": 27
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "BindingMode::ByValue(Mutability::Immutable)",
        "start": {
          "row": 517,
          "column": 28
        },
        "end": {
          "row": 517,
          "column": 71
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "BindingMode::ByValue",
        "start": {
          "row": 517,
          "column": 28
        },
        "end": {
          "row": 517,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BindingMode",
        "start": {
          "row": 517,
          "column": 28
        },
        "end": {
          "row": 517,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ByValue",
        "start": {
          "row": 517,
          "column": 41
        },
        "end": {
          "row": 517,
          "column": 48
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Mutability::Immutable",
        "start": {
          "row": 517,
          "column": 49
        },
        "end": {
          "row": 517,
          "column": 70
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mutability",
        "start": {
          "row": 517,
          "column": 49
        },
        "end": {
          "row": 517,
          "column": 59
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Immutable",
        "start": {
          "row": 517,
          "column": 61
        },
        "end": {
          "row": 517,
          "column": 70
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 517,
          "column": 73
        },
        "end": {
          "row": 517,
          "column": 78
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 517,
          "column": 80
        },
        "end": {
          "row": 517,
          "column": 84
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TyKind::Path(None, Path::from_ident(ident.span, ident.node))",
        "start": {
          "row": 518,
          "column": 17
        },
        "end": {
          "row": 518,
          "column": 77
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Path",
        "start": {
          "row": 518,
          "column": 17
        },
        "end": {
          "row": 518,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 518,
          "column": 17
        },
        "end": {
          "row": 518,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 518,
          "column": 25
        },
        "end": {
          "row": 518,
          "column": 29
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(None, Path::from_ident(ident.span, ident.node))",
        "start": {
          "row": 518,
          "column": 29
        },
        "end": {
          "row": 518,
          "column": 77
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 518,
          "column": 30
        },
        "end": {
          "row": 518,
          "column": 34
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Path::from_ident(ident.span, ident.node)",
        "start": {
          "row": 518,
          "column": 36
        },
        "end": {
          "row": 518,
          "column": 76
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Path::from_ident",
        "start": {
          "row": 518,
          "column": 36
        },
        "end": {
          "row": 518,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 518,
          "column": 36
        },
        "end": {
          "row": 518,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "from_ident",
        "start": {
          "row": 518,
          "column": 42
        },
        "end": {
          "row": 518,
          "column": 52
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(ident.span, ident.node)",
        "start": {
          "row": 518,
          "column": 52
        },
        "end": {
          "row": 518,
          "column": 76
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "ident.span",
        "start": {
          "row": 518,
          "column": 53
        },
        "end": {
          "row": 518,
          "column": 63
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 518,
          "column": 53
        },
        "end": {
          "row": 518,
          "column": 58
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 518,
          "column": 59
        },
        "end": {
          "row": 518,
          "column": 63
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "ident.node",
        "start": {
          "row": 518,
          "column": 65
        },
        "end": {
          "row": 518,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 518,
          "column": 65
        },
        "end": {
          "row": 518,
          "column": 70
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 518,
          "column": 71
        },
        "end": {
          "row": 518,
          "column": 75
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),",
        "start": {
          "row": 519,
          "column": 13
        },
        "end": {
          "row": 519,
          "column": 85
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::Path(qself, path)",
        "start": {
          "row": 519,
          "column": 13
        },
        "end": {
          "row": 519,
          "column": 39
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Path(qself, path)",
        "start": {
          "row": 519,
          "column": 13
        },
        "end": {
          "row": 519,
          "column": 39
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Path",
        "start": {
          "row": 519,
          "column": 13
        },
        "end": {
          "row": 519,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 519,
          "column": 13
        },
        "end": {
          "row": 519,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 519,
          "column": 22
        },
        "end": {
          "row": 519,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "qself",
        "start": {
          "row": 519,
          "column": 27
        },
        "end": {
          "row": 519,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 519,
          "column": 34
        },
        "end": {
          "row": 519,
          "column": 38
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TyKind::Path(qself.clone(), path.clone())",
        "start": {
          "row": 519,
          "column": 43
        },
        "end": {
          "row": 519,
          "column": 84
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Path",
        "start": {
          "row": 519,
          "column": 43
        },
        "end": {
          "row": 519,
          "column": 55
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 519,
          "column": 43
        },
        "end": {
          "row": 519,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 519,
          "column": 51
        },
        "end": {
          "row": 519,
          "column": 55
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(qself.clone(), path.clone())",
        "start": {
          "row": 519,
          "column": 55
        },
        "end": {
          "row": 519,
          "column": 84
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "qself.clone()",
        "start": {
          "row": 519,
          "column": 56
        },
        "end": {
          "row": 519,
          "column": 69
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "qself.clone",
        "start": {
          "row": 519,
          "column": 56
        },
        "end": {
          "row": 519,
          "column": 67
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "qself",
        "start": {
          "row": 519,
          "column": 56
        },
        "end": {
          "row": 519,
          "column": 61
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "clone",
        "start": {
          "row": 519,
          "column": 62
        },
        "end": {
          "row": 519,
          "column": 67
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 519,
          "column": 67
        },
        "end": {
          "row": 519,
          "column": 69
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "path.clone()",
        "start": {
          "row": 519,
          "column": 71
        },
        "end": {
          "row": 519,
          "column": 83
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "path.clone",
        "start": {
          "row": 519,
          "column": 71
        },
        "end": {
          "row": 519,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 519,
          "column": 71
        },
        "end": {
          "row": 519,
          "column": 75
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "clone",
        "start": {
          "row": 519,
          "column": 76
        },
        "end": {
          "row": 519,
          "column": 81
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 519,
          "column": 81
        },
        "end": {
          "row": 519,
          "column": 83
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::Mac(mac) => TyKind::Mac(mac.clone()),",
        "start": {
          "row": 520,
          "column": 13
        },
        "end": {
          "row": 520,
          "column": 59
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::Mac(mac)",
        "start": {
          "row": 520,
          "column": 13
        },
        "end": {
          "row": 520,
          "column": 30
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Mac(mac)",
        "start": {
          "row": 520,
          "column": 13
        },
        "end": {
          "row": 520,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Mac",
        "start": {
          "row": 520,
          "column": 13
        },
        "end": {
          "row": 520,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 520,
          "column": 13
        },
        "end": {
          "row": 520,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 520,
          "column": 22
        },
        "end": {
          "row": 520,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mac",
        "start": {
          "row": 520,
          "column": 26
        },
        "end": {
          "row": 520,
          "column": 29
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TyKind::Mac(mac.clone())",
        "start": {
          "row": 520,
          "column": 34
        },
        "end": {
          "row": 520,
          "column": 58
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Mac",
        "start": {
          "row": 520,
          "column": 34
        },
        "end": {
          "row": 520,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 520,
          "column": 34
        },
        "end": {
          "row": 520,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 520,
          "column": 42
        },
        "end": {
          "row": 520,
          "column": 45
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(mac.clone())",
        "start": {
          "row": 520,
          "column": 45
        },
        "end": {
          "row": 520,
          "column": 58
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "mac.clone()",
        "start": {
          "row": 520,
          "column": 46
        },
        "end": {
          "row": 520,
          "column": 57
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "mac.clone",
        "start": {
          "row": 520,
          "column": 46
        },
        "end": {
          "row": 520,
          "column": 55
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mac",
        "start": {
          "row": 520,
          "column": 46
        },
        "end": {
          "row": 520,
          "column": 49
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "clone",
        "start": {
          "row": 520,
          "column": 50
        },
        "end": {
          "row": 520,
          "column": 55
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 520,
          "column": 55
        },
        "end": {
          "row": 520,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::Ref(pat, mutbl) =>\n                pat.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,",
        "start": {
          "row": 521,
          "column": 13
        },
        "end": {
          "row": 522,
          "column": 88
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::Ref(pat, mutbl)",
        "start": {
          "row": 521,
          "column": 13
        },
        "end": {
          "row": 521,
          "column": 37
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Ref(pat, mutbl)",
        "start": {
          "row": 521,
          "column": 13
        },
        "end": {
          "row": 521,
          "column": 37
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Ref",
        "start": {
          "row": 521,
          "column": 13
        },
        "end": {
          "row": 521,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 521,
          "column": 13
        },
        "end": {
          "row": 521,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ref",
        "start": {
          "row": 521,
          "column": 22
        },
        "end": {
          "row": 521,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 521,
          "column": 26
        },
        "end": {
          "row": 521,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 521,
          "column": 31
        },
        "end": {
          "row": 521,
          "column": 36
        }
      },
      {
        "kind": "try_expression",
        "name": "query",
        "text": "pat.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?",
        "start": {
          "row": 522,
          "column": 17
        },
        "end": {
          "row": 522,
          "column": 87
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "pat.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))",
        "start": {
          "row": 522,
          "column": 17
        },
        "end": {
          "row": 522,
          "column": 86
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "pat.to_ty().map",
        "start": {
          "row": 522,
          "column": 17
        },
        "end": {
          "row": 522,
          "column": 32
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "pat.to_ty()",
        "start": {
          "row": 522,
          "column": 17
        },
        "end": {
          "row": 522,
          "column": 28
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "pat.to_ty",
        "start": {
          "row": 522,
          "column": 17
        },
        "end": {
          "row": 522,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 522,
          "column": 17
        },
        "end": {
          "row": 522,
          "column": 20
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "to_ty",
        "start": {
          "row": 522,
          "column": 21
        },
        "end": {
          "row": 522,
          "column": 26
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 522,
          "column": 26
        },
        "end": {
          "row": 522,
          "column": 28
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "map",
        "start": {
          "row": 522,
          "column": 29
        },
        "end": {
          "row": 522,
          "column": 32
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))",
        "start": {
          "row": 522,
          "column": 32
        },
        "end": {
          "row": 522,
          "column": 86
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl })",
        "start": {
          "row": 522,
          "column": 33
        },
        "end": {
          "row": 522,
          "column": 85
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|ty|",
        "start": {
          "row": 522,
          "column": 33
        },
        "end": {
          "row": 522,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 522,
          "column": 34
        },
        "end": {
          "row": 522,
          "column": 36
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl })",
        "start": {
          "row": 522,
          "column": 38
        },
        "end": {
          "row": 522,
          "column": 85
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Rptr",
        "start": {
          "row": 522,
          "column": 38
        },
        "end": {
          "row": 522,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 522,
          "column": 38
        },
        "end": {
          "row": 522,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Rptr",
        "start": {
          "row": 522,
          "column": 46
        },
        "end": {
          "row": 522,
          "column": 50
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(None, MutTy { ty, mutbl: *mutbl })",
        "start": {
          "row": 522,
          "column": 50
        },
        "end": {
          "row": 522,
          "column": 85
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 522,
          "column": 51
        },
        "end": {
          "row": 522,
          "column": 55
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "MutTy { ty, mutbl: *mutbl }",
        "start": {
          "row": 522,
          "column": 57
        },
        "end": {
          "row": 522,
          "column": 84
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MutTy",
        "start": {
          "row": 522,
          "column": 57
        },
        "end": {
          "row": 522,
          "column": 62
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{ ty, mutbl: *mutbl }",
        "start": {
          "row": 522,
          "column": 63
        },
        "end": {
          "row": 522,
          "column": 84
        }
      },
      {
        "kind": "shorthand_field_initializer",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 522,
          "column": 65
        },
        "end": {
          "row": 522,
          "column": 67
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 522,
          "column": 65
        },
        "end": {
          "row": 522,
          "column": 67
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "mutbl: *mutbl",
        "start": {
          "row": 522,
          "column": 69
        },
        "end": {
          "row": 522,
          "column": 82
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 522,
          "column": 69
        },
        "end": {
          "row": 522,
          "column": 74
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*mutbl",
        "start": {
          "row": 522,
          "column": 76
        },
        "end": {
          "row": 522,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 522,
          "column": 77
        },
        "end": {
          "row": 522,
          "column": 82
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::Slice(pats, None, _) if pats.len() == 1 =>\n                pats[0].to_ty().map(TyKind::Slice)?,",
        "start": {
          "row": 523,
          "column": 13
        },
        "end": {
          "row": 524,
          "column": 53
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::Slice(pats, None, _) if pats.len() == 1",
        "start": {
          "row": 523,
          "column": 13
        },
        "end": {
          "row": 523,
          "column": 61
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Slice(pats, None, _)",
        "start": {
          "row": 523,
          "column": 13
        },
        "end": {
          "row": 523,
          "column": 42
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Slice",
        "start": {
          "row": 523,
          "column": 13
        },
        "end": {
          "row": 523,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 523,
          "column": 13
        },
        "end": {
          "row": 523,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Slice",
        "start": {
          "row": 523,
          "column": 22
        },
        "end": {
          "row": 523,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pats",
        "start": {
          "row": 523,
          "column": 28
        },
        "end": {
          "row": 523,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 523,
          "column": 34
        },
        "end": {
          "row": 523,
          "column": 38
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "pats.len() == 1",
        "start": {
          "row": 523,
          "column": 46
        },
        "end": {
          "row": 523,
          "column": 61
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "pats.len()",
        "start": {
          "row": 523,
          "column": 46
        },
        "end": {
          "row": 523,
          "column": 56
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "pats.len",
        "start": {
          "row": 523,
          "column": 46
        },
        "end": {
          "row": 523,
          "column": 54
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pats",
        "start": {
          "row": 523,
          "column": 46
        },
        "end": {
          "row": 523,
          "column": 50
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "len",
        "start": {
          "row": 523,
          "column": 51
        },
        "end": {
          "row": 523,
          "column": 54
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 523,
          "column": 54
        },
        "end": {
          "row": 523,
          "column": 56
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "1",
        "start": {
          "row": 523,
          "column": 60
        },
        "end": {
          "row": 523,
          "column": 61
        }
      },
      {
        "kind": "try_expression",
        "name": "query",
        "text": "pats[0].to_ty().map(TyKind::Slice)?",
        "start": {
          "row": 524,
          "column": 17
        },
        "end": {
          "row": 524,
          "column": 52
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "pats[0].to_ty().map(TyKind::Slice)",
        "start": {
          "row": 524,
          "column": 17
        },
        "end": {
          "row": 524,
          "column": 51
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "pats[0].to_ty().map",
        "start": {
          "row": 524,
          "column": 17
        },
        "end": {
          "row": 524,
          "column": 36
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "pats[0].to_ty()",
        "start": {
          "row": 524,
          "column": 17
        },
        "end": {
          "row": 524,
          "column": 32
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "pats[0].to_ty",
        "start": {
          "row": 524,
          "column": 17
        },
        "end": {
          "row": 524,
          "column": 30
        }
      },
      {
        "kind": "index_expression",
        "name": "query",
        "text": "pats[0]",
        "start": {
          "row": 524,
          "column": 17
        },
        "end": {
          "row": 524,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pats",
        "start": {
          "row": 524,
          "column": 17
        },
        "end": {
          "row": 524,
          "column": 21
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 524,
          "column": 22
        },
        "end": {
          "row": 524,
          "column": 23
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "to_ty",
        "start": {
          "row": 524,
          "column": 25
        },
        "end": {
          "row": 524,
          "column": 30
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 524,
          "column": 30
        },
        "end": {
          "row": 524,
          "column": 32
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "map",
        "start": {
          "row": 524,
          "column": 33
        },
        "end": {
          "row": 524,
          "column": 36
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(TyKind::Slice)",
        "start": {
          "row": 524,
          "column": 36
        },
        "end": {
          "row": 524,
          "column": 51
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Slice",
        "start": {
          "row": 524,
          "column": 37
        },
        "end": {
          "row": 524,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 524,
          "column": 37
        },
        "end": {
          "row": 524,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Slice",
        "start": {
          "row": 524,
          "column": 45
        },
        "end": {
          "row": 524,
          "column": 50
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::Tuple(pats, None) => {\n                let mut tys = Vec::new();\n                for pat in pats {\n                    tys.push(pat.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }",
        "start": {
          "row": 525,
          "column": 13
        },
        "end": {
          "row": 531,
          "column": 14
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::Tuple(pats, None)",
        "start": {
          "row": 525,
          "column": 13
        },
        "end": {
          "row": 525,
          "column": 39
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Tuple(pats, None)",
        "start": {
          "row": 525,
          "column": 13
        },
        "end": {
          "row": 525,
          "column": 39
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Tuple",
        "start": {
          "row": 525,
          "column": 13
        },
        "end": {
          "row": 525,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 525,
          "column": 13
        },
        "end": {
          "row": 525,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tuple",
        "start": {
          "row": 525,
          "column": 22
        },
        "end": {
          "row": 525,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pats",
        "start": {
          "row": 525,
          "column": 28
        },
        "end": {
          "row": 525,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 525,
          "column": 34
        },
        "end": {
          "row": 525,
          "column": 38
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                let mut tys = Vec::new();\n                for pat in pats {\n                    tys.push(pat.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }",
        "start": {
          "row": 525,
          "column": 43
        },
        "end": {
          "row": 531,
          "column": 14
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let mut tys = Vec::new();",
        "start": {
          "row": 526,
          "column": 17
        },
        "end": {
          "row": 526,
          "column": 42
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 526,
          "column": 21
        },
        "end": {
          "row": 526,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tys",
        "start": {
          "row": 526,
          "column": 25
        },
        "end": {
          "row": 526,
          "column": 28
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Vec::new()",
        "start": {
          "row": 526,
          "column": 31
        },
        "end": {
          "row": 526,
          "column": 41
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Vec::new",
        "start": {
          "row": 526,
          "column": 31
        },
        "end": {
          "row": 526,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 526,
          "column": 31
        },
        "end": {
          "row": 526,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 526,
          "column": 36
        },
        "end": {
          "row": 526,
          "column": 39
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 526,
          "column": 39
        },
        "end": {
          "row": 526,
          "column": 41
        }
      },
      {
        "kind": "for_expression",
        "name": "query",
        "text": "for pat in pats {\n                    tys.push(pat.to_ty()?);\n                }",
        "start": {
          "row": 527,
          "column": 17
        },
        "end": {
          "row": 529,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 527,
          "column": 21
        },
        "end": {
          "row": 527,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pats",
        "start": {
          "row": 527,
          "column": 28
        },
        "end": {
          "row": 527,
          "column": 32
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                    tys.push(pat.to_ty()?);\n                }",
        "start": {
          "row": 527,
          "column": 33
        },
        "end": {
          "row": 529,
          "column": 18
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "tys.push(pat.to_ty()?)",
        "start": {
          "row": 528,
          "column": 21
        },
        "end": {
          "row": 528,
          "column": 43
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "tys.push",
        "start": {
          "row": 528,
          "column": 21
        },
        "end": {
          "row": 528,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tys",
        "start": {
          "row": 528,
          "column": 21
        },
        "end": {
          "row": 528,
          "column": 24
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "push",
        "start": {
          "row": 528,
          "column": 25
        },
        "end": {
          "row": 528,
          "column": 29
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(pat.to_ty()?)",
        "start": {
          "row": 528,
          "column": 29
        },
        "end": {
          "row": 528,
          "column": 43
        }
      },
      {
        "kind": "try_expression",
        "name": "query",
        "text": "pat.to_ty()?",
        "start": {
          "row": 528,
          "column": 30
        },
        "end": {
          "row": 528,
          "column": 42
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "pat.to_ty()",
        "start": {
          "row": 528,
          "column": 30
        },
        "end": {
          "row": 528,
          "column": 41
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "pat.to_ty",
        "start": {
          "row": 528,
          "column": 30
        },
        "end": {
          "row": 528,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 528,
          "column": 30
        },
        "end": {
          "row": 528,
          "column": 33
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "to_ty",
        "start": {
          "row": 528,
          "column": 34
        },
        "end": {
          "row": 528,
          "column": 39
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 528,
          "column": 39
        },
        "end": {
          "row": 528,
          "column": 41
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TyKind::Tup(tys)",
        "start": {
          "row": 530,
          "column": 17
        },
        "end": {
          "row": 530,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Tup",
        "start": {
          "row": 530,
          "column": 17
        },
        "end": {
          "row": 530,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 530,
          "column": 17
        },
        "end": {
          "row": 530,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tup",
        "start": {
          "row": 530,
          "column": 25
        },
        "end": {
          "row": 530,
          "column": 28
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(tys)",
        "start": {
          "row": 530,
          "column": 28
        },
        "end": {
          "row": 530,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tys",
        "start": {
          "row": 530,
          "column": 29
        },
        "end": {
          "row": 530,
          "column": 32
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => return None,",
        "start": {
          "row": 532,
          "column": 13
        },
        "end": {
          "row": 532,
          "column": 30
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 532,
          "column": 13
        },
        "end": {
          "row": 532,
          "column": 14
        }
      },
      {
        "kind": "return_expression",
        "name": "query",
        "text": "return None",
        "start": {
          "row": 532,
          "column": 18
        },
        "end": {
          "row": 532,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 532,
          "column": 25
        },
        "end": {
          "row": 532,
          "column": 29
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Some(P(Ty { node, id: self.id, span: self.span }))",
        "start": {
          "row": 535,
          "column": 9
        },
        "end": {
          "row": 535,
          "column": 59
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 535,
          "column": 9
        },
        "end": {
          "row": 535,
          "column": 13
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(P(Ty { node, id: self.id, span: self.span }))",
        "start": {
          "row": 535,
          "column": 13
        },
        "end": {
          "row": 535,
          "column": 59
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "P(Ty { node, id: self.id, span: self.span })",
        "start": {
          "row": 535,
          "column": 14
        },
        "end": {
          "row": 535,
          "column": 58
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 535,
          "column": 14
        },
        "end": {
          "row": 535,
          "column": 15
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(Ty { node, id: self.id, span: self.span })",
        "start": {
          "row": 535,
          "column": 15
        },
        "end": {
          "row": 535,
          "column": 58
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "Ty { node, id: self.id, span: self.span }",
        "start": {
          "row": 535,
          "column": 16
        },
        "end": {
          "row": 535,
          "column": 57
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 535,
          "column": 16
        },
        "end": {
          "row": 535,
          "column": 18
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{ node, id: self.id, span: self.span }",
        "start": {
          "row": 535,
          "column": 19
        },
        "end": {
          "row": 535,
          "column": 57
        }
      },
      {
        "kind": "shorthand_field_initializer",
        "name": "query",
        "text": "node",
        "start": {
          "row": 535,
          "column": 21
        },
        "end": {
          "row": 535,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 535,
          "column": 21
        },
        "end": {
          "row": 535,
          "column": 25
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "id: self.id",
        "start": {
          "row": 535,
          "column": 27
        },
        "end": {
          "row": 535,
          "column": 38
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 535,
          "column": 27
        },
        "end": {
          "row": 535,
          "column": 29
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.id",
        "start": {
          "row": 535,
          "column": 31
        },
        "end": {
          "row": 535,
          "column": 38
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 535,
          "column": 31
        },
        "end": {
          "row": 535,
          "column": 35
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 535,
          "column": 36
        },
        "end": {
          "row": 535,
          "column": 38
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "span: self.span",
        "start": {
          "row": 535,
          "column": 40
        },
        "end": {
          "row": 535,
          "column": 55
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 535,
          "column": 40
        },
        "end": {
          "row": 535,
          "column": 44
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.span",
        "start": {
          "row": 535,
          "column": 46
        },
        "end": {
          "row": 535,
          "column": 55
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 535,
          "column": 46
        },
        "end": {
          "row": 535,
          "column": 50
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 535,
          "column": 51
        },
        "end": {
          "row": 535,
          "column": 55
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn walk<F>(&self, it: &mut F) -> bool\n        where F: FnMut(&Pat) -> bool\n    {\n        if !it(self) {\n            return false;\n        }\n\n        match self.node {\n            PatKind::Ident(_, _, Some(ref p)) => p.walk(it),\n            PatKind::Struct(_, ref fields, _) => {\n                fields.iter().all(|field| field.node.pat.walk(it))\n            }\n            PatKind::TupleStruct(_, ref s, _) | PatKind::Tuple(ref s, _) => {\n                s.iter().all(|p| p.walk(it))\n            }\n            PatKind::Box(ref s) | PatKind::Ref(ref s, _) => {\n                s.walk(it)\n            }\n            PatKind::Slice(ref before, ref slice, ref after) => {\n                before.iter().all(|p| p.walk(it)) &&\n                slice.iter().all(|p| p.walk(it)) &&\n                after.iter().all(|p| p.walk(it))\n            }\n            PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..) |\n            PatKind::Ident(..) |\n            PatKind::Path(..) |\n            PatKind::Mac(_) => {\n                true\n            }\n        }\n    }",
        "start": {
          "row": 538,
          "column": 5
        },
        "end": {
          "row": 570,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 538,
          "column": 5
        },
        "end": {
          "row": 538,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "walk",
        "start": {
          "row": 538,
          "column": 12
        },
        "end": {
          "row": 538,
          "column": 16
        }
      },
      {
        "kind": "type_parameters",
        "name": "query",
        "text": "<F>",
        "start": {
          "row": 538,
          "column": 16
        },
        "end": {
          "row": 538,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "F",
        "start": {
          "row": 538,
          "column": 17
        },
        "end": {
          "row": 538,
          "column": 18
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, it: &mut F)",
        "start": {
          "row": 538,
          "column": 19
        },
        "end": {
          "row": 538,
          "column": 38
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 538,
          "column": 20
        },
        "end": {
          "row": 538,
          "column": 25
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 538,
          "column": 21
        },
        "end": {
          "row": 538,
          "column": 25
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "it: &mut F",
        "start": {
          "row": 538,
          "column": 27
        },
        "end": {
          "row": 538,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "it",
        "start": {
          "row": 538,
          "column": 27
        },
        "end": {
          "row": 538,
          "column": 29
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut F",
        "start": {
          "row": 538,
          "column": 31
        },
        "end": {
          "row": 538,
          "column": 37
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 538,
          "column": 32
        },
        "end": {
          "row": 538,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "F",
        "start": {
          "row": 538,
          "column": 36
        },
        "end": {
          "row": 538,
          "column": 37
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 538,
          "column": 42
        },
        "end": {
          "row": 538,
          "column": 46
        }
      },
      {
        "kind": "where_clause",
        "name": "query",
        "text": "where F: FnMut(&Pat) -> bool",
        "start": {
          "row": 539,
          "column": 9
        },
        "end": {
          "row": 539,
          "column": 37
        }
      },
      {
        "kind": "where_predicate",
        "name": "query",
        "text": "F: FnMut(&Pat) -> bool",
        "start": {
          "row": 539,
          "column": 15
        },
        "end": {
          "row": 539,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "F",
        "start": {
          "row": 539,
          "column": 15
        },
        "end": {
          "row": 539,
          "column": 16
        }
      },
      {
        "kind": "trait_bounds",
        "name": "query",
        "text": ": FnMut(&Pat) -> bool",
        "start": {
          "row": 539,
          "column": 16
        },
        "end": {
          "row": 539,
          "column": 37
        }
      },
      {
        "kind": "function_type",
        "name": "query",
        "text": "FnMut(&Pat) -> bool",
        "start": {
          "row": 539,
          "column": 18
        },
        "end": {
          "row": 539,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FnMut",
        "start": {
          "row": 539,
          "column": 18
        },
        "end": {
          "row": 539,
          "column": 23
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&Pat)",
        "start": {
          "row": 539,
          "column": 23
        },
        "end": {
          "row": 539,
          "column": 29
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&Pat",
        "start": {
          "row": 539,
          "column": 24
        },
        "end": {
          "row": 539,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 539,
          "column": 25
        },
        "end": {
          "row": 539,
          "column": 28
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 539,
          "column": 33
        },
        "end": {
          "row": 539,
          "column": 37
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        if !it(self) {\n            return false;\n        }\n\n        match self.node {\n            PatKind::Ident(_, _, Some(ref p)) => p.walk(it),\n            PatKind::Struct(_, ref fields, _) => {\n                fields.iter().all(|field| field.node.pat.walk(it))\n            }\n            PatKind::TupleStruct(_, ref s, _) | PatKind::Tuple(ref s, _) => {\n                s.iter().all(|p| p.walk(it))\n            }\n            PatKind::Box(ref s) | PatKind::Ref(ref s, _) => {\n                s.walk(it)\n            }\n            PatKind::Slice(ref before, ref slice, ref after) => {\n                before.iter().all(|p| p.walk(it)) &&\n                slice.iter().all(|p| p.walk(it)) &&\n                after.iter().all(|p| p.walk(it))\n            }\n            PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..) |\n            PatKind::Ident(..) |\n            PatKind::Path(..) |\n            PatKind::Mac(_) => {\n                true\n            }\n        }\n    }",
        "start": {
          "row": 540,
          "column": 5
        },
        "end": {
          "row": 570,
          "column": 6
        }
      },
      {
        "kind": "if_expression",
        "name": "query",
        "text": "if !it(self) {\n            return false;\n        }",
        "start": {
          "row": 541,
          "column": 9
        },
        "end": {
          "row": 543,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "!it(self)",
        "start": {
          "row": 541,
          "column": 12
        },
        "end": {
          "row": 541,
          "column": 21
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "it(self)",
        "start": {
          "row": 541,
          "column": 13
        },
        "end": {
          "row": 541,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "it",
        "start": {
          "row": 541,
          "column": 13
        },
        "end": {
          "row": 541,
          "column": 15
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 541,
          "column": 15
        },
        "end": {
          "row": 541,
          "column": 21
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 541,
          "column": 16
        },
        "end": {
          "row": 541,
          "column": 20
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n            return false;\n        }",
        "start": {
          "row": 541,
          "column": 22
        },
        "end": {
          "row": 543,
          "column": 10
        }
      },
      {
        "kind": "return_expression",
        "name": "query",
        "text": "return false",
        "start": {
          "row": 542,
          "column": 13
        },
        "end": {
          "row": 542,
          "column": 25
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 542,
          "column": 20
        },
        "end": {
          "row": 542,
          "column": 25
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match self.node {\n            PatKind::Ident(_, _, Some(ref p)) => p.walk(it),\n            PatKind::Struct(_, ref fields, _) => {\n                fields.iter().all(|field| field.node.pat.walk(it))\n            }\n            PatKind::TupleStruct(_, ref s, _) | PatKind::Tuple(ref s, _) => {\n                s.iter().all(|p| p.walk(it))\n            }\n            PatKind::Box(ref s) | PatKind::Ref(ref s, _) => {\n                s.walk(it)\n            }\n            PatKind::Slice(ref before, ref slice, ref after) => {\n                before.iter().all(|p| p.walk(it)) &&\n                slice.iter().all(|p| p.walk(it)) &&\n                after.iter().all(|p| p.walk(it))\n            }\n            PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..) |\n            PatKind::Ident(..) |\n            PatKind::Path(..) |\n            PatKind::Mac(_) => {\n                true\n            }\n        }",
        "start": {
          "row": 545,
          "column": 9
        },
        "end": {
          "row": 569,
          "column": 10
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.node",
        "start": {
          "row": 545,
          "column": 15
        },
        "end": {
          "row": 545,
          "column": 24
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 545,
          "column": 15
        },
        "end": {
          "row": 545,
          "column": 19
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 545,
          "column": 20
        },
        "end": {
          "row": 545,
          "column": 24
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            PatKind::Ident(_, _, Some(ref p)) => p.walk(it),\n            PatKind::Struct(_, ref fields, _) => {\n                fields.iter().all(|field| field.node.pat.walk(it))\n            }\n            PatKind::TupleStruct(_, ref s, _) | PatKind::Tuple(ref s, _) => {\n                s.iter().all(|p| p.walk(it))\n            }\n            PatKind::Box(ref s) | PatKind::Ref(ref s, _) => {\n                s.walk(it)\n            }\n            PatKind::Slice(ref before, ref slice, ref after) => {\n                before.iter().all(|p| p.walk(it)) &&\n                slice.iter().all(|p| p.walk(it)) &&\n                after.iter().all(|p| p.walk(it))\n            }\n            PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..) |\n            PatKind::Ident(..) |\n            PatKind::Path(..) |\n            PatKind::Mac(_) => {\n                true\n            }\n        }",
        "start": {
          "row": 545,
          "column": 25
        },
        "end": {
          "row": 569,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::Ident(_, _, Some(ref p)) => p.walk(it),",
        "start": {
          "row": 546,
          "column": 13
        },
        "end": {
          "row": 546,
          "column": 61
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::Ident(_, _, Some(ref p))",
        "start": {
          "row": 546,
          "column": 13
        },
        "end": {
          "row": 546,
          "column": 46
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Ident(_, _, Some(ref p))",
        "start": {
          "row": 546,
          "column": 13
        },
        "end": {
          "row": 546,
          "column": 46
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Ident",
        "start": {
          "row": 546,
          "column": 13
        },
        "end": {
          "row": 546,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 546,
          "column": 13
        },
        "end": {
          "row": 546,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 546,
          "column": 22
        },
        "end": {
          "row": 546,
          "column": 27
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "Some(ref p)",
        "start": {
          "row": 546,
          "column": 34
        },
        "end": {
          "row": 546,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 546,
          "column": 34
        },
        "end": {
          "row": 546,
          "column": 38
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref p",
        "start": {
          "row": 546,
          "column": 39
        },
        "end": {
          "row": 546,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "p",
        "start": {
          "row": 546,
          "column": 43
        },
        "end": {
          "row": 546,
          "column": 44
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "p.walk(it)",
        "start": {
          "row": 546,
          "column": 50
        },
        "end": {
          "row": 546,
          "column": 60
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "p.walk",
        "start": {
          "row": 546,
          "column": 50
        },
        "end": {
          "row": 546,
          "column": 56
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "p",
        "start": {
          "row": 546,
          "column": 50
        },
        "end": {
          "row": 546,
          "column": 51
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "walk",
        "start": {
          "row": 546,
          "column": 52
        },
        "end": {
          "row": 546,
          "column": 56
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(it)",
        "start": {
          "row": 546,
          "column": 56
        },
        "end": {
          "row": 546,
          "column": 60
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "it",
        "start": {
          "row": 546,
          "column": 57
        },
        "end": {
          "row": 546,
          "column": 59
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::Struct(_, ref fields, _) => {\n                fields.iter().all(|field| field.node.pat.walk(it))\n            }",
        "start": {
          "row": 547,
          "column": 13
        },
        "end": {
          "row": 549,
          "column": 14
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::Struct(_, ref fields, _)",
        "start": {
          "row": 547,
          "column": 13
        },
        "end": {
          "row": 547,
          "column": 46
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Struct(_, ref fields, _)",
        "start": {
          "row": 547,
          "column": 13
        },
        "end": {
          "row": 547,
          "column": 46
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Struct",
        "start": {
          "row": 547,
          "column": 13
        },
        "end": {
          "row": 547,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 547,
          "column": 13
        },
        "end": {
          "row": 547,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Struct",
        "start": {
          "row": 547,
          "column": 22
        },
        "end": {
          "row": 547,
          "column": 28
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref fields",
        "start": {
          "row": 547,
          "column": 32
        },
        "end": {
          "row": 547,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fields",
        "start": {
          "row": 547,
          "column": 36
        },
        "end": {
          "row": 547,
          "column": 42
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                fields.iter().all(|field| field.node.pat.walk(it))\n            }",
        "start": {
          "row": 547,
          "column": 50
        },
        "end": {
          "row": 549,
          "column": 14
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "fields.iter().all(|field| field.node.pat.walk(it))",
        "start": {
          "row": 548,
          "column": 17
        },
        "end": {
          "row": 548,
          "column": 67
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "fields.iter().all",
        "start": {
          "row": 548,
          "column": 17
        },
        "end": {
          "row": 548,
          "column": 34
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "fields.iter()",
        "start": {
          "row": 548,
          "column": 17
        },
        "end": {
          "row": 548,
          "column": 30
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "fields.iter",
        "start": {
          "row": 548,
          "column": 17
        },
        "end": {
          "row": 548,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fields",
        "start": {
          "row": 548,
          "column": 17
        },
        "end": {
          "row": 548,
          "column": 23
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "iter",
        "start": {
          "row": 548,
          "column": 24
        },
        "end": {
          "row": 548,
          "column": 28
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 548,
          "column": 28
        },
        "end": {
          "row": 548,
          "column": 30
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "all",
        "start": {
          "row": 548,
          "column": 31
        },
        "end": {
          "row": 548,
          "column": 34
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(|field| field.node.pat.walk(it))",
        "start": {
          "row": 548,
          "column": 34
        },
        "end": {
          "row": 548,
          "column": 67
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|field| field.node.pat.walk(it)",
        "start": {
          "row": 548,
          "column": 35
        },
        "end": {
          "row": 548,
          "column": 66
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|field|",
        "start": {
          "row": 548,
          "column": 35
        },
        "end": {
          "row": 548,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "field",
        "start": {
          "row": 548,
          "column": 36
        },
        "end": {
          "row": 548,
          "column": 41
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "field.node.pat.walk(it)",
        "start": {
          "row": 548,
          "column": 43
        },
        "end": {
          "row": 548,
          "column": 66
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "field.node.pat.walk",
        "start": {
          "row": 548,
          "column": 43
        },
        "end": {
          "row": 548,
          "column": 62
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "field.node.pat",
        "start": {
          "row": 548,
          "column": 43
        },
        "end": {
          "row": 548,
          "column": 57
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "field.node",
        "start": {
          "row": 548,
          "column": 43
        },
        "end": {
          "row": 548,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "field",
        "start": {
          "row": 548,
          "column": 43
        },
        "end": {
          "row": 548,
          "column": 48
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 548,
          "column": 49
        },
        "end": {
          "row": 548,
          "column": 53
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 548,
          "column": 54
        },
        "end": {
          "row": 548,
          "column": 57
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "walk",
        "start": {
          "row": 548,
          "column": 58
        },
        "end": {
          "row": 548,
          "column": 62
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(it)",
        "start": {
          "row": 548,
          "column": 62
        },
        "end": {
          "row": 548,
          "column": 66
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "it",
        "start": {
          "row": 548,
          "column": 63
        },
        "end": {
          "row": 548,
          "column": 65
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::TupleStruct(_, ref s, _) | PatKind::Tuple(ref s, _) => {\n                s.iter().all(|p| p.walk(it))\n            }",
        "start": {
          "row": 550,
          "column": 13
        },
        "end": {
          "row": 552,
          "column": 14
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::TupleStruct(_, ref s, _) | PatKind::Tuple(ref s, _)",
        "start": {
          "row": 550,
          "column": 13
        },
        "end": {
          "row": 550,
          "column": 73
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "PatKind::TupleStruct(_, ref s, _) | PatKind::Tuple(ref s, _)",
        "start": {
          "row": 550,
          "column": 13
        },
        "end": {
          "row": 550,
          "column": 73
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::TupleStruct(_, ref s, _)",
        "start": {
          "row": 550,
          "column": 13
        },
        "end": {
          "row": 550,
          "column": 46
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::TupleStruct",
        "start": {
          "row": 550,
          "column": 13
        },
        "end": {
          "row": 550,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 550,
          "column": 13
        },
        "end": {
          "row": 550,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TupleStruct",
        "start": {
          "row": 550,
          "column": 22
        },
        "end": {
          "row": 550,
          "column": 33
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref s",
        "start": {
          "row": 550,
          "column": 37
        },
        "end": {
          "row": 550,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "s",
        "start": {
          "row": 550,
          "column": 41
        },
        "end": {
          "row": 550,
          "column": 42
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Tuple(ref s, _)",
        "start": {
          "row": 550,
          "column": 49
        },
        "end": {
          "row": 550,
          "column": 73
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Tuple",
        "start": {
          "row": 550,
          "column": 49
        },
        "end": {
          "row": 550,
          "column": 63
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 550,
          "column": 49
        },
        "end": {
          "row": 550,
          "column": 56
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tuple",
        "start": {
          "row": 550,
          "column": 58
        },
        "end": {
          "row": 550,
          "column": 63
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref s",
        "start": {
          "row": 550,
          "column": 64
        },
        "end": {
          "row": 550,
          "column": 69
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "s",
        "start": {
          "row": 550,
          "column": 68
        },
        "end": {
          "row": 550,
          "column": 69
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                s.iter().all(|p| p.walk(it))\n            }",
        "start": {
          "row": 550,
          "column": 77
        },
        "end": {
          "row": 552,
          "column": 14
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "s.iter().all(|p| p.walk(it))",
        "start": {
          "row": 551,
          "column": 17
        },
        "end": {
          "row": 551,
          "column": 45
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "s.iter().all",
        "start": {
          "row": 551,
          "column": 17
        },
        "end": {
          "row": 551,
          "column": 29
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "s.iter()",
        "start": {
          "row": 551,
          "column": 17
        },
        "end": {
          "row": 551,
          "column": 25
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "s.iter",
        "start": {
          "row": 551,
          "column": 17
        },
        "end": {
          "row": 551,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "s",
        "start": {
          "row": 551,
          "column": 17
        },
        "end": {
          "row": 551,
          "column": 18
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "iter",
        "start": {
          "row": 551,
          "column": 19
        },
        "end": {
          "row": 551,
          "column": 23
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 551,
          "column": 23
        },
        "end": {
          "row": 551,
          "column": 25
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "all",
        "start": {
          "row": 551,
          "column": 26
        },
        "end": {
          "row": 551,
          "column": 29
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(|p| p.walk(it))",
        "start": {
          "row": 551,
          "column": 29
        },
        "end": {
          "row": 551,
          "column": 45
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|p| p.walk(it)",
        "start": {
          "row": 551,
          "column": 30
        },
        "end": {
          "row": 551,
          "column": 44
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|p|",
        "start": {
          "row": 551,
          "column": 30
        },
        "end": {
          "row": 551,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "p",
        "start": {
          "row": 551,
          "column": 31
        },
        "end": {
          "row": 551,
          "column": 32
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "p.walk(it)",
        "start": {
          "row": 551,
          "column": 34
        },
        "end": {
          "row": 551,
          "column": 44
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "p.walk",
        "start": {
          "row": 551,
          "column": 34
        },
        "end": {
          "row": 551,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "p",
        "start": {
          "row": 551,
          "column": 34
        },
        "end": {
          "row": 551,
          "column": 35
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "walk",
        "start": {
          "row": 551,
          "column": 36
        },
        "end": {
          "row": 551,
          "column": 40
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(it)",
        "start": {
          "row": 551,
          "column": 40
        },
        "end": {
          "row": 551,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "it",
        "start": {
          "row": 551,
          "column": 41
        },
        "end": {
          "row": 551,
          "column": 43
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::Box(ref s) | PatKind::Ref(ref s, _) => {\n                s.walk(it)\n            }",
        "start": {
          "row": 553,
          "column": 13
        },
        "end": {
          "row": 555,
          "column": 14
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::Box(ref s) | PatKind::Ref(ref s, _)",
        "start": {
          "row": 553,
          "column": 13
        },
        "end": {
          "row": 553,
          "column": 57
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "PatKind::Box(ref s) | PatKind::Ref(ref s, _)",
        "start": {
          "row": 553,
          "column": 13
        },
        "end": {
          "row": 553,
          "column": 57
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Box(ref s)",
        "start": {
          "row": 553,
          "column": 13
        },
        "end": {
          "row": 553,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Box",
        "start": {
          "row": 553,
          "column": 13
        },
        "end": {
          "row": 553,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 553,
          "column": 13
        },
        "end": {
          "row": 553,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Box",
        "start": {
          "row": 553,
          "column": 22
        },
        "end": {
          "row": 553,
          "column": 25
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref s",
        "start": {
          "row": 553,
          "column": 26
        },
        "end": {
          "row": 553,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "s",
        "start": {
          "row": 553,
          "column": 30
        },
        "end": {
          "row": 553,
          "column": 31
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Ref(ref s, _)",
        "start": {
          "row": 553,
          "column": 35
        },
        "end": {
          "row": 553,
          "column": 57
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Ref",
        "start": {
          "row": 553,
          "column": 35
        },
        "end": {
          "row": 553,
          "column": 47
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 553,
          "column": 35
        },
        "end": {
          "row": 553,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ref",
        "start": {
          "row": 553,
          "column": 44
        },
        "end": {
          "row": 553,
          "column": 47
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref s",
        "start": {
          "row": 553,
          "column": 48
        },
        "end": {
          "row": 553,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "s",
        "start": {
          "row": 553,
          "column": 52
        },
        "end": {
          "row": 553,
          "column": 53
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                s.walk(it)\n            }",
        "start": {
          "row": 553,
          "column": 61
        },
        "end": {
          "row": 555,
          "column": 14
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "s.walk(it)",
        "start": {
          "row": 554,
          "column": 17
        },
        "end": {
          "row": 554,
          "column": 27
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "s.walk",
        "start": {
          "row": 554,
          "column": 17
        },
        "end": {
          "row": 554,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "s",
        "start": {
          "row": 554,
          "column": 17
        },
        "end": {
          "row": 554,
          "column": 18
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "walk",
        "start": {
          "row": 554,
          "column": 19
        },
        "end": {
          "row": 554,
          "column": 23
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(it)",
        "start": {
          "row": 554,
          "column": 23
        },
        "end": {
          "row": 554,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "it",
        "start": {
          "row": 554,
          "column": 24
        },
        "end": {
          "row": 554,
          "column": 26
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::Slice(ref before, ref slice, ref after) => {\n                before.iter().all(|p| p.walk(it)) &&\n                slice.iter().all(|p| p.walk(it)) &&\n                after.iter().all(|p| p.walk(it))\n            }",
        "start": {
          "row": 556,
          "column": 13
        },
        "end": {
          "row": 560,
          "column": 14
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::Slice(ref before, ref slice, ref after)",
        "start": {
          "row": 556,
          "column": 13
        },
        "end": {
          "row": 556,
          "column": 61
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Slice(ref before, ref slice, ref after)",
        "start": {
          "row": 556,
          "column": 13
        },
        "end": {
          "row": 556,
          "column": 61
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Slice",
        "start": {
          "row": 556,
          "column": 13
        },
        "end": {
          "row": 556,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 556,
          "column": 13
        },
        "end": {
          "row": 556,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Slice",
        "start": {
          "row": 556,
          "column": 22
        },
        "end": {
          "row": 556,
          "column": 27
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref before",
        "start": {
          "row": 556,
          "column": 28
        },
        "end": {
          "row": 556,
          "column": 38
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "before",
        "start": {
          "row": 556,
          "column": 32
        },
        "end": {
          "row": 556,
          "column": 38
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref slice",
        "start": {
          "row": 556,
          "column": 40
        },
        "end": {
          "row": 556,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "slice",
        "start": {
          "row": 556,
          "column": 44
        },
        "end": {
          "row": 556,
          "column": 49
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref after",
        "start": {
          "row": 556,
          "column": 51
        },
        "end": {
          "row": 556,
          "column": 60
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "after",
        "start": {
          "row": 556,
          "column": 55
        },
        "end": {
          "row": 556,
          "column": 60
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                before.iter().all(|p| p.walk(it)) &&\n                slice.iter().all(|p| p.walk(it)) &&\n                after.iter().all(|p| p.walk(it))\n            }",
        "start": {
          "row": 556,
          "column": 65
        },
        "end": {
          "row": 560,
          "column": 14
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "before.iter().all(|p| p.walk(it)) &&\n                slice.iter().all(|p| p.walk(it)) &&\n                after.iter().all(|p| p.walk(it))",
        "start": {
          "row": 557,
          "column": 17
        },
        "end": {
          "row": 559,
          "column": 49
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "before.iter().all(|p| p.walk(it)) &&\n                slice.iter().all(|p| p.walk(it))",
        "start": {
          "row": 557,
          "column": 17
        },
        "end": {
          "row": 558,
          "column": 49
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "before.iter().all(|p| p.walk(it))",
        "start": {
          "row": 557,
          "column": 17
        },
        "end": {
          "row": 557,
          "column": 50
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "before.iter().all",
        "start": {
          "row": 557,
          "column": 17
        },
        "end": {
          "row": 557,
          "column": 34
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "before.iter()",
        "start": {
          "row": 557,
          "column": 17
        },
        "end": {
          "row": 557,
          "column": 30
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "before.iter",
        "start": {
          "row": 557,
          "column": 17
        },
        "end": {
          "row": 557,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "before",
        "start": {
          "row": 557,
          "column": 17
        },
        "end": {
          "row": 557,
          "column": 23
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "iter",
        "start": {
          "row": 557,
          "column": 24
        },
        "end": {
          "row": 557,
          "column": 28
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 557,
          "column": 28
        },
        "end": {
          "row": 557,
          "column": 30
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "all",
        "start": {
          "row": 557,
          "column": 31
        },
        "end": {
          "row": 557,
          "column": 34
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(|p| p.walk(it))",
        "start": {
          "row": 557,
          "column": 34
        },
        "end": {
          "row": 557,
          "column": 50
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|p| p.walk(it)",
        "start": {
          "row": 557,
          "column": 35
        },
        "end": {
          "row": 557,
          "column": 49
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|p|",
        "start": {
          "row": 557,
          "column": 35
        },
        "end": {
          "row": 557,
          "column": 38
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "p",
        "start": {
          "row": 557,
          "column": 36
        },
        "end": {
          "row": 557,
          "column": 37
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "p.walk(it)",
        "start": {
          "row": 557,
          "column": 39
        },
        "end": {
          "row": 557,
          "column": 49
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "p.walk",
        "start": {
          "row": 557,
          "column": 39
        },
        "end": {
          "row": 557,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "p",
        "start": {
          "row": 557,
          "column": 39
        },
        "end": {
          "row": 557,
          "column": 40
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "walk",
        "start": {
          "row": 557,
          "column": 41
        },
        "end": {
          "row": 557,
          "column": 45
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(it)",
        "start": {
          "row": 557,
          "column": 45
        },
        "end": {
          "row": 557,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "it",
        "start": {
          "row": 557,
          "column": 46
        },
        "end": {
          "row": 557,
          "column": 48
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "slice.iter().all(|p| p.walk(it))",
        "start": {
          "row": 558,
          "column": 17
        },
        "end": {
          "row": 558,
          "column": 49
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "slice.iter().all",
        "start": {
          "row": 558,
          "column": 17
        },
        "end": {
          "row": 558,
          "column": 33
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "slice.iter()",
        "start": {
          "row": 558,
          "column": 17
        },
        "end": {
          "row": 558,
          "column": 29
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "slice.iter",
        "start": {
          "row": 558,
          "column": 17
        },
        "end": {
          "row": 558,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "slice",
        "start": {
          "row": 558,
          "column": 17
        },
        "end": {
          "row": 558,
          "column": 22
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "iter",
        "start": {
          "row": 558,
          "column": 23
        },
        "end": {
          "row": 558,
          "column": 27
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 558,
          "column": 27
        },
        "end": {
          "row": 558,
          "column": 29
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "all",
        "start": {
          "row": 558,
          "column": 30
        },
        "end": {
          "row": 558,
          "column": 33
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(|p| p.walk(it))",
        "start": {
          "row": 558,
          "column": 33
        },
        "end": {
          "row": 558,
          "column": 49
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|p| p.walk(it)",
        "start": {
          "row": 558,
          "column": 34
        },
        "end": {
          "row": 558,
          "column": 48
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|p|",
        "start": {
          "row": 558,
          "column": 34
        },
        "end": {
          "row": 558,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "p",
        "start": {
          "row": 558,
          "column": 35
        },
        "end": {
          "row": 558,
          "column": 36
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "p.walk(it)",
        "start": {
          "row": 558,
          "column": 38
        },
        "end": {
          "row": 558,
          "column": 48
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "p.walk",
        "start": {
          "row": 558,
          "column": 38
        },
        "end": {
          "row": 558,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "p",
        "start": {
          "row": 558,
          "column": 38
        },
        "end": {
          "row": 558,
          "column": 39
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "walk",
        "start": {
          "row": 558,
          "column": 40
        },
        "end": {
          "row": 558,
          "column": 44
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(it)",
        "start": {
          "row": 558,
          "column": 44
        },
        "end": {
          "row": 558,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "it",
        "start": {
          "row": 558,
          "column": 45
        },
        "end": {
          "row": 558,
          "column": 47
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "after.iter().all(|p| p.walk(it))",
        "start": {
          "row": 559,
          "column": 17
        },
        "end": {
          "row": 559,
          "column": 49
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "after.iter().all",
        "start": {
          "row": 559,
          "column": 17
        },
        "end": {
          "row": 559,
          "column": 33
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "after.iter()",
        "start": {
          "row": 559,
          "column": 17
        },
        "end": {
          "row": 559,
          "column": 29
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "after.iter",
        "start": {
          "row": 559,
          "column": 17
        },
        "end": {
          "row": 559,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "after",
        "start": {
          "row": 559,
          "column": 17
        },
        "end": {
          "row": 559,
          "column": 22
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "iter",
        "start": {
          "row": 559,
          "column": 23
        },
        "end": {
          "row": 559,
          "column": 27
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 559,
          "column": 27
        },
        "end": {
          "row": 559,
          "column": 29
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "all",
        "start": {
          "row": 559,
          "column": 30
        },
        "end": {
          "row": 559,
          "column": 33
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(|p| p.walk(it))",
        "start": {
          "row": 559,
          "column": 33
        },
        "end": {
          "row": 559,
          "column": 49
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|p| p.walk(it)",
        "start": {
          "row": 559,
          "column": 34
        },
        "end": {
          "row": 559,
          "column": 48
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|p|",
        "start": {
          "row": 559,
          "column": 34
        },
        "end": {
          "row": 559,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "p",
        "start": {
          "row": 559,
          "column": 35
        },
        "end": {
          "row": 559,
          "column": 36
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "p.walk(it)",
        "start": {
          "row": 559,
          "column": 38
        },
        "end": {
          "row": 559,
          "column": 48
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "p.walk",
        "start": {
          "row": 559,
          "column": 38
        },
        "end": {
          "row": 559,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "p",
        "start": {
          "row": 559,
          "column": 38
        },
        "end": {
          "row": 559,
          "column": 39
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "walk",
        "start": {
          "row": 559,
          "column": 40
        },
        "end": {
          "row": 559,
          "column": 44
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(it)",
        "start": {
          "row": 559,
          "column": 44
        },
        "end": {
          "row": 559,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "it",
        "start": {
          "row": 559,
          "column": 45
        },
        "end": {
          "row": 559,
          "column": 47
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..) |\n            PatKind::Ident(..) |\n            PatKind::Path(..) |\n            PatKind::Mac(_) => {\n                true\n            }",
        "start": {
          "row": 561,
          "column": 13
        },
        "end": {
          "row": 568,
          "column": 14
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..) |\n            PatKind::Ident(..) |\n            PatKind::Path(..) |\n            PatKind::Mac(_)",
        "start": {
          "row": 561,
          "column": 13
        },
        "end": {
          "row": 566,
          "column": 28
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..) |\n            PatKind::Ident(..) |\n            PatKind::Path(..) |\n            PatKind::Mac(_)",
        "start": {
          "row": 561,
          "column": 13
        },
        "end": {
          "row": 566,
          "column": 28
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..) |\n            PatKind::Ident(..) |\n            PatKind::Path(..)",
        "start": {
          "row": 561,
          "column": 13
        },
        "end": {
          "row": 565,
          "column": 30
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..) |\n            PatKind::Ident(..)",
        "start": {
          "row": 561,
          "column": 13
        },
        "end": {
          "row": 564,
          "column": 31
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "PatKind::Wild |\n            PatKind::Lit(_) |\n            PatKind::Range(..)",
        "start": {
          "row": 561,
          "column": 13
        },
        "end": {
          "row": 563,
          "column": 31
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "PatKind::Wild |\n            PatKind::Lit(_)",
        "start": {
          "row": 561,
          "column": 13
        },
        "end": {
          "row": 562,
          "column": 28
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Wild",
        "start": {
          "row": 561,
          "column": 13
        },
        "end": {
          "row": 561,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 561,
          "column": 13
        },
        "end": {
          "row": 561,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Wild",
        "start": {
          "row": 561,
          "column": 22
        },
        "end": {
          "row": 561,
          "column": 26
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Lit(_)",
        "start": {
          "row": 562,
          "column": 13
        },
        "end": {
          "row": 562,
          "column": 28
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Lit",
        "start": {
          "row": 562,
          "column": 13
        },
        "end": {
          "row": 562,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 562,
          "column": 13
        },
        "end": {
          "row": 562,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Lit",
        "start": {
          "row": 562,
          "column": 22
        },
        "end": {
          "row": 562,
          "column": 25
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Range(..)",
        "start": {
          "row": 563,
          "column": 13
        },
        "end": {
          "row": 563,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Range",
        "start": {
          "row": 563,
          "column": 13
        },
        "end": {
          "row": 563,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 563,
          "column": 13
        },
        "end": {
          "row": 563,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Range",
        "start": {
          "row": 563,
          "column": 22
        },
        "end": {
          "row": 563,
          "column": 27
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 563,
          "column": 28
        },
        "end": {
          "row": 563,
          "column": 30
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Ident(..)",
        "start": {
          "row": 564,
          "column": 13
        },
        "end": {
          "row": 564,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Ident",
        "start": {
          "row": 564,
          "column": 13
        },
        "end": {
          "row": 564,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 564,
          "column": 13
        },
        "end": {
          "row": 564,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 564,
          "column": 22
        },
        "end": {
          "row": 564,
          "column": 27
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 564,
          "column": 28
        },
        "end": {
          "row": 564,
          "column": 30
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Path(..)",
        "start": {
          "row": 565,
          "column": 13
        },
        "end": {
          "row": 565,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Path",
        "start": {
          "row": 565,
          "column": 13
        },
        "end": {
          "row": 565,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 565,
          "column": 13
        },
        "end": {
          "row": 565,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 565,
          "column": 22
        },
        "end": {
          "row": 565,
          "column": 26
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 565,
          "column": 27
        },
        "end": {
          "row": 565,
          "column": 29
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Mac(_)",
        "start": {
          "row": 566,
          "column": 13
        },
        "end": {
          "row": 566,
          "column": 28
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Mac",
        "start": {
          "row": 566,
          "column": 13
        },
        "end": {
          "row": 566,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 566,
          "column": 13
        },
        "end": {
          "row": 566,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 566,
          "column": 22
        },
        "end": {
          "row": 566,
          "column": 25
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                true\n            }",
        "start": {
          "row": 566,
          "column": 32
        },
        "end": {
          "row": 568,
          "column": 14
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 567,
          "column": 17
        },
        "end": {
          "row": 567,
          "column": 21
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A single field in a struct pattern",
        "start": {
          "row": 573,
          "column": 1
        },
        "end": {
          "row": 573,
          "column": 39
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 574,
          "column": 1
        },
        "end": {
          "row": 574,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Patterns like the fields of Foo `{ x, ref y, ref mut z }`",
        "start": {
          "row": 575,
          "column": 1
        },
        "end": {
          "row": 575,
          "column": 62
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// are treated the same as` x: x, y: ref y, z: ref mut z`,",
        "start": {
          "row": 576,
          "column": 1
        },
        "end": {
          "row": 576,
          "column": 60
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// except is_shorthand is true",
        "start": {
          "row": 577,
          "column": 1
        },
        "end": {
          "row": 577,
          "column": 32
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 578,
          "column": 1
        },
        "end": {
          "row": 578,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 578,
          "column": 3
        },
        "end": {
          "row": 578,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 578,
          "column": 3
        },
        "end": {
          "row": 578,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 578,
          "column": 9
        },
        "end": {
          "row": 578,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 578,
          "column": 10
        },
        "end": {
          "row": 578,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 578,
          "column": 10
        },
        "end": {
          "row": 578,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 578,
          "column": 17
        },
        "end": {
          "row": 578,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 578,
          "column": 17
        },
        "end": {
          "row": 578,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 578,
          "column": 28
        },
        "end": {
          "row": 578,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 578,
          "column": 28
        },
        "end": {
          "row": 578,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 578,
          "column": 32
        },
        "end": {
          "row": 578,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 578,
          "column": 32
        },
        "end": {
          "row": 578,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 578,
          "column": 48
        },
        "end": {
          "row": 578,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 578,
          "column": 48
        },
        "end": {
          "row": 578,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 578,
          "column": 64
        },
        "end": {
          "row": 578,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 578,
          "column": 64
        },
        "end": {
          "row": 578,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 578,
          "column": 70
        },
        "end": {
          "row": 578,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 578,
          "column": 70
        },
        "end": {
          "row": 578,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct FieldPat {\n    /// The identifier for the field\n    pub ident: Ident,\n    /// The pattern the field is destructured to\n    pub pat: P<Pat>,\n    pub is_shorthand: bool,\n    pub attrs: ThinVec<Attribute>,\n}",
        "start": {
          "row": 579,
          "column": 1
        },
        "end": {
          "row": 586,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 579,
          "column": 1
        },
        "end": {
          "row": 579,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FieldPat",
        "start": {
          "row": 579,
          "column": 12
        },
        "end": {
          "row": 579,
          "column": 20
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    /// The identifier for the field\n    pub ident: Ident,\n    /// The pattern the field is destructured to\n    pub pat: P<Pat>,\n    pub is_shorthand: bool,\n    pub attrs: ThinVec<Attribute>,\n}",
        "start": {
          "row": 579,
          "column": 21
        },
        "end": {
          "row": 586,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The identifier for the field",
        "start": {
          "row": 580,
          "column": 5
        },
        "end": {
          "row": 580,
          "column": 37
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ident: Ident",
        "start": {
          "row": 581,
          "column": 5
        },
        "end": {
          "row": 581,
          "column": 21
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 581,
          "column": 5
        },
        "end": {
          "row": 581,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 581,
          "column": 9
        },
        "end": {
          "row": 581,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 581,
          "column": 16
        },
        "end": {
          "row": 581,
          "column": 21
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The pattern the field is destructured to",
        "start": {
          "row": 582,
          "column": 5
        },
        "end": {
          "row": 582,
          "column": 49
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub pat: P<Pat>",
        "start": {
          "row": 583,
          "column": 5
        },
        "end": {
          "row": 583,
          "column": 20
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 583,
          "column": 5
        },
        "end": {
          "row": 583,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 583,
          "column": 9
        },
        "end": {
          "row": 583,
          "column": 12
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 583,
          "column": 14
        },
        "end": {
          "row": 583,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 583,
          "column": 14
        },
        "end": {
          "row": 583,
          "column": 15
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 583,
          "column": 15
        },
        "end": {
          "row": 583,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 583,
          "column": 16
        },
        "end": {
          "row": 583,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub is_shorthand: bool",
        "start": {
          "row": 584,
          "column": 5
        },
        "end": {
          "row": 584,
          "column": 27
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 584,
          "column": 5
        },
        "end": {
          "row": 584,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_shorthand",
        "start": {
          "row": 584,
          "column": 9
        },
        "end": {
          "row": 584,
          "column": 21
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 584,
          "column": 23
        },
        "end": {
          "row": 584,
          "column": 27
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: ThinVec<Attribute>",
        "start": {
          "row": 585,
          "column": 5
        },
        "end": {
          "row": 585,
          "column": 34
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 585,
          "column": 5
        },
        "end": {
          "row": 585,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 585,
          "column": 9
        },
        "end": {
          "row": 585,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "ThinVec<Attribute>",
        "start": {
          "row": 585,
          "column": 16
        },
        "end": {
          "row": 585,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ThinVec",
        "start": {
          "row": 585,
          "column": 16
        },
        "end": {
          "row": 585,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 585,
          "column": 23
        },
        "end": {
          "row": 585,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 585,
          "column": 24
        },
        "end": {
          "row": 585,
          "column": 33
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 588,
          "column": 1
        },
        "end": {
          "row": 588,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 588,
          "column": 3
        },
        "end": {
          "row": 588,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 588,
          "column": 3
        },
        "end": {
          "row": 588,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 588,
          "column": 9
        },
        "end": {
          "row": 588,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 588,
          "column": 10
        },
        "end": {
          "row": 588,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 588,
          "column": 10
        },
        "end": {
          "row": 588,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 588,
          "column": 17
        },
        "end": {
          "row": 588,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 588,
          "column": 17
        },
        "end": {
          "row": 588,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 588,
          "column": 28
        },
        "end": {
          "row": 588,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 588,
          "column": 28
        },
        "end": {
          "row": 588,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 588,
          "column": 32
        },
        "end": {
          "row": 588,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 588,
          "column": 32
        },
        "end": {
          "row": 588,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 588,
          "column": 48
        },
        "end": {
          "row": 588,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 588,
          "column": 48
        },
        "end": {
          "row": 588,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 588,
          "column": 64
        },
        "end": {
          "row": 588,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 588,
          "column": 64
        },
        "end": {
          "row": 588,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 588,
          "column": 70
        },
        "end": {
          "row": 588,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 588,
          "column": 70
        },
        "end": {
          "row": 588,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 588,
          "column": 77
        },
        "end": {
          "row": 588,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 588,
          "column": 77
        },
        "end": {
          "row": 588,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum BindingMode {\n    ByRef(Mutability),\n    ByValue(Mutability),\n}",
        "start": {
          "row": 589,
          "column": 1
        },
        "end": {
          "row": 592,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 589,
          "column": 1
        },
        "end": {
          "row": 589,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "BindingMode",
        "start": {
          "row": 589,
          "column": 10
        },
        "end": {
          "row": 589,
          "column": 21
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    ByRef(Mutability),\n    ByValue(Mutability),\n}",
        "start": {
          "row": 589,
          "column": 22
        },
        "end": {
          "row": 592,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "ByRef(Mutability)",
        "start": {
          "row": 590,
          "column": 5
        },
        "end": {
          "row": 590,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ByRef",
        "start": {
          "row": 590,
          "column": 5
        },
        "end": {
          "row": 590,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Mutability)",
        "start": {
          "row": 590,
          "column": 10
        },
        "end": {
          "row": 590,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mutability",
        "start": {
          "row": 590,
          "column": 11
        },
        "end": {
          "row": 590,
          "column": 21
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "ByValue(Mutability)",
        "start": {
          "row": 591,
          "column": 5
        },
        "end": {
          "row": 591,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ByValue",
        "start": {
          "row": 591,
          "column": 5
        },
        "end": {
          "row": 591,
          "column": 12
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Mutability)",
        "start": {
          "row": 591,
          "column": 12
        },
        "end": {
          "row": 591,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mutability",
        "start": {
          "row": 591,
          "column": 13
        },
        "end": {
          "row": 591,
          "column": 23
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 594,
          "column": 1
        },
        "end": {
          "row": 594,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 594,
          "column": 3
        },
        "end": {
          "row": 594,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 594,
          "column": 3
        },
        "end": {
          "row": 594,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 594,
          "column": 9
        },
        "end": {
          "row": 594,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 594,
          "column": 10
        },
        "end": {
          "row": 594,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 594,
          "column": 10
        },
        "end": {
          "row": 594,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 594,
          "column": 17
        },
        "end": {
          "row": 594,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 594,
          "column": 17
        },
        "end": {
          "row": 594,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 594,
          "column": 28
        },
        "end": {
          "row": 594,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 594,
          "column": 28
        },
        "end": {
          "row": 594,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 594,
          "column": 32
        },
        "end": {
          "row": 594,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 594,
          "column": 32
        },
        "end": {
          "row": 594,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 594,
          "column": 48
        },
        "end": {
          "row": 594,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 594,
          "column": 48
        },
        "end": {
          "row": 594,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 594,
          "column": 64
        },
        "end": {
          "row": 594,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 594,
          "column": 64
        },
        "end": {
          "row": 594,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 594,
          "column": 70
        },
        "end": {
          "row": 594,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 594,
          "column": 70
        },
        "end": {
          "row": 594,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum RangeEnd {\n    Included(RangeSyntax),\n    Excluded,\n}",
        "start": {
          "row": 595,
          "column": 1
        },
        "end": {
          "row": 598,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 595,
          "column": 1
        },
        "end": {
          "row": 595,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "RangeEnd",
        "start": {
          "row": 595,
          "column": 10
        },
        "end": {
          "row": 595,
          "column": 18
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Included(RangeSyntax),\n    Excluded,\n}",
        "start": {
          "row": 595,
          "column": 19
        },
        "end": {
          "row": 598,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Included(RangeSyntax)",
        "start": {
          "row": 596,
          "column": 5
        },
        "end": {
          "row": 596,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Included",
        "start": {
          "row": 596,
          "column": 5
        },
        "end": {
          "row": 596,
          "column": 13
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(RangeSyntax)",
        "start": {
          "row": 596,
          "column": 13
        },
        "end": {
          "row": 596,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "RangeSyntax",
        "start": {
          "row": 596,
          "column": 14
        },
        "end": {
          "row": 596,
          "column": 25
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Excluded",
        "start": {
          "row": 597,
          "column": 5
        },
        "end": {
          "row": 597,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Excluded",
        "start": {
          "row": 597,
          "column": 5
        },
        "end": {
          "row": 597,
          "column": 13
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 600,
          "column": 1
        },
        "end": {
          "row": 600,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 600,
          "column": 3
        },
        "end": {
          "row": 600,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 600,
          "column": 3
        },
        "end": {
          "row": 600,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 600,
          "column": 9
        },
        "end": {
          "row": 600,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 600,
          "column": 10
        },
        "end": {
          "row": 600,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 600,
          "column": 10
        },
        "end": {
          "row": 600,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 600,
          "column": 17
        },
        "end": {
          "row": 600,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 600,
          "column": 17
        },
        "end": {
          "row": 600,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 600,
          "column": 28
        },
        "end": {
          "row": 600,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 600,
          "column": 28
        },
        "end": {
          "row": 600,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 600,
          "column": 32
        },
        "end": {
          "row": 600,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 600,
          "column": 32
        },
        "end": {
          "row": 600,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 600,
          "column": 48
        },
        "end": {
          "row": 600,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 600,
          "column": 48
        },
        "end": {
          "row": 600,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 600,
          "column": 64
        },
        "end": {
          "row": 600,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 600,
          "column": 64
        },
        "end": {
          "row": 600,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 600,
          "column": 70
        },
        "end": {
          "row": 600,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 600,
          "column": 70
        },
        "end": {
          "row": 600,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum RangeSyntax {\n    DotDotDot,\n    DotDotEq,\n}",
        "start": {
          "row": 601,
          "column": 1
        },
        "end": {
          "row": 604,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 601,
          "column": 1
        },
        "end": {
          "row": 601,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "RangeSyntax",
        "start": {
          "row": 601,
          "column": 10
        },
        "end": {
          "row": 601,
          "column": 21
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    DotDotDot,\n    DotDotEq,\n}",
        "start": {
          "row": 601,
          "column": 22
        },
        "end": {
          "row": 604,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "DotDotDot",
        "start": {
          "row": 602,
          "column": 5
        },
        "end": {
          "row": 602,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "DotDotDot",
        "start": {
          "row": 602,
          "column": 5
        },
        "end": {
          "row": 602,
          "column": 14
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "DotDotEq",
        "start": {
          "row": 603,
          "column": 5
        },
        "end": {
          "row": 603,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "DotDotEq",
        "start": {
          "row": 603,
          "column": 5
        },
        "end": {
          "row": 603,
          "column": 13
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 606,
          "column": 1
        },
        "end": {
          "row": 606,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 606,
          "column": 3
        },
        "end": {
          "row": 606,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 606,
          "column": 3
        },
        "end": {
          "row": 606,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 606,
          "column": 9
        },
        "end": {
          "row": 606,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 606,
          "column": 10
        },
        "end": {
          "row": 606,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 606,
          "column": 10
        },
        "end": {
          "row": 606,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 606,
          "column": 17
        },
        "end": {
          "row": 606,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 606,
          "column": 17
        },
        "end": {
          "row": 606,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 606,
          "column": 28
        },
        "end": {
          "row": 606,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 606,
          "column": 28
        },
        "end": {
          "row": 606,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 606,
          "column": 32
        },
        "end": {
          "row": 606,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 606,
          "column": 32
        },
        "end": {
          "row": 606,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 606,
          "column": 48
        },
        "end": {
          "row": 606,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 606,
          "column": 48
        },
        "end": {
          "row": 606,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 606,
          "column": 64
        },
        "end": {
          "row": 606,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 606,
          "column": 64
        },
        "end": {
          "row": 606,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 606,
          "column": 70
        },
        "end": {
          "row": 606,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 606,
          "column": 70
        },
        "end": {
          "row": 606,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum PatKind {\n    /// Represents a wildcard pattern (`_`)\n    Wild,\n\n    /// A `PatKind::Ident` may either be a new bound variable (`ref mut binding @ OPT_SUBPATTERN`),\n    /// or a unit struct/variant pattern, or a const pattern (in the last two cases the third\n    /// field must be `None`). Disambiguation cannot be done with parser alone, so it happens\n    /// during name resolution.\n    Ident(BindingMode, SpannedIdent, Option<P<Pat>>),\n\n    /// A struct or struct variant pattern, e.g. `Variant {x, y, ..}`.\n    /// The `bool` is `true` in the presence of a `..`.\n    Struct(Path, Vec<Spanned<FieldPat>>, bool),\n\n    /// A tuple struct/variant pattern `Variant(x, y, .., z)`.\n    /// If the `..` pattern fragment is present, then `Option<usize>` denotes its position.\n    /// 0 <= position <= subpats.len()\n    TupleStruct(Path, Vec<P<Pat>>, Option<usize>),\n\n    /// A possibly qualified path pattern.\n    /// Unqualified path patterns `A::B::C` can legally refer to variants, structs, constants\n    /// or associated constants. Qualified path patterns `<A>::B::C`/`<A as Trait>::B::C` can\n    /// only legally refer to associated constants.\n    Path(Option<QSelf>, Path),\n\n    /// A tuple pattern `(a, b)`.\n    /// If the `..` pattern fragment is present, then `Option<usize>` denotes its position.\n    /// 0 <= position <= subpats.len()\n    Tuple(Vec<P<Pat>>, Option<usize>),\n    /// A `box` pattern\n    Box(P<Pat>),\n    /// A reference pattern, e.g. `&mut (a, b)`\n    Ref(P<Pat>, Mutability),\n    /// A literal\n    Lit(P<Expr>),\n    /// A range pattern, e.g. `1...2`, `1..=2` or `1..2`\n    Range(P<Expr>, P<Expr>, RangeEnd),\n    /// `[a, b, ..i, y, z]` is represented as:\n    ///     `PatKind::Slice(box [a, b], Some(i), box [y, z])`\n    Slice(Vec<P<Pat>>, Option<P<Pat>>, Vec<P<Pat>>),\n    /// A macro pattern; pre-expansion\n    Mac(Mac),\n}",
        "start": {
          "row": 607,
          "column": 1
        },
        "end": {
          "row": 649,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 607,
          "column": 1
        },
        "end": {
          "row": 607,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 607,
          "column": 10
        },
        "end": {
          "row": 607,
          "column": 17
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// Represents a wildcard pattern (`_`)\n    Wild,\n\n    /// A `PatKind::Ident` may either be a new bound variable (`ref mut binding @ OPT_SUBPATTERN`),\n    /// or a unit struct/variant pattern, or a const pattern (in the last two cases the third\n    /// field must be `None`). Disambiguation cannot be done with parser alone, so it happens\n    /// during name resolution.\n    Ident(BindingMode, SpannedIdent, Option<P<Pat>>),\n\n    /// A struct or struct variant pattern, e.g. `Variant {x, y, ..}`.\n    /// The `bool` is `true` in the presence of a `..`.\n    Struct(Path, Vec<Spanned<FieldPat>>, bool),\n\n    /// A tuple struct/variant pattern `Variant(x, y, .., z)`.\n    /// If the `..` pattern fragment is present, then `Option<usize>` denotes its position.\n    /// 0 <= position <= subpats.len()\n    TupleStruct(Path, Vec<P<Pat>>, Option<usize>),\n\n    /// A possibly qualified path pattern.\n    /// Unqualified path patterns `A::B::C` can legally refer to variants, structs, constants\n    /// or associated constants. Qualified path patterns `<A>::B::C`/`<A as Trait>::B::C` can\n    /// only legally refer to associated constants.\n    Path(Option<QSelf>, Path),\n\n    /// A tuple pattern `(a, b)`.\n    /// If the `..` pattern fragment is present, then `Option<usize>` denotes its position.\n    /// 0 <= position <= subpats.len()\n    Tuple(Vec<P<Pat>>, Option<usize>),\n    /// A `box` pattern\n    Box(P<Pat>),\n    /// A reference pattern, e.g. `&mut (a, b)`\n    Ref(P<Pat>, Mutability),\n    /// A literal\n    Lit(P<Expr>),\n    /// A range pattern, e.g. `1...2`, `1..=2` or `1..2`\n    Range(P<Expr>, P<Expr>, RangeEnd),\n    /// `[a, b, ..i, y, z]` is represented as:\n    ///     `PatKind::Slice(box [a, b], Some(i), box [y, z])`\n    Slice(Vec<P<Pat>>, Option<P<Pat>>, Vec<P<Pat>>),\n    /// A macro pattern; pre-expansion\n    Mac(Mac),\n}",
        "start": {
          "row": 607,
          "column": 18
        },
        "end": {
          "row": 649,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Represents a wildcard pattern (`_`)",
        "start": {
          "row": 608,
          "column": 5
        },
        "end": {
          "row": 608,
          "column": 44
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Wild",
        "start": {
          "row": 609,
          "column": 5
        },
        "end": {
          "row": 609,
          "column": 9
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Wild",
        "start": {
          "row": 609,
          "column": 5
        },
        "end": {
          "row": 609,
          "column": 9
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A `PatKind::Ident` may either be a new bound variable (`ref mut binding @ OPT_SUBPATTERN`),",
        "start": {
          "row": 611,
          "column": 5
        },
        "end": {
          "row": 611,
          "column": 100
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// or a unit struct/variant pattern, or a const pattern (in the last two cases the third",
        "start": {
          "row": 612,
          "column": 5
        },
        "end": {
          "row": 612,
          "column": 94
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// field must be `None`). Disambiguation cannot be done with parser alone, so it happens",
        "start": {
          "row": 613,
          "column": 5
        },
        "end": {
          "row": 613,
          "column": 94
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// during name resolution.",
        "start": {
          "row": 614,
          "column": 5
        },
        "end": {
          "row": 614,
          "column": 32
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Ident(BindingMode, SpannedIdent, Option<P<Pat>>)",
        "start": {
          "row": 615,
          "column": 5
        },
        "end": {
          "row": 615,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 615,
          "column": 5
        },
        "end": {
          "row": 615,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(BindingMode, SpannedIdent, Option<P<Pat>>)",
        "start": {
          "row": 615,
          "column": 10
        },
        "end": {
          "row": 615,
          "column": 53
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "BindingMode",
        "start": {
          "row": 615,
          "column": 11
        },
        "end": {
          "row": 615,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SpannedIdent",
        "start": {
          "row": 615,
          "column": 24
        },
        "end": {
          "row": 615,
          "column": 36
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Pat>>",
        "start": {
          "row": 615,
          "column": 38
        },
        "end": {
          "row": 615,
          "column": 52
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 615,
          "column": 38
        },
        "end": {
          "row": 615,
          "column": 44
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Pat>>",
        "start": {
          "row": 615,
          "column": 44
        },
        "end": {
          "row": 615,
          "column": 52
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 615,
          "column": 45
        },
        "end": {
          "row": 615,
          "column": 51
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 615,
          "column": 45
        },
        "end": {
          "row": 615,
          "column": 46
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 615,
          "column": 46
        },
        "end": {
          "row": 615,
          "column": 51
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 615,
          "column": 47
        },
        "end": {
          "row": 615,
          "column": 50
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A struct or struct variant pattern, e.g. `Variant {x, y, ..}`.",
        "start": {
          "row": 617,
          "column": 5
        },
        "end": {
          "row": 617,
          "column": 71
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `bool` is `true` in the presence of a `..`.",
        "start": {
          "row": 618,
          "column": 5
        },
        "end": {
          "row": 618,
          "column": 56
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Struct(Path, Vec<Spanned<FieldPat>>, bool)",
        "start": {
          "row": 619,
          "column": 5
        },
        "end": {
          "row": 619,
          "column": 47
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Struct",
        "start": {
          "row": 619,
          "column": 5
        },
        "end": {
          "row": 619,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Path, Vec<Spanned<FieldPat>>, bool)",
        "start": {
          "row": 619,
          "column": 11
        },
        "end": {
          "row": 619,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 619,
          "column": 12
        },
        "end": {
          "row": 619,
          "column": 16
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Spanned<FieldPat>>",
        "start": {
          "row": 619,
          "column": 18
        },
        "end": {
          "row": 619,
          "column": 40
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 619,
          "column": 18
        },
        "end": {
          "row": 619,
          "column": 21
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Spanned<FieldPat>>",
        "start": {
          "row": 619,
          "column": 21
        },
        "end": {
          "row": 619,
          "column": 40
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Spanned<FieldPat>",
        "start": {
          "row": 619,
          "column": 22
        },
        "end": {
          "row": 619,
          "column": 39
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Spanned",
        "start": {
          "row": 619,
          "column": 22
        },
        "end": {
          "row": 619,
          "column": 29
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<FieldPat>",
        "start": {
          "row": 619,
          "column": 29
        },
        "end": {
          "row": 619,
          "column": 39
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FieldPat",
        "start": {
          "row": 619,
          "column": 30
        },
        "end": {
          "row": 619,
          "column": 38
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 619,
          "column": 42
        },
        "end": {
          "row": 619,
          "column": 46
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A tuple struct/variant pattern `Variant(x, y, .., z)`.",
        "start": {
          "row": 621,
          "column": 5
        },
        "end": {
          "row": 621,
          "column": 63
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// If the `..` pattern fragment is present, then `Option<usize>` denotes its position.",
        "start": {
          "row": 622,
          "column": 5
        },
        "end": {
          "row": 622,
          "column": 92
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// 0 <= position <= subpats.len()",
        "start": {
          "row": 623,
          "column": 5
        },
        "end": {
          "row": 623,
          "column": 39
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "TupleStruct(Path, Vec<P<Pat>>, Option<usize>)",
        "start": {
          "row": 624,
          "column": 5
        },
        "end": {
          "row": 624,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TupleStruct",
        "start": {
          "row": 624,
          "column": 5
        },
        "end": {
          "row": 624,
          "column": 16
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Path, Vec<P<Pat>>, Option<usize>)",
        "start": {
          "row": 624,
          "column": 16
        },
        "end": {
          "row": 624,
          "column": 50
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 624,
          "column": 17
        },
        "end": {
          "row": 624,
          "column": 21
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Pat>>",
        "start": {
          "row": 624,
          "column": 23
        },
        "end": {
          "row": 624,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 624,
          "column": 23
        },
        "end": {
          "row": 624,
          "column": 26
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Pat>>",
        "start": {
          "row": 624,
          "column": 26
        },
        "end": {
          "row": 624,
          "column": 34
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 624,
          "column": 27
        },
        "end": {
          "row": 624,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 624,
          "column": 27
        },
        "end": {
          "row": 624,
          "column": 28
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 624,
          "column": 28
        },
        "end": {
          "row": 624,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 624,
          "column": 29
        },
        "end": {
          "row": 624,
          "column": 32
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<usize>",
        "start": {
          "row": 624,
          "column": 36
        },
        "end": {
          "row": 624,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 624,
          "column": 36
        },
        "end": {
          "row": 624,
          "column": 42
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<usize>",
        "start": {
          "row": 624,
          "column": 42
        },
        "end": {
          "row": 624,
          "column": 49
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 624,
          "column": 43
        },
        "end": {
          "row": 624,
          "column": 48
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A possibly qualified path pattern.",
        "start": {
          "row": 626,
          "column": 5
        },
        "end": {
          "row": 626,
          "column": 43
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Unqualified path patterns `A::B::C` can legally refer to variants, structs, constants",
        "start": {
          "row": 627,
          "column": 5
        },
        "end": {
          "row": 627,
          "column": 94
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// or associated constants. Qualified path patterns `<A>::B::C`/`<A as Trait>::B::C` can",
        "start": {
          "row": 628,
          "column": 5
        },
        "end": {
          "row": 628,
          "column": 94
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// only legally refer to associated constants.",
        "start": {
          "row": 629,
          "column": 5
        },
        "end": {
          "row": 629,
          "column": 52
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Path(Option<QSelf>, Path)",
        "start": {
          "row": 630,
          "column": 5
        },
        "end": {
          "row": 630,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 630,
          "column": 5
        },
        "end": {
          "row": 630,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Option<QSelf>, Path)",
        "start": {
          "row": 630,
          "column": 9
        },
        "end": {
          "row": 630,
          "column": 30
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<QSelf>",
        "start": {
          "row": 630,
          "column": 10
        },
        "end": {
          "row": 630,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 630,
          "column": 10
        },
        "end": {
          "row": 630,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<QSelf>",
        "start": {
          "row": 630,
          "column": 16
        },
        "end": {
          "row": 630,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "QSelf",
        "start": {
          "row": 630,
          "column": 17
        },
        "end": {
          "row": 630,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 630,
          "column": 25
        },
        "end": {
          "row": 630,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A tuple pattern `(a, b)`.",
        "start": {
          "row": 632,
          "column": 5
        },
        "end": {
          "row": 632,
          "column": 34
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// If the `..` pattern fragment is present, then `Option<usize>` denotes its position.",
        "start": {
          "row": 633,
          "column": 5
        },
        "end": {
          "row": 633,
          "column": 92
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// 0 <= position <= subpats.len()",
        "start": {
          "row": 634,
          "column": 5
        },
        "end": {
          "row": 634,
          "column": 39
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Tuple(Vec<P<Pat>>, Option<usize>)",
        "start": {
          "row": 635,
          "column": 5
        },
        "end": {
          "row": 635,
          "column": 38
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tuple",
        "start": {
          "row": 635,
          "column": 5
        },
        "end": {
          "row": 635,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Vec<P<Pat>>, Option<usize>)",
        "start": {
          "row": 635,
          "column": 10
        },
        "end": {
          "row": 635,
          "column": 38
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Pat>>",
        "start": {
          "row": 635,
          "column": 11
        },
        "end": {
          "row": 635,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 635,
          "column": 11
        },
        "end": {
          "row": 635,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Pat>>",
        "start": {
          "row": 635,
          "column": 14
        },
        "end": {
          "row": 635,
          "column": 22
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 635,
          "column": 15
        },
        "end": {
          "row": 635,
          "column": 21
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 635,
          "column": 15
        },
        "end": {
          "row": 635,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 635,
          "column": 16
        },
        "end": {
          "row": 635,
          "column": 21
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 635,
          "column": 17
        },
        "end": {
          "row": 635,
          "column": 20
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<usize>",
        "start": {
          "row": 635,
          "column": 24
        },
        "end": {
          "row": 635,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 635,
          "column": 24
        },
        "end": {
          "row": 635,
          "column": 30
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<usize>",
        "start": {
          "row": 635,
          "column": 30
        },
        "end": {
          "row": 635,
          "column": 37
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 635,
          "column": 31
        },
        "end": {
          "row": 635,
          "column": 36
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A `box` pattern",
        "start": {
          "row": 636,
          "column": 5
        },
        "end": {
          "row": 636,
          "column": 24
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Box(P<Pat>)",
        "start": {
          "row": 637,
          "column": 5
        },
        "end": {
          "row": 637,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Box",
        "start": {
          "row": 637,
          "column": 5
        },
        "end": {
          "row": 637,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Pat>)",
        "start": {
          "row": 637,
          "column": 8
        },
        "end": {
          "row": 637,
          "column": 16
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 637,
          "column": 9
        },
        "end": {
          "row": 637,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 637,
          "column": 9
        },
        "end": {
          "row": 637,
          "column": 10
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 637,
          "column": 10
        },
        "end": {
          "row": 637,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 637,
          "column": 11
        },
        "end": {
          "row": 637,
          "column": 14
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A reference pattern, e.g. `&mut (a, b)`",
        "start": {
          "row": 638,
          "column": 5
        },
        "end": {
          "row": 638,
          "column": 48
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Ref(P<Pat>, Mutability)",
        "start": {
          "row": 639,
          "column": 5
        },
        "end": {
          "row": 639,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ref",
        "start": {
          "row": 639,
          "column": 5
        },
        "end": {
          "row": 639,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Pat>, Mutability)",
        "start": {
          "row": 639,
          "column": 8
        },
        "end": {
          "row": 639,
          "column": 28
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 639,
          "column": 9
        },
        "end": {
          "row": 639,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 639,
          "column": 9
        },
        "end": {
          "row": 639,
          "column": 10
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 639,
          "column": 10
        },
        "end": {
          "row": 639,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 639,
          "column": 11
        },
        "end": {
          "row": 639,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mutability",
        "start": {
          "row": 639,
          "column": 17
        },
        "end": {
          "row": 639,
          "column": 27
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A literal",
        "start": {
          "row": 640,
          "column": 5
        },
        "end": {
          "row": 640,
          "column": 18
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Lit(P<Expr>)",
        "start": {
          "row": 641,
          "column": 5
        },
        "end": {
          "row": 641,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Lit",
        "start": {
          "row": 641,
          "column": 5
        },
        "end": {
          "row": 641,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>)",
        "start": {
          "row": 641,
          "column": 8
        },
        "end": {
          "row": 641,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 641,
          "column": 9
        },
        "end": {
          "row": 641,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 641,
          "column": 9
        },
        "end": {
          "row": 641,
          "column": 10
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 641,
          "column": 10
        },
        "end": {
          "row": 641,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 641,
          "column": 11
        },
        "end": {
          "row": 641,
          "column": 15
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A range pattern, e.g. `1...2`, `1..=2` or `1..2`",
        "start": {
          "row": 642,
          "column": 5
        },
        "end": {
          "row": 642,
          "column": 57
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Range(P<Expr>, P<Expr>, RangeEnd)",
        "start": {
          "row": 643,
          "column": 5
        },
        "end": {
          "row": 643,
          "column": 38
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Range",
        "start": {
          "row": 643,
          "column": 5
        },
        "end": {
          "row": 643,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, P<Expr>, RangeEnd)",
        "start": {
          "row": 643,
          "column": 10
        },
        "end": {
          "row": 643,
          "column": 38
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 643,
          "column": 11
        },
        "end": {
          "row": 643,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 643,
          "column": 11
        },
        "end": {
          "row": 643,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 643,
          "column": 12
        },
        "end": {
          "row": 643,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 643,
          "column": 13
        },
        "end": {
          "row": 643,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 643,
          "column": 20
        },
        "end": {
          "row": 643,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 643,
          "column": 20
        },
        "end": {
          "row": 643,
          "column": 21
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 643,
          "column": 21
        },
        "end": {
          "row": 643,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 643,
          "column": 22
        },
        "end": {
          "row": 643,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "RangeEnd",
        "start": {
          "row": 643,
          "column": 29
        },
        "end": {
          "row": 643,
          "column": 37
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `[a, b, ..i, y, z]` is represented as:",
        "start": {
          "row": 644,
          "column": 5
        },
        "end": {
          "row": 644,
          "column": 47
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///     `PatKind::Slice(box [a, b], Some(i), box [y, z])`",
        "start": {
          "row": 645,
          "column": 5
        },
        "end": {
          "row": 645,
          "column": 62
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Slice(Vec<P<Pat>>, Option<P<Pat>>, Vec<P<Pat>>)",
        "start": {
          "row": 646,
          "column": 5
        },
        "end": {
          "row": 646,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Slice",
        "start": {
          "row": 646,
          "column": 5
        },
        "end": {
          "row": 646,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Vec<P<Pat>>, Option<P<Pat>>, Vec<P<Pat>>)",
        "start": {
          "row": 646,
          "column": 10
        },
        "end": {
          "row": 646,
          "column": 52
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Pat>>",
        "start": {
          "row": 646,
          "column": 11
        },
        "end": {
          "row": 646,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 646,
          "column": 11
        },
        "end": {
          "row": 646,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Pat>>",
        "start": {
          "row": 646,
          "column": 14
        },
        "end": {
          "row": 646,
          "column": 22
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 646,
          "column": 15
        },
        "end": {
          "row": 646,
          "column": 21
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 646,
          "column": 15
        },
        "end": {
          "row": 646,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 646,
          "column": 16
        },
        "end": {
          "row": 646,
          "column": 21
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 646,
          "column": 17
        },
        "end": {
          "row": 646,
          "column": 20
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Pat>>",
        "start": {
          "row": 646,
          "column": 24
        },
        "end": {
          "row": 646,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 646,
          "column": 24
        },
        "end": {
          "row": 646,
          "column": 30
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Pat>>",
        "start": {
          "row": 646,
          "column": 30
        },
        "end": {
          "row": 646,
          "column": 38
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 646,
          "column": 31
        },
        "end": {
          "row": 646,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 646,
          "column": 31
        },
        "end": {
          "row": 646,
          "column": 32
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 646,
          "column": 32
        },
        "end": {
          "row": 646,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 646,
          "column": 33
        },
        "end": {
          "row": 646,
          "column": 36
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Pat>>",
        "start": {
          "row": 646,
          "column": 40
        },
        "end": {
          "row": 646,
          "column": 51
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 646,
          "column": 40
        },
        "end": {
          "row": 646,
          "column": 43
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Pat>>",
        "start": {
          "row": 646,
          "column": 43
        },
        "end": {
          "row": 646,
          "column": 51
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 646,
          "column": 44
        },
        "end": {
          "row": 646,
          "column": 50
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 646,
          "column": 44
        },
        "end": {
          "row": 646,
          "column": 45
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 646,
          "column": 45
        },
        "end": {
          "row": 646,
          "column": 50
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 646,
          "column": 46
        },
        "end": {
          "row": 646,
          "column": 49
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A macro pattern; pre-expansion",
        "start": {
          "row": 647,
          "column": 5
        },
        "end": {
          "row": 647,
          "column": 39
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Mac(Mac)",
        "start": {
          "row": 648,
          "column": 5
        },
        "end": {
          "row": 648,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 648,
          "column": 5
        },
        "end": {
          "row": 648,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Mac)",
        "start": {
          "row": 648,
          "column": 8
        },
        "end": {
          "row": 648,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 648,
          "column": 9
        },
        "end": {
          "row": 648,
          "column": 12
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 651,
          "column": 1
        },
        "end": {
          "row": 651,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 651,
          "column": 3
        },
        "end": {
          "row": 651,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 651,
          "column": 3
        },
        "end": {
          "row": 651,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 651,
          "column": 9
        },
        "end": {
          "row": 651,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 651,
          "column": 10
        },
        "end": {
          "row": 651,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 651,
          "column": 10
        },
        "end": {
          "row": 651,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 651,
          "column": 17
        },
        "end": {
          "row": 651,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 651,
          "column": 17
        },
        "end": {
          "row": 651,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 651,
          "column": 28
        },
        "end": {
          "row": 651,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 651,
          "column": 28
        },
        "end": {
          "row": 651,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 651,
          "column": 32
        },
        "end": {
          "row": 651,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 651,
          "column": 32
        },
        "end": {
          "row": 651,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 651,
          "column": 48
        },
        "end": {
          "row": 651,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 651,
          "column": 48
        },
        "end": {
          "row": 651,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 651,
          "column": 64
        },
        "end": {
          "row": 651,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 651,
          "column": 64
        },
        "end": {
          "row": 651,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 651,
          "column": 70
        },
        "end": {
          "row": 651,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 651,
          "column": 70
        },
        "end": {
          "row": 651,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 651,
          "column": 77
        },
        "end": {
          "row": 651,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 651,
          "column": 77
        },
        "end": {
          "row": 651,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum Mutability {\n    Mutable,\n    Immutable,\n}",
        "start": {
          "row": 652,
          "column": 1
        },
        "end": {
          "row": 655,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 652,
          "column": 1
        },
        "end": {
          "row": 652,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mutability",
        "start": {
          "row": 652,
          "column": 10
        },
        "end": {
          "row": 652,
          "column": 20
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Mutable,\n    Immutable,\n}",
        "start": {
          "row": 652,
          "column": 21
        },
        "end": {
          "row": 655,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Mutable",
        "start": {
          "row": 653,
          "column": 5
        },
        "end": {
          "row": 653,
          "column": 12
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mutable",
        "start": {
          "row": 653,
          "column": 5
        },
        "end": {
          "row": 653,
          "column": 12
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Immutable",
        "start": {
          "row": 654,
          "column": 5
        },
        "end": {
          "row": 654,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Immutable",
        "start": {
          "row": 654,
          "column": 5
        },
        "end": {
          "row": 654,
          "column": 14
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 657,
          "column": 1
        },
        "end": {
          "row": 657,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 657,
          "column": 3
        },
        "end": {
          "row": 657,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 657,
          "column": 3
        },
        "end": {
          "row": 657,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 657,
          "column": 9
        },
        "end": {
          "row": 657,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 657,
          "column": 10
        },
        "end": {
          "row": 657,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 657,
          "column": 10
        },
        "end": {
          "row": 657,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 657,
          "column": 17
        },
        "end": {
          "row": 657,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 657,
          "column": 17
        },
        "end": {
          "row": 657,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 657,
          "column": 28
        },
        "end": {
          "row": 657,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 657,
          "column": 28
        },
        "end": {
          "row": 657,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 657,
          "column": 32
        },
        "end": {
          "row": 657,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 657,
          "column": 32
        },
        "end": {
          "row": 657,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 657,
          "column": 48
        },
        "end": {
          "row": 657,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 657,
          "column": 48
        },
        "end": {
          "row": 657,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 657,
          "column": 64
        },
        "end": {
          "row": 657,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 657,
          "column": 64
        },
        "end": {
          "row": 657,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 657,
          "column": 70
        },
        "end": {
          "row": 657,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 657,
          "column": 70
        },
        "end": {
          "row": 657,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 657,
          "column": 77
        },
        "end": {
          "row": 657,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 657,
          "column": 77
        },
        "end": {
          "row": 657,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum BinOpKind {\n    /// The `+` operator (addition)\n    Add,\n    /// The `-` operator (subtraction)\n    Sub,\n    /// The `*` operator (multiplication)\n    Mul,\n    /// The `/` operator (division)\n    Div,\n    /// The `%` operator (modulus)\n    Rem,\n    /// The `&&` operator (logical and)\n    And,\n    /// The `||` operator (logical or)\n    Or,\n    /// The `^` operator (bitwise xor)\n    BitXor,\n    /// The `&` operator (bitwise and)\n    BitAnd,\n    /// The `|` operator (bitwise or)\n    BitOr,\n    /// The `<<` operator (shift left)\n    Shl,\n    /// The `>>` operator (shift right)\n    Shr,\n    /// The `==` operator (equality)\n    Eq,\n    /// The `<` operator (less than)\n    Lt,\n    /// The `<=` operator (less than or equal to)\n    Le,\n    /// The `!=` operator (not equal to)\n    Ne,\n    /// The `>=` operator (greater than or equal to)\n    Ge,\n    /// The `>` operator (greater than)\n    Gt,\n}",
        "start": {
          "row": 658,
          "column": 1
        },
        "end": {
          "row": 695,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 658,
          "column": 1
        },
        "end": {
          "row": 658,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "BinOpKind",
        "start": {
          "row": 658,
          "column": 10
        },
        "end": {
          "row": 658,
          "column": 19
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// The `+` operator (addition)\n    Add,\n    /// The `-` operator (subtraction)\n    Sub,\n    /// The `*` operator (multiplication)\n    Mul,\n    /// The `/` operator (division)\n    Div,\n    /// The `%` operator (modulus)\n    Rem,\n    /// The `&&` operator (logical and)\n    And,\n    /// The `||` operator (logical or)\n    Or,\n    /// The `^` operator (bitwise xor)\n    BitXor,\n    /// The `&` operator (bitwise and)\n    BitAnd,\n    /// The `|` operator (bitwise or)\n    BitOr,\n    /// The `<<` operator (shift left)\n    Shl,\n    /// The `>>` operator (shift right)\n    Shr,\n    /// The `==` operator (equality)\n    Eq,\n    /// The `<` operator (less than)\n    Lt,\n    /// The `<=` operator (less than or equal to)\n    Le,\n    /// The `!=` operator (not equal to)\n    Ne,\n    /// The `>=` operator (greater than or equal to)\n    Ge,\n    /// The `>` operator (greater than)\n    Gt,\n}",
        "start": {
          "row": 658,
          "column": 20
        },
        "end": {
          "row": 695,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `+` operator (addition)",
        "start": {
          "row": 659,
          "column": 5
        },
        "end": {
          "row": 659,
          "column": 36
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Add",
        "start": {
          "row": 660,
          "column": 5
        },
        "end": {
          "row": 660,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Add",
        "start": {
          "row": 660,
          "column": 5
        },
        "end": {
          "row": 660,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `-` operator (subtraction)",
        "start": {
          "row": 661,
          "column": 5
        },
        "end": {
          "row": 661,
          "column": 39
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Sub",
        "start": {
          "row": 662,
          "column": 5
        },
        "end": {
          "row": 662,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Sub",
        "start": {
          "row": 662,
          "column": 5
        },
        "end": {
          "row": 662,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `*` operator (multiplication)",
        "start": {
          "row": 663,
          "column": 5
        },
        "end": {
          "row": 663,
          "column": 42
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Mul",
        "start": {
          "row": 664,
          "column": 5
        },
        "end": {
          "row": 664,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mul",
        "start": {
          "row": 664,
          "column": 5
        },
        "end": {
          "row": 664,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `/` operator (division)",
        "start": {
          "row": 665,
          "column": 5
        },
        "end": {
          "row": 665,
          "column": 36
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Div",
        "start": {
          "row": 666,
          "column": 5
        },
        "end": {
          "row": 666,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Div",
        "start": {
          "row": 666,
          "column": 5
        },
        "end": {
          "row": 666,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `%` operator (modulus)",
        "start": {
          "row": 667,
          "column": 5
        },
        "end": {
          "row": 667,
          "column": 35
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Rem",
        "start": {
          "row": 668,
          "column": 5
        },
        "end": {
          "row": 668,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Rem",
        "start": {
          "row": 668,
          "column": 5
        },
        "end": {
          "row": 668,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `&&` operator (logical and)",
        "start": {
          "row": 669,
          "column": 5
        },
        "end": {
          "row": 669,
          "column": 40
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "And",
        "start": {
          "row": 670,
          "column": 5
        },
        "end": {
          "row": 670,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "And",
        "start": {
          "row": 670,
          "column": 5
        },
        "end": {
          "row": 670,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `||` operator (logical or)",
        "start": {
          "row": 671,
          "column": 5
        },
        "end": {
          "row": 671,
          "column": 39
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Or",
        "start": {
          "row": 672,
          "column": 5
        },
        "end": {
          "row": 672,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Or",
        "start": {
          "row": 672,
          "column": 5
        },
        "end": {
          "row": 672,
          "column": 7
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `^` operator (bitwise xor)",
        "start": {
          "row": 673,
          "column": 5
        },
        "end": {
          "row": 673,
          "column": 39
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "BitXor",
        "start": {
          "row": 674,
          "column": 5
        },
        "end": {
          "row": 674,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BitXor",
        "start": {
          "row": 674,
          "column": 5
        },
        "end": {
          "row": 674,
          "column": 11
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `&` operator (bitwise and)",
        "start": {
          "row": 675,
          "column": 5
        },
        "end": {
          "row": 675,
          "column": 39
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "BitAnd",
        "start": {
          "row": 676,
          "column": 5
        },
        "end": {
          "row": 676,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BitAnd",
        "start": {
          "row": 676,
          "column": 5
        },
        "end": {
          "row": 676,
          "column": 11
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `|` operator (bitwise or)",
        "start": {
          "row": 677,
          "column": 5
        },
        "end": {
          "row": 677,
          "column": 38
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "BitOr",
        "start": {
          "row": 678,
          "column": 5
        },
        "end": {
          "row": 678,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BitOr",
        "start": {
          "row": 678,
          "column": 5
        },
        "end": {
          "row": 678,
          "column": 10
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `<<` operator (shift left)",
        "start": {
          "row": 679,
          "column": 5
        },
        "end": {
          "row": 679,
          "column": 39
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Shl",
        "start": {
          "row": 680,
          "column": 5
        },
        "end": {
          "row": 680,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Shl",
        "start": {
          "row": 680,
          "column": 5
        },
        "end": {
          "row": 680,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `>>` operator (shift right)",
        "start": {
          "row": 681,
          "column": 5
        },
        "end": {
          "row": 681,
          "column": 40
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Shr",
        "start": {
          "row": 682,
          "column": 5
        },
        "end": {
          "row": 682,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Shr",
        "start": {
          "row": 682,
          "column": 5
        },
        "end": {
          "row": 682,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `==` operator (equality)",
        "start": {
          "row": 683,
          "column": 5
        },
        "end": {
          "row": 683,
          "column": 37
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 684,
          "column": 5
        },
        "end": {
          "row": 684,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 684,
          "column": 5
        },
        "end": {
          "row": 684,
          "column": 7
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `<` operator (less than)",
        "start": {
          "row": 685,
          "column": 5
        },
        "end": {
          "row": 685,
          "column": 37
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Lt",
        "start": {
          "row": 686,
          "column": 5
        },
        "end": {
          "row": 686,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Lt",
        "start": {
          "row": 686,
          "column": 5
        },
        "end": {
          "row": 686,
          "column": 7
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `<=` operator (less than or equal to)",
        "start": {
          "row": 687,
          "column": 5
        },
        "end": {
          "row": 687,
          "column": 50
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Le",
        "start": {
          "row": 688,
          "column": 5
        },
        "end": {
          "row": 688,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Le",
        "start": {
          "row": 688,
          "column": 5
        },
        "end": {
          "row": 688,
          "column": 7
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `!=` operator (not equal to)",
        "start": {
          "row": 689,
          "column": 5
        },
        "end": {
          "row": 689,
          "column": 41
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Ne",
        "start": {
          "row": 690,
          "column": 5
        },
        "end": {
          "row": 690,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ne",
        "start": {
          "row": 690,
          "column": 5
        },
        "end": {
          "row": 690,
          "column": 7
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `>=` operator (greater than or equal to)",
        "start": {
          "row": 691,
          "column": 5
        },
        "end": {
          "row": 691,
          "column": 53
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Ge",
        "start": {
          "row": 692,
          "column": 5
        },
        "end": {
          "row": 692,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ge",
        "start": {
          "row": 692,
          "column": 5
        },
        "end": {
          "row": 692,
          "column": 7
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `>` operator (greater than)",
        "start": {
          "row": 693,
          "column": 5
        },
        "end": {
          "row": 693,
          "column": 40
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Gt",
        "start": {
          "row": 694,
          "column": 5
        },
        "end": {
          "row": 694,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Gt",
        "start": {
          "row": 694,
          "column": 5
        },
        "end": {
          "row": 694,
          "column": 7
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl BinOpKind {\n    pub fn to_string(&self) -> &'static str {\n        use self::BinOpKind::*;\n        match *self {\n            Add => \"+\",\n            Sub => \"-\",\n            Mul => \"*\",\n            Div => \"/\",\n            Rem => \"%\",\n            And => \"&&\",\n            Or => \"||\",\n            BitXor => \"^\",\n            BitAnd => \"&\",\n            BitOr => \"|\",\n            Shl => \"<<\",\n            Shr => \">>\",\n            Eq => \"==\",\n            Lt => \"<\",\n            Le => \"<=\",\n            Ne => \"!=\",\n            Ge => \">=\",\n            Gt => \">\",\n        }\n    }\n    pub fn lazy(&self) -> bool {\n        match *self {\n            BinOpKind::And | BinOpKind::Or => true,\n            _ => false\n        }\n    }\n\n    pub fn is_shift(&self) -> bool {\n        match *self {\n            BinOpKind::Shl | BinOpKind::Shr => true,\n            _ => false\n        }\n    }\n\n    pub fn is_comparison(&self) -> bool {\n        use self::BinOpKind::*;\n        match *self {\n            Eq | Lt | Le | Ne | Gt | Ge =>\n            true,\n            And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd | BitOr | Shl | Shr =>\n            false,\n        }\n    }\n\n    /// Returns `true` if the binary operator takes its arguments by value\n    pub fn is_by_value(&self) -> bool {\n        !self.is_comparison()\n    }\n}",
        "start": {
          "row": 697,
          "column": 1
        },
        "end": {
          "row": 750,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "BinOpKind",
        "start": {
          "row": 697,
          "column": 6
        },
        "end": {
          "row": 697,
          "column": 15
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn to_string(&self) -> &'static str {\n        use self::BinOpKind::*;\n        match *self {\n            Add => \"+\",\n            Sub => \"-\",\n            Mul => \"*\",\n            Div => \"/\",\n            Rem => \"%\",\n            And => \"&&\",\n            Or => \"||\",\n            BitXor => \"^\",\n            BitAnd => \"&\",\n            BitOr => \"|\",\n            Shl => \"<<\",\n            Shr => \">>\",\n            Eq => \"==\",\n            Lt => \"<\",\n            Le => \"<=\",\n            Ne => \"!=\",\n            Ge => \">=\",\n            Gt => \">\",\n        }\n    }\n    pub fn lazy(&self) -> bool {\n        match *self {\n            BinOpKind::And | BinOpKind::Or => true,\n            _ => false\n        }\n    }\n\n    pub fn is_shift(&self) -> bool {\n        match *self {\n            BinOpKind::Shl | BinOpKind::Shr => true,\n            _ => false\n        }\n    }\n\n    pub fn is_comparison(&self) -> bool {\n        use self::BinOpKind::*;\n        match *self {\n            Eq | Lt | Le | Ne | Gt | Ge =>\n            true,\n            And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd | BitOr | Shl | Shr =>\n            false,\n        }\n    }\n\n    /// Returns `true` if the binary operator takes its arguments by value\n    pub fn is_by_value(&self) -> bool {\n        !self.is_comparison()\n    }\n}",
        "start": {
          "row": 697,
          "column": 16
        },
        "end": {
          "row": 750,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn to_string(&self) -> &'static str {\n        use self::BinOpKind::*;\n        match *self {\n            Add => \"+\",\n            Sub => \"-\",\n            Mul => \"*\",\n            Div => \"/\",\n            Rem => \"%\",\n            And => \"&&\",\n            Or => \"||\",\n            BitXor => \"^\",\n            BitAnd => \"&\",\n            BitOr => \"|\",\n            Shl => \"<<\",\n            Shr => \">>\",\n            Eq => \"==\",\n            Lt => \"<\",\n            Le => \"<=\",\n            Ne => \"!=\",\n            Ge => \">=\",\n            Gt => \">\",\n        }\n    }",
        "start": {
          "row": 698,
          "column": 5
        },
        "end": {
          "row": 720,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 698,
          "column": 5
        },
        "end": {
          "row": 698,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "to_string",
        "start": {
          "row": 698,
          "column": 12
        },
        "end": {
          "row": 698,
          "column": 21
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 698,
          "column": 21
        },
        "end": {
          "row": 698,
          "column": 28
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 698,
          "column": 22
        },
        "end": {
          "row": 698,
          "column": 27
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 698,
          "column": 23
        },
        "end": {
          "row": 698,
          "column": 27
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&'static str",
        "start": {
          "row": 698,
          "column": 32
        },
        "end": {
          "row": 698,
          "column": 44
        }
      },
      {
        "kind": "lifetime",
        "name": "query",
        "text": "'static",
        "start": {
          "row": 698,
          "column": 33
        },
        "end": {
          "row": 698,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "static",
        "start": {
          "row": 698,
          "column": 34
        },
        "end": {
          "row": 698,
          "column": 40
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 698,
          "column": 41
        },
        "end": {
          "row": 698,
          "column": 44
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        use self::BinOpKind::*;\n        match *self {\n            Add => \"+\",\n            Sub => \"-\",\n            Mul => \"*\",\n            Div => \"/\",\n            Rem => \"%\",\n            And => \"&&\",\n            Or => \"||\",\n            BitXor => \"^\",\n            BitAnd => \"&\",\n            BitOr => \"|\",\n            Shl => \"<<\",\n            Shr => \">>\",\n            Eq => \"==\",\n            Lt => \"<\",\n            Le => \"<=\",\n            Ne => \"!=\",\n            Ge => \">=\",\n            Gt => \">\",\n        }\n    }",
        "start": {
          "row": 698,
          "column": 45
        },
        "end": {
          "row": 720,
          "column": 6
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use self::BinOpKind::*;",
        "start": {
          "row": 699,
          "column": 9
        },
        "end": {
          "row": 699,
          "column": 32
        }
      },
      {
        "kind": "use_wildcard",
        "name": "query",
        "text": "self::BinOpKind::*",
        "start": {
          "row": 699,
          "column": 13
        },
        "end": {
          "row": 699,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "self::BinOpKind",
        "start": {
          "row": 699,
          "column": 13
        },
        "end": {
          "row": 699,
          "column": 28
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 699,
          "column": 13
        },
        "end": {
          "row": 699,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BinOpKind",
        "start": {
          "row": 699,
          "column": 19
        },
        "end": {
          "row": 699,
          "column": 28
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            Add => \"+\",\n            Sub => \"-\",\n            Mul => \"*\",\n            Div => \"/\",\n            Rem => \"%\",\n            And => \"&&\",\n            Or => \"||\",\n            BitXor => \"^\",\n            BitAnd => \"&\",\n            BitOr => \"|\",\n            Shl => \"<<\",\n            Shr => \">>\",\n            Eq => \"==\",\n            Lt => \"<\",\n            Le => \"<=\",\n            Ne => \"!=\",\n            Ge => \">=\",\n            Gt => \">\",\n        }",
        "start": {
          "row": 700,
          "column": 9
        },
        "end": {
          "row": 719,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 700,
          "column": 15
        },
        "end": {
          "row": 700,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 700,
          "column": 16
        },
        "end": {
          "row": 700,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            Add => \"+\",\n            Sub => \"-\",\n            Mul => \"*\",\n            Div => \"/\",\n            Rem => \"%\",\n            And => \"&&\",\n            Or => \"||\",\n            BitXor => \"^\",\n            BitAnd => \"&\",\n            BitOr => \"|\",\n            Shl => \"<<\",\n            Shr => \">>\",\n            Eq => \"==\",\n            Lt => \"<\",\n            Le => \"<=\",\n            Ne => \"!=\",\n            Ge => \">=\",\n            Gt => \">\",\n        }",
        "start": {
          "row": 700,
          "column": 21
        },
        "end": {
          "row": 719,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Add => \"+\",",
        "start": {
          "row": 701,
          "column": 13
        },
        "end": {
          "row": 701,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Add",
        "start": {
          "row": 701,
          "column": 13
        },
        "end": {
          "row": 701,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Add",
        "start": {
          "row": 701,
          "column": 13
        },
        "end": {
          "row": 701,
          "column": 16
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"+\"",
        "start": {
          "row": 701,
          "column": 20
        },
        "end": {
          "row": 701,
          "column": 23
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Sub => \"-\",",
        "start": {
          "row": 702,
          "column": 13
        },
        "end": {
          "row": 702,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Sub",
        "start": {
          "row": 702,
          "column": 13
        },
        "end": {
          "row": 702,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Sub",
        "start": {
          "row": 702,
          "column": 13
        },
        "end": {
          "row": 702,
          "column": 16
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"-\"",
        "start": {
          "row": 702,
          "column": 20
        },
        "end": {
          "row": 702,
          "column": 23
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Mul => \"*\",",
        "start": {
          "row": 703,
          "column": 13
        },
        "end": {
          "row": 703,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Mul",
        "start": {
          "row": 703,
          "column": 13
        },
        "end": {
          "row": 703,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mul",
        "start": {
          "row": 703,
          "column": 13
        },
        "end": {
          "row": 703,
          "column": 16
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"*\"",
        "start": {
          "row": 703,
          "column": 20
        },
        "end": {
          "row": 703,
          "column": 23
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Div => \"/\",",
        "start": {
          "row": 704,
          "column": 13
        },
        "end": {
          "row": 704,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Div",
        "start": {
          "row": 704,
          "column": 13
        },
        "end": {
          "row": 704,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Div",
        "start": {
          "row": 704,
          "column": 13
        },
        "end": {
          "row": 704,
          "column": 16
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"/\"",
        "start": {
          "row": 704,
          "column": 20
        },
        "end": {
          "row": 704,
          "column": 23
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Rem => \"%\",",
        "start": {
          "row": 705,
          "column": 13
        },
        "end": {
          "row": 705,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Rem",
        "start": {
          "row": 705,
          "column": 13
        },
        "end": {
          "row": 705,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Rem",
        "start": {
          "row": 705,
          "column": 13
        },
        "end": {
          "row": 705,
          "column": 16
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"%\"",
        "start": {
          "row": 705,
          "column": 20
        },
        "end": {
          "row": 705,
          "column": 23
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "And => \"&&\",",
        "start": {
          "row": 706,
          "column": 13
        },
        "end": {
          "row": 706,
          "column": 25
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "And",
        "start": {
          "row": 706,
          "column": 13
        },
        "end": {
          "row": 706,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "And",
        "start": {
          "row": 706,
          "column": 13
        },
        "end": {
          "row": 706,
          "column": 16
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"&&\"",
        "start": {
          "row": 706,
          "column": 20
        },
        "end": {
          "row": 706,
          "column": 24
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Or => \"||\",",
        "start": {
          "row": 707,
          "column": 13
        },
        "end": {
          "row": 707,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Or",
        "start": {
          "row": 707,
          "column": 13
        },
        "end": {
          "row": 707,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Or",
        "start": {
          "row": 707,
          "column": 13
        },
        "end": {
          "row": 707,
          "column": 15
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"||\"",
        "start": {
          "row": 707,
          "column": 19
        },
        "end": {
          "row": 707,
          "column": 23
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "BitXor => \"^\",",
        "start": {
          "row": 708,
          "column": 13
        },
        "end": {
          "row": 708,
          "column": 27
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "BitXor",
        "start": {
          "row": 708,
          "column": 13
        },
        "end": {
          "row": 708,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BitXor",
        "start": {
          "row": 708,
          "column": 13
        },
        "end": {
          "row": 708,
          "column": 19
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"^\"",
        "start": {
          "row": 708,
          "column": 23
        },
        "end": {
          "row": 708,
          "column": 26
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "BitAnd => \"&\",",
        "start": {
          "row": 709,
          "column": 13
        },
        "end": {
          "row": 709,
          "column": 27
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "BitAnd",
        "start": {
          "row": 709,
          "column": 13
        },
        "end": {
          "row": 709,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BitAnd",
        "start": {
          "row": 709,
          "column": 13
        },
        "end": {
          "row": 709,
          "column": 19
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"&\"",
        "start": {
          "row": 709,
          "column": 23
        },
        "end": {
          "row": 709,
          "column": 26
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "BitOr => \"|\",",
        "start": {
          "row": 710,
          "column": 13
        },
        "end": {
          "row": 710,
          "column": 26
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "BitOr",
        "start": {
          "row": 710,
          "column": 13
        },
        "end": {
          "row": 710,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BitOr",
        "start": {
          "row": 710,
          "column": 13
        },
        "end": {
          "row": 710,
          "column": 18
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"|\"",
        "start": {
          "row": 710,
          "column": 22
        },
        "end": {
          "row": 710,
          "column": 25
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Shl => \"<<\",",
        "start": {
          "row": 711,
          "column": 13
        },
        "end": {
          "row": 711,
          "column": 25
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Shl",
        "start": {
          "row": 711,
          "column": 13
        },
        "end": {
          "row": 711,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Shl",
        "start": {
          "row": 711,
          "column": 13
        },
        "end": {
          "row": 711,
          "column": 16
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"<<\"",
        "start": {
          "row": 711,
          "column": 20
        },
        "end": {
          "row": 711,
          "column": 24
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Shr => \">>\",",
        "start": {
          "row": 712,
          "column": 13
        },
        "end": {
          "row": 712,
          "column": 25
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Shr",
        "start": {
          "row": 712,
          "column": 13
        },
        "end": {
          "row": 712,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Shr",
        "start": {
          "row": 712,
          "column": 13
        },
        "end": {
          "row": 712,
          "column": 16
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\">>\"",
        "start": {
          "row": 712,
          "column": 20
        },
        "end": {
          "row": 712,
          "column": 24
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Eq => \"==\",",
        "start": {
          "row": 713,
          "column": 13
        },
        "end": {
          "row": 713,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 713,
          "column": 13
        },
        "end": {
          "row": 713,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 713,
          "column": 13
        },
        "end": {
          "row": 713,
          "column": 15
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"==\"",
        "start": {
          "row": 713,
          "column": 19
        },
        "end": {
          "row": 713,
          "column": 23
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Lt => \"<\",",
        "start": {
          "row": 714,
          "column": 13
        },
        "end": {
          "row": 714,
          "column": 23
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Lt",
        "start": {
          "row": 714,
          "column": 13
        },
        "end": {
          "row": 714,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Lt",
        "start": {
          "row": 714,
          "column": 13
        },
        "end": {
          "row": 714,
          "column": 15
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"<\"",
        "start": {
          "row": 714,
          "column": 19
        },
        "end": {
          "row": 714,
          "column": 22
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Le => \"<=\",",
        "start": {
          "row": 715,
          "column": 13
        },
        "end": {
          "row": 715,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Le",
        "start": {
          "row": 715,
          "column": 13
        },
        "end": {
          "row": 715,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Le",
        "start": {
          "row": 715,
          "column": 13
        },
        "end": {
          "row": 715,
          "column": 15
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"<=\"",
        "start": {
          "row": 715,
          "column": 19
        },
        "end": {
          "row": 715,
          "column": 23
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Ne => \"!=\",",
        "start": {
          "row": 716,
          "column": 13
        },
        "end": {
          "row": 716,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Ne",
        "start": {
          "row": 716,
          "column": 13
        },
        "end": {
          "row": 716,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ne",
        "start": {
          "row": 716,
          "column": 13
        },
        "end": {
          "row": 716,
          "column": 15
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"!=\"",
        "start": {
          "row": 716,
          "column": 19
        },
        "end": {
          "row": 716,
          "column": 23
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Ge => \">=\",",
        "start": {
          "row": 717,
          "column": 13
        },
        "end": {
          "row": 717,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Ge",
        "start": {
          "row": 717,
          "column": 13
        },
        "end": {
          "row": 717,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ge",
        "start": {
          "row": 717,
          "column": 13
        },
        "end": {
          "row": 717,
          "column": 15
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\">=\"",
        "start": {
          "row": 717,
          "column": 19
        },
        "end": {
          "row": 717,
          "column": 23
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Gt => \">\",",
        "start": {
          "row": 718,
          "column": 13
        },
        "end": {
          "row": 718,
          "column": 23
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Gt",
        "start": {
          "row": 718,
          "column": 13
        },
        "end": {
          "row": 718,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Gt",
        "start": {
          "row": 718,
          "column": 13
        },
        "end": {
          "row": 718,
          "column": 15
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\">\"",
        "start": {
          "row": 718,
          "column": 19
        },
        "end": {
          "row": 718,
          "column": 22
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn lazy(&self) -> bool {\n        match *self {\n            BinOpKind::And | BinOpKind::Or => true,\n            _ => false\n        }\n    }",
        "start": {
          "row": 721,
          "column": 5
        },
        "end": {
          "row": 726,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 721,
          "column": 5
        },
        "end": {
          "row": 721,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "lazy",
        "start": {
          "row": 721,
          "column": 12
        },
        "end": {
          "row": 721,
          "column": 16
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 721,
          "column": 16
        },
        "end": {
          "row": 721,
          "column": 23
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 721,
          "column": 17
        },
        "end": {
          "row": 721,
          "column": 22
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 721,
          "column": 18
        },
        "end": {
          "row": 721,
          "column": 22
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 721,
          "column": 27
        },
        "end": {
          "row": 721,
          "column": 31
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            BinOpKind::And | BinOpKind::Or => true,\n            _ => false\n        }\n    }",
        "start": {
          "row": 721,
          "column": 32
        },
        "end": {
          "row": 726,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            BinOpKind::And | BinOpKind::Or => true,\n            _ => false\n        }",
        "start": {
          "row": 722,
          "column": 9
        },
        "end": {
          "row": 725,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 722,
          "column": 15
        },
        "end": {
          "row": 722,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 722,
          "column": 16
        },
        "end": {
          "row": 722,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            BinOpKind::And | BinOpKind::Or => true,\n            _ => false\n        }",
        "start": {
          "row": 722,
          "column": 21
        },
        "end": {
          "row": 725,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "BinOpKind::And | BinOpKind::Or => true,",
        "start": {
          "row": 723,
          "column": 13
        },
        "end": {
          "row": 723,
          "column": 52
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "BinOpKind::And | BinOpKind::Or",
        "start": {
          "row": 723,
          "column": 13
        },
        "end": {
          "row": 723,
          "column": 43
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "BinOpKind::And | BinOpKind::Or",
        "start": {
          "row": 723,
          "column": 13
        },
        "end": {
          "row": 723,
          "column": 43
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "BinOpKind::And",
        "start": {
          "row": 723,
          "column": 13
        },
        "end": {
          "row": 723,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BinOpKind",
        "start": {
          "row": 723,
          "column": 13
        },
        "end": {
          "row": 723,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "And",
        "start": {
          "row": 723,
          "column": 24
        },
        "end": {
          "row": 723,
          "column": 27
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "BinOpKind::Or",
        "start": {
          "row": 723,
          "column": 30
        },
        "end": {
          "row": 723,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BinOpKind",
        "start": {
          "row": 723,
          "column": 30
        },
        "end": {
          "row": 723,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Or",
        "start": {
          "row": 723,
          "column": 41
        },
        "end": {
          "row": 723,
          "column": 43
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 723,
          "column": 47
        },
        "end": {
          "row": 723,
          "column": 51
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => false",
        "start": {
          "row": 724,
          "column": 13
        },
        "end": {
          "row": 724,
          "column": 23
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 724,
          "column": 13
        },
        "end": {
          "row": 724,
          "column": 14
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 724,
          "column": 18
        },
        "end": {
          "row": 724,
          "column": 23
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_shift(&self) -> bool {\n        match *self {\n            BinOpKind::Shl | BinOpKind::Shr => true,\n            _ => false\n        }\n    }",
        "start": {
          "row": 728,
          "column": 5
        },
        "end": {
          "row": 733,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 728,
          "column": 5
        },
        "end": {
          "row": 728,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_shift",
        "start": {
          "row": 728,
          "column": 12
        },
        "end": {
          "row": 728,
          "column": 20
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 728,
          "column": 20
        },
        "end": {
          "row": 728,
          "column": 27
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 728,
          "column": 21
        },
        "end": {
          "row": 728,
          "column": 26
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 728,
          "column": 22
        },
        "end": {
          "row": 728,
          "column": 26
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 728,
          "column": 31
        },
        "end": {
          "row": 728,
          "column": 35
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            BinOpKind::Shl | BinOpKind::Shr => true,\n            _ => false\n        }\n    }",
        "start": {
          "row": 728,
          "column": 36
        },
        "end": {
          "row": 733,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            BinOpKind::Shl | BinOpKind::Shr => true,\n            _ => false\n        }",
        "start": {
          "row": 729,
          "column": 9
        },
        "end": {
          "row": 732,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 729,
          "column": 15
        },
        "end": {
          "row": 729,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 729,
          "column": 16
        },
        "end": {
          "row": 729,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            BinOpKind::Shl | BinOpKind::Shr => true,\n            _ => false\n        }",
        "start": {
          "row": 729,
          "column": 21
        },
        "end": {
          "row": 732,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "BinOpKind::Shl | BinOpKind::Shr => true,",
        "start": {
          "row": 730,
          "column": 13
        },
        "end": {
          "row": 730,
          "column": 53
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "BinOpKind::Shl | BinOpKind::Shr",
        "start": {
          "row": 730,
          "column": 13
        },
        "end": {
          "row": 730,
          "column": 44
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "BinOpKind::Shl | BinOpKind::Shr",
        "start": {
          "row": 730,
          "column": 13
        },
        "end": {
          "row": 730,
          "column": 44
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "BinOpKind::Shl",
        "start": {
          "row": 730,
          "column": 13
        },
        "end": {
          "row": 730,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BinOpKind",
        "start": {
          "row": 730,
          "column": 13
        },
        "end": {
          "row": 730,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Shl",
        "start": {
          "row": 730,
          "column": 24
        },
        "end": {
          "row": 730,
          "column": 27
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "BinOpKind::Shr",
        "start": {
          "row": 730,
          "column": 30
        },
        "end": {
          "row": 730,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BinOpKind",
        "start": {
          "row": 730,
          "column": 30
        },
        "end": {
          "row": 730,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Shr",
        "start": {
          "row": 730,
          "column": 41
        },
        "end": {
          "row": 730,
          "column": 44
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 730,
          "column": 48
        },
        "end": {
          "row": 730,
          "column": 52
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => false",
        "start": {
          "row": 731,
          "column": 13
        },
        "end": {
          "row": 731,
          "column": 23
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 731,
          "column": 13
        },
        "end": {
          "row": 731,
          "column": 14
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 731,
          "column": 18
        },
        "end": {
          "row": 731,
          "column": 23
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_comparison(&self) -> bool {\n        use self::BinOpKind::*;\n        match *self {\n            Eq | Lt | Le | Ne | Gt | Ge =>\n            true,\n            And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd | BitOr | Shl | Shr =>\n            false,\n        }\n    }",
        "start": {
          "row": 735,
          "column": 5
        },
        "end": {
          "row": 744,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 735,
          "column": 5
        },
        "end": {
          "row": 735,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_comparison",
        "start": {
          "row": 735,
          "column": 12
        },
        "end": {
          "row": 735,
          "column": 25
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 735,
          "column": 25
        },
        "end": {
          "row": 735,
          "column": 32
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 735,
          "column": 26
        },
        "end": {
          "row": 735,
          "column": 31
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 735,
          "column": 27
        },
        "end": {
          "row": 735,
          "column": 31
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 735,
          "column": 36
        },
        "end": {
          "row": 735,
          "column": 40
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        use self::BinOpKind::*;\n        match *self {\n            Eq | Lt | Le | Ne | Gt | Ge =>\n            true,\n            And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd | BitOr | Shl | Shr =>\n            false,\n        }\n    }",
        "start": {
          "row": 735,
          "column": 41
        },
        "end": {
          "row": 744,
          "column": 6
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use self::BinOpKind::*;",
        "start": {
          "row": 736,
          "column": 9
        },
        "end": {
          "row": 736,
          "column": 32
        }
      },
      {
        "kind": "use_wildcard",
        "name": "query",
        "text": "self::BinOpKind::*",
        "start": {
          "row": 736,
          "column": 13
        },
        "end": {
          "row": 736,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "self::BinOpKind",
        "start": {
          "row": 736,
          "column": 13
        },
        "end": {
          "row": 736,
          "column": 28
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 736,
          "column": 13
        },
        "end": {
          "row": 736,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BinOpKind",
        "start": {
          "row": 736,
          "column": 19
        },
        "end": {
          "row": 736,
          "column": 28
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            Eq | Lt | Le | Ne | Gt | Ge =>\n            true,\n            And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd | BitOr | Shl | Shr =>\n            false,\n        }",
        "start": {
          "row": 737,
          "column": 9
        },
        "end": {
          "row": 743,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 737,
          "column": 15
        },
        "end": {
          "row": 737,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 737,
          "column": 16
        },
        "end": {
          "row": 737,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            Eq | Lt | Le | Ne | Gt | Ge =>\n            true,\n            And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd | BitOr | Shl | Shr =>\n            false,\n        }",
        "start": {
          "row": 737,
          "column": 21
        },
        "end": {
          "row": 743,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Eq | Lt | Le | Ne | Gt | Ge =>\n            true,",
        "start": {
          "row": 738,
          "column": 13
        },
        "end": {
          "row": 739,
          "column": 18
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Eq | Lt | Le | Ne | Gt | Ge",
        "start": {
          "row": 738,
          "column": 13
        },
        "end": {
          "row": 738,
          "column": 40
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "Eq | Lt | Le | Ne | Gt | Ge",
        "start": {
          "row": 738,
          "column": 13
        },
        "end": {
          "row": 738,
          "column": 40
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "Eq | Lt | Le | Ne | Gt",
        "start": {
          "row": 738,
          "column": 13
        },
        "end": {
          "row": 738,
          "column": 35
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "Eq | Lt | Le | Ne",
        "start": {
          "row": 738,
          "column": 13
        },
        "end": {
          "row": 738,
          "column": 30
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "Eq | Lt | Le",
        "start": {
          "row": 738,
          "column": 13
        },
        "end": {
          "row": 738,
          "column": 25
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "Eq | Lt",
        "start": {
          "row": 738,
          "column": 13
        },
        "end": {
          "row": 738,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 738,
          "column": 13
        },
        "end": {
          "row": 738,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Lt",
        "start": {
          "row": 738,
          "column": 18
        },
        "end": {
          "row": 738,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Le",
        "start": {
          "row": 738,
          "column": 23
        },
        "end": {
          "row": 738,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ne",
        "start": {
          "row": 738,
          "column": 28
        },
        "end": {
          "row": 738,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Gt",
        "start": {
          "row": 738,
          "column": 33
        },
        "end": {
          "row": 738,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ge",
        "start": {
          "row": 738,
          "column": 38
        },
        "end": {
          "row": 738,
          "column": 40
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 739,
          "column": 13
        },
        "end": {
          "row": 739,
          "column": 17
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd | BitOr | Shl | Shr =>\n            false,",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 742,
          "column": 19
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd | BitOr | Shl | Shr",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 741,
          "column": 48
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd | BitOr | Shl | Shr",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 741,
          "column": 48
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd | BitOr | Shl",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 741,
          "column": 42
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd | BitOr",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 741,
          "column": 36
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor | BitAnd",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 741,
          "column": 28
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "And | Or | Add | Sub | Mul | Div | Rem |\n            BitXor",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 741,
          "column": 19
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "And | Or | Add | Sub | Mul | Div | Rem",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 740,
          "column": 51
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "And | Or | Add | Sub | Mul | Div",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 740,
          "column": 45
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "And | Or | Add | Sub | Mul",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 740,
          "column": 39
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "And | Or | Add | Sub",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 740,
          "column": 33
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "And | Or | Add",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 740,
          "column": 27
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "And | Or",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 740,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "And",
        "start": {
          "row": 740,
          "column": 13
        },
        "end": {
          "row": 740,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Or",
        "start": {
          "row": 740,
          "column": 19
        },
        "end": {
          "row": 740,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Add",
        "start": {
          "row": 740,
          "column": 24
        },
        "end": {
          "row": 740,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Sub",
        "start": {
          "row": 740,
          "column": 30
        },
        "end": {
          "row": 740,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mul",
        "start": {
          "row": 740,
          "column": 36
        },
        "end": {
          "row": 740,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Div",
        "start": {
          "row": 740,
          "column": 42
        },
        "end": {
          "row": 740,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Rem",
        "start": {
          "row": 740,
          "column": 48
        },
        "end": {
          "row": 740,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BitXor",
        "start": {
          "row": 741,
          "column": 13
        },
        "end": {
          "row": 741,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BitAnd",
        "start": {
          "row": 741,
          "column": 22
        },
        "end": {
          "row": 741,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BitOr",
        "start": {
          "row": 741,
          "column": 31
        },
        "end": {
          "row": 741,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Shl",
        "start": {
          "row": 741,
          "column": 39
        },
        "end": {
          "row": 741,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Shr",
        "start": {
          "row": 741,
          "column": 45
        },
        "end": {
          "row": 741,
          "column": 48
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 742,
          "column": 13
        },
        "end": {
          "row": 742,
          "column": 18
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Returns `true` if the binary operator takes its arguments by value",
        "start": {
          "row": 746,
          "column": 5
        },
        "end": {
          "row": 746,
          "column": 75
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_by_value(&self) -> bool {\n        !self.is_comparison()\n    }",
        "start": {
          "row": 747,
          "column": 5
        },
        "end": {
          "row": 749,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 747,
          "column": 5
        },
        "end": {
          "row": 747,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_by_value",
        "start": {
          "row": 747,
          "column": 12
        },
        "end": {
          "row": 747,
          "column": 23
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 747,
          "column": 23
        },
        "end": {
          "row": 747,
          "column": 30
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 747,
          "column": 24
        },
        "end": {
          "row": 747,
          "column": 29
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 747,
          "column": 25
        },
        "end": {
          "row": 747,
          "column": 29
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 747,
          "column": 34
        },
        "end": {
          "row": 747,
          "column": 38
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        !self.is_comparison()\n    }",
        "start": {
          "row": 747,
          "column": 39
        },
        "end": {
          "row": 749,
          "column": 6
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "!self.is_comparison()",
        "start": {
          "row": 748,
          "column": 9
        },
        "end": {
          "row": 748,
          "column": 30
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.is_comparison()",
        "start": {
          "row": 748,
          "column": 10
        },
        "end": {
          "row": 748,
          "column": 30
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.is_comparison",
        "start": {
          "row": 748,
          "column": 10
        },
        "end": {
          "row": 748,
          "column": 28
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 748,
          "column": 10
        },
        "end": {
          "row": 748,
          "column": 14
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_comparison",
        "start": {
          "row": 748,
          "column": 15
        },
        "end": {
          "row": 748,
          "column": 28
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 748,
          "column": 28
        },
        "end": {
          "row": 748,
          "column": 30
        }
      },
      {
        "kind": "type_item",
        "name": "query",
        "text": "pub type BinOp = Spanned<BinOpKind>;",
        "start": {
          "row": 752,
          "column": 1
        },
        "end": {
          "row": 752,
          "column": 37
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 752,
          "column": 1
        },
        "end": {
          "row": 752,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "BinOp",
        "start": {
          "row": 752,
          "column": 10
        },
        "end": {
          "row": 752,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Spanned<BinOpKind>",
        "start": {
          "row": 752,
          "column": 18
        },
        "end": {
          "row": 752,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Spanned",
        "start": {
          "row": 752,
          "column": 18
        },
        "end": {
          "row": 752,
          "column": 25
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<BinOpKind>",
        "start": {
          "row": 752,
          "column": 25
        },
        "end": {
          "row": 752,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "BinOpKind",
        "start": {
          "row": 752,
          "column": 26
        },
        "end": {
          "row": 752,
          "column": 35
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 754,
          "column": 1
        },
        "end": {
          "row": 754,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 754,
          "column": 3
        },
        "end": {
          "row": 754,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 754,
          "column": 3
        },
        "end": {
          "row": 754,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 754,
          "column": 9
        },
        "end": {
          "row": 754,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 754,
          "column": 10
        },
        "end": {
          "row": 754,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 754,
          "column": 10
        },
        "end": {
          "row": 754,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 754,
          "column": 17
        },
        "end": {
          "row": 754,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 754,
          "column": 17
        },
        "end": {
          "row": 754,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 754,
          "column": 28
        },
        "end": {
          "row": 754,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 754,
          "column": 28
        },
        "end": {
          "row": 754,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 754,
          "column": 32
        },
        "end": {
          "row": 754,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 754,
          "column": 32
        },
        "end": {
          "row": 754,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 754,
          "column": 48
        },
        "end": {
          "row": 754,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 754,
          "column": 48
        },
        "end": {
          "row": 754,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 754,
          "column": 64
        },
        "end": {
          "row": 754,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 754,
          "column": 64
        },
        "end": {
          "row": 754,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 754,
          "column": 70
        },
        "end": {
          "row": 754,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 754,
          "column": 70
        },
        "end": {
          "row": 754,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 754,
          "column": 77
        },
        "end": {
          "row": 754,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 754,
          "column": 77
        },
        "end": {
          "row": 754,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum UnOp {\n    /// The `*` operator for dereferencing\n    Deref,\n    /// The `!` operator for logical inversion\n    Not,\n    /// The `-` operator for negation\n    Neg,\n}",
        "start": {
          "row": 755,
          "column": 1
        },
        "end": {
          "row": 762,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 755,
          "column": 1
        },
        "end": {
          "row": 755,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UnOp",
        "start": {
          "row": 755,
          "column": 10
        },
        "end": {
          "row": 755,
          "column": 14
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// The `*` operator for dereferencing\n    Deref,\n    /// The `!` operator for logical inversion\n    Not,\n    /// The `-` operator for negation\n    Neg,\n}",
        "start": {
          "row": 755,
          "column": 15
        },
        "end": {
          "row": 762,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `*` operator for dereferencing",
        "start": {
          "row": 756,
          "column": 5
        },
        "end": {
          "row": 756,
          "column": 43
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Deref",
        "start": {
          "row": 757,
          "column": 5
        },
        "end": {
          "row": 757,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Deref",
        "start": {
          "row": 757,
          "column": 5
        },
        "end": {
          "row": 757,
          "column": 10
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `!` operator for logical inversion",
        "start": {
          "row": 758,
          "column": 5
        },
        "end": {
          "row": 758,
          "column": 47
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Not",
        "start": {
          "row": 759,
          "column": 5
        },
        "end": {
          "row": 759,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Not",
        "start": {
          "row": 759,
          "column": 5
        },
        "end": {
          "row": 759,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `-` operator for negation",
        "start": {
          "row": 760,
          "column": 5
        },
        "end": {
          "row": 760,
          "column": 38
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Neg",
        "start": {
          "row": 761,
          "column": 5
        },
        "end": {
          "row": 761,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Neg",
        "start": {
          "row": 761,
          "column": 5
        },
        "end": {
          "row": 761,
          "column": 8
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl UnOp {\n    /// Returns `true` if the unary operator takes its argument by value\n    pub fn is_by_value(u: UnOp) -> bool {\n        match u {\n            UnOp::Neg | UnOp::Not => true,\n            _ => false,\n        }\n    }\n\n    pub fn to_string(op: UnOp) -> &'static str {\n        match op {\n            UnOp::Deref => \"*\",\n            UnOp::Not => \"!\",\n            UnOp::Neg => \"-\",\n        }\n    }\n}",
        "start": {
          "row": 764,
          "column": 1
        },
        "end": {
          "row": 780,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UnOp",
        "start": {
          "row": 764,
          "column": 6
        },
        "end": {
          "row": 764,
          "column": 10
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    /// Returns `true` if the unary operator takes its argument by value\n    pub fn is_by_value(u: UnOp) -> bool {\n        match u {\n            UnOp::Neg | UnOp::Not => true,\n            _ => false,\n        }\n    }\n\n    pub fn to_string(op: UnOp) -> &'static str {\n        match op {\n            UnOp::Deref => \"*\",\n            UnOp::Not => \"!\",\n            UnOp::Neg => \"-\",\n        }\n    }\n}",
        "start": {
          "row": 764,
          "column": 11
        },
        "end": {
          "row": 780,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Returns `true` if the unary operator takes its argument by value",
        "start": {
          "row": 765,
          "column": 5
        },
        "end": {
          "row": 765,
          "column": 73
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_by_value(u: UnOp) -> bool {\n        match u {\n            UnOp::Neg | UnOp::Not => true,\n            _ => false,\n        }\n    }",
        "start": {
          "row": 766,
          "column": 5
        },
        "end": {
          "row": 771,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 766,
          "column": 5
        },
        "end": {
          "row": 766,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_by_value",
        "start": {
          "row": 766,
          "column": 12
        },
        "end": {
          "row": 766,
          "column": 23
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(u: UnOp)",
        "start": {
          "row": 766,
          "column": 23
        },
        "end": {
          "row": 766,
          "column": 32
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "u: UnOp",
        "start": {
          "row": 766,
          "column": 24
        },
        "end": {
          "row": 766,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "u",
        "start": {
          "row": 766,
          "column": 24
        },
        "end": {
          "row": 766,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UnOp",
        "start": {
          "row": 766,
          "column": 27
        },
        "end": {
          "row": 766,
          "column": 31
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 766,
          "column": 36
        },
        "end": {
          "row": 766,
          "column": 40
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match u {\n            UnOp::Neg | UnOp::Not => true,\n            _ => false,\n        }\n    }",
        "start": {
          "row": 766,
          "column": 41
        },
        "end": {
          "row": 771,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match u {\n            UnOp::Neg | UnOp::Not => true,\n            _ => false,\n        }",
        "start": {
          "row": 767,
          "column": 9
        },
        "end": {
          "row": 770,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "u",
        "start": {
          "row": 767,
          "column": 15
        },
        "end": {
          "row": 767,
          "column": 16
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            UnOp::Neg | UnOp::Not => true,\n            _ => false,\n        }",
        "start": {
          "row": 767,
          "column": 17
        },
        "end": {
          "row": 770,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UnOp::Neg | UnOp::Not => true,",
        "start": {
          "row": 768,
          "column": 13
        },
        "end": {
          "row": 768,
          "column": 43
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UnOp::Neg | UnOp::Not",
        "start": {
          "row": 768,
          "column": 13
        },
        "end": {
          "row": 768,
          "column": 34
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "UnOp::Neg | UnOp::Not",
        "start": {
          "row": 768,
          "column": 13
        },
        "end": {
          "row": 768,
          "column": 34
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UnOp::Neg",
        "start": {
          "row": 768,
          "column": 13
        },
        "end": {
          "row": 768,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UnOp",
        "start": {
          "row": 768,
          "column": 13
        },
        "end": {
          "row": 768,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Neg",
        "start": {
          "row": 768,
          "column": 19
        },
        "end": {
          "row": 768,
          "column": 22
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UnOp::Not",
        "start": {
          "row": 768,
          "column": 25
        },
        "end": {
          "row": 768,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UnOp",
        "start": {
          "row": 768,
          "column": 25
        },
        "end": {
          "row": 768,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Not",
        "start": {
          "row": 768,
          "column": 31
        },
        "end": {
          "row": 768,
          "column": 34
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 768,
          "column": 38
        },
        "end": {
          "row": 768,
          "column": 42
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => false,",
        "start": {
          "row": 769,
          "column": 13
        },
        "end": {
          "row": 769,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 769,
          "column": 13
        },
        "end": {
          "row": 769,
          "column": 14
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 769,
          "column": 18
        },
        "end": {
          "row": 769,
          "column": 23
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn to_string(op: UnOp) -> &'static str {\n        match op {\n            UnOp::Deref => \"*\",\n            UnOp::Not => \"!\",\n            UnOp::Neg => \"-\",\n        }\n    }",
        "start": {
          "row": 773,
          "column": 5
        },
        "end": {
          "row": 779,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 773,
          "column": 5
        },
        "end": {
          "row": 773,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "to_string",
        "start": {
          "row": 773,
          "column": 12
        },
        "end": {
          "row": 773,
          "column": 21
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(op: UnOp)",
        "start": {
          "row": 773,
          "column": 21
        },
        "end": {
          "row": 773,
          "column": 31
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "op: UnOp",
        "start": {
          "row": 773,
          "column": 22
        },
        "end": {
          "row": 773,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "op",
        "start": {
          "row": 773,
          "column": 22
        },
        "end": {
          "row": 773,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UnOp",
        "start": {
          "row": 773,
          "column": 26
        },
        "end": {
          "row": 773,
          "column": 30
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&'static str",
        "start": {
          "row": 773,
          "column": 35
        },
        "end": {
          "row": 773,
          "column": 47
        }
      },
      {
        "kind": "lifetime",
        "name": "query",
        "text": "'static",
        "start": {
          "row": 773,
          "column": 36
        },
        "end": {
          "row": 773,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "static",
        "start": {
          "row": 773,
          "column": 37
        },
        "end": {
          "row": 773,
          "column": 43
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 773,
          "column": 44
        },
        "end": {
          "row": 773,
          "column": 47
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match op {\n            UnOp::Deref => \"*\",\n            UnOp::Not => \"!\",\n            UnOp::Neg => \"-\",\n        }\n    }",
        "start": {
          "row": 773,
          "column": 48
        },
        "end": {
          "row": 779,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match op {\n            UnOp::Deref => \"*\",\n            UnOp::Not => \"!\",\n            UnOp::Neg => \"-\",\n        }",
        "start": {
          "row": 774,
          "column": 9
        },
        "end": {
          "row": 778,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "op",
        "start": {
          "row": 774,
          "column": 15
        },
        "end": {
          "row": 774,
          "column": 17
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            UnOp::Deref => \"*\",\n            UnOp::Not => \"!\",\n            UnOp::Neg => \"-\",\n        }",
        "start": {
          "row": 774,
          "column": 18
        },
        "end": {
          "row": 778,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UnOp::Deref => \"*\",",
        "start": {
          "row": 775,
          "column": 13
        },
        "end": {
          "row": 775,
          "column": 32
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UnOp::Deref",
        "start": {
          "row": 775,
          "column": 13
        },
        "end": {
          "row": 775,
          "column": 24
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UnOp::Deref",
        "start": {
          "row": 775,
          "column": 13
        },
        "end": {
          "row": 775,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UnOp",
        "start": {
          "row": 775,
          "column": 13
        },
        "end": {
          "row": 775,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Deref",
        "start": {
          "row": 775,
          "column": 19
        },
        "end": {
          "row": 775,
          "column": 24
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"*\"",
        "start": {
          "row": 775,
          "column": 28
        },
        "end": {
          "row": 775,
          "column": 31
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UnOp::Not => \"!\",",
        "start": {
          "row": 776,
          "column": 13
        },
        "end": {
          "row": 776,
          "column": 30
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UnOp::Not",
        "start": {
          "row": 776,
          "column": 13
        },
        "end": {
          "row": 776,
          "column": 22
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UnOp::Not",
        "start": {
          "row": 776,
          "column": 13
        },
        "end": {
          "row": 776,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UnOp",
        "start": {
          "row": 776,
          "column": 13
        },
        "end": {
          "row": 776,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Not",
        "start": {
          "row": 776,
          "column": 19
        },
        "end": {
          "row": 776,
          "column": 22
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"!\"",
        "start": {
          "row": 776,
          "column": 26
        },
        "end": {
          "row": 776,
          "column": 29
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UnOp::Neg => \"-\",",
        "start": {
          "row": 777,
          "column": 13
        },
        "end": {
          "row": 777,
          "column": 30
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UnOp::Neg",
        "start": {
          "row": 777,
          "column": 13
        },
        "end": {
          "row": 777,
          "column": 22
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UnOp::Neg",
        "start": {
          "row": 777,
          "column": 13
        },
        "end": {
          "row": 777,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UnOp",
        "start": {
          "row": 777,
          "column": 13
        },
        "end": {
          "row": 777,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Neg",
        "start": {
          "row": 777,
          "column": 19
        },
        "end": {
          "row": 777,
          "column": 22
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"-\"",
        "start": {
          "row": 777,
          "column": 26
        },
        "end": {
          "row": 777,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A statement",
        "start": {
          "row": 782,
          "column": 1
        },
        "end": {
          "row": 782,
          "column": 16
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]",
        "start": {
          "row": 783,
          "column": 1
        },
        "end": {
          "row": 783,
          "column": 70
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)",
        "start": {
          "row": 783,
          "column": 3
        },
        "end": {
          "row": 783,
          "column": 69
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 783,
          "column": 3
        },
        "end": {
          "row": 783,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)",
        "start": {
          "row": 783,
          "column": 9
        },
        "end": {
          "row": 783,
          "column": 69
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 783,
          "column": 10
        },
        "end": {
          "row": 783,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 783,
          "column": 10
        },
        "end": {
          "row": 783,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 783,
          "column": 17
        },
        "end": {
          "row": 783,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 783,
          "column": 17
        },
        "end": {
          "row": 783,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 783,
          "column": 28
        },
        "end": {
          "row": 783,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 783,
          "column": 28
        },
        "end": {
          "row": 783,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 783,
          "column": 32
        },
        "end": {
          "row": 783,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 783,
          "column": 32
        },
        "end": {
          "row": 783,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 783,
          "column": 48
        },
        "end": {
          "row": 783,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 783,
          "column": 48
        },
        "end": {
          "row": 783,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 783,
          "column": 64
        },
        "end": {
          "row": 783,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 783,
          "column": 64
        },
        "end": {
          "row": 783,
          "column": 68
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Stmt {\n    pub id: NodeId,\n    pub node: StmtKind,\n    pub span: Span,\n}",
        "start": {
          "row": 784,
          "column": 1
        },
        "end": {
          "row": 788,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 784,
          "column": 1
        },
        "end": {
          "row": 784,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Stmt",
        "start": {
          "row": 784,
          "column": 12
        },
        "end": {
          "row": 784,
          "column": 16
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub id: NodeId,\n    pub node: StmtKind,\n    pub span: Span,\n}",
        "start": {
          "row": 784,
          "column": 17
        },
        "end": {
          "row": 788,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 785,
          "column": 5
        },
        "end": {
          "row": 785,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 785,
          "column": 5
        },
        "end": {
          "row": 785,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 785,
          "column": 9
        },
        "end": {
          "row": 785,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 785,
          "column": 13
        },
        "end": {
          "row": 785,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub node: StmtKind",
        "start": {
          "row": 786,
          "column": 5
        },
        "end": {
          "row": 786,
          "column": 23
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 786,
          "column": 5
        },
        "end": {
          "row": 786,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 786,
          "column": 9
        },
        "end": {
          "row": 786,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "StmtKind",
        "start": {
          "row": 786,
          "column": 15
        },
        "end": {
          "row": 786,
          "column": 23
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 787,
          "column": 5
        },
        "end": {
          "row": 787,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 787,
          "column": 5
        },
        "end": {
          "row": 787,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 787,
          "column": 9
        },
        "end": {
          "row": 787,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 787,
          "column": 15
        },
        "end": {
          "row": 787,
          "column": 19
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl Stmt {\n    pub fn add_trailing_semicolon(mut self) -> Self {\n        self.node = match self.node {\n            StmtKind::Expr(expr) => StmtKind::Semi(expr),\n            StmtKind::Mac(mac) => StmtKind::Mac(mac.map(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            })),\n            node => node,\n        };\n        self\n    }\n\n    pub fn is_item(&self) -> bool {\n        match self.node {\n            StmtKind::Local(_) => true,\n            _ => false,\n        }\n    }\n}",
        "start": {
          "row": 790,
          "column": 1
        },
        "end": {
          "row": 808,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Stmt",
        "start": {
          "row": 790,
          "column": 6
        },
        "end": {
          "row": 790,
          "column": 10
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn add_trailing_semicolon(mut self) -> Self {\n        self.node = match self.node {\n            StmtKind::Expr(expr) => StmtKind::Semi(expr),\n            StmtKind::Mac(mac) => StmtKind::Mac(mac.map(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            })),\n            node => node,\n        };\n        self\n    }\n\n    pub fn is_item(&self) -> bool {\n        match self.node {\n            StmtKind::Local(_) => true,\n            _ => false,\n        }\n    }\n}",
        "start": {
          "row": 790,
          "column": 11
        },
        "end": {
          "row": 808,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn add_trailing_semicolon(mut self) -> Self {\n        self.node = match self.node {\n            StmtKind::Expr(expr) => StmtKind::Semi(expr),\n            StmtKind::Mac(mac) => StmtKind::Mac(mac.map(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            })),\n            node => node,\n        };\n        self\n    }",
        "start": {
          "row": 791,
          "column": 5
        },
        "end": {
          "row": 800,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 791,
          "column": 5
        },
        "end": {
          "row": 791,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "add_trailing_semicolon",
        "start": {
          "row": 791,
          "column": 12
        },
        "end": {
          "row": 791,
          "column": 34
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(mut self)",
        "start": {
          "row": 791,
          "column": 34
        },
        "end": {
          "row": 791,
          "column": 44
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "mut self",
        "start": {
          "row": 791,
          "column": 35
        },
        "end": {
          "row": 791,
          "column": 43
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 791,
          "column": 35
        },
        "end": {
          "row": 791,
          "column": 38
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 791,
          "column": 39
        },
        "end": {
          "row": 791,
          "column": 43
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Self",
        "start": {
          "row": 791,
          "column": 48
        },
        "end": {
          "row": 791,
          "column": 52
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        self.node = match self.node {\n            StmtKind::Expr(expr) => StmtKind::Semi(expr),\n            StmtKind::Mac(mac) => StmtKind::Mac(mac.map(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            })),\n            node => node,\n        };\n        self\n    }",
        "start": {
          "row": 791,
          "column": 53
        },
        "end": {
          "row": 800,
          "column": 6
        }
      },
      {
        "kind": "assignment_expression",
        "name": "query",
        "text": "self.node = match self.node {\n            StmtKind::Expr(expr) => StmtKind::Semi(expr),\n            StmtKind::Mac(mac) => StmtKind::Mac(mac.map(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            })),\n            node => node,\n        }",
        "start": {
          "row": 792,
          "column": 9
        },
        "end": {
          "row": 798,
          "column": 10
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.node",
        "start": {
          "row": 792,
          "column": 9
        },
        "end": {
          "row": 792,
          "column": 18
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 792,
          "column": 9
        },
        "end": {
          "row": 792,
          "column": 13
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 792,
          "column": 14
        },
        "end": {
          "row": 792,
          "column": 18
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match self.node {\n            StmtKind::Expr(expr) => StmtKind::Semi(expr),\n            StmtKind::Mac(mac) => StmtKind::Mac(mac.map(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            })),\n            node => node,\n        }",
        "start": {
          "row": 792,
          "column": 21
        },
        "end": {
          "row": 798,
          "column": 10
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.node",
        "start": {
          "row": 792,
          "column": 27
        },
        "end": {
          "row": 792,
          "column": 36
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 792,
          "column": 27
        },
        "end": {
          "row": 792,
          "column": 31
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 792,
          "column": 32
        },
        "end": {
          "row": 792,
          "column": 36
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            StmtKind::Expr(expr) => StmtKind::Semi(expr),\n            StmtKind::Mac(mac) => StmtKind::Mac(mac.map(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            })),\n            node => node,\n        }",
        "start": {
          "row": 792,
          "column": 37
        },
        "end": {
          "row": 798,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "StmtKind::Expr(expr) => StmtKind::Semi(expr),",
        "start": {
          "row": 793,
          "column": 13
        },
        "end": {
          "row": 793,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "StmtKind::Expr(expr)",
        "start": {
          "row": 793,
          "column": 13
        },
        "end": {
          "row": 793,
          "column": 33
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "StmtKind::Expr(expr)",
        "start": {
          "row": 793,
          "column": 13
        },
        "end": {
          "row": 793,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "StmtKind::Expr",
        "start": {
          "row": 793,
          "column": 13
        },
        "end": {
          "row": 793,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "StmtKind",
        "start": {
          "row": 793,
          "column": 13
        },
        "end": {
          "row": 793,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 793,
          "column": 23
        },
        "end": {
          "row": 793,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 793,
          "column": 28
        },
        "end": {
          "row": 793,
          "column": 32
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "StmtKind::Semi(expr)",
        "start": {
          "row": 793,
          "column": 37
        },
        "end": {
          "row": 793,
          "column": 57
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "StmtKind::Semi",
        "start": {
          "row": 793,
          "column": 37
        },
        "end": {
          "row": 793,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "StmtKind",
        "start": {
          "row": 793,
          "column": 37
        },
        "end": {
          "row": 793,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Semi",
        "start": {
          "row": 793,
          "column": 47
        },
        "end": {
          "row": 793,
          "column": 51
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(expr)",
        "start": {
          "row": 793,
          "column": 51
        },
        "end": {
          "row": 793,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 793,
          "column": 52
        },
        "end": {
          "row": 793,
          "column": 56
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "StmtKind::Mac(mac) => StmtKind::Mac(mac.map(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            })),",
        "start": {
          "row": 794,
          "column": 13
        },
        "end": {
          "row": 796,
          "column": 17
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "StmtKind::Mac(mac)",
        "start": {
          "row": 794,
          "column": 13
        },
        "end": {
          "row": 794,
          "column": 31
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "StmtKind::Mac(mac)",
        "start": {
          "row": 794,
          "column": 13
        },
        "end": {
          "row": 794,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "StmtKind::Mac",
        "start": {
          "row": 794,
          "column": 13
        },
        "end": {
          "row": 794,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "StmtKind",
        "start": {
          "row": 794,
          "column": 13
        },
        "end": {
          "row": 794,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 794,
          "column": 23
        },
        "end": {
          "row": 794,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mac",
        "start": {
          "row": 794,
          "column": 27
        },
        "end": {
          "row": 794,
          "column": 30
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "StmtKind::Mac(mac.map(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            }))",
        "start": {
          "row": 794,
          "column": 35
        },
        "end": {
          "row": 796,
          "column": 16
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "StmtKind::Mac",
        "start": {
          "row": 794,
          "column": 35
        },
        "end": {
          "row": 794,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "StmtKind",
        "start": {
          "row": 794,
          "column": 35
        },
        "end": {
          "row": 794,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 794,
          "column": 45
        },
        "end": {
          "row": 794,
          "column": 48
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(mac.map(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            }))",
        "start": {
          "row": 794,
          "column": 48
        },
        "end": {
          "row": 796,
          "column": 16
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "mac.map(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            })",
        "start": {
          "row": 794,
          "column": 49
        },
        "end": {
          "row": 796,
          "column": 15
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "mac.map",
        "start": {
          "row": 794,
          "column": 49
        },
        "end": {
          "row": 794,
          "column": 56
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mac",
        "start": {
          "row": 794,
          "column": 49
        },
        "end": {
          "row": 794,
          "column": 52
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "map",
        "start": {
          "row": 794,
          "column": 53
        },
        "end": {
          "row": 794,
          "column": 56
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            })",
        "start": {
          "row": 794,
          "column": 56
        },
        "end": {
          "row": 796,
          "column": 15
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|(mac, _style, attrs)| {\n                (mac, MacStmtStyle::Semicolon, attrs)\n            }",
        "start": {
          "row": 794,
          "column": 57
        },
        "end": {
          "row": 796,
          "column": 14
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|(mac, _style, attrs)|",
        "start": {
          "row": 794,
          "column": 57
        },
        "end": {
          "row": 794,
          "column": 79
        }
      },
      {
        "kind": "tuple_pattern",
        "name": "query",
        "text": "(mac, _style, attrs)",
        "start": {
          "row": 794,
          "column": 58
        },
        "end": {
          "row": 794,
          "column": 78
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mac",
        "start": {
          "row": 794,
          "column": 59
        },
        "end": {
          "row": 794,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "_style",
        "start": {
          "row": 794,
          "column": 64
        },
        "end": {
          "row": 794,
          "column": 70
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 794,
          "column": 72
        },
        "end": {
          "row": 794,
          "column": 77
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                (mac, MacStmtStyle::Semicolon, attrs)\n            }",
        "start": {
          "row": 794,
          "column": 80
        },
        "end": {
          "row": 796,
          "column": 14
        }
      },
      {
        "kind": "tuple_expression",
        "name": "query",
        "text": "(mac, MacStmtStyle::Semicolon, attrs)",
        "start": {
          "row": 795,
          "column": 17
        },
        "end": {
          "row": 795,
          "column": 54
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mac",
        "start": {
          "row": 795,
          "column": 18
        },
        "end": {
          "row": 795,
          "column": 21
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "MacStmtStyle::Semicolon",
        "start": {
          "row": 795,
          "column": 23
        },
        "end": {
          "row": 795,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "MacStmtStyle",
        "start": {
          "row": 795,
          "column": 23
        },
        "end": {
          "row": 795,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Semicolon",
        "start": {
          "row": 795,
          "column": 37
        },
        "end": {
          "row": 795,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 795,
          "column": 48
        },
        "end": {
          "row": 795,
          "column": 53
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "node => node,",
        "start": {
          "row": 797,
          "column": 13
        },
        "end": {
          "row": 797,
          "column": 26
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "node",
        "start": {
          "row": 797,
          "column": 13
        },
        "end": {
          "row": 797,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 797,
          "column": 13
        },
        "end": {
          "row": 797,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 797,
          "column": 21
        },
        "end": {
          "row": 797,
          "column": 25
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 799,
          "column": 9
        },
        "end": {
          "row": 799,
          "column": 13
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_item(&self) -> bool {\n        match self.node {\n            StmtKind::Local(_) => true,\n            _ => false,\n        }\n    }",
        "start": {
          "row": 802,
          "column": 5
        },
        "end": {
          "row": 807,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 802,
          "column": 5
        },
        "end": {
          "row": 802,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_item",
        "start": {
          "row": 802,
          "column": 12
        },
        "end": {
          "row": 802,
          "column": 19
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 802,
          "column": 19
        },
        "end": {
          "row": 802,
          "column": 26
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 802,
          "column": 20
        },
        "end": {
          "row": 802,
          "column": 25
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 802,
          "column": 21
        },
        "end": {
          "row": 802,
          "column": 25
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 802,
          "column": 30
        },
        "end": {
          "row": 802,
          "column": 34
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match self.node {\n            StmtKind::Local(_) => true,\n            _ => false,\n        }\n    }",
        "start": {
          "row": 802,
          "column": 35
        },
        "end": {
          "row": 807,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match self.node {\n            StmtKind::Local(_) => true,\n            _ => false,\n        }",
        "start": {
          "row": 803,
          "column": 9
        },
        "end": {
          "row": 806,
          "column": 10
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.node",
        "start": {
          "row": 803,
          "column": 15
        },
        "end": {
          "row": 803,
          "column": 24
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 803,
          "column": 15
        },
        "end": {
          "row": 803,
          "column": 19
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 803,
          "column": 20
        },
        "end": {
          "row": 803,
          "column": 24
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            StmtKind::Local(_) => true,\n            _ => false,\n        }",
        "start": {
          "row": 803,
          "column": 25
        },
        "end": {
          "row": 806,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "StmtKind::Local(_) => true,",
        "start": {
          "row": 804,
          "column": 13
        },
        "end": {
          "row": 804,
          "column": 40
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "StmtKind::Local(_)",
        "start": {
          "row": 804,
          "column": 13
        },
        "end": {
          "row": 804,
          "column": 31
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "StmtKind::Local(_)",
        "start": {
          "row": 804,
          "column": 13
        },
        "end": {
          "row": 804,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "StmtKind::Local",
        "start": {
          "row": 804,
          "column": 13
        },
        "end": {
          "row": 804,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "StmtKind",
        "start": {
          "row": 804,
          "column": 13
        },
        "end": {
          "row": 804,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Local",
        "start": {
          "row": 804,
          "column": 23
        },
        "end": {
          "row": 804,
          "column": 28
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 804,
          "column": 35
        },
        "end": {
          "row": 804,
          "column": 39
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => false,",
        "start": {
          "row": 805,
          "column": 13
        },
        "end": {
          "row": 805,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 805,
          "column": 13
        },
        "end": {
          "row": 805,
          "column": 14
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 805,
          "column": 18
        },
        "end": {
          "row": 805,
          "column": 23
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Debug for Stmt {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"stmt({}: {})\", self.id.to_string(), pprust::stmt_to_string(self))\n    }\n}",
        "start": {
          "row": 810,
          "column": 1
        },
        "end": {
          "row": 814,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Debug",
        "start": {
          "row": 810,
          "column": 6
        },
        "end": {
          "row": 810,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 810,
          "column": 6
        },
        "end": {
          "row": 810,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 810,
          "column": 11
        },
        "end": {
          "row": 810,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Stmt",
        "start": {
          "row": 810,
          "column": 21
        },
        "end": {
          "row": 810,
          "column": 25
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"stmt({}: {})\", self.id.to_string(), pprust::stmt_to_string(self))\n    }\n}",
        "start": {
          "row": 810,
          "column": 26
        },
        "end": {
          "row": 814,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"stmt({}: {})\", self.id.to_string(), pprust::stmt_to_string(self))\n    }",
        "start": {
          "row": 811,
          "column": 5
        },
        "end": {
          "row": 813,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 811,
          "column": 8
        },
        "end": {
          "row": 811,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 811,
          "column": 11
        },
        "end": {
          "row": 811,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 811,
          "column": 12
        },
        "end": {
          "row": 811,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 811,
          "column": 13
        },
        "end": {
          "row": 811,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 811,
          "column": 19
        },
        "end": {
          "row": 811,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 811,
          "column": 19
        },
        "end": {
          "row": 811,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 811,
          "column": 22
        },
        "end": {
          "row": 811,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 811,
          "column": 23
        },
        "end": {
          "row": 811,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 811,
          "column": 27
        },
        "end": {
          "row": 811,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 811,
          "column": 27
        },
        "end": {
          "row": 811,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 811,
          "column": 32
        },
        "end": {
          "row": 811,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 811,
          "column": 46
        },
        "end": {
          "row": 811,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 811,
          "column": 46
        },
        "end": {
          "row": 811,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 811,
          "column": 51
        },
        "end": {
          "row": 811,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        write!(f, \"stmt({}: {})\", self.id.to_string(), pprust::stmt_to_string(self))\n    }",
        "start": {
          "row": 811,
          "column": 58
        },
        "end": {
          "row": 813,
          "column": 6
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "write!(f, \"stmt({}: {})\", self.id.to_string(), pprust::stmt_to_string(self))",
        "start": {
          "row": 812,
          "column": 9
        },
        "end": {
          "row": 812,
          "column": 85
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "write",
        "start": {
          "row": 812,
          "column": 9
        },
        "end": {
          "row": 812,
          "column": 14
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(f, \"stmt({}: {})\", self.id.to_string(), pprust::stmt_to_string(self))",
        "start": {
          "row": 812,
          "column": 15
        },
        "end": {
          "row": 812,
          "column": 85
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 812,
          "column": 16
        },
        "end": {
          "row": 812,
          "column": 17
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"stmt({}: {})\"",
        "start": {
          "row": 812,
          "column": 19
        },
        "end": {
          "row": 812,
          "column": 33
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 812,
          "column": 35
        },
        "end": {
          "row": 812,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 812,
          "column": 40
        },
        "end": {
          "row": 812,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "to_string",
        "start": {
          "row": 812,
          "column": 43
        },
        "end": {
          "row": 812,
          "column": 52
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "()",
        "start": {
          "row": 812,
          "column": 52
        },
        "end": {
          "row": 812,
          "column": 54
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pprust",
        "start": {
          "row": 812,
          "column": 56
        },
        "end": {
          "row": 812,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "stmt_to_string",
        "start": {
          "row": 812,
          "column": 64
        },
        "end": {
          "row": 812,
          "column": 78
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 812,
          "column": 78
        },
        "end": {
          "row": 812,
          "column": 84
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 812,
          "column": 79
        },
        "end": {
          "row": 812,
          "column": 83
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]",
        "start": {
          "row": 817,
          "column": 1
        },
        "end": {
          "row": 817,
          "column": 70
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)",
        "start": {
          "row": 817,
          "column": 3
        },
        "end": {
          "row": 817,
          "column": 69
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 817,
          "column": 3
        },
        "end": {
          "row": 817,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)",
        "start": {
          "row": 817,
          "column": 9
        },
        "end": {
          "row": 817,
          "column": 69
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 817,
          "column": 10
        },
        "end": {
          "row": 817,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 817,
          "column": 10
        },
        "end": {
          "row": 817,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 817,
          "column": 17
        },
        "end": {
          "row": 817,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 817,
          "column": 17
        },
        "end": {
          "row": 817,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 817,
          "column": 28
        },
        "end": {
          "row": 817,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 817,
          "column": 28
        },
        "end": {
          "row": 817,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 817,
          "column": 32
        },
        "end": {
          "row": 817,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 817,
          "column": 32
        },
        "end": {
          "row": 817,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 817,
          "column": 48
        },
        "end": {
          "row": 817,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 817,
          "column": 48
        },
        "end": {
          "row": 817,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 817,
          "column": 64
        },
        "end": {
          "row": 817,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 817,
          "column": 64
        },
        "end": {
          "row": 817,
          "column": 68
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum StmtKind {\n    /// A local (let) binding.\n    Local(P<Local>),\n\n    /// An item definition.\n    Item(P<Item>),\n\n    /// Expr without trailing semi-colon.\n    Expr(P<Expr>),\n    /// Expr with a trailing semi-colon.\n    Semi(P<Expr>),\n    /// Macro.\n    Mac(P<(Mac, MacStmtStyle, ThinVec<Attribute>)>),\n}",
        "start": {
          "row": 818,
          "column": 1
        },
        "end": {
          "row": 831,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 818,
          "column": 1
        },
        "end": {
          "row": 818,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "StmtKind",
        "start": {
          "row": 818,
          "column": 10
        },
        "end": {
          "row": 818,
          "column": 18
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// A local (let) binding.\n    Local(P<Local>),\n\n    /// An item definition.\n    Item(P<Item>),\n\n    /// Expr without trailing semi-colon.\n    Expr(P<Expr>),\n    /// Expr with a trailing semi-colon.\n    Semi(P<Expr>),\n    /// Macro.\n    Mac(P<(Mac, MacStmtStyle, ThinVec<Attribute>)>),\n}",
        "start": {
          "row": 818,
          "column": 19
        },
        "end": {
          "row": 831,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A local (let) binding.",
        "start": {
          "row": 819,
          "column": 5
        },
        "end": {
          "row": 819,
          "column": 31
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Local(P<Local>)",
        "start": {
          "row": 820,
          "column": 5
        },
        "end": {
          "row": 820,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Local",
        "start": {
          "row": 820,
          "column": 5
        },
        "end": {
          "row": 820,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Local>)",
        "start": {
          "row": 820,
          "column": 10
        },
        "end": {
          "row": 820,
          "column": 20
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Local>",
        "start": {
          "row": 820,
          "column": 11
        },
        "end": {
          "row": 820,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 820,
          "column": 11
        },
        "end": {
          "row": 820,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Local>",
        "start": {
          "row": 820,
          "column": 12
        },
        "end": {
          "row": 820,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Local",
        "start": {
          "row": 820,
          "column": 13
        },
        "end": {
          "row": 820,
          "column": 18
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An item definition.",
        "start": {
          "row": 822,
          "column": 5
        },
        "end": {
          "row": 822,
          "column": 28
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Item(P<Item>)",
        "start": {
          "row": 823,
          "column": 5
        },
        "end": {
          "row": 823,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Item",
        "start": {
          "row": 823,
          "column": 5
        },
        "end": {
          "row": 823,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Item>)",
        "start": {
          "row": 823,
          "column": 9
        },
        "end": {
          "row": 823,
          "column": 18
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Item>",
        "start": {
          "row": 823,
          "column": 10
        },
        "end": {
          "row": 823,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 823,
          "column": 10
        },
        "end": {
          "row": 823,
          "column": 11
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Item>",
        "start": {
          "row": 823,
          "column": 11
        },
        "end": {
          "row": 823,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Item",
        "start": {
          "row": 823,
          "column": 12
        },
        "end": {
          "row": 823,
          "column": 16
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Expr without trailing semi-colon.",
        "start": {
          "row": 825,
          "column": 5
        },
        "end": {
          "row": 825,
          "column": 42
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Expr(P<Expr>)",
        "start": {
          "row": 826,
          "column": 5
        },
        "end": {
          "row": 826,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 826,
          "column": 5
        },
        "end": {
          "row": 826,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>)",
        "start": {
          "row": 826,
          "column": 9
        },
        "end": {
          "row": 826,
          "column": 18
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 826,
          "column": 10
        },
        "end": {
          "row": 826,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 826,
          "column": 10
        },
        "end": {
          "row": 826,
          "column": 11
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 826,
          "column": 11
        },
        "end": {
          "row": 826,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 826,
          "column": 12
        },
        "end": {
          "row": 826,
          "column": 16
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Expr with a trailing semi-colon.",
        "start": {
          "row": 827,
          "column": 5
        },
        "end": {
          "row": 827,
          "column": 41
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Semi(P<Expr>)",
        "start": {
          "row": 828,
          "column": 5
        },
        "end": {
          "row": 828,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Semi",
        "start": {
          "row": 828,
          "column": 5
        },
        "end": {
          "row": 828,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>)",
        "start": {
          "row": 828,
          "column": 9
        },
        "end": {
          "row": 828,
          "column": 18
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 828,
          "column": 10
        },
        "end": {
          "row": 828,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 828,
          "column": 10
        },
        "end": {
          "row": 828,
          "column": 11
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 828,
          "column": 11
        },
        "end": {
          "row": 828,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 828,
          "column": 12
        },
        "end": {
          "row": 828,
          "column": 16
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Macro.",
        "start": {
          "row": 829,
          "column": 5
        },
        "end": {
          "row": 829,
          "column": 15
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Mac(P<(Mac, MacStmtStyle, ThinVec<Attribute>)>)",
        "start": {
          "row": 830,
          "column": 5
        },
        "end": {
          "row": 830,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 830,
          "column": 5
        },
        "end": {
          "row": 830,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<(Mac, MacStmtStyle, ThinVec<Attribute>)>)",
        "start": {
          "row": 830,
          "column": 8
        },
        "end": {
          "row": 830,
          "column": 52
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<(Mac, MacStmtStyle, ThinVec<Attribute>)>",
        "start": {
          "row": 830,
          "column": 9
        },
        "end": {
          "row": 830,
          "column": 51
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 830,
          "column": 9
        },
        "end": {
          "row": 830,
          "column": 10
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<(Mac, MacStmtStyle, ThinVec<Attribute>)>",
        "start": {
          "row": 830,
          "column": 10
        },
        "end": {
          "row": 830,
          "column": 51
        }
      },
      {
        "kind": "tuple_type",
        "name": "query",
        "text": "(Mac, MacStmtStyle, ThinVec<Attribute>)",
        "start": {
          "row": 830,
          "column": 11
        },
        "end": {
          "row": 830,
          "column": 50
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 830,
          "column": 12
        },
        "end": {
          "row": 830,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MacStmtStyle",
        "start": {
          "row": 830,
          "column": 17
        },
        "end": {
          "row": 830,
          "column": 29
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "ThinVec<Attribute>",
        "start": {
          "row": 830,
          "column": 31
        },
        "end": {
          "row": 830,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ThinVec",
        "start": {
          "row": 830,
          "column": 31
        },
        "end": {
          "row": 830,
          "column": 38
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 830,
          "column": 38
        },
        "end": {
          "row": 830,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 830,
          "column": 39
        },
        "end": {
          "row": 830,
          "column": 48
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, Copy, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 833,
          "column": 1
        },
        "end": {
          "row": 833,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, Copy, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 833,
          "column": 3
        },
        "end": {
          "row": 833,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 833,
          "column": 3
        },
        "end": {
          "row": 833,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, Copy, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 833,
          "column": 9
        },
        "end": {
          "row": 833,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 833,
          "column": 10
        },
        "end": {
          "row": 833,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 833,
          "column": 10
        },
        "end": {
          "row": 833,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 833,
          "column": 17
        },
        "end": {
          "row": 833,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 833,
          "column": 17
        },
        "end": {
          "row": 833,
          "column": 21
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 833,
          "column": 23
        },
        "end": {
          "row": 833,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 833,
          "column": 23
        },
        "end": {
          "row": 833,
          "column": 32
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 833,
          "column": 34
        },
        "end": {
          "row": 833,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 833,
          "column": 34
        },
        "end": {
          "row": 833,
          "column": 36
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 833,
          "column": 38
        },
        "end": {
          "row": 833,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 833,
          "column": 38
        },
        "end": {
          "row": 833,
          "column": 52
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 833,
          "column": 54
        },
        "end": {
          "row": 833,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 833,
          "column": 54
        },
        "end": {
          "row": 833,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 833,
          "column": 70
        },
        "end": {
          "row": 833,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 833,
          "column": 70
        },
        "end": {
          "row": 833,
          "column": 74
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 833,
          "column": 76
        },
        "end": {
          "row": 833,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 833,
          "column": 76
        },
        "end": {
          "row": 833,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum MacStmtStyle {\n    /// The macro statement had a trailing semicolon, e.g. `foo! { ... };`\n    /// `foo!(...);`, `foo![...];`\n    Semicolon,\n    /// The macro statement had braces; e.g. foo! { ... }\n    Braces,\n    /// The macro statement had parentheses or brackets and no semicolon; e.g.\n    /// `foo!(...)`. All of these will end up being converted into macro\n    /// expressions.\n    NoBraces,\n}",
        "start": {
          "row": 834,
          "column": 1
        },
        "end": {
          "row": 844,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 834,
          "column": 1
        },
        "end": {
          "row": 834,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MacStmtStyle",
        "start": {
          "row": 834,
          "column": 10
        },
        "end": {
          "row": 834,
          "column": 22
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// The macro statement had a trailing semicolon, e.g. `foo! { ... };`\n    /// `foo!(...);`, `foo![...];`\n    Semicolon,\n    /// The macro statement had braces; e.g. foo! { ... }\n    Braces,\n    /// The macro statement had parentheses or brackets and no semicolon; e.g.\n    /// `foo!(...)`. All of these will end up being converted into macro\n    /// expressions.\n    NoBraces,\n}",
        "start": {
          "row": 834,
          "column": 23
        },
        "end": {
          "row": 844,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The macro statement had a trailing semicolon, e.g. `foo! { ... };`",
        "start": {
          "row": 835,
          "column": 5
        },
        "end": {
          "row": 835,
          "column": 75
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `foo!(...);`, `foo![...];`",
        "start": {
          "row": 836,
          "column": 5
        },
        "end": {
          "row": 836,
          "column": 35
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Semicolon",
        "start": {
          "row": 837,
          "column": 5
        },
        "end": {
          "row": 837,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Semicolon",
        "start": {
          "row": 837,
          "column": 5
        },
        "end": {
          "row": 837,
          "column": 14
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The macro statement had braces; e.g. foo! { ... }",
        "start": {
          "row": 838,
          "column": 5
        },
        "end": {
          "row": 838,
          "column": 58
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Braces",
        "start": {
          "row": 839,
          "column": 5
        },
        "end": {
          "row": 839,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Braces",
        "start": {
          "row": 839,
          "column": 5
        },
        "end": {
          "row": 839,
          "column": 11
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The macro statement had parentheses or brackets and no semicolon; e.g.",
        "start": {
          "row": 840,
          "column": 5
        },
        "end": {
          "row": 840,
          "column": 79
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `foo!(...)`. All of these will end up being converted into macro",
        "start": {
          "row": 841,
          "column": 5
        },
        "end": {
          "row": 841,
          "column": 73
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// expressions.",
        "start": {
          "row": 842,
          "column": 5
        },
        "end": {
          "row": 842,
          "column": 21
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "NoBraces",
        "start": {
          "row": 843,
          "column": 5
        },
        "end": {
          "row": 843,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "NoBraces",
        "start": {
          "row": 843,
          "column": 5
        },
        "end": {
          "row": 843,
          "column": 13
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Local represents a `let` statement, e.g., `let <pat>:<ty> = <expr>;`",
        "start": {
          "row": 846,
          "column": 1
        },
        "end": {
          "row": 846,
          "column": 73
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 847,
          "column": 1
        },
        "end": {
          "row": 847,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 847,
          "column": 3
        },
        "end": {
          "row": 847,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 847,
          "column": 3
        },
        "end": {
          "row": 847,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 847,
          "column": 9
        },
        "end": {
          "row": 847,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 847,
          "column": 10
        },
        "end": {
          "row": 847,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 847,
          "column": 10
        },
        "end": {
          "row": 847,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 847,
          "column": 17
        },
        "end": {
          "row": 847,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 847,
          "column": 17
        },
        "end": {
          "row": 847,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 847,
          "column": 28
        },
        "end": {
          "row": 847,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 847,
          "column": 28
        },
        "end": {
          "row": 847,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 847,
          "column": 32
        },
        "end": {
          "row": 847,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 847,
          "column": 32
        },
        "end": {
          "row": 847,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 847,
          "column": 48
        },
        "end": {
          "row": 847,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 847,
          "column": 48
        },
        "end": {
          "row": 847,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 847,
          "column": 64
        },
        "end": {
          "row": 847,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 847,
          "column": 64
        },
        "end": {
          "row": 847,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 847,
          "column": 70
        },
        "end": {
          "row": 847,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 847,
          "column": 70
        },
        "end": {
          "row": 847,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Local {\n    pub pat: P<Pat>,\n    pub ty: Option<P<Ty>>,\n    /// Initializer expression to set the value, if any\n    pub init: Option<P<Expr>>,\n    pub id: NodeId,\n    pub span: Span,\n    pub attrs: ThinVec<Attribute>,\n}",
        "start": {
          "row": 848,
          "column": 1
        },
        "end": {
          "row": 856,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 848,
          "column": 1
        },
        "end": {
          "row": 848,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Local",
        "start": {
          "row": 848,
          "column": 12
        },
        "end": {
          "row": 848,
          "column": 17
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub pat: P<Pat>,\n    pub ty: Option<P<Ty>>,\n    /// Initializer expression to set the value, if any\n    pub init: Option<P<Expr>>,\n    pub id: NodeId,\n    pub span: Span,\n    pub attrs: ThinVec<Attribute>,\n}",
        "start": {
          "row": 848,
          "column": 18
        },
        "end": {
          "row": 856,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub pat: P<Pat>",
        "start": {
          "row": 849,
          "column": 5
        },
        "end": {
          "row": 849,
          "column": 20
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 849,
          "column": 5
        },
        "end": {
          "row": 849,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 849,
          "column": 9
        },
        "end": {
          "row": 849,
          "column": 12
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 849,
          "column": 14
        },
        "end": {
          "row": 849,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 849,
          "column": 14
        },
        "end": {
          "row": 849,
          "column": 15
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 849,
          "column": 15
        },
        "end": {
          "row": 849,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 849,
          "column": 16
        },
        "end": {
          "row": 849,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ty: Option<P<Ty>>",
        "start": {
          "row": 850,
          "column": 5
        },
        "end": {
          "row": 850,
          "column": 26
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 850,
          "column": 5
        },
        "end": {
          "row": 850,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 850,
          "column": 9
        },
        "end": {
          "row": 850,
          "column": 11
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Ty>>",
        "start": {
          "row": 850,
          "column": 13
        },
        "end": {
          "row": 850,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 850,
          "column": 13
        },
        "end": {
          "row": 850,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Ty>>",
        "start": {
          "row": 850,
          "column": 19
        },
        "end": {
          "row": 850,
          "column": 26
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 850,
          "column": 20
        },
        "end": {
          "row": 850,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 850,
          "column": 20
        },
        "end": {
          "row": 850,
          "column": 21
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 850,
          "column": 21
        },
        "end": {
          "row": 850,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 850,
          "column": 22
        },
        "end": {
          "row": 850,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Initializer expression to set the value, if any",
        "start": {
          "row": 851,
          "column": 5
        },
        "end": {
          "row": 851,
          "column": 56
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub init: Option<P<Expr>>",
        "start": {
          "row": 852,
          "column": 5
        },
        "end": {
          "row": 852,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 852,
          "column": 5
        },
        "end": {
          "row": 852,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "init",
        "start": {
          "row": 852,
          "column": 9
        },
        "end": {
          "row": 852,
          "column": 13
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Expr>>",
        "start": {
          "row": 852,
          "column": 15
        },
        "end": {
          "row": 852,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 852,
          "column": 15
        },
        "end": {
          "row": 852,
          "column": 21
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 852,
          "column": 21
        },
        "end": {
          "row": 852,
          "column": 30
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 852,
          "column": 22
        },
        "end": {
          "row": 852,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 852,
          "column": 22
        },
        "end": {
          "row": 852,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 852,
          "column": 23
        },
        "end": {
          "row": 852,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 852,
          "column": 24
        },
        "end": {
          "row": 852,
          "column": 28
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 853,
          "column": 5
        },
        "end": {
          "row": 853,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 853,
          "column": 5
        },
        "end": {
          "row": 853,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 853,
          "column": 9
        },
        "end": {
          "row": 853,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 853,
          "column": 13
        },
        "end": {
          "row": 853,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 854,
          "column": 5
        },
        "end": {
          "row": 854,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 854,
          "column": 5
        },
        "end": {
          "row": 854,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 854,
          "column": 9
        },
        "end": {
          "row": 854,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 854,
          "column": 15
        },
        "end": {
          "row": 854,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: ThinVec<Attribute>",
        "start": {
          "row": 855,
          "column": 5
        },
        "end": {
          "row": 855,
          "column": 34
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 855,
          "column": 5
        },
        "end": {
          "row": 855,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 855,
          "column": 9
        },
        "end": {
          "row": 855,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "ThinVec<Attribute>",
        "start": {
          "row": 855,
          "column": 16
        },
        "end": {
          "row": 855,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ThinVec",
        "start": {
          "row": 855,
          "column": 16
        },
        "end": {
          "row": 855,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 855,
          "column": 23
        },
        "end": {
          "row": 855,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 855,
          "column": 24
        },
        "end": {
          "row": 855,
          "column": 33
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An arm of a 'match'.",
        "start": {
          "row": 858,
          "column": 1
        },
        "end": {
          "row": 858,
          "column": 25
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 859,
          "column": 1
        },
        "end": {
          "row": 859,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `0...10 => { println!(\"match!\") }` as in",
        "start": {
          "row": 860,
          "column": 1
        },
        "end": {
          "row": 860,
          "column": 50
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 861,
          "column": 1
        },
        "end": {
          "row": 861,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// ```",
        "start": {
          "row": 862,
          "column": 1
        },
        "end": {
          "row": 862,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// match 123 {",
        "start": {
          "row": 863,
          "column": 1
        },
        "end": {
          "row": 863,
          "column": 16
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///     0...10 => { println!(\"match!\") },",
        "start": {
          "row": 864,
          "column": 1
        },
        "end": {
          "row": 864,
          "column": 42
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///     _ => { println!(\"no match!\") },",
        "start": {
          "row": 865,
          "column": 1
        },
        "end": {
          "row": 865,
          "column": 40
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// }",
        "start": {
          "row": 866,
          "column": 1
        },
        "end": {
          "row": 866,
          "column": 6
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// ```",
        "start": {
          "row": 867,
          "column": 1
        },
        "end": {
          "row": 867,
          "column": 8
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 868,
          "column": 1
        },
        "end": {
          "row": 868,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 868,
          "column": 3
        },
        "end": {
          "row": 868,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 868,
          "column": 3
        },
        "end": {
          "row": 868,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 868,
          "column": 9
        },
        "end": {
          "row": 868,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 868,
          "column": 10
        },
        "end": {
          "row": 868,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 868,
          "column": 10
        },
        "end": {
          "row": 868,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 868,
          "column": 17
        },
        "end": {
          "row": 868,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 868,
          "column": 17
        },
        "end": {
          "row": 868,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 868,
          "column": 28
        },
        "end": {
          "row": 868,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 868,
          "column": 28
        },
        "end": {
          "row": 868,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 868,
          "column": 32
        },
        "end": {
          "row": 868,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 868,
          "column": 32
        },
        "end": {
          "row": 868,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 868,
          "column": 48
        },
        "end": {
          "row": 868,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 868,
          "column": 48
        },
        "end": {
          "row": 868,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 868,
          "column": 64
        },
        "end": {
          "row": 868,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 868,
          "column": 64
        },
        "end": {
          "row": 868,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 868,
          "column": 70
        },
        "end": {
          "row": 868,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 868,
          "column": 70
        },
        "end": {
          "row": 868,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Arm {\n    pub attrs: Vec<Attribute>,\n    pub pats: Vec<P<Pat>>,\n    pub guard: Option<P<Expr>>,\n    pub body: P<Expr>,\n    pub beginning_vert: Option<Span>, // For RFC 1925 feature gate\n}",
        "start": {
          "row": 869,
          "column": 1
        },
        "end": {
          "row": 875,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 869,
          "column": 1
        },
        "end": {
          "row": 869,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Arm",
        "start": {
          "row": 869,
          "column": 12
        },
        "end": {
          "row": 869,
          "column": 15
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub attrs: Vec<Attribute>,\n    pub pats: Vec<P<Pat>>,\n    pub guard: Option<P<Expr>>,\n    pub body: P<Expr>,\n    pub beginning_vert: Option<Span>, // For RFC 1925 feature gate\n}",
        "start": {
          "row": 869,
          "column": 16
        },
        "end": {
          "row": 875,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: Vec<Attribute>",
        "start": {
          "row": 870,
          "column": 5
        },
        "end": {
          "row": 870,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 870,
          "column": 5
        },
        "end": {
          "row": 870,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 870,
          "column": 9
        },
        "end": {
          "row": 870,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Attribute>",
        "start": {
          "row": 870,
          "column": 16
        },
        "end": {
          "row": 870,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 870,
          "column": 16
        },
        "end": {
          "row": 870,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 870,
          "column": 19
        },
        "end": {
          "row": 870,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 870,
          "column": 20
        },
        "end": {
          "row": 870,
          "column": 29
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub pats: Vec<P<Pat>>",
        "start": {
          "row": 871,
          "column": 5
        },
        "end": {
          "row": 871,
          "column": 26
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 871,
          "column": 5
        },
        "end": {
          "row": 871,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "pats",
        "start": {
          "row": 871,
          "column": 9
        },
        "end": {
          "row": 871,
          "column": 13
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Pat>>",
        "start": {
          "row": 871,
          "column": 15
        },
        "end": {
          "row": 871,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 871,
          "column": 15
        },
        "end": {
          "row": 871,
          "column": 18
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Pat>>",
        "start": {
          "row": 871,
          "column": 18
        },
        "end": {
          "row": 871,
          "column": 26
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 871,
          "column": 19
        },
        "end": {
          "row": 871,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 871,
          "column": 19
        },
        "end": {
          "row": 871,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 871,
          "column": 20
        },
        "end": {
          "row": 871,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 871,
          "column": 21
        },
        "end": {
          "row": 871,
          "column": 24
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub guard: Option<P<Expr>>",
        "start": {
          "row": 872,
          "column": 5
        },
        "end": {
          "row": 872,
          "column": 31
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 872,
          "column": 5
        },
        "end": {
          "row": 872,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "guard",
        "start": {
          "row": 872,
          "column": 9
        },
        "end": {
          "row": 872,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Expr>>",
        "start": {
          "row": 872,
          "column": 16
        },
        "end": {
          "row": 872,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 872,
          "column": 16
        },
        "end": {
          "row": 872,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 872,
          "column": 22
        },
        "end": {
          "row": 872,
          "column": 31
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 872,
          "column": 23
        },
        "end": {
          "row": 872,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 872,
          "column": 23
        },
        "end": {
          "row": 872,
          "column": 24
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 872,
          "column": 24
        },
        "end": {
          "row": 872,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 872,
          "column": 25
        },
        "end": {
          "row": 872,
          "column": 29
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub body: P<Expr>",
        "start": {
          "row": 873,
          "column": 5
        },
        "end": {
          "row": 873,
          "column": 22
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 873,
          "column": 5
        },
        "end": {
          "row": 873,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "body",
        "start": {
          "row": 873,
          "column": 9
        },
        "end": {
          "row": 873,
          "column": 13
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 873,
          "column": 15
        },
        "end": {
          "row": 873,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 873,
          "column": 15
        },
        "end": {
          "row": 873,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 873,
          "column": 16
        },
        "end": {
          "row": 873,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 873,
          "column": 17
        },
        "end": {
          "row": 873,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub beginning_vert: Option<Span>",
        "start": {
          "row": 874,
          "column": 5
        },
        "end": {
          "row": 874,
          "column": 37
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 874,
          "column": 5
        },
        "end": {
          "row": 874,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "beginning_vert",
        "start": {
          "row": 874,
          "column": 9
        },
        "end": {
          "row": 874,
          "column": 23
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<Span>",
        "start": {
          "row": 874,
          "column": 25
        },
        "end": {
          "row": 874,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 874,
          "column": 25
        },
        "end": {
          "row": 874,
          "column": 31
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Span>",
        "start": {
          "row": 874,
          "column": 31
        },
        "end": {
          "row": 874,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 874,
          "column": 32
        },
        "end": {
          "row": 874,
          "column": 36
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// For RFC 1925 feature gate",
        "start": {
          "row": 874,
          "column": 39
        },
        "end": {
          "row": 874,
          "column": 67
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 877,
          "column": 1
        },
        "end": {
          "row": 877,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 877,
          "column": 3
        },
        "end": {
          "row": 877,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 877,
          "column": 3
        },
        "end": {
          "row": 877,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 877,
          "column": 9
        },
        "end": {
          "row": 877,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 877,
          "column": 10
        },
        "end": {
          "row": 877,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 877,
          "column": 10
        },
        "end": {
          "row": 877,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 877,
          "column": 17
        },
        "end": {
          "row": 877,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 877,
          "column": 17
        },
        "end": {
          "row": 877,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 877,
          "column": 28
        },
        "end": {
          "row": 877,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 877,
          "column": 28
        },
        "end": {
          "row": 877,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 877,
          "column": 32
        },
        "end": {
          "row": 877,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 877,
          "column": 32
        },
        "end": {
          "row": 877,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 877,
          "column": 48
        },
        "end": {
          "row": 877,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 877,
          "column": 48
        },
        "end": {
          "row": 877,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 877,
          "column": 64
        },
        "end": {
          "row": 877,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 877,
          "column": 64
        },
        "end": {
          "row": 877,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 877,
          "column": 70
        },
        "end": {
          "row": 877,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 877,
          "column": 70
        },
        "end": {
          "row": 877,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Field {\n    pub ident: SpannedIdent,\n    pub expr: P<Expr>,\n    pub span: Span,\n    pub is_shorthand: bool,\n    pub attrs: ThinVec<Attribute>,\n}",
        "start": {
          "row": 878,
          "column": 1
        },
        "end": {
          "row": 884,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 878,
          "column": 1
        },
        "end": {
          "row": 878,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Field",
        "start": {
          "row": 878,
          "column": 12
        },
        "end": {
          "row": 878,
          "column": 17
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub ident: SpannedIdent,\n    pub expr: P<Expr>,\n    pub span: Span,\n    pub is_shorthand: bool,\n    pub attrs: ThinVec<Attribute>,\n}",
        "start": {
          "row": 878,
          "column": 18
        },
        "end": {
          "row": 884,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ident: SpannedIdent",
        "start": {
          "row": 879,
          "column": 5
        },
        "end": {
          "row": 879,
          "column": 28
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 879,
          "column": 5
        },
        "end": {
          "row": 879,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 879,
          "column": 9
        },
        "end": {
          "row": 879,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SpannedIdent",
        "start": {
          "row": 879,
          "column": 16
        },
        "end": {
          "row": 879,
          "column": 28
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub expr: P<Expr>",
        "start": {
          "row": 880,
          "column": 5
        },
        "end": {
          "row": 880,
          "column": 22
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 880,
          "column": 5
        },
        "end": {
          "row": 880,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 880,
          "column": 9
        },
        "end": {
          "row": 880,
          "column": 13
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 880,
          "column": 15
        },
        "end": {
          "row": 880,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 880,
          "column": 15
        },
        "end": {
          "row": 880,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 880,
          "column": 16
        },
        "end": {
          "row": 880,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 880,
          "column": 17
        },
        "end": {
          "row": 880,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 881,
          "column": 5
        },
        "end": {
          "row": 881,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 881,
          "column": 5
        },
        "end": {
          "row": 881,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 881,
          "column": 9
        },
        "end": {
          "row": 881,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 881,
          "column": 15
        },
        "end": {
          "row": 881,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub is_shorthand: bool",
        "start": {
          "row": 882,
          "column": 5
        },
        "end": {
          "row": 882,
          "column": 27
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 882,
          "column": 5
        },
        "end": {
          "row": 882,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_shorthand",
        "start": {
          "row": 882,
          "column": 9
        },
        "end": {
          "row": 882,
          "column": 21
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 882,
          "column": 23
        },
        "end": {
          "row": 882,
          "column": 27
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: ThinVec<Attribute>",
        "start": {
          "row": 883,
          "column": 5
        },
        "end": {
          "row": 883,
          "column": 34
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 883,
          "column": 5
        },
        "end": {
          "row": 883,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 883,
          "column": 9
        },
        "end": {
          "row": 883,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "ThinVec<Attribute>",
        "start": {
          "row": 883,
          "column": 16
        },
        "end": {
          "row": 883,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ThinVec",
        "start": {
          "row": 883,
          "column": 16
        },
        "end": {
          "row": 883,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 883,
          "column": 23
        },
        "end": {
          "row": 883,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 883,
          "column": 24
        },
        "end": {
          "row": 883,
          "column": 33
        }
      },
      {
        "kind": "type_item",
        "name": "query",
        "text": "pub type SpannedIdent = Spanned<Ident>;",
        "start": {
          "row": 886,
          "column": 1
        },
        "end": {
          "row": 886,
          "column": 40
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 886,
          "column": 1
        },
        "end": {
          "row": 886,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SpannedIdent",
        "start": {
          "row": 886,
          "column": 10
        },
        "end": {
          "row": 886,
          "column": 22
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Spanned<Ident>",
        "start": {
          "row": 886,
          "column": 25
        },
        "end": {
          "row": 886,
          "column": 39
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Spanned",
        "start": {
          "row": 886,
          "column": 25
        },
        "end": {
          "row": 886,
          "column": 32
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ident>",
        "start": {
          "row": 886,
          "column": 32
        },
        "end": {
          "row": 886,
          "column": 39
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 886,
          "column": 33
        },
        "end": {
          "row": 886,
          "column": 38
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 888,
          "column": 1
        },
        "end": {
          "row": 888,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 888,
          "column": 3
        },
        "end": {
          "row": 888,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 888,
          "column": 3
        },
        "end": {
          "row": 888,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 888,
          "column": 9
        },
        "end": {
          "row": 888,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 888,
          "column": 10
        },
        "end": {
          "row": 888,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 888,
          "column": 10
        },
        "end": {
          "row": 888,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 888,
          "column": 17
        },
        "end": {
          "row": 888,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 888,
          "column": 17
        },
        "end": {
          "row": 888,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 888,
          "column": 28
        },
        "end": {
          "row": 888,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 888,
          "column": 28
        },
        "end": {
          "row": 888,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 888,
          "column": 32
        },
        "end": {
          "row": 888,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 888,
          "column": 32
        },
        "end": {
          "row": 888,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 888,
          "column": 48
        },
        "end": {
          "row": 888,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 888,
          "column": 48
        },
        "end": {
          "row": 888,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 888,
          "column": 64
        },
        "end": {
          "row": 888,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 888,
          "column": 64
        },
        "end": {
          "row": 888,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 888,
          "column": 70
        },
        "end": {
          "row": 888,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 888,
          "column": 70
        },
        "end": {
          "row": 888,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 888,
          "column": 77
        },
        "end": {
          "row": 888,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 888,
          "column": 77
        },
        "end": {
          "row": 888,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum BlockCheckMode {\n    Default,\n    Unsafe(UnsafeSource),\n}",
        "start": {
          "row": 889,
          "column": 1
        },
        "end": {
          "row": 892,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 889,
          "column": 1
        },
        "end": {
          "row": 889,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "BlockCheckMode",
        "start": {
          "row": 889,
          "column": 10
        },
        "end": {
          "row": 889,
          "column": 24
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Default,\n    Unsafe(UnsafeSource),\n}",
        "start": {
          "row": 889,
          "column": 25
        },
        "end": {
          "row": 892,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Default",
        "start": {
          "row": 890,
          "column": 5
        },
        "end": {
          "row": 890,
          "column": 12
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Default",
        "start": {
          "row": 890,
          "column": 5
        },
        "end": {
          "row": 890,
          "column": 12
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Unsafe(UnsafeSource)",
        "start": {
          "row": 891,
          "column": 5
        },
        "end": {
          "row": 891,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unsafe",
        "start": {
          "row": 891,
          "column": 5
        },
        "end": {
          "row": 891,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(UnsafeSource)",
        "start": {
          "row": 891,
          "column": 11
        },
        "end": {
          "row": 891,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UnsafeSource",
        "start": {
          "row": 891,
          "column": 12
        },
        "end": {
          "row": 891,
          "column": 24
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 894,
          "column": 1
        },
        "end": {
          "row": 894,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 894,
          "column": 3
        },
        "end": {
          "row": 894,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 894,
          "column": 3
        },
        "end": {
          "row": 894,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 894,
          "column": 9
        },
        "end": {
          "row": 894,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 894,
          "column": 10
        },
        "end": {
          "row": 894,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 894,
          "column": 10
        },
        "end": {
          "row": 894,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 894,
          "column": 17
        },
        "end": {
          "row": 894,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 894,
          "column": 17
        },
        "end": {
          "row": 894,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 894,
          "column": 28
        },
        "end": {
          "row": 894,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 894,
          "column": 28
        },
        "end": {
          "row": 894,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 894,
          "column": 32
        },
        "end": {
          "row": 894,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 894,
          "column": 32
        },
        "end": {
          "row": 894,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 894,
          "column": 48
        },
        "end": {
          "row": 894,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 894,
          "column": 48
        },
        "end": {
          "row": 894,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 894,
          "column": 64
        },
        "end": {
          "row": 894,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 894,
          "column": 64
        },
        "end": {
          "row": 894,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 894,
          "column": 70
        },
        "end": {
          "row": 894,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 894,
          "column": 70
        },
        "end": {
          "row": 894,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 894,
          "column": 77
        },
        "end": {
          "row": 894,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 894,
          "column": 77
        },
        "end": {
          "row": 894,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum UnsafeSource {\n    CompilerGenerated,\n    UserProvided,\n}",
        "start": {
          "row": 895,
          "column": 1
        },
        "end": {
          "row": 898,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 895,
          "column": 1
        },
        "end": {
          "row": 895,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UnsafeSource",
        "start": {
          "row": 895,
          "column": 10
        },
        "end": {
          "row": 895,
          "column": 22
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    CompilerGenerated,\n    UserProvided,\n}",
        "start": {
          "row": 895,
          "column": 23
        },
        "end": {
          "row": 898,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "CompilerGenerated",
        "start": {
          "row": 896,
          "column": 5
        },
        "end": {
          "row": 896,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "CompilerGenerated",
        "start": {
          "row": 896,
          "column": 5
        },
        "end": {
          "row": 896,
          "column": 22
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "UserProvided",
        "start": {
          "row": 897,
          "column": 5
        },
        "end": {
          "row": 897,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UserProvided",
        "start": {
          "row": 897,
          "column": 5
        },
        "end": {
          "row": 897,
          "column": 17
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An expression",
        "start": {
          "row": 900,
          "column": 1
        },
        "end": {
          "row": 900,
          "column": 18
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash,)]",
        "start": {
          "row": 901,
          "column": 1
        },
        "end": {
          "row": 901,
          "column": 71
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash,)",
        "start": {
          "row": 901,
          "column": 3
        },
        "end": {
          "row": 901,
          "column": 70
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 901,
          "column": 3
        },
        "end": {
          "row": 901,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash,)",
        "start": {
          "row": 901,
          "column": 9
        },
        "end": {
          "row": 901,
          "column": 70
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 901,
          "column": 10
        },
        "end": {
          "row": 901,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 901,
          "column": 10
        },
        "end": {
          "row": 901,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 901,
          "column": 17
        },
        "end": {
          "row": 901,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 901,
          "column": 17
        },
        "end": {
          "row": 901,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 901,
          "column": 28
        },
        "end": {
          "row": 901,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 901,
          "column": 28
        },
        "end": {
          "row": 901,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 901,
          "column": 32
        },
        "end": {
          "row": 901,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 901,
          "column": 32
        },
        "end": {
          "row": 901,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 901,
          "column": 48
        },
        "end": {
          "row": 901,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 901,
          "column": 48
        },
        "end": {
          "row": 901,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 901,
          "column": 64
        },
        "end": {
          "row": 901,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 901,
          "column": 64
        },
        "end": {
          "row": 901,
          "column": 68
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Expr {\n    pub id: NodeId,\n    pub node: ExprKind,\n    pub span: Span,\n    pub attrs: ThinVec<Attribute>\n}",
        "start": {
          "row": 902,
          "column": 1
        },
        "end": {
          "row": 907,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 902,
          "column": 1
        },
        "end": {
          "row": 902,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 902,
          "column": 12
        },
        "end": {
          "row": 902,
          "column": 16
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub id: NodeId,\n    pub node: ExprKind,\n    pub span: Span,\n    pub attrs: ThinVec<Attribute>\n}",
        "start": {
          "row": 902,
          "column": 17
        },
        "end": {
          "row": 907,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 903,
          "column": 5
        },
        "end": {
          "row": 903,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 903,
          "column": 5
        },
        "end": {
          "row": 903,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 903,
          "column": 9
        },
        "end": {
          "row": 903,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 903,
          "column": 13
        },
        "end": {
          "row": 903,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub node: ExprKind",
        "start": {
          "row": 904,
          "column": 5
        },
        "end": {
          "row": 904,
          "column": 23
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 904,
          "column": 5
        },
        "end": {
          "row": 904,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 904,
          "column": 9
        },
        "end": {
          "row": 904,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 904,
          "column": 15
        },
        "end": {
          "row": 904,
          "column": 23
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 905,
          "column": 5
        },
        "end": {
          "row": 905,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 905,
          "column": 5
        },
        "end": {
          "row": 905,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 905,
          "column": 9
        },
        "end": {
          "row": 905,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 905,
          "column": 15
        },
        "end": {
          "row": 905,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: ThinVec<Attribute>",
        "start": {
          "row": 906,
          "column": 5
        },
        "end": {
          "row": 906,
          "column": 34
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 906,
          "column": 5
        },
        "end": {
          "row": 906,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 906,
          "column": 9
        },
        "end": {
          "row": 906,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "ThinVec<Attribute>",
        "start": {
          "row": 906,
          "column": 16
        },
        "end": {
          "row": 906,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ThinVec",
        "start": {
          "row": 906,
          "column": 16
        },
        "end": {
          "row": 906,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 906,
          "column": 23
        },
        "end": {
          "row": 906,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 906,
          "column": 24
        },
        "end": {
          "row": 906,
          "column": 33
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl Expr {\n    /// Wether this expression would be valid somewhere that expects a value, for example, an `if`\n    /// condition.\n    pub fn returns(&self) -> bool {\n        if let ExprKind::Block(ref block) = self.node {\n            match block.stmts.last().map(|last_stmt| &last_stmt.node) {\n                // implicit return\n                Some(&StmtKind::Expr(_)) => true,\n                Some(&StmtKind::Semi(ref expr)) => {\n                    if let ExprKind::Ret(_) = expr.node {\n                        // last statement is explicit return\n                        true\n                    } else {\n                        false\n                    }\n                }\n                // This is a block that doesn't end in either an implicit or explicit return\n                _ => false,\n            }\n        } else {\n            // This is not a block, it is a value\n            true\n        }\n    }\n\n    fn to_bound(&self) -> Option<TyParamBound> {\n        match &self.node {\n            ExprKind::Path(None, path) =>\n                Some(TraitTyParamBound(PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n                                       TraitBoundModifier::None)),\n            _ => None,\n        }\n    }\n\n    pub(super) fn to_ty(&self) -> Option<P<Ty>> {\n        let node = match &self.node {\n            ExprKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            ExprKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            ExprKind::Paren(expr) => expr.to_ty().map(TyKind::Paren)?,\n            ExprKind::AddrOf(mutbl, expr) =>\n                expr.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            ExprKind::Repeat(expr, expr_len) =>\n                expr.to_ty().map(|ty| TyKind::Array(ty, expr_len.clone()))?,\n            ExprKind::Array(exprs) if exprs.len() == 1 =>\n                exprs[0].to_ty().map(TyKind::Slice)?,\n            ExprKind::Tup(exprs) => {\n                let mut tys = Vec::new();\n                for expr in exprs {\n                    tys.push(expr.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            ExprKind::Binary(binop, lhs, rhs) if binop.node == BinOpKind::Add =>\n                if let (Some(lhs), Some(rhs)) = (lhs.to_bound(), rhs.to_bound()) {\n                    TyKind::TraitObject(vec![lhs, rhs], TraitObjectSyntax::None)\n                } else {\n                    return None;\n                }\n            _ => return None,\n        };\n\n        Some(P(Ty { node, id: self.id, span: self.span }))\n    }\n\n    pub fn precedence(&self) -> ExprPrecedence {\n        match self.node {\n            ExprKind::Box(_) => ExprPrecedence::Box,\n            ExprKind::InPlace(..) => ExprPrecedence::InPlace,\n            ExprKind::Array(_) => ExprPrecedence::Array,\n            ExprKind::Call(..) => ExprPrecedence::Call,\n            ExprKind::MethodCall(..) => ExprPrecedence::MethodCall,\n            ExprKind::Tup(_) => ExprPrecedence::Tup,\n            ExprKind::Binary(op, ..) => ExprPrecedence::Binary(op.node),\n            ExprKind::Unary(..) => ExprPrecedence::Unary,\n            ExprKind::Lit(_) => ExprPrecedence::Lit,\n            ExprKind::Type(..) | ExprKind::Cast(..) => ExprPrecedence::Cast,\n            ExprKind::If(..) => ExprPrecedence::If,\n            ExprKind::IfLet(..) => ExprPrecedence::IfLet,\n            ExprKind::While(..) => ExprPrecedence::While,\n            ExprKind::WhileLet(..) => ExprPrecedence::WhileLet,\n            ExprKind::ForLoop(..) => ExprPrecedence::ForLoop,\n            ExprKind::Loop(..) => ExprPrecedence::Loop,\n            ExprKind::Match(..) => ExprPrecedence::Match,\n            ExprKind::Closure(..) => ExprPrecedence::Closure,\n            ExprKind::Block(..) => ExprPrecedence::Block,\n            ExprKind::Catch(..) => ExprPrecedence::Catch,\n            ExprKind::Assign(..) => ExprPrecedence::Assign,\n            ExprKind::AssignOp(..) => ExprPrecedence::AssignOp,\n            ExprKind::Field(..) => ExprPrecedence::Field,\n            ExprKind::TupField(..) => ExprPrecedence::TupField,\n            ExprKind::Index(..) => ExprPrecedence::Index,\n            ExprKind::Range(..) => ExprPrecedence::Range,\n            ExprKind::Path(..) => ExprPrecedence::Path,\n            ExprKind::AddrOf(..) => ExprPrecedence::AddrOf,\n            ExprKind::Break(..) => ExprPrecedence::Break,\n            ExprKind::Continue(..) => ExprPrecedence::Continue,\n            ExprKind::Ret(..) => ExprPrecedence::Ret,\n            ExprKind::InlineAsm(..) => ExprPrecedence::InlineAsm,\n            ExprKind::Mac(..) => ExprPrecedence::Mac,\n            ExprKind::Struct(..) => ExprPrecedence::Struct,\n            ExprKind::Repeat(..) => ExprPrecedence::Repeat,\n            ExprKind::Paren(..) => ExprPrecedence::Paren,\n            ExprKind::Try(..) => ExprPrecedence::Try,\n            ExprKind::Yield(..) => ExprPrecedence::Yield,\n        }\n    }\n}",
        "start": {
          "row": 909,
          "column": 1
        },
        "end": {
          "row": 1015,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 909,
          "column": 6
        },
        "end": {
          "row": 909,
          "column": 10
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    /// Wether this expression would be valid somewhere that expects a value, for example, an `if`\n    /// condition.\n    pub fn returns(&self) -> bool {\n        if let ExprKind::Block(ref block) = self.node {\n            match block.stmts.last().map(|last_stmt| &last_stmt.node) {\n                // implicit return\n                Some(&StmtKind::Expr(_)) => true,\n                Some(&StmtKind::Semi(ref expr)) => {\n                    if let ExprKind::Ret(_) = expr.node {\n                        // last statement is explicit return\n                        true\n                    } else {\n                        false\n                    }\n                }\n                // This is a block that doesn't end in either an implicit or explicit return\n                _ => false,\n            }\n        } else {\n            // This is not a block, it is a value\n            true\n        }\n    }\n\n    fn to_bound(&self) -> Option<TyParamBound> {\n        match &self.node {\n            ExprKind::Path(None, path) =>\n                Some(TraitTyParamBound(PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n                                       TraitBoundModifier::None)),\n            _ => None,\n        }\n    }\n\n    pub(super) fn to_ty(&self) -> Option<P<Ty>> {\n        let node = match &self.node {\n            ExprKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            ExprKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            ExprKind::Paren(expr) => expr.to_ty().map(TyKind::Paren)?,\n            ExprKind::AddrOf(mutbl, expr) =>\n                expr.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            ExprKind::Repeat(expr, expr_len) =>\n                expr.to_ty().map(|ty| TyKind::Array(ty, expr_len.clone()))?,\n            ExprKind::Array(exprs) if exprs.len() == 1 =>\n                exprs[0].to_ty().map(TyKind::Slice)?,\n            ExprKind::Tup(exprs) => {\n                let mut tys = Vec::new();\n                for expr in exprs {\n                    tys.push(expr.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            ExprKind::Binary(binop, lhs, rhs) if binop.node == BinOpKind::Add =>\n                if let (Some(lhs), Some(rhs)) = (lhs.to_bound(), rhs.to_bound()) {\n                    TyKind::TraitObject(vec![lhs, rhs], TraitObjectSyntax::None)\n                } else {\n                    return None;\n                }\n            _ => return None,\n        };\n\n        Some(P(Ty { node, id: self.id, span: self.span }))\n    }\n\n    pub fn precedence(&self) -> ExprPrecedence {\n        match self.node {\n            ExprKind::Box(_) => ExprPrecedence::Box,\n            ExprKind::InPlace(..) => ExprPrecedence::InPlace,\n            ExprKind::Array(_) => ExprPrecedence::Array,\n            ExprKind::Call(..) => ExprPrecedence::Call,\n            ExprKind::MethodCall(..) => ExprPrecedence::MethodCall,\n            ExprKind::Tup(_) => ExprPrecedence::Tup,\n            ExprKind::Binary(op, ..) => ExprPrecedence::Binary(op.node),\n            ExprKind::Unary(..) => ExprPrecedence::Unary,\n            ExprKind::Lit(_) => ExprPrecedence::Lit,\n            ExprKind::Type(..) | ExprKind::Cast(..) => ExprPrecedence::Cast,\n            ExprKind::If(..) => ExprPrecedence::If,\n            ExprKind::IfLet(..) => ExprPrecedence::IfLet,\n            ExprKind::While(..) => ExprPrecedence::While,\n            ExprKind::WhileLet(..) => ExprPrecedence::WhileLet,\n            ExprKind::ForLoop(..) => ExprPrecedence::ForLoop,\n            ExprKind::Loop(..) => ExprPrecedence::Loop,\n            ExprKind::Match(..) => ExprPrecedence::Match,\n            ExprKind::Closure(..) => ExprPrecedence::Closure,\n            ExprKind::Block(..) => ExprPrecedence::Block,\n            ExprKind::Catch(..) => ExprPrecedence::Catch,\n            ExprKind::Assign(..) => ExprPrecedence::Assign,\n            ExprKind::AssignOp(..) => ExprPrecedence::AssignOp,\n            ExprKind::Field(..) => ExprPrecedence::Field,\n            ExprKind::TupField(..) => ExprPrecedence::TupField,\n            ExprKind::Index(..) => ExprPrecedence::Index,\n            ExprKind::Range(..) => ExprPrecedence::Range,\n            ExprKind::Path(..) => ExprPrecedence::Path,\n            ExprKind::AddrOf(..) => ExprPrecedence::AddrOf,\n            ExprKind::Break(..) => ExprPrecedence::Break,\n            ExprKind::Continue(..) => ExprPrecedence::Continue,\n            ExprKind::Ret(..) => ExprPrecedence::Ret,\n            ExprKind::InlineAsm(..) => ExprPrecedence::InlineAsm,\n            ExprKind::Mac(..) => ExprPrecedence::Mac,\n            ExprKind::Struct(..) => ExprPrecedence::Struct,\n            ExprKind::Repeat(..) => ExprPrecedence::Repeat,\n            ExprKind::Paren(..) => ExprPrecedence::Paren,\n            ExprKind::Try(..) => ExprPrecedence::Try,\n            ExprKind::Yield(..) => ExprPrecedence::Yield,\n        }\n    }\n}",
        "start": {
          "row": 909,
          "column": 11
        },
        "end": {
          "row": 1015,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Wether this expression would be valid somewhere that expects a value, for example, an `if`",
        "start": {
          "row": 910,
          "column": 5
        },
        "end": {
          "row": 910,
          "column": 99
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// condition.",
        "start": {
          "row": 911,
          "column": 5
        },
        "end": {
          "row": 911,
          "column": 19
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn returns(&self) -> bool {\n        if let ExprKind::Block(ref block) = self.node {\n            match block.stmts.last().map(|last_stmt| &last_stmt.node) {\n                // implicit return\n                Some(&StmtKind::Expr(_)) => true,\n                Some(&StmtKind::Semi(ref expr)) => {\n                    if let ExprKind::Ret(_) = expr.node {\n                        // last statement is explicit return\n                        true\n                    } else {\n                        false\n                    }\n                }\n                // This is a block that doesn't end in either an implicit or explicit return\n                _ => false,\n            }\n        } else {\n            // This is not a block, it is a value\n            true\n        }\n    }",
        "start": {
          "row": 912,
          "column": 5
        },
        "end": {
          "row": 932,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 912,
          "column": 5
        },
        "end": {
          "row": 912,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "returns",
        "start": {
          "row": 912,
          "column": 12
        },
        "end": {
          "row": 912,
          "column": 19
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 912,
          "column": 19
        },
        "end": {
          "row": 912,
          "column": 26
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 912,
          "column": 20
        },
        "end": {
          "row": 912,
          "column": 25
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 912,
          "column": 21
        },
        "end": {
          "row": 912,
          "column": 25
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 912,
          "column": 30
        },
        "end": {
          "row": 912,
          "column": 34
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        if let ExprKind::Block(ref block) = self.node {\n            match block.stmts.last().map(|last_stmt| &last_stmt.node) {\n                // implicit return\n                Some(&StmtKind::Expr(_)) => true,\n                Some(&StmtKind::Semi(ref expr)) => {\n                    if let ExprKind::Ret(_) = expr.node {\n                        // last statement is explicit return\n                        true\n                    } else {\n                        false\n                    }\n                }\n                // This is a block that doesn't end in either an implicit or explicit return\n                _ => false,\n            }\n        } else {\n            // This is not a block, it is a value\n            true\n        }\n    }",
        "start": {
          "row": 912,
          "column": 35
        },
        "end": {
          "row": 932,
          "column": 6
        }
      },
      {
        "kind": "if_let_expression",
        "name": "query",
        "text": "if let ExprKind::Block(ref block) = self.node {\n            match block.stmts.last().map(|last_stmt| &last_stmt.node) {\n                // implicit return\n                Some(&StmtKind::Expr(_)) => true,\n                Some(&StmtKind::Semi(ref expr)) => {\n                    if let ExprKind::Ret(_) = expr.node {\n                        // last statement is explicit return\n                        true\n                    } else {\n                        false\n                    }\n                }\n                // This is a block that doesn't end in either an implicit or explicit return\n                _ => false,\n            }\n        } else {\n            // This is not a block, it is a value\n            true\n        }",
        "start": {
          "row": 913,
          "column": 9
        },
        "end": {
          "row": 931,
          "column": 10
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Block(ref block)",
        "start": {
          "row": 913,
          "column": 16
        },
        "end": {
          "row": 913,
          "column": 42
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Block",
        "start": {
          "row": 913,
          "column": 16
        },
        "end": {
          "row": 913,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 913,
          "column": 16
        },
        "end": {
          "row": 913,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 913,
          "column": 26
        },
        "end": {
          "row": 913,
          "column": 31
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref block",
        "start": {
          "row": 913,
          "column": 32
        },
        "end": {
          "row": 913,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "block",
        "start": {
          "row": 913,
          "column": 36
        },
        "end": {
          "row": 913,
          "column": 41
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.node",
        "start": {
          "row": 913,
          "column": 45
        },
        "end": {
          "row": 913,
          "column": 54
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 913,
          "column": 45
        },
        "end": {
          "row": 913,
          "column": 49
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 913,
          "column": 50
        },
        "end": {
          "row": 913,
          "column": 54
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n            match block.stmts.last().map(|last_stmt| &last_stmt.node) {\n                // implicit return\n                Some(&StmtKind::Expr(_)) => true,\n                Some(&StmtKind::Semi(ref expr)) => {\n                    if let ExprKind::Ret(_) = expr.node {\n                        // last statement is explicit return\n                        true\n                    } else {\n                        false\n                    }\n                }\n                // This is a block that doesn't end in either an implicit or explicit return\n                _ => false,\n            }\n        }",
        "start": {
          "row": 913,
          "column": 55
        },
        "end": {
          "row": 928,
          "column": 10
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match block.stmts.last().map(|last_stmt| &last_stmt.node) {\n                // implicit return\n                Some(&StmtKind::Expr(_)) => true,\n                Some(&StmtKind::Semi(ref expr)) => {\n                    if let ExprKind::Ret(_) = expr.node {\n                        // last statement is explicit return\n                        true\n                    } else {\n                        false\n                    }\n                }\n                // This is a block that doesn't end in either an implicit or explicit return\n                _ => false,\n            }",
        "start": {
          "row": 914,
          "column": 13
        },
        "end": {
          "row": 927,
          "column": 14
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "block.stmts.last().map(|last_stmt| &last_stmt.node)",
        "start": {
          "row": 914,
          "column": 19
        },
        "end": {
          "row": 914,
          "column": 70
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "block.stmts.last().map",
        "start": {
          "row": 914,
          "column": 19
        },
        "end": {
          "row": 914,
          "column": 41
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "block.stmts.last()",
        "start": {
          "row": 914,
          "column": 19
        },
        "end": {
          "row": 914,
          "column": 37
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "block.stmts.last",
        "start": {
          "row": 914,
          "column": 19
        },
        "end": {
          "row": 914,
          "column": 35
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "block.stmts",
        "start": {
          "row": 914,
          "column": 19
        },
        "end": {
          "row": 914,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "block",
        "start": {
          "row": 914,
          "column": 19
        },
        "end": {
          "row": 914,
          "column": 24
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "stmts",
        "start": {
          "row": 914,
          "column": 25
        },
        "end": {
          "row": 914,
          "column": 30
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "last",
        "start": {
          "row": 914,
          "column": 31
        },
        "end": {
          "row": 914,
          "column": 35
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 914,
          "column": 35
        },
        "end": {
          "row": 914,
          "column": 37
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "map",
        "start": {
          "row": 914,
          "column": 38
        },
        "end": {
          "row": 914,
          "column": 41
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(|last_stmt| &last_stmt.node)",
        "start": {
          "row": 914,
          "column": 41
        },
        "end": {
          "row": 914,
          "column": 70
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|last_stmt| &last_stmt.node",
        "start": {
          "row": 914,
          "column": 42
        },
        "end": {
          "row": 914,
          "column": 69
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|last_stmt|",
        "start": {
          "row": 914,
          "column": 42
        },
        "end": {
          "row": 914,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "last_stmt",
        "start": {
          "row": 914,
          "column": 43
        },
        "end": {
          "row": 914,
          "column": 52
        }
      },
      {
        "kind": "reference_expression",
        "name": "query",
        "text": "&last_stmt.node",
        "start": {
          "row": 914,
          "column": 54
        },
        "end": {
          "row": 914,
          "column": 69
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "last_stmt.node",
        "start": {
          "row": 914,
          "column": 55
        },
        "end": {
          "row": 914,
          "column": 69
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "last_stmt",
        "start": {
          "row": 914,
          "column": 55
        },
        "end": {
          "row": 914,
          "column": 64
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 914,
          "column": 65
        },
        "end": {
          "row": 914,
          "column": 69
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n                // implicit return\n                Some(&StmtKind::Expr(_)) => true,\n                Some(&StmtKind::Semi(ref expr)) => {\n                    if let ExprKind::Ret(_) = expr.node {\n                        // last statement is explicit return\n                        true\n                    } else {\n                        false\n                    }\n                }\n                // This is a block that doesn't end in either an implicit or explicit return\n                _ => false,\n            }",
        "start": {
          "row": 914,
          "column": 71
        },
        "end": {
          "row": 927,
          "column": 14
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// implicit return",
        "start": {
          "row": 915,
          "column": 17
        },
        "end": {
          "row": 915,
          "column": 35
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Some(&StmtKind::Expr(_)) => true,",
        "start": {
          "row": 916,
          "column": 17
        },
        "end": {
          "row": 916,
          "column": 50
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Some(&StmtKind::Expr(_))",
        "start": {
          "row": 916,
          "column": 17
        },
        "end": {
          "row": 916,
          "column": 41
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "Some(&StmtKind::Expr(_))",
        "start": {
          "row": 916,
          "column": 17
        },
        "end": {
          "row": 916,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 916,
          "column": 17
        },
        "end": {
          "row": 916,
          "column": 21
        }
      },
      {
        "kind": "reference_pattern",
        "name": "query",
        "text": "&StmtKind::Expr(_)",
        "start": {
          "row": 916,
          "column": 22
        },
        "end": {
          "row": 916,
          "column": 40
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "StmtKind::Expr(_)",
        "start": {
          "row": 916,
          "column": 23
        },
        "end": {
          "row": 916,
          "column": 40
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "StmtKind::Expr",
        "start": {
          "row": 916,
          "column": 23
        },
        "end": {
          "row": 916,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "StmtKind",
        "start": {
          "row": 916,
          "column": 23
        },
        "end": {
          "row": 916,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 916,
          "column": 33
        },
        "end": {
          "row": 916,
          "column": 37
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 916,
          "column": 45
        },
        "end": {
          "row": 916,
          "column": 49
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Some(&StmtKind::Semi(ref expr)) => {\n                    if let ExprKind::Ret(_) = expr.node {\n                        // last statement is explicit return\n                        true\n                    } else {\n                        false\n                    }\n                }",
        "start": {
          "row": 917,
          "column": 17
        },
        "end": {
          "row": 924,
          "column": 18
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Some(&StmtKind::Semi(ref expr))",
        "start": {
          "row": 917,
          "column": 17
        },
        "end": {
          "row": 917,
          "column": 48
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "Some(&StmtKind::Semi(ref expr))",
        "start": {
          "row": 917,
          "column": 17
        },
        "end": {
          "row": 917,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 917,
          "column": 17
        },
        "end": {
          "row": 917,
          "column": 21
        }
      },
      {
        "kind": "reference_pattern",
        "name": "query",
        "text": "&StmtKind::Semi(ref expr)",
        "start": {
          "row": 917,
          "column": 22
        },
        "end": {
          "row": 917,
          "column": 47
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "StmtKind::Semi(ref expr)",
        "start": {
          "row": 917,
          "column": 23
        },
        "end": {
          "row": 917,
          "column": 47
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "StmtKind::Semi",
        "start": {
          "row": 917,
          "column": 23
        },
        "end": {
          "row": 917,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "StmtKind",
        "start": {
          "row": 917,
          "column": 23
        },
        "end": {
          "row": 917,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Semi",
        "start": {
          "row": 917,
          "column": 33
        },
        "end": {
          "row": 917,
          "column": 37
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref expr",
        "start": {
          "row": 917,
          "column": 38
        },
        "end": {
          "row": 917,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 917,
          "column": 42
        },
        "end": {
          "row": 917,
          "column": 46
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                    if let ExprKind::Ret(_) = expr.node {\n                        // last statement is explicit return\n                        true\n                    } else {\n                        false\n                    }\n                }",
        "start": {
          "row": 917,
          "column": 52
        },
        "end": {
          "row": 924,
          "column": 18
        }
      },
      {
        "kind": "if_let_expression",
        "name": "query",
        "text": "if let ExprKind::Ret(_) = expr.node {\n                        // last statement is explicit return\n                        true\n                    } else {\n                        false\n                    }",
        "start": {
          "row": 918,
          "column": 21
        },
        "end": {
          "row": 923,
          "column": 22
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Ret(_)",
        "start": {
          "row": 918,
          "column": 28
        },
        "end": {
          "row": 918,
          "column": 44
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Ret",
        "start": {
          "row": 918,
          "column": 28
        },
        "end": {
          "row": 918,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 918,
          "column": 28
        },
        "end": {
          "row": 918,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ret",
        "start": {
          "row": 918,
          "column": 38
        },
        "end": {
          "row": 918,
          "column": 41
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "expr.node",
        "start": {
          "row": 918,
          "column": 47
        },
        "end": {
          "row": 918,
          "column": 56
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 918,
          "column": 47
        },
        "end": {
          "row": 918,
          "column": 51
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 918,
          "column": 52
        },
        "end": {
          "row": 918,
          "column": 56
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                        // last statement is explicit return\n                        true\n                    }",
        "start": {
          "row": 918,
          "column": 57
        },
        "end": {
          "row": 921,
          "column": 22
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// last statement is explicit return",
        "start": {
          "row": 919,
          "column": 25
        },
        "end": {
          "row": 919,
          "column": 61
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 920,
          "column": 25
        },
        "end": {
          "row": 920,
          "column": 29
        }
      },
      {
        "kind": "else_clause",
        "name": "query",
        "text": "else {\n                        false\n                    }",
        "start": {
          "row": 921,
          "column": 23
        },
        "end": {
          "row": 923,
          "column": 22
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                        false\n                    }",
        "start": {
          "row": 921,
          "column": 28
        },
        "end": {
          "row": 923,
          "column": 22
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 922,
          "column": 25
        },
        "end": {
          "row": 922,
          "column": 30
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// This is a block that doesn't end in either an implicit or explicit return",
        "start": {
          "row": 925,
          "column": 17
        },
        "end": {
          "row": 925,
          "column": 93
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => false,",
        "start": {
          "row": 926,
          "column": 17
        },
        "end": {
          "row": 926,
          "column": 28
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 926,
          "column": 17
        },
        "end": {
          "row": 926,
          "column": 18
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 926,
          "column": 22
        },
        "end": {
          "row": 926,
          "column": 27
        }
      },
      {
        "kind": "else_clause",
        "name": "query",
        "text": "else {\n            // This is not a block, it is a value\n            true\n        }",
        "start": {
          "row": 928,
          "column": 11
        },
        "end": {
          "row": 931,
          "column": 10
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n            // This is not a block, it is a value\n            true\n        }",
        "start": {
          "row": 928,
          "column": 16
        },
        "end": {
          "row": 931,
          "column": 10
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// This is not a block, it is a value",
        "start": {
          "row": 929,
          "column": 13
        },
        "end": {
          "row": 929,
          "column": 50
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 930,
          "column": 13
        },
        "end": {
          "row": 930,
          "column": 17
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn to_bound(&self) -> Option<TyParamBound> {\n        match &self.node {\n            ExprKind::Path(None, path) =>\n                Some(TraitTyParamBound(PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n                                       TraitBoundModifier::None)),\n            _ => None,\n        }\n    }",
        "start": {
          "row": 934,
          "column": 5
        },
        "end": {
          "row": 941,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "to_bound",
        "start": {
          "row": 934,
          "column": 8
        },
        "end": {
          "row": 934,
          "column": 16
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 934,
          "column": 16
        },
        "end": {
          "row": 934,
          "column": 23
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 934,
          "column": 17
        },
        "end": {
          "row": 934,
          "column": 22
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 934,
          "column": 18
        },
        "end": {
          "row": 934,
          "column": 22
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<TyParamBound>",
        "start": {
          "row": 934,
          "column": 27
        },
        "end": {
          "row": 934,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 934,
          "column": 27
        },
        "end": {
          "row": 934,
          "column": 33
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<TyParamBound>",
        "start": {
          "row": 934,
          "column": 33
        },
        "end": {
          "row": 934,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParamBound",
        "start": {
          "row": 934,
          "column": 34
        },
        "end": {
          "row": 934,
          "column": 46
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match &self.node {\n            ExprKind::Path(None, path) =>\n                Some(TraitTyParamBound(PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n                                       TraitBoundModifier::None)),\n            _ => None,\n        }\n    }",
        "start": {
          "row": 934,
          "column": 48
        },
        "end": {
          "row": 941,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match &self.node {\n            ExprKind::Path(None, path) =>\n                Some(TraitTyParamBound(PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n                                       TraitBoundModifier::None)),\n            _ => None,\n        }",
        "start": {
          "row": 935,
          "column": 9
        },
        "end": {
          "row": 940,
          "column": 10
        }
      },
      {
        "kind": "reference_expression",
        "name": "query",
        "text": "&self.node",
        "start": {
          "row": 935,
          "column": 15
        },
        "end": {
          "row": 935,
          "column": 25
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.node",
        "start": {
          "row": 935,
          "column": 16
        },
        "end": {
          "row": 935,
          "column": 25
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 935,
          "column": 16
        },
        "end": {
          "row": 935,
          "column": 20
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 935,
          "column": 21
        },
        "end": {
          "row": 935,
          "column": 25
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            ExprKind::Path(None, path) =>\n                Some(TraitTyParamBound(PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n                                       TraitBoundModifier::None)),\n            _ => None,\n        }",
        "start": {
          "row": 935,
          "column": 26
        },
        "end": {
          "row": 940,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Path(None, path) =>\n                Some(TraitTyParamBound(PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n                                       TraitBoundModifier::None)),",
        "start": {
          "row": 936,
          "column": 13
        },
        "end": {
          "row": 938,
          "column": 67
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Path(None, path)",
        "start": {
          "row": 936,
          "column": 13
        },
        "end": {
          "row": 936,
          "column": 39
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Path(None, path)",
        "start": {
          "row": 936,
          "column": 13
        },
        "end": {
          "row": 936,
          "column": 39
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Path",
        "start": {
          "row": 936,
          "column": 13
        },
        "end": {
          "row": 936,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 936,
          "column": 13
        },
        "end": {
          "row": 936,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 936,
          "column": 23
        },
        "end": {
          "row": 936,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 936,
          "column": 28
        },
        "end": {
          "row": 936,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 936,
          "column": 34
        },
        "end": {
          "row": 936,
          "column": 38
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Some(TraitTyParamBound(PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n                                       TraitBoundModifier::None))",
        "start": {
          "row": 937,
          "column": 17
        },
        "end": {
          "row": 938,
          "column": 66
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 937,
          "column": 17
        },
        "end": {
          "row": 937,
          "column": 21
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(TraitTyParamBound(PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n                                       TraitBoundModifier::None))",
        "start": {
          "row": 937,
          "column": 21
        },
        "end": {
          "row": 938,
          "column": 66
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TraitTyParamBound(PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n                                       TraitBoundModifier::None)",
        "start": {
          "row": 937,
          "column": 22
        },
        "end": {
          "row": 938,
          "column": 65
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TraitTyParamBound",
        "start": {
          "row": 937,
          "column": 22
        },
        "end": {
          "row": 937,
          "column": 39
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(PolyTraitRef::new(Vec::new(), path.clone(), self.span),\n                                       TraitBoundModifier::None)",
        "start": {
          "row": 937,
          "column": 39
        },
        "end": {
          "row": 938,
          "column": 65
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "PolyTraitRef::new(Vec::new(), path.clone(), self.span)",
        "start": {
          "row": 937,
          "column": 40
        },
        "end": {
          "row": 937,
          "column": 94
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PolyTraitRef::new",
        "start": {
          "row": 937,
          "column": 40
        },
        "end": {
          "row": 937,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PolyTraitRef",
        "start": {
          "row": 937,
          "column": 40
        },
        "end": {
          "row": 937,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 937,
          "column": 54
        },
        "end": {
          "row": 937,
          "column": 57
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(Vec::new(), path.clone(), self.span)",
        "start": {
          "row": 937,
          "column": 57
        },
        "end": {
          "row": 937,
          "column": 94
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Vec::new()",
        "start": {
          "row": 937,
          "column": 58
        },
        "end": {
          "row": 937,
          "column": 68
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Vec::new",
        "start": {
          "row": 937,
          "column": 58
        },
        "end": {
          "row": 937,
          "column": 66
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 937,
          "column": 58
        },
        "end": {
          "row": 937,
          "column": 61
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 937,
          "column": 63
        },
        "end": {
          "row": 937,
          "column": 66
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 937,
          "column": 66
        },
        "end": {
          "row": 937,
          "column": 68
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "path.clone()",
        "start": {
          "row": 937,
          "column": 70
        },
        "end": {
          "row": 937,
          "column": 82
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "path.clone",
        "start": {
          "row": 937,
          "column": 70
        },
        "end": {
          "row": 937,
          "column": 80
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 937,
          "column": 70
        },
        "end": {
          "row": 937,
          "column": 74
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "clone",
        "start": {
          "row": 937,
          "column": 75
        },
        "end": {
          "row": 937,
          "column": 80
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 937,
          "column": 80
        },
        "end": {
          "row": 937,
          "column": 82
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.span",
        "start": {
          "row": 937,
          "column": 84
        },
        "end": {
          "row": 937,
          "column": 93
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 937,
          "column": 84
        },
        "end": {
          "row": 937,
          "column": 88
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 937,
          "column": 89
        },
        "end": {
          "row": 937,
          "column": 93
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TraitBoundModifier::None",
        "start": {
          "row": 938,
          "column": 40
        },
        "end": {
          "row": 938,
          "column": 64
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TraitBoundModifier",
        "start": {
          "row": 938,
          "column": 40
        },
        "end": {
          "row": 938,
          "column": 58
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 938,
          "column": 60
        },
        "end": {
          "row": 938,
          "column": 64
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => None,",
        "start": {
          "row": 939,
          "column": 13
        },
        "end": {
          "row": 939,
          "column": 23
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 939,
          "column": 13
        },
        "end": {
          "row": 939,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 939,
          "column": 18
        },
        "end": {
          "row": 939,
          "column": 22
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub(super) fn to_ty(&self) -> Option<P<Ty>> {\n        let node = match &self.node {\n            ExprKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            ExprKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            ExprKind::Paren(expr) => expr.to_ty().map(TyKind::Paren)?,\n            ExprKind::AddrOf(mutbl, expr) =>\n                expr.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            ExprKind::Repeat(expr, expr_len) =>\n                expr.to_ty().map(|ty| TyKind::Array(ty, expr_len.clone()))?,\n            ExprKind::Array(exprs) if exprs.len() == 1 =>\n                exprs[0].to_ty().map(TyKind::Slice)?,\n            ExprKind::Tup(exprs) => {\n                let mut tys = Vec::new();\n                for expr in exprs {\n                    tys.push(expr.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            ExprKind::Binary(binop, lhs, rhs) if binop.node == BinOpKind::Add =>\n                if let (Some(lhs), Some(rhs)) = (lhs.to_bound(), rhs.to_bound()) {\n                    TyKind::TraitObject(vec![lhs, rhs], TraitObjectSyntax::None)\n                } else {\n                    return None;\n                }\n            _ => return None,\n        };\n\n        Some(P(Ty { node, id: self.id, span: self.span }))\n    }",
        "start": {
          "row": 943,
          "column": 5
        },
        "end": {
          "row": 971,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub(super)",
        "start": {
          "row": 943,
          "column": 5
        },
        "end": {
          "row": 943,
          "column": 15
        }
      },
      {
        "kind": "super",
        "name": "query",
        "text": "super",
        "start": {
          "row": 943,
          "column": 9
        },
        "end": {
          "row": 943,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "to_ty",
        "start": {
          "row": 943,
          "column": 19
        },
        "end": {
          "row": 943,
          "column": 24
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 943,
          "column": 24
        },
        "end": {
          "row": 943,
          "column": 31
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 943,
          "column": 25
        },
        "end": {
          "row": 943,
          "column": 30
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 943,
          "column": 26
        },
        "end": {
          "row": 943,
          "column": 30
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Ty>>",
        "start": {
          "row": 943,
          "column": 35
        },
        "end": {
          "row": 943,
          "column": 48
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 943,
          "column": 35
        },
        "end": {
          "row": 943,
          "column": 41
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Ty>>",
        "start": {
          "row": 943,
          "column": 41
        },
        "end": {
          "row": 943,
          "column": 48
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 943,
          "column": 42
        },
        "end": {
          "row": 943,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 943,
          "column": 42
        },
        "end": {
          "row": 943,
          "column": 43
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 943,
          "column": 43
        },
        "end": {
          "row": 943,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 943,
          "column": 44
        },
        "end": {
          "row": 943,
          "column": 46
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        let node = match &self.node {\n            ExprKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            ExprKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            ExprKind::Paren(expr) => expr.to_ty().map(TyKind::Paren)?,\n            ExprKind::AddrOf(mutbl, expr) =>\n                expr.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            ExprKind::Repeat(expr, expr_len) =>\n                expr.to_ty().map(|ty| TyKind::Array(ty, expr_len.clone()))?,\n            ExprKind::Array(exprs) if exprs.len() == 1 =>\n                exprs[0].to_ty().map(TyKind::Slice)?,\n            ExprKind::Tup(exprs) => {\n                let mut tys = Vec::new();\n                for expr in exprs {\n                    tys.push(expr.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            ExprKind::Binary(binop, lhs, rhs) if binop.node == BinOpKind::Add =>\n                if let (Some(lhs), Some(rhs)) = (lhs.to_bound(), rhs.to_bound()) {\n                    TyKind::TraitObject(vec![lhs, rhs], TraitObjectSyntax::None)\n                } else {\n                    return None;\n                }\n            _ => return None,\n        };\n\n        Some(P(Ty { node, id: self.id, span: self.span }))\n    }",
        "start": {
          "row": 943,
          "column": 49
        },
        "end": {
          "row": 971,
          "column": 6
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let node = match &self.node {\n            ExprKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            ExprKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            ExprKind::Paren(expr) => expr.to_ty().map(TyKind::Paren)?,\n            ExprKind::AddrOf(mutbl, expr) =>\n                expr.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            ExprKind::Repeat(expr, expr_len) =>\n                expr.to_ty().map(|ty| TyKind::Array(ty, expr_len.clone()))?,\n            ExprKind::Array(exprs) if exprs.len() == 1 =>\n                exprs[0].to_ty().map(TyKind::Slice)?,\n            ExprKind::Tup(exprs) => {\n                let mut tys = Vec::new();\n                for expr in exprs {\n                    tys.push(expr.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            ExprKind::Binary(binop, lhs, rhs) if binop.node == BinOpKind::Add =>\n                if let (Some(lhs), Some(rhs)) = (lhs.to_bound(), rhs.to_bound()) {\n                    TyKind::TraitObject(vec![lhs, rhs], TraitObjectSyntax::None)\n                } else {\n                    return None;\n                }\n            _ => return None,\n        };",
        "start": {
          "row": 944,
          "column": 9
        },
        "end": {
          "row": 968,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 944,
          "column": 13
        },
        "end": {
          "row": 944,
          "column": 17
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match &self.node {\n            ExprKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            ExprKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            ExprKind::Paren(expr) => expr.to_ty().map(TyKind::Paren)?,\n            ExprKind::AddrOf(mutbl, expr) =>\n                expr.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            ExprKind::Repeat(expr, expr_len) =>\n                expr.to_ty().map(|ty| TyKind::Array(ty, expr_len.clone()))?,\n            ExprKind::Array(exprs) if exprs.len() == 1 =>\n                exprs[0].to_ty().map(TyKind::Slice)?,\n            ExprKind::Tup(exprs) => {\n                let mut tys = Vec::new();\n                for expr in exprs {\n                    tys.push(expr.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            ExprKind::Binary(binop, lhs, rhs) if binop.node == BinOpKind::Add =>\n                if let (Some(lhs), Some(rhs)) = (lhs.to_bound(), rhs.to_bound()) {\n                    TyKind::TraitObject(vec![lhs, rhs], TraitObjectSyntax::None)\n                } else {\n                    return None;\n                }\n            _ => return None,\n        }",
        "start": {
          "row": 944,
          "column": 20
        },
        "end": {
          "row": 968,
          "column": 10
        }
      },
      {
        "kind": "reference_expression",
        "name": "query",
        "text": "&self.node",
        "start": {
          "row": 944,
          "column": 26
        },
        "end": {
          "row": 944,
          "column": 36
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.node",
        "start": {
          "row": 944,
          "column": 27
        },
        "end": {
          "row": 944,
          "column": 36
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 944,
          "column": 27
        },
        "end": {
          "row": 944,
          "column": 31
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 944,
          "column": 32
        },
        "end": {
          "row": 944,
          "column": 36
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            ExprKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),\n            ExprKind::Mac(mac) => TyKind::Mac(mac.clone()),\n            ExprKind::Paren(expr) => expr.to_ty().map(TyKind::Paren)?,\n            ExprKind::AddrOf(mutbl, expr) =>\n                expr.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,\n            ExprKind::Repeat(expr, expr_len) =>\n                expr.to_ty().map(|ty| TyKind::Array(ty, expr_len.clone()))?,\n            ExprKind::Array(exprs) if exprs.len() == 1 =>\n                exprs[0].to_ty().map(TyKind::Slice)?,\n            ExprKind::Tup(exprs) => {\n                let mut tys = Vec::new();\n                for expr in exprs {\n                    tys.push(expr.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }\n            ExprKind::Binary(binop, lhs, rhs) if binop.node == BinOpKind::Add =>\n                if let (Some(lhs), Some(rhs)) = (lhs.to_bound(), rhs.to_bound()) {\n                    TyKind::TraitObject(vec![lhs, rhs], TraitObjectSyntax::None)\n                } else {\n                    return None;\n                }\n            _ => return None,\n        }",
        "start": {
          "row": 944,
          "column": 37
        },
        "end": {
          "row": 968,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Path(qself, path) => TyKind::Path(qself.clone(), path.clone()),",
        "start": {
          "row": 945,
          "column": 13
        },
        "end": {
          "row": 945,
          "column": 86
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Path(qself, path)",
        "start": {
          "row": 945,
          "column": 13
        },
        "end": {
          "row": 945,
          "column": 40
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Path(qself, path)",
        "start": {
          "row": 945,
          "column": 13
        },
        "end": {
          "row": 945,
          "column": 40
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Path",
        "start": {
          "row": 945,
          "column": 13
        },
        "end": {
          "row": 945,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 945,
          "column": 13
        },
        "end": {
          "row": 945,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 945,
          "column": 23
        },
        "end": {
          "row": 945,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "qself",
        "start": {
          "row": 945,
          "column": 28
        },
        "end": {
          "row": 945,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 945,
          "column": 35
        },
        "end": {
          "row": 945,
          "column": 39
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TyKind::Path(qself.clone(), path.clone())",
        "start": {
          "row": 945,
          "column": 44
        },
        "end": {
          "row": 945,
          "column": 85
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Path",
        "start": {
          "row": 945,
          "column": 44
        },
        "end": {
          "row": 945,
          "column": 56
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 945,
          "column": 44
        },
        "end": {
          "row": 945,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 945,
          "column": 52
        },
        "end": {
          "row": 945,
          "column": 56
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(qself.clone(), path.clone())",
        "start": {
          "row": 945,
          "column": 56
        },
        "end": {
          "row": 945,
          "column": 85
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "qself.clone()",
        "start": {
          "row": 945,
          "column": 57
        },
        "end": {
          "row": 945,
          "column": 70
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "qself.clone",
        "start": {
          "row": 945,
          "column": 57
        },
        "end": {
          "row": 945,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "qself",
        "start": {
          "row": 945,
          "column": 57
        },
        "end": {
          "row": 945,
          "column": 62
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "clone",
        "start": {
          "row": 945,
          "column": 63
        },
        "end": {
          "row": 945,
          "column": 68
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 945,
          "column": 68
        },
        "end": {
          "row": 945,
          "column": 70
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "path.clone()",
        "start": {
          "row": 945,
          "column": 72
        },
        "end": {
          "row": 945,
          "column": 84
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "path.clone",
        "start": {
          "row": 945,
          "column": 72
        },
        "end": {
          "row": 945,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 945,
          "column": 72
        },
        "end": {
          "row": 945,
          "column": 76
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "clone",
        "start": {
          "row": 945,
          "column": 77
        },
        "end": {
          "row": 945,
          "column": 82
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 945,
          "column": 82
        },
        "end": {
          "row": 945,
          "column": 84
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Mac(mac) => TyKind::Mac(mac.clone()),",
        "start": {
          "row": 946,
          "column": 13
        },
        "end": {
          "row": 946,
          "column": 60
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Mac(mac)",
        "start": {
          "row": 946,
          "column": 13
        },
        "end": {
          "row": 946,
          "column": 31
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Mac(mac)",
        "start": {
          "row": 946,
          "column": 13
        },
        "end": {
          "row": 946,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Mac",
        "start": {
          "row": 946,
          "column": 13
        },
        "end": {
          "row": 946,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 946,
          "column": 13
        },
        "end": {
          "row": 946,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 946,
          "column": 23
        },
        "end": {
          "row": 946,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mac",
        "start": {
          "row": 946,
          "column": 27
        },
        "end": {
          "row": 946,
          "column": 30
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TyKind::Mac(mac.clone())",
        "start": {
          "row": 946,
          "column": 35
        },
        "end": {
          "row": 946,
          "column": 59
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Mac",
        "start": {
          "row": 946,
          "column": 35
        },
        "end": {
          "row": 946,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 946,
          "column": 35
        },
        "end": {
          "row": 946,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 946,
          "column": 43
        },
        "end": {
          "row": 946,
          "column": 46
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(mac.clone())",
        "start": {
          "row": 946,
          "column": 46
        },
        "end": {
          "row": 946,
          "column": 59
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "mac.clone()",
        "start": {
          "row": 946,
          "column": 47
        },
        "end": {
          "row": 946,
          "column": 58
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "mac.clone",
        "start": {
          "row": 946,
          "column": 47
        },
        "end": {
          "row": 946,
          "column": 56
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mac",
        "start": {
          "row": 946,
          "column": 47
        },
        "end": {
          "row": 946,
          "column": 50
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "clone",
        "start": {
          "row": 946,
          "column": 51
        },
        "end": {
          "row": 946,
          "column": 56
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 946,
          "column": 56
        },
        "end": {
          "row": 946,
          "column": 58
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Paren(expr) => expr.to_ty().map(TyKind::Paren)?,",
        "start": {
          "row": 947,
          "column": 13
        },
        "end": {
          "row": 947,
          "column": 71
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Paren(expr)",
        "start": {
          "row": 947,
          "column": 13
        },
        "end": {
          "row": 947,
          "column": 34
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Paren(expr)",
        "start": {
          "row": 947,
          "column": 13
        },
        "end": {
          "row": 947,
          "column": 34
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Paren",
        "start": {
          "row": 947,
          "column": 13
        },
        "end": {
          "row": 947,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 947,
          "column": 13
        },
        "end": {
          "row": 947,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Paren",
        "start": {
          "row": 947,
          "column": 23
        },
        "end": {
          "row": 947,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 947,
          "column": 29
        },
        "end": {
          "row": 947,
          "column": 33
        }
      },
      {
        "kind": "try_expression",
        "name": "query",
        "text": "expr.to_ty().map(TyKind::Paren)?",
        "start": {
          "row": 947,
          "column": 38
        },
        "end": {
          "row": 947,
          "column": 70
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "expr.to_ty().map(TyKind::Paren)",
        "start": {
          "row": 947,
          "column": 38
        },
        "end": {
          "row": 947,
          "column": 69
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "expr.to_ty().map",
        "start": {
          "row": 947,
          "column": 38
        },
        "end": {
          "row": 947,
          "column": 54
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "expr.to_ty()",
        "start": {
          "row": 947,
          "column": 38
        },
        "end": {
          "row": 947,
          "column": 50
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "expr.to_ty",
        "start": {
          "row": 947,
          "column": 38
        },
        "end": {
          "row": 947,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 947,
          "column": 38
        },
        "end": {
          "row": 947,
          "column": 42
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "to_ty",
        "start": {
          "row": 947,
          "column": 43
        },
        "end": {
          "row": 947,
          "column": 48
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 947,
          "column": 48
        },
        "end": {
          "row": 947,
          "column": 50
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "map",
        "start": {
          "row": 947,
          "column": 51
        },
        "end": {
          "row": 947,
          "column": 54
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(TyKind::Paren)",
        "start": {
          "row": 947,
          "column": 54
        },
        "end": {
          "row": 947,
          "column": 69
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Paren",
        "start": {
          "row": 947,
          "column": 55
        },
        "end": {
          "row": 947,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 947,
          "column": 55
        },
        "end": {
          "row": 947,
          "column": 61
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Paren",
        "start": {
          "row": 947,
          "column": 63
        },
        "end": {
          "row": 947,
          "column": 68
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::AddrOf(mutbl, expr) =>\n                expr.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?,",
        "start": {
          "row": 948,
          "column": 13
        },
        "end": {
          "row": 949,
          "column": 89
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::AddrOf(mutbl, expr)",
        "start": {
          "row": 948,
          "column": 13
        },
        "end": {
          "row": 948,
          "column": 42
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::AddrOf(mutbl, expr)",
        "start": {
          "row": 948,
          "column": 13
        },
        "end": {
          "row": 948,
          "column": 42
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::AddrOf",
        "start": {
          "row": 948,
          "column": 13
        },
        "end": {
          "row": 948,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 948,
          "column": 13
        },
        "end": {
          "row": 948,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "AddrOf",
        "start": {
          "row": 948,
          "column": 23
        },
        "end": {
          "row": 948,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 948,
          "column": 30
        },
        "end": {
          "row": 948,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 948,
          "column": 37
        },
        "end": {
          "row": 948,
          "column": 41
        }
      },
      {
        "kind": "try_expression",
        "name": "query",
        "text": "expr.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))?",
        "start": {
          "row": 949,
          "column": 17
        },
        "end": {
          "row": 949,
          "column": 88
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "expr.to_ty().map(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))",
        "start": {
          "row": 949,
          "column": 17
        },
        "end": {
          "row": 949,
          "column": 87
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "expr.to_ty().map",
        "start": {
          "row": 949,
          "column": 17
        },
        "end": {
          "row": 949,
          "column": 33
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "expr.to_ty()",
        "start": {
          "row": 949,
          "column": 17
        },
        "end": {
          "row": 949,
          "column": 29
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "expr.to_ty",
        "start": {
          "row": 949,
          "column": 17
        },
        "end": {
          "row": 949,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 949,
          "column": 17
        },
        "end": {
          "row": 949,
          "column": 21
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "to_ty",
        "start": {
          "row": 949,
          "column": 22
        },
        "end": {
          "row": 949,
          "column": 27
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 949,
          "column": 27
        },
        "end": {
          "row": 949,
          "column": 29
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "map",
        "start": {
          "row": 949,
          "column": 30
        },
        "end": {
          "row": 949,
          "column": 33
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl }))",
        "start": {
          "row": 949,
          "column": 33
        },
        "end": {
          "row": 949,
          "column": 87
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|ty| TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl })",
        "start": {
          "row": 949,
          "column": 34
        },
        "end": {
          "row": 949,
          "column": 86
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|ty|",
        "start": {
          "row": 949,
          "column": 34
        },
        "end": {
          "row": 949,
          "column": 38
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 949,
          "column": 35
        },
        "end": {
          "row": 949,
          "column": 37
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TyKind::Rptr(None, MutTy { ty, mutbl: *mutbl })",
        "start": {
          "row": 949,
          "column": 39
        },
        "end": {
          "row": 949,
          "column": 86
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Rptr",
        "start": {
          "row": 949,
          "column": 39
        },
        "end": {
          "row": 949,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 949,
          "column": 39
        },
        "end": {
          "row": 949,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Rptr",
        "start": {
          "row": 949,
          "column": 47
        },
        "end": {
          "row": 949,
          "column": 51
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(None, MutTy { ty, mutbl: *mutbl })",
        "start": {
          "row": 949,
          "column": 51
        },
        "end": {
          "row": 949,
          "column": 86
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 949,
          "column": 52
        },
        "end": {
          "row": 949,
          "column": 56
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "MutTy { ty, mutbl: *mutbl }",
        "start": {
          "row": 949,
          "column": 58
        },
        "end": {
          "row": 949,
          "column": 85
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MutTy",
        "start": {
          "row": 949,
          "column": 58
        },
        "end": {
          "row": 949,
          "column": 63
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{ ty, mutbl: *mutbl }",
        "start": {
          "row": 949,
          "column": 64
        },
        "end": {
          "row": 949,
          "column": 85
        }
      },
      {
        "kind": "shorthand_field_initializer",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 949,
          "column": 66
        },
        "end": {
          "row": 949,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 949,
          "column": 66
        },
        "end": {
          "row": 949,
          "column": 68
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "mutbl: *mutbl",
        "start": {
          "row": 949,
          "column": 70
        },
        "end": {
          "row": 949,
          "column": 83
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 949,
          "column": 70
        },
        "end": {
          "row": 949,
          "column": 75
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*mutbl",
        "start": {
          "row": 949,
          "column": 77
        },
        "end": {
          "row": 949,
          "column": 83
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 949,
          "column": 78
        },
        "end": {
          "row": 949,
          "column": 83
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Repeat(expr, expr_len) =>\n                expr.to_ty().map(|ty| TyKind::Array(ty, expr_len.clone()))?,",
        "start": {
          "row": 950,
          "column": 13
        },
        "end": {
          "row": 951,
          "column": 77
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Repeat(expr, expr_len)",
        "start": {
          "row": 950,
          "column": 13
        },
        "end": {
          "row": 950,
          "column": 45
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Repeat(expr, expr_len)",
        "start": {
          "row": 950,
          "column": 13
        },
        "end": {
          "row": 950,
          "column": 45
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Repeat",
        "start": {
          "row": 950,
          "column": 13
        },
        "end": {
          "row": 950,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 950,
          "column": 13
        },
        "end": {
          "row": 950,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Repeat",
        "start": {
          "row": 950,
          "column": 23
        },
        "end": {
          "row": 950,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 950,
          "column": 30
        },
        "end": {
          "row": 950,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr_len",
        "start": {
          "row": 950,
          "column": 36
        },
        "end": {
          "row": 950,
          "column": 44
        }
      },
      {
        "kind": "try_expression",
        "name": "query",
        "text": "expr.to_ty().map(|ty| TyKind::Array(ty, expr_len.clone()))?",
        "start": {
          "row": 951,
          "column": 17
        },
        "end": {
          "row": 951,
          "column": 76
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "expr.to_ty().map(|ty| TyKind::Array(ty, expr_len.clone()))",
        "start": {
          "row": 951,
          "column": 17
        },
        "end": {
          "row": 951,
          "column": 75
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "expr.to_ty().map",
        "start": {
          "row": 951,
          "column": 17
        },
        "end": {
          "row": 951,
          "column": 33
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "expr.to_ty()",
        "start": {
          "row": 951,
          "column": 17
        },
        "end": {
          "row": 951,
          "column": 29
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "expr.to_ty",
        "start": {
          "row": 951,
          "column": 17
        },
        "end": {
          "row": 951,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 951,
          "column": 17
        },
        "end": {
          "row": 951,
          "column": 21
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "to_ty",
        "start": {
          "row": 951,
          "column": 22
        },
        "end": {
          "row": 951,
          "column": 27
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 951,
          "column": 27
        },
        "end": {
          "row": 951,
          "column": 29
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "map",
        "start": {
          "row": 951,
          "column": 30
        },
        "end": {
          "row": 951,
          "column": 33
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(|ty| TyKind::Array(ty, expr_len.clone()))",
        "start": {
          "row": 951,
          "column": 33
        },
        "end": {
          "row": 951,
          "column": 75
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|ty| TyKind::Array(ty, expr_len.clone())",
        "start": {
          "row": 951,
          "column": 34
        },
        "end": {
          "row": 951,
          "column": 74
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|ty|",
        "start": {
          "row": 951,
          "column": 34
        },
        "end": {
          "row": 951,
          "column": 38
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 951,
          "column": 35
        },
        "end": {
          "row": 951,
          "column": 37
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TyKind::Array(ty, expr_len.clone())",
        "start": {
          "row": 951,
          "column": 39
        },
        "end": {
          "row": 951,
          "column": 74
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Array",
        "start": {
          "row": 951,
          "column": 39
        },
        "end": {
          "row": 951,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 951,
          "column": 39
        },
        "end": {
          "row": 951,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Array",
        "start": {
          "row": 951,
          "column": 47
        },
        "end": {
          "row": 951,
          "column": 52
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(ty, expr_len.clone())",
        "start": {
          "row": 951,
          "column": 52
        },
        "end": {
          "row": 951,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 951,
          "column": 53
        },
        "end": {
          "row": 951,
          "column": 55
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "expr_len.clone()",
        "start": {
          "row": 951,
          "column": 57
        },
        "end": {
          "row": 951,
          "column": 73
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "expr_len.clone",
        "start": {
          "row": 951,
          "column": 57
        },
        "end": {
          "row": 951,
          "column": 71
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr_len",
        "start": {
          "row": 951,
          "column": 57
        },
        "end": {
          "row": 951,
          "column": 65
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "clone",
        "start": {
          "row": 951,
          "column": 66
        },
        "end": {
          "row": 951,
          "column": 71
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 951,
          "column": 71
        },
        "end": {
          "row": 951,
          "column": 73
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Array(exprs) if exprs.len() == 1 =>\n                exprs[0].to_ty().map(TyKind::Slice)?,",
        "start": {
          "row": 952,
          "column": 13
        },
        "end": {
          "row": 953,
          "column": 54
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Array(exprs) if exprs.len() == 1",
        "start": {
          "row": 952,
          "column": 13
        },
        "end": {
          "row": 952,
          "column": 55
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Array(exprs)",
        "start": {
          "row": 952,
          "column": 13
        },
        "end": {
          "row": 952,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Array",
        "start": {
          "row": 952,
          "column": 13
        },
        "end": {
          "row": 952,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 952,
          "column": 13
        },
        "end": {
          "row": 952,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Array",
        "start": {
          "row": 952,
          "column": 23
        },
        "end": {
          "row": 952,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "exprs",
        "start": {
          "row": 952,
          "column": 29
        },
        "end": {
          "row": 952,
          "column": 34
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "exprs.len() == 1",
        "start": {
          "row": 952,
          "column": 39
        },
        "end": {
          "row": 952,
          "column": 55
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "exprs.len()",
        "start": {
          "row": 952,
          "column": 39
        },
        "end": {
          "row": 952,
          "column": 50
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "exprs.len",
        "start": {
          "row": 952,
          "column": 39
        },
        "end": {
          "row": 952,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "exprs",
        "start": {
          "row": 952,
          "column": 39
        },
        "end": {
          "row": 952,
          "column": 44
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "len",
        "start": {
          "row": 952,
          "column": 45
        },
        "end": {
          "row": 952,
          "column": 48
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 952,
          "column": 48
        },
        "end": {
          "row": 952,
          "column": 50
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "1",
        "start": {
          "row": 952,
          "column": 54
        },
        "end": {
          "row": 952,
          "column": 55
        }
      },
      {
        "kind": "try_expression",
        "name": "query",
        "text": "exprs[0].to_ty().map(TyKind::Slice)?",
        "start": {
          "row": 953,
          "column": 17
        },
        "end": {
          "row": 953,
          "column": 53
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "exprs[0].to_ty().map(TyKind::Slice)",
        "start": {
          "row": 953,
          "column": 17
        },
        "end": {
          "row": 953,
          "column": 52
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "exprs[0].to_ty().map",
        "start": {
          "row": 953,
          "column": 17
        },
        "end": {
          "row": 953,
          "column": 37
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "exprs[0].to_ty()",
        "start": {
          "row": 953,
          "column": 17
        },
        "end": {
          "row": 953,
          "column": 33
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "exprs[0].to_ty",
        "start": {
          "row": 953,
          "column": 17
        },
        "end": {
          "row": 953,
          "column": 31
        }
      },
      {
        "kind": "index_expression",
        "name": "query",
        "text": "exprs[0]",
        "start": {
          "row": 953,
          "column": 17
        },
        "end": {
          "row": 953,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "exprs",
        "start": {
          "row": 953,
          "column": 17
        },
        "end": {
          "row": 953,
          "column": 22
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 953,
          "column": 23
        },
        "end": {
          "row": 953,
          "column": 24
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "to_ty",
        "start": {
          "row": 953,
          "column": 26
        },
        "end": {
          "row": 953,
          "column": 31
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 953,
          "column": 31
        },
        "end": {
          "row": 953,
          "column": 33
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "map",
        "start": {
          "row": 953,
          "column": 34
        },
        "end": {
          "row": 953,
          "column": 37
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(TyKind::Slice)",
        "start": {
          "row": 953,
          "column": 37
        },
        "end": {
          "row": 953,
          "column": 52
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Slice",
        "start": {
          "row": 953,
          "column": 38
        },
        "end": {
          "row": 953,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 953,
          "column": 38
        },
        "end": {
          "row": 953,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Slice",
        "start": {
          "row": 953,
          "column": 46
        },
        "end": {
          "row": 953,
          "column": 51
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Tup(exprs) => {\n                let mut tys = Vec::new();\n                for expr in exprs {\n                    tys.push(expr.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }",
        "start": {
          "row": 954,
          "column": 13
        },
        "end": {
          "row": 960,
          "column": 14
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Tup(exprs)",
        "start": {
          "row": 954,
          "column": 13
        },
        "end": {
          "row": 954,
          "column": 33
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Tup(exprs)",
        "start": {
          "row": 954,
          "column": 13
        },
        "end": {
          "row": 954,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Tup",
        "start": {
          "row": 954,
          "column": 13
        },
        "end": {
          "row": 954,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 954,
          "column": 13
        },
        "end": {
          "row": 954,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tup",
        "start": {
          "row": 954,
          "column": 23
        },
        "end": {
          "row": 954,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "exprs",
        "start": {
          "row": 954,
          "column": 27
        },
        "end": {
          "row": 954,
          "column": 32
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                let mut tys = Vec::new();\n                for expr in exprs {\n                    tys.push(expr.to_ty()?);\n                }\n                TyKind::Tup(tys)\n            }",
        "start": {
          "row": 954,
          "column": 37
        },
        "end": {
          "row": 960,
          "column": 14
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let mut tys = Vec::new();",
        "start": {
          "row": 955,
          "column": 17
        },
        "end": {
          "row": 955,
          "column": 42
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 955,
          "column": 21
        },
        "end": {
          "row": 955,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tys",
        "start": {
          "row": 955,
          "column": 25
        },
        "end": {
          "row": 955,
          "column": 28
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Vec::new()",
        "start": {
          "row": 955,
          "column": 31
        },
        "end": {
          "row": 955,
          "column": 41
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Vec::new",
        "start": {
          "row": 955,
          "column": 31
        },
        "end": {
          "row": 955,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 955,
          "column": 31
        },
        "end": {
          "row": 955,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 955,
          "column": 36
        },
        "end": {
          "row": 955,
          "column": 39
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 955,
          "column": 39
        },
        "end": {
          "row": 955,
          "column": 41
        }
      },
      {
        "kind": "for_expression",
        "name": "query",
        "text": "for expr in exprs {\n                    tys.push(expr.to_ty()?);\n                }",
        "start": {
          "row": 956,
          "column": 17
        },
        "end": {
          "row": 958,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 956,
          "column": 21
        },
        "end": {
          "row": 956,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "exprs",
        "start": {
          "row": 956,
          "column": 29
        },
        "end": {
          "row": 956,
          "column": 34
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                    tys.push(expr.to_ty()?);\n                }",
        "start": {
          "row": 956,
          "column": 35
        },
        "end": {
          "row": 958,
          "column": 18
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "tys.push(expr.to_ty()?)",
        "start": {
          "row": 957,
          "column": 21
        },
        "end": {
          "row": 957,
          "column": 44
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "tys.push",
        "start": {
          "row": 957,
          "column": 21
        },
        "end": {
          "row": 957,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tys",
        "start": {
          "row": 957,
          "column": 21
        },
        "end": {
          "row": 957,
          "column": 24
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "push",
        "start": {
          "row": 957,
          "column": 25
        },
        "end": {
          "row": 957,
          "column": 29
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(expr.to_ty()?)",
        "start": {
          "row": 957,
          "column": 29
        },
        "end": {
          "row": 957,
          "column": 44
        }
      },
      {
        "kind": "try_expression",
        "name": "query",
        "text": "expr.to_ty()?",
        "start": {
          "row": 957,
          "column": 30
        },
        "end": {
          "row": 957,
          "column": 43
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "expr.to_ty()",
        "start": {
          "row": 957,
          "column": 30
        },
        "end": {
          "row": 957,
          "column": 42
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "expr.to_ty",
        "start": {
          "row": 957,
          "column": 30
        },
        "end": {
          "row": 957,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 957,
          "column": 30
        },
        "end": {
          "row": 957,
          "column": 34
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "to_ty",
        "start": {
          "row": 957,
          "column": 35
        },
        "end": {
          "row": 957,
          "column": 40
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 957,
          "column": 40
        },
        "end": {
          "row": 957,
          "column": 42
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TyKind::Tup(tys)",
        "start": {
          "row": 959,
          "column": 17
        },
        "end": {
          "row": 959,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Tup",
        "start": {
          "row": 959,
          "column": 17
        },
        "end": {
          "row": 959,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 959,
          "column": 17
        },
        "end": {
          "row": 959,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tup",
        "start": {
          "row": 959,
          "column": 25
        },
        "end": {
          "row": 959,
          "column": 28
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(tys)",
        "start": {
          "row": 959,
          "column": 28
        },
        "end": {
          "row": 959,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tys",
        "start": {
          "row": 959,
          "column": 29
        },
        "end": {
          "row": 959,
          "column": 32
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Binary(binop, lhs, rhs) if binop.node == BinOpKind::Add =>\n                if let (Some(lhs), Some(rhs)) = (lhs.to_bound(), rhs.to_bound()) {\n                    TyKind::TraitObject(vec![lhs, rhs], TraitObjectSyntax::None)\n                } else {\n                    return None;\n                }",
        "start": {
          "row": 961,
          "column": 13
        },
        "end": {
          "row": 966,
          "column": 18
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Binary(binop, lhs, rhs) if binop.node == BinOpKind::Add",
        "start": {
          "row": 961,
          "column": 13
        },
        "end": {
          "row": 961,
          "column": 78
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Binary(binop, lhs, rhs)",
        "start": {
          "row": 961,
          "column": 13
        },
        "end": {
          "row": 961,
          "column": 46
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Binary",
        "start": {
          "row": 961,
          "column": 13
        },
        "end": {
          "row": 961,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 961,
          "column": 13
        },
        "end": {
          "row": 961,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Binary",
        "start": {
          "row": 961,
          "column": 23
        },
        "end": {
          "row": 961,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "binop",
        "start": {
          "row": 961,
          "column": 30
        },
        "end": {
          "row": 961,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "lhs",
        "start": {
          "row": 961,
          "column": 37
        },
        "end": {
          "row": 961,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "rhs",
        "start": {
          "row": 961,
          "column": 42
        },
        "end": {
          "row": 961,
          "column": 45
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "binop.node == BinOpKind::Add",
        "start": {
          "row": 961,
          "column": 50
        },
        "end": {
          "row": 961,
          "column": 78
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "binop.node",
        "start": {
          "row": 961,
          "column": 50
        },
        "end": {
          "row": 961,
          "column": 60
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "binop",
        "start": {
          "row": 961,
          "column": 50
        },
        "end": {
          "row": 961,
          "column": 55
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 961,
          "column": 56
        },
        "end": {
          "row": 961,
          "column": 60
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "BinOpKind::Add",
        "start": {
          "row": 961,
          "column": 64
        },
        "end": {
          "row": 961,
          "column": 78
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BinOpKind",
        "start": {
          "row": 961,
          "column": 64
        },
        "end": {
          "row": 961,
          "column": 73
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Add",
        "start": {
          "row": 961,
          "column": 75
        },
        "end": {
          "row": 961,
          "column": 78
        }
      },
      {
        "kind": "if_let_expression",
        "name": "query",
        "text": "if let (Some(lhs), Some(rhs)) = (lhs.to_bound(), rhs.to_bound()) {\n                    TyKind::TraitObject(vec![lhs, rhs], TraitObjectSyntax::None)\n                } else {\n                    return None;\n                }",
        "start": {
          "row": 962,
          "column": 17
        },
        "end": {
          "row": 966,
          "column": 18
        }
      },
      {
        "kind": "tuple_pattern",
        "name": "query",
        "text": "(Some(lhs), Some(rhs))",
        "start": {
          "row": 962,
          "column": 24
        },
        "end": {
          "row": 962,
          "column": 46
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "Some(lhs)",
        "start": {
          "row": 962,
          "column": 25
        },
        "end": {
          "row": 962,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 962,
          "column": 25
        },
        "end": {
          "row": 962,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "lhs",
        "start": {
          "row": 962,
          "column": 30
        },
        "end": {
          "row": 962,
          "column": 33
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "Some(rhs)",
        "start": {
          "row": 962,
          "column": 36
        },
        "end": {
          "row": 962,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 962,
          "column": 36
        },
        "end": {
          "row": 962,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "rhs",
        "start": {
          "row": 962,
          "column": 41
        },
        "end": {
          "row": 962,
          "column": 44
        }
      },
      {
        "kind": "tuple_expression",
        "name": "query",
        "text": "(lhs.to_bound(), rhs.to_bound())",
        "start": {
          "row": 962,
          "column": 49
        },
        "end": {
          "row": 962,
          "column": 81
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "lhs.to_bound()",
        "start": {
          "row": 962,
          "column": 50
        },
        "end": {
          "row": 962,
          "column": 64
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "lhs.to_bound",
        "start": {
          "row": 962,
          "column": 50
        },
        "end": {
          "row": 962,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "lhs",
        "start": {
          "row": 962,
          "column": 50
        },
        "end": {
          "row": 962,
          "column": 53
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "to_bound",
        "start": {
          "row": 962,
          "column": 54
        },
        "end": {
          "row": 962,
          "column": 62
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 962,
          "column": 62
        },
        "end": {
          "row": 962,
          "column": 64
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "rhs.to_bound()",
        "start": {
          "row": 962,
          "column": 66
        },
        "end": {
          "row": 962,
          "column": 80
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "rhs.to_bound",
        "start": {
          "row": 962,
          "column": 66
        },
        "end": {
          "row": 962,
          "column": 78
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "rhs",
        "start": {
          "row": 962,
          "column": 66
        },
        "end": {
          "row": 962,
          "column": 69
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "to_bound",
        "start": {
          "row": 962,
          "column": 70
        },
        "end": {
          "row": 962,
          "column": 78
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 962,
          "column": 78
        },
        "end": {
          "row": 962,
          "column": 80
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                    TyKind::TraitObject(vec![lhs, rhs], TraitObjectSyntax::None)\n                }",
        "start": {
          "row": 962,
          "column": 82
        },
        "end": {
          "row": 964,
          "column": 18
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TyKind::TraitObject(vec![lhs, rhs], TraitObjectSyntax::None)",
        "start": {
          "row": 963,
          "column": 21
        },
        "end": {
          "row": 963,
          "column": 81
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::TraitObject",
        "start": {
          "row": 963,
          "column": 21
        },
        "end": {
          "row": 963,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 963,
          "column": 21
        },
        "end": {
          "row": 963,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TraitObject",
        "start": {
          "row": 963,
          "column": 29
        },
        "end": {
          "row": 963,
          "column": 40
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(vec![lhs, rhs], TraitObjectSyntax::None)",
        "start": {
          "row": 963,
          "column": 40
        },
        "end": {
          "row": 963,
          "column": 81
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "vec![lhs, rhs]",
        "start": {
          "row": 963,
          "column": 41
        },
        "end": {
          "row": 963,
          "column": 55
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "vec",
        "start": {
          "row": 963,
          "column": 41
        },
        "end": {
          "row": 963,
          "column": 44
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "[lhs, rhs]",
        "start": {
          "row": 963,
          "column": 45
        },
        "end": {
          "row": 963,
          "column": 55
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "lhs",
        "start": {
          "row": 963,
          "column": 46
        },
        "end": {
          "row": 963,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "rhs",
        "start": {
          "row": 963,
          "column": 51
        },
        "end": {
          "row": 963,
          "column": 54
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TraitObjectSyntax::None",
        "start": {
          "row": 963,
          "column": 57
        },
        "end": {
          "row": 963,
          "column": 80
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TraitObjectSyntax",
        "start": {
          "row": 963,
          "column": 57
        },
        "end": {
          "row": 963,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 963,
          "column": 76
        },
        "end": {
          "row": 963,
          "column": 80
        }
      },
      {
        "kind": "else_clause",
        "name": "query",
        "text": "else {\n                    return None;\n                }",
        "start": {
          "row": 964,
          "column": 19
        },
        "end": {
          "row": 966,
          "column": 18
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                    return None;\n                }",
        "start": {
          "row": 964,
          "column": 24
        },
        "end": {
          "row": 966,
          "column": 18
        }
      },
      {
        "kind": "return_expression",
        "name": "query",
        "text": "return None",
        "start": {
          "row": 965,
          "column": 21
        },
        "end": {
          "row": 965,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 965,
          "column": 28
        },
        "end": {
          "row": 965,
          "column": 32
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => return None,",
        "start": {
          "row": 967,
          "column": 13
        },
        "end": {
          "row": 967,
          "column": 30
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 967,
          "column": 13
        },
        "end": {
          "row": 967,
          "column": 14
        }
      },
      {
        "kind": "return_expression",
        "name": "query",
        "text": "return None",
        "start": {
          "row": 967,
          "column": 18
        },
        "end": {
          "row": 967,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 967,
          "column": 25
        },
        "end": {
          "row": 967,
          "column": 29
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Some(P(Ty { node, id: self.id, span: self.span }))",
        "start": {
          "row": 970,
          "column": 9
        },
        "end": {
          "row": 970,
          "column": 59
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 970,
          "column": 9
        },
        "end": {
          "row": 970,
          "column": 13
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(P(Ty { node, id: self.id, span: self.span }))",
        "start": {
          "row": 970,
          "column": 13
        },
        "end": {
          "row": 970,
          "column": 59
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "P(Ty { node, id: self.id, span: self.span })",
        "start": {
          "row": 970,
          "column": 14
        },
        "end": {
          "row": 970,
          "column": 58
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 970,
          "column": 14
        },
        "end": {
          "row": 970,
          "column": 15
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(Ty { node, id: self.id, span: self.span })",
        "start": {
          "row": 970,
          "column": 15
        },
        "end": {
          "row": 970,
          "column": 58
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "Ty { node, id: self.id, span: self.span }",
        "start": {
          "row": 970,
          "column": 16
        },
        "end": {
          "row": 970,
          "column": 57
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 970,
          "column": 16
        },
        "end": {
          "row": 970,
          "column": 18
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{ node, id: self.id, span: self.span }",
        "start": {
          "row": 970,
          "column": 19
        },
        "end": {
          "row": 970,
          "column": 57
        }
      },
      {
        "kind": "shorthand_field_initializer",
        "name": "query",
        "text": "node",
        "start": {
          "row": 970,
          "column": 21
        },
        "end": {
          "row": 970,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 970,
          "column": 21
        },
        "end": {
          "row": 970,
          "column": 25
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "id: self.id",
        "start": {
          "row": 970,
          "column": 27
        },
        "end": {
          "row": 970,
          "column": 38
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 970,
          "column": 27
        },
        "end": {
          "row": 970,
          "column": 29
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.id",
        "start": {
          "row": 970,
          "column": 31
        },
        "end": {
          "row": 970,
          "column": 38
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 970,
          "column": 31
        },
        "end": {
          "row": 970,
          "column": 35
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 970,
          "column": 36
        },
        "end": {
          "row": 970,
          "column": 38
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "span: self.span",
        "start": {
          "row": 970,
          "column": 40
        },
        "end": {
          "row": 970,
          "column": 55
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 970,
          "column": 40
        },
        "end": {
          "row": 970,
          "column": 44
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.span",
        "start": {
          "row": 970,
          "column": 46
        },
        "end": {
          "row": 970,
          "column": 55
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 970,
          "column": 46
        },
        "end": {
          "row": 970,
          "column": 50
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 970,
          "column": 51
        },
        "end": {
          "row": 970,
          "column": 55
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn precedence(&self) -> ExprPrecedence {\n        match self.node {\n            ExprKind::Box(_) => ExprPrecedence::Box,\n            ExprKind::InPlace(..) => ExprPrecedence::InPlace,\n            ExprKind::Array(_) => ExprPrecedence::Array,\n            ExprKind::Call(..) => ExprPrecedence::Call,\n            ExprKind::MethodCall(..) => ExprPrecedence::MethodCall,\n            ExprKind::Tup(_) => ExprPrecedence::Tup,\n            ExprKind::Binary(op, ..) => ExprPrecedence::Binary(op.node),\n            ExprKind::Unary(..) => ExprPrecedence::Unary,\n            ExprKind::Lit(_) => ExprPrecedence::Lit,\n            ExprKind::Type(..) | ExprKind::Cast(..) => ExprPrecedence::Cast,\n            ExprKind::If(..) => ExprPrecedence::If,\n            ExprKind::IfLet(..) => ExprPrecedence::IfLet,\n            ExprKind::While(..) => ExprPrecedence::While,\n            ExprKind::WhileLet(..) => ExprPrecedence::WhileLet,\n            ExprKind::ForLoop(..) => ExprPrecedence::ForLoop,\n            ExprKind::Loop(..) => ExprPrecedence::Loop,\n            ExprKind::Match(..) => ExprPrecedence::Match,\n            ExprKind::Closure(..) => ExprPrecedence::Closure,\n            ExprKind::Block(..) => ExprPrecedence::Block,\n            ExprKind::Catch(..) => ExprPrecedence::Catch,\n            ExprKind::Assign(..) => ExprPrecedence::Assign,\n            ExprKind::AssignOp(..) => ExprPrecedence::AssignOp,\n            ExprKind::Field(..) => ExprPrecedence::Field,\n            ExprKind::TupField(..) => ExprPrecedence::TupField,\n            ExprKind::Index(..) => ExprPrecedence::Index,\n            ExprKind::Range(..) => ExprPrecedence::Range,\n            ExprKind::Path(..) => ExprPrecedence::Path,\n            ExprKind::AddrOf(..) => ExprPrecedence::AddrOf,\n            ExprKind::Break(..) => ExprPrecedence::Break,\n            ExprKind::Continue(..) => ExprPrecedence::Continue,\n            ExprKind::Ret(..) => ExprPrecedence::Ret,\n            ExprKind::InlineAsm(..) => ExprPrecedence::InlineAsm,\n            ExprKind::Mac(..) => ExprPrecedence::Mac,\n            ExprKind::Struct(..) => ExprPrecedence::Struct,\n            ExprKind::Repeat(..) => ExprPrecedence::Repeat,\n            ExprKind::Paren(..) => ExprPrecedence::Paren,\n            ExprKind::Try(..) => ExprPrecedence::Try,\n            ExprKind::Yield(..) => ExprPrecedence::Yield,\n        }\n    }",
        "start": {
          "row": 973,
          "column": 5
        },
        "end": {
          "row": 1014,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 973,
          "column": 5
        },
        "end": {
          "row": 973,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "precedence",
        "start": {
          "row": 973,
          "column": 12
        },
        "end": {
          "row": 973,
          "column": 22
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 973,
          "column": 22
        },
        "end": {
          "row": 973,
          "column": 29
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 973,
          "column": 23
        },
        "end": {
          "row": 973,
          "column": 28
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 973,
          "column": 24
        },
        "end": {
          "row": 973,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 973,
          "column": 33
        },
        "end": {
          "row": 973,
          "column": 47
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match self.node {\n            ExprKind::Box(_) => ExprPrecedence::Box,\n            ExprKind::InPlace(..) => ExprPrecedence::InPlace,\n            ExprKind::Array(_) => ExprPrecedence::Array,\n            ExprKind::Call(..) => ExprPrecedence::Call,\n            ExprKind::MethodCall(..) => ExprPrecedence::MethodCall,\n            ExprKind::Tup(_) => ExprPrecedence::Tup,\n            ExprKind::Binary(op, ..) => ExprPrecedence::Binary(op.node),\n            ExprKind::Unary(..) => ExprPrecedence::Unary,\n            ExprKind::Lit(_) => ExprPrecedence::Lit,\n            ExprKind::Type(..) | ExprKind::Cast(..) => ExprPrecedence::Cast,\n            ExprKind::If(..) => ExprPrecedence::If,\n            ExprKind::IfLet(..) => ExprPrecedence::IfLet,\n            ExprKind::While(..) => ExprPrecedence::While,\n            ExprKind::WhileLet(..) => ExprPrecedence::WhileLet,\n            ExprKind::ForLoop(..) => ExprPrecedence::ForLoop,\n            ExprKind::Loop(..) => ExprPrecedence::Loop,\n            ExprKind::Match(..) => ExprPrecedence::Match,\n            ExprKind::Closure(..) => ExprPrecedence::Closure,\n            ExprKind::Block(..) => ExprPrecedence::Block,\n            ExprKind::Catch(..) => ExprPrecedence::Catch,\n            ExprKind::Assign(..) => ExprPrecedence::Assign,\n            ExprKind::AssignOp(..) => ExprPrecedence::AssignOp,\n            ExprKind::Field(..) => ExprPrecedence::Field,\n            ExprKind::TupField(..) => ExprPrecedence::TupField,\n            ExprKind::Index(..) => ExprPrecedence::Index,\n            ExprKind::Range(..) => ExprPrecedence::Range,\n            ExprKind::Path(..) => ExprPrecedence::Path,\n            ExprKind::AddrOf(..) => ExprPrecedence::AddrOf,\n            ExprKind::Break(..) => ExprPrecedence::Break,\n            ExprKind::Continue(..) => ExprPrecedence::Continue,\n            ExprKind::Ret(..) => ExprPrecedence::Ret,\n            ExprKind::InlineAsm(..) => ExprPrecedence::InlineAsm,\n            ExprKind::Mac(..) => ExprPrecedence::Mac,\n            ExprKind::Struct(..) => ExprPrecedence::Struct,\n            ExprKind::Repeat(..) => ExprPrecedence::Repeat,\n            ExprKind::Paren(..) => ExprPrecedence::Paren,\n            ExprKind::Try(..) => ExprPrecedence::Try,\n            ExprKind::Yield(..) => ExprPrecedence::Yield,\n        }\n    }",
        "start": {
          "row": 973,
          "column": 48
        },
        "end": {
          "row": 1014,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match self.node {\n            ExprKind::Box(_) => ExprPrecedence::Box,\n            ExprKind::InPlace(..) => ExprPrecedence::InPlace,\n            ExprKind::Array(_) => ExprPrecedence::Array,\n            ExprKind::Call(..) => ExprPrecedence::Call,\n            ExprKind::MethodCall(..) => ExprPrecedence::MethodCall,\n            ExprKind::Tup(_) => ExprPrecedence::Tup,\n            ExprKind::Binary(op, ..) => ExprPrecedence::Binary(op.node),\n            ExprKind::Unary(..) => ExprPrecedence::Unary,\n            ExprKind::Lit(_) => ExprPrecedence::Lit,\n            ExprKind::Type(..) | ExprKind::Cast(..) => ExprPrecedence::Cast,\n            ExprKind::If(..) => ExprPrecedence::If,\n            ExprKind::IfLet(..) => ExprPrecedence::IfLet,\n            ExprKind::While(..) => ExprPrecedence::While,\n            ExprKind::WhileLet(..) => ExprPrecedence::WhileLet,\n            ExprKind::ForLoop(..) => ExprPrecedence::ForLoop,\n            ExprKind::Loop(..) => ExprPrecedence::Loop,\n            ExprKind::Match(..) => ExprPrecedence::Match,\n            ExprKind::Closure(..) => ExprPrecedence::Closure,\n            ExprKind::Block(..) => ExprPrecedence::Block,\n            ExprKind::Catch(..) => ExprPrecedence::Catch,\n            ExprKind::Assign(..) => ExprPrecedence::Assign,\n            ExprKind::AssignOp(..) => ExprPrecedence::AssignOp,\n            ExprKind::Field(..) => ExprPrecedence::Field,\n            ExprKind::TupField(..) => ExprPrecedence::TupField,\n            ExprKind::Index(..) => ExprPrecedence::Index,\n            ExprKind::Range(..) => ExprPrecedence::Range,\n            ExprKind::Path(..) => ExprPrecedence::Path,\n            ExprKind::AddrOf(..) => ExprPrecedence::AddrOf,\n            ExprKind::Break(..) => ExprPrecedence::Break,\n            ExprKind::Continue(..) => ExprPrecedence::Continue,\n            ExprKind::Ret(..) => ExprPrecedence::Ret,\n            ExprKind::InlineAsm(..) => ExprPrecedence::InlineAsm,\n            ExprKind::Mac(..) => ExprPrecedence::Mac,\n            ExprKind::Struct(..) => ExprPrecedence::Struct,\n            ExprKind::Repeat(..) => ExprPrecedence::Repeat,\n            ExprKind::Paren(..) => ExprPrecedence::Paren,\n            ExprKind::Try(..) => ExprPrecedence::Try,\n            ExprKind::Yield(..) => ExprPrecedence::Yield,\n        }",
        "start": {
          "row": 974,
          "column": 9
        },
        "end": {
          "row": 1013,
          "column": 10
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.node",
        "start": {
          "row": 974,
          "column": 15
        },
        "end": {
          "row": 974,
          "column": 24
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 974,
          "column": 15
        },
        "end": {
          "row": 974,
          "column": 19
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 974,
          "column": 20
        },
        "end": {
          "row": 974,
          "column": 24
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            ExprKind::Box(_) => ExprPrecedence::Box,\n            ExprKind::InPlace(..) => ExprPrecedence::InPlace,\n            ExprKind::Array(_) => ExprPrecedence::Array,\n            ExprKind::Call(..) => ExprPrecedence::Call,\n            ExprKind::MethodCall(..) => ExprPrecedence::MethodCall,\n            ExprKind::Tup(_) => ExprPrecedence::Tup,\n            ExprKind::Binary(op, ..) => ExprPrecedence::Binary(op.node),\n            ExprKind::Unary(..) => ExprPrecedence::Unary,\n            ExprKind::Lit(_) => ExprPrecedence::Lit,\n            ExprKind::Type(..) | ExprKind::Cast(..) => ExprPrecedence::Cast,\n            ExprKind::If(..) => ExprPrecedence::If,\n            ExprKind::IfLet(..) => ExprPrecedence::IfLet,\n            ExprKind::While(..) => ExprPrecedence::While,\n            ExprKind::WhileLet(..) => ExprPrecedence::WhileLet,\n            ExprKind::ForLoop(..) => ExprPrecedence::ForLoop,\n            ExprKind::Loop(..) => ExprPrecedence::Loop,\n            ExprKind::Match(..) => ExprPrecedence::Match,\n            ExprKind::Closure(..) => ExprPrecedence::Closure,\n            ExprKind::Block(..) => ExprPrecedence::Block,\n            ExprKind::Catch(..) => ExprPrecedence::Catch,\n            ExprKind::Assign(..) => ExprPrecedence::Assign,\n            ExprKind::AssignOp(..) => ExprPrecedence::AssignOp,\n            ExprKind::Field(..) => ExprPrecedence::Field,\n            ExprKind::TupField(..) => ExprPrecedence::TupField,\n            ExprKind::Index(..) => ExprPrecedence::Index,\n            ExprKind::Range(..) => ExprPrecedence::Range,\n            ExprKind::Path(..) => ExprPrecedence::Path,\n            ExprKind::AddrOf(..) => ExprPrecedence::AddrOf,\n            ExprKind::Break(..) => ExprPrecedence::Break,\n            ExprKind::Continue(..) => ExprPrecedence::Continue,\n            ExprKind::Ret(..) => ExprPrecedence::Ret,\n            ExprKind::InlineAsm(..) => ExprPrecedence::InlineAsm,\n            ExprKind::Mac(..) => ExprPrecedence::Mac,\n            ExprKind::Struct(..) => ExprPrecedence::Struct,\n            ExprKind::Repeat(..) => ExprPrecedence::Repeat,\n            ExprKind::Paren(..) => ExprPrecedence::Paren,\n            ExprKind::Try(..) => ExprPrecedence::Try,\n            ExprKind::Yield(..) => ExprPrecedence::Yield,\n        }",
        "start": {
          "row": 974,
          "column": 25
        },
        "end": {
          "row": 1013,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Box(_) => ExprPrecedence::Box,",
        "start": {
          "row": 975,
          "column": 13
        },
        "end": {
          "row": 975,
          "column": 53
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Box(_)",
        "start": {
          "row": 975,
          "column": 13
        },
        "end": {
          "row": 975,
          "column": 29
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Box(_)",
        "start": {
          "row": 975,
          "column": 13
        },
        "end": {
          "row": 975,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Box",
        "start": {
          "row": 975,
          "column": 13
        },
        "end": {
          "row": 975,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 975,
          "column": 13
        },
        "end": {
          "row": 975,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Box",
        "start": {
          "row": 975,
          "column": 23
        },
        "end": {
          "row": 975,
          "column": 26
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Box",
        "start": {
          "row": 975,
          "column": 33
        },
        "end": {
          "row": 975,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 975,
          "column": 33
        },
        "end": {
          "row": 975,
          "column": 47
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Box",
        "start": {
          "row": 975,
          "column": 49
        },
        "end": {
          "row": 975,
          "column": 52
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::InPlace(..) => ExprPrecedence::InPlace,",
        "start": {
          "row": 976,
          "column": 13
        },
        "end": {
          "row": 976,
          "column": 62
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::InPlace(..)",
        "start": {
          "row": 976,
          "column": 13
        },
        "end": {
          "row": 976,
          "column": 34
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::InPlace(..)",
        "start": {
          "row": 976,
          "column": 13
        },
        "end": {
          "row": 976,
          "column": 34
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::InPlace",
        "start": {
          "row": 976,
          "column": 13
        },
        "end": {
          "row": 976,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 976,
          "column": 13
        },
        "end": {
          "row": 976,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "InPlace",
        "start": {
          "row": 976,
          "column": 23
        },
        "end": {
          "row": 976,
          "column": 30
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 976,
          "column": 31
        },
        "end": {
          "row": 976,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::InPlace",
        "start": {
          "row": 976,
          "column": 38
        },
        "end": {
          "row": 976,
          "column": 61
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 976,
          "column": 38
        },
        "end": {
          "row": 976,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "InPlace",
        "start": {
          "row": 976,
          "column": 54
        },
        "end": {
          "row": 976,
          "column": 61
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Array(_) => ExprPrecedence::Array,",
        "start": {
          "row": 977,
          "column": 13
        },
        "end": {
          "row": 977,
          "column": 57
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Array(_)",
        "start": {
          "row": 977,
          "column": 13
        },
        "end": {
          "row": 977,
          "column": 31
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Array(_)",
        "start": {
          "row": 977,
          "column": 13
        },
        "end": {
          "row": 977,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Array",
        "start": {
          "row": 977,
          "column": 13
        },
        "end": {
          "row": 977,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 977,
          "column": 13
        },
        "end": {
          "row": 977,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Array",
        "start": {
          "row": 977,
          "column": 23
        },
        "end": {
          "row": 977,
          "column": 28
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Array",
        "start": {
          "row": 977,
          "column": 35
        },
        "end": {
          "row": 977,
          "column": 56
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 977,
          "column": 35
        },
        "end": {
          "row": 977,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Array",
        "start": {
          "row": 977,
          "column": 51
        },
        "end": {
          "row": 977,
          "column": 56
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Call(..) => ExprPrecedence::Call,",
        "start": {
          "row": 978,
          "column": 13
        },
        "end": {
          "row": 978,
          "column": 56
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Call(..)",
        "start": {
          "row": 978,
          "column": 13
        },
        "end": {
          "row": 978,
          "column": 31
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Call(..)",
        "start": {
          "row": 978,
          "column": 13
        },
        "end": {
          "row": 978,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Call",
        "start": {
          "row": 978,
          "column": 13
        },
        "end": {
          "row": 978,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 978,
          "column": 13
        },
        "end": {
          "row": 978,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Call",
        "start": {
          "row": 978,
          "column": 23
        },
        "end": {
          "row": 978,
          "column": 27
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 978,
          "column": 28
        },
        "end": {
          "row": 978,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Call",
        "start": {
          "row": 978,
          "column": 35
        },
        "end": {
          "row": 978,
          "column": 55
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 978,
          "column": 35
        },
        "end": {
          "row": 978,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Call",
        "start": {
          "row": 978,
          "column": 51
        },
        "end": {
          "row": 978,
          "column": 55
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::MethodCall(..) => ExprPrecedence::MethodCall,",
        "start": {
          "row": 979,
          "column": 13
        },
        "end": {
          "row": 979,
          "column": 68
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::MethodCall(..)",
        "start": {
          "row": 979,
          "column": 13
        },
        "end": {
          "row": 979,
          "column": 37
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::MethodCall(..)",
        "start": {
          "row": 979,
          "column": 13
        },
        "end": {
          "row": 979,
          "column": 37
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::MethodCall",
        "start": {
          "row": 979,
          "column": 13
        },
        "end": {
          "row": 979,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 979,
          "column": 13
        },
        "end": {
          "row": 979,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "MethodCall",
        "start": {
          "row": 979,
          "column": 23
        },
        "end": {
          "row": 979,
          "column": 33
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 979,
          "column": 34
        },
        "end": {
          "row": 979,
          "column": 36
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::MethodCall",
        "start": {
          "row": 979,
          "column": 41
        },
        "end": {
          "row": 979,
          "column": 67
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 979,
          "column": 41
        },
        "end": {
          "row": 979,
          "column": 55
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "MethodCall",
        "start": {
          "row": 979,
          "column": 57
        },
        "end": {
          "row": 979,
          "column": 67
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Tup(_) => ExprPrecedence::Tup,",
        "start": {
          "row": 980,
          "column": 13
        },
        "end": {
          "row": 980,
          "column": 53
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Tup(_)",
        "start": {
          "row": 980,
          "column": 13
        },
        "end": {
          "row": 980,
          "column": 29
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Tup(_)",
        "start": {
          "row": 980,
          "column": 13
        },
        "end": {
          "row": 980,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Tup",
        "start": {
          "row": 980,
          "column": 13
        },
        "end": {
          "row": 980,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 980,
          "column": 13
        },
        "end": {
          "row": 980,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tup",
        "start": {
          "row": 980,
          "column": 23
        },
        "end": {
          "row": 980,
          "column": 26
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Tup",
        "start": {
          "row": 980,
          "column": 33
        },
        "end": {
          "row": 980,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 980,
          "column": 33
        },
        "end": {
          "row": 980,
          "column": 47
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tup",
        "start": {
          "row": 980,
          "column": 49
        },
        "end": {
          "row": 980,
          "column": 52
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Binary(op, ..) => ExprPrecedence::Binary(op.node),",
        "start": {
          "row": 981,
          "column": 13
        },
        "end": {
          "row": 981,
          "column": 73
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Binary(op, ..)",
        "start": {
          "row": 981,
          "column": 13
        },
        "end": {
          "row": 981,
          "column": 37
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Binary(op, ..)",
        "start": {
          "row": 981,
          "column": 13
        },
        "end": {
          "row": 981,
          "column": 37
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Binary",
        "start": {
          "row": 981,
          "column": 13
        },
        "end": {
          "row": 981,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 981,
          "column": 13
        },
        "end": {
          "row": 981,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Binary",
        "start": {
          "row": 981,
          "column": 23
        },
        "end": {
          "row": 981,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "op",
        "start": {
          "row": 981,
          "column": 30
        },
        "end": {
          "row": 981,
          "column": 32
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 981,
          "column": 34
        },
        "end": {
          "row": 981,
          "column": 36
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "ExprPrecedence::Binary(op.node)",
        "start": {
          "row": 981,
          "column": 41
        },
        "end": {
          "row": 981,
          "column": 72
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Binary",
        "start": {
          "row": 981,
          "column": 41
        },
        "end": {
          "row": 981,
          "column": 63
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 981,
          "column": 41
        },
        "end": {
          "row": 981,
          "column": 55
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Binary",
        "start": {
          "row": 981,
          "column": 57
        },
        "end": {
          "row": 981,
          "column": 63
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(op.node)",
        "start": {
          "row": 981,
          "column": 63
        },
        "end": {
          "row": 981,
          "column": 72
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "op.node",
        "start": {
          "row": 981,
          "column": 64
        },
        "end": {
          "row": 981,
          "column": 71
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "op",
        "start": {
          "row": 981,
          "column": 64
        },
        "end": {
          "row": 981,
          "column": 66
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 981,
          "column": 67
        },
        "end": {
          "row": 981,
          "column": 71
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Unary(..) => ExprPrecedence::Unary,",
        "start": {
          "row": 982,
          "column": 13
        },
        "end": {
          "row": 982,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Unary(..)",
        "start": {
          "row": 982,
          "column": 13
        },
        "end": {
          "row": 982,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Unary(..)",
        "start": {
          "row": 982,
          "column": 13
        },
        "end": {
          "row": 982,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Unary",
        "start": {
          "row": 982,
          "column": 13
        },
        "end": {
          "row": 982,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 982,
          "column": 13
        },
        "end": {
          "row": 982,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unary",
        "start": {
          "row": 982,
          "column": 23
        },
        "end": {
          "row": 982,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 982,
          "column": 29
        },
        "end": {
          "row": 982,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Unary",
        "start": {
          "row": 982,
          "column": 36
        },
        "end": {
          "row": 982,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 982,
          "column": 36
        },
        "end": {
          "row": 982,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unary",
        "start": {
          "row": 982,
          "column": 52
        },
        "end": {
          "row": 982,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Lit(_) => ExprPrecedence::Lit,",
        "start": {
          "row": 983,
          "column": 13
        },
        "end": {
          "row": 983,
          "column": 53
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Lit(_)",
        "start": {
          "row": 983,
          "column": 13
        },
        "end": {
          "row": 983,
          "column": 29
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Lit(_)",
        "start": {
          "row": 983,
          "column": 13
        },
        "end": {
          "row": 983,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Lit",
        "start": {
          "row": 983,
          "column": 13
        },
        "end": {
          "row": 983,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 983,
          "column": 13
        },
        "end": {
          "row": 983,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Lit",
        "start": {
          "row": 983,
          "column": 23
        },
        "end": {
          "row": 983,
          "column": 26
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Lit",
        "start": {
          "row": 983,
          "column": 33
        },
        "end": {
          "row": 983,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 983,
          "column": 33
        },
        "end": {
          "row": 983,
          "column": 47
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Lit",
        "start": {
          "row": 983,
          "column": 49
        },
        "end": {
          "row": 983,
          "column": 52
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Type(..) | ExprKind::Cast(..) => ExprPrecedence::Cast,",
        "start": {
          "row": 984,
          "column": 13
        },
        "end": {
          "row": 984,
          "column": 77
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Type(..) | ExprKind::Cast(..)",
        "start": {
          "row": 984,
          "column": 13
        },
        "end": {
          "row": 984,
          "column": 52
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "ExprKind::Type(..) | ExprKind::Cast(..)",
        "start": {
          "row": 984,
          "column": 13
        },
        "end": {
          "row": 984,
          "column": 52
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Type(..)",
        "start": {
          "row": 984,
          "column": 13
        },
        "end": {
          "row": 984,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Type",
        "start": {
          "row": 984,
          "column": 13
        },
        "end": {
          "row": 984,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 984,
          "column": 13
        },
        "end": {
          "row": 984,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Type",
        "start": {
          "row": 984,
          "column": 23
        },
        "end": {
          "row": 984,
          "column": 27
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 984,
          "column": 28
        },
        "end": {
          "row": 984,
          "column": 30
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Cast(..)",
        "start": {
          "row": 984,
          "column": 34
        },
        "end": {
          "row": 984,
          "column": 52
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Cast",
        "start": {
          "row": 984,
          "column": 34
        },
        "end": {
          "row": 984,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 984,
          "column": 34
        },
        "end": {
          "row": 984,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Cast",
        "start": {
          "row": 984,
          "column": 44
        },
        "end": {
          "row": 984,
          "column": 48
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 984,
          "column": 49
        },
        "end": {
          "row": 984,
          "column": 51
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Cast",
        "start": {
          "row": 984,
          "column": 56
        },
        "end": {
          "row": 984,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 984,
          "column": 56
        },
        "end": {
          "row": 984,
          "column": 70
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Cast",
        "start": {
          "row": 984,
          "column": 72
        },
        "end": {
          "row": 984,
          "column": 76
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::If(..) => ExprPrecedence::If,",
        "start": {
          "row": 985,
          "column": 13
        },
        "end": {
          "row": 985,
          "column": 52
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::If(..)",
        "start": {
          "row": 985,
          "column": 13
        },
        "end": {
          "row": 985,
          "column": 29
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::If(..)",
        "start": {
          "row": 985,
          "column": 13
        },
        "end": {
          "row": 985,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::If",
        "start": {
          "row": 985,
          "column": 13
        },
        "end": {
          "row": 985,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 985,
          "column": 13
        },
        "end": {
          "row": 985,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "If",
        "start": {
          "row": 985,
          "column": 23
        },
        "end": {
          "row": 985,
          "column": 25
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 985,
          "column": 26
        },
        "end": {
          "row": 985,
          "column": 28
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::If",
        "start": {
          "row": 985,
          "column": 33
        },
        "end": {
          "row": 985,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 985,
          "column": 33
        },
        "end": {
          "row": 985,
          "column": 47
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "If",
        "start": {
          "row": 985,
          "column": 49
        },
        "end": {
          "row": 985,
          "column": 51
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::IfLet(..) => ExprPrecedence::IfLet,",
        "start": {
          "row": 986,
          "column": 13
        },
        "end": {
          "row": 986,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::IfLet(..)",
        "start": {
          "row": 986,
          "column": 13
        },
        "end": {
          "row": 986,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::IfLet(..)",
        "start": {
          "row": 986,
          "column": 13
        },
        "end": {
          "row": 986,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::IfLet",
        "start": {
          "row": 986,
          "column": 13
        },
        "end": {
          "row": 986,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 986,
          "column": 13
        },
        "end": {
          "row": 986,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IfLet",
        "start": {
          "row": 986,
          "column": 23
        },
        "end": {
          "row": 986,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 986,
          "column": 29
        },
        "end": {
          "row": 986,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::IfLet",
        "start": {
          "row": 986,
          "column": 36
        },
        "end": {
          "row": 986,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 986,
          "column": 36
        },
        "end": {
          "row": 986,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IfLet",
        "start": {
          "row": 986,
          "column": 52
        },
        "end": {
          "row": 986,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::While(..) => ExprPrecedence::While,",
        "start": {
          "row": 987,
          "column": 13
        },
        "end": {
          "row": 987,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::While(..)",
        "start": {
          "row": 987,
          "column": 13
        },
        "end": {
          "row": 987,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::While(..)",
        "start": {
          "row": 987,
          "column": 13
        },
        "end": {
          "row": 987,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::While",
        "start": {
          "row": 987,
          "column": 13
        },
        "end": {
          "row": 987,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 987,
          "column": 13
        },
        "end": {
          "row": 987,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "While",
        "start": {
          "row": 987,
          "column": 23
        },
        "end": {
          "row": 987,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 987,
          "column": 29
        },
        "end": {
          "row": 987,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::While",
        "start": {
          "row": 987,
          "column": 36
        },
        "end": {
          "row": 987,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 987,
          "column": 36
        },
        "end": {
          "row": 987,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "While",
        "start": {
          "row": 987,
          "column": 52
        },
        "end": {
          "row": 987,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::WhileLet(..) => ExprPrecedence::WhileLet,",
        "start": {
          "row": 988,
          "column": 13
        },
        "end": {
          "row": 988,
          "column": 64
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::WhileLet(..)",
        "start": {
          "row": 988,
          "column": 13
        },
        "end": {
          "row": 988,
          "column": 35
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::WhileLet(..)",
        "start": {
          "row": 988,
          "column": 13
        },
        "end": {
          "row": 988,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::WhileLet",
        "start": {
          "row": 988,
          "column": 13
        },
        "end": {
          "row": 988,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 988,
          "column": 13
        },
        "end": {
          "row": 988,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "WhileLet",
        "start": {
          "row": 988,
          "column": 23
        },
        "end": {
          "row": 988,
          "column": 31
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 988,
          "column": 32
        },
        "end": {
          "row": 988,
          "column": 34
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::WhileLet",
        "start": {
          "row": 988,
          "column": 39
        },
        "end": {
          "row": 988,
          "column": 63
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 988,
          "column": 39
        },
        "end": {
          "row": 988,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "WhileLet",
        "start": {
          "row": 988,
          "column": 55
        },
        "end": {
          "row": 988,
          "column": 63
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::ForLoop(..) => ExprPrecedence::ForLoop,",
        "start": {
          "row": 989,
          "column": 13
        },
        "end": {
          "row": 989,
          "column": 62
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::ForLoop(..)",
        "start": {
          "row": 989,
          "column": 13
        },
        "end": {
          "row": 989,
          "column": 34
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::ForLoop(..)",
        "start": {
          "row": 989,
          "column": 13
        },
        "end": {
          "row": 989,
          "column": 34
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::ForLoop",
        "start": {
          "row": 989,
          "column": 13
        },
        "end": {
          "row": 989,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 989,
          "column": 13
        },
        "end": {
          "row": 989,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ForLoop",
        "start": {
          "row": 989,
          "column": 23
        },
        "end": {
          "row": 989,
          "column": 30
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 989,
          "column": 31
        },
        "end": {
          "row": 989,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::ForLoop",
        "start": {
          "row": 989,
          "column": 38
        },
        "end": {
          "row": 989,
          "column": 61
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 989,
          "column": 38
        },
        "end": {
          "row": 989,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ForLoop",
        "start": {
          "row": 989,
          "column": 54
        },
        "end": {
          "row": 989,
          "column": 61
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Loop(..) => ExprPrecedence::Loop,",
        "start": {
          "row": 990,
          "column": 13
        },
        "end": {
          "row": 990,
          "column": 56
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Loop(..)",
        "start": {
          "row": 990,
          "column": 13
        },
        "end": {
          "row": 990,
          "column": 31
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Loop(..)",
        "start": {
          "row": 990,
          "column": 13
        },
        "end": {
          "row": 990,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Loop",
        "start": {
          "row": 990,
          "column": 13
        },
        "end": {
          "row": 990,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 990,
          "column": 13
        },
        "end": {
          "row": 990,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Loop",
        "start": {
          "row": 990,
          "column": 23
        },
        "end": {
          "row": 990,
          "column": 27
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 990,
          "column": 28
        },
        "end": {
          "row": 990,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Loop",
        "start": {
          "row": 990,
          "column": 35
        },
        "end": {
          "row": 990,
          "column": 55
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 990,
          "column": 35
        },
        "end": {
          "row": 990,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Loop",
        "start": {
          "row": 990,
          "column": 51
        },
        "end": {
          "row": 990,
          "column": 55
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Match(..) => ExprPrecedence::Match,",
        "start": {
          "row": 991,
          "column": 13
        },
        "end": {
          "row": 991,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Match(..)",
        "start": {
          "row": 991,
          "column": 13
        },
        "end": {
          "row": 991,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Match(..)",
        "start": {
          "row": 991,
          "column": 13
        },
        "end": {
          "row": 991,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Match",
        "start": {
          "row": 991,
          "column": 13
        },
        "end": {
          "row": 991,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 991,
          "column": 13
        },
        "end": {
          "row": 991,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Match",
        "start": {
          "row": 991,
          "column": 23
        },
        "end": {
          "row": 991,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 991,
          "column": 29
        },
        "end": {
          "row": 991,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Match",
        "start": {
          "row": 991,
          "column": 36
        },
        "end": {
          "row": 991,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 991,
          "column": 36
        },
        "end": {
          "row": 991,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Match",
        "start": {
          "row": 991,
          "column": 52
        },
        "end": {
          "row": 991,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Closure(..) => ExprPrecedence::Closure,",
        "start": {
          "row": 992,
          "column": 13
        },
        "end": {
          "row": 992,
          "column": 62
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Closure(..)",
        "start": {
          "row": 992,
          "column": 13
        },
        "end": {
          "row": 992,
          "column": 34
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Closure(..)",
        "start": {
          "row": 992,
          "column": 13
        },
        "end": {
          "row": 992,
          "column": 34
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Closure",
        "start": {
          "row": 992,
          "column": 13
        },
        "end": {
          "row": 992,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 992,
          "column": 13
        },
        "end": {
          "row": 992,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Closure",
        "start": {
          "row": 992,
          "column": 23
        },
        "end": {
          "row": 992,
          "column": 30
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 992,
          "column": 31
        },
        "end": {
          "row": 992,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Closure",
        "start": {
          "row": 992,
          "column": 38
        },
        "end": {
          "row": 992,
          "column": 61
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 992,
          "column": 38
        },
        "end": {
          "row": 992,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Closure",
        "start": {
          "row": 992,
          "column": 54
        },
        "end": {
          "row": 992,
          "column": 61
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Block(..) => ExprPrecedence::Block,",
        "start": {
          "row": 993,
          "column": 13
        },
        "end": {
          "row": 993,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Block(..)",
        "start": {
          "row": 993,
          "column": 13
        },
        "end": {
          "row": 993,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Block(..)",
        "start": {
          "row": 993,
          "column": 13
        },
        "end": {
          "row": 993,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Block",
        "start": {
          "row": 993,
          "column": 13
        },
        "end": {
          "row": 993,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 993,
          "column": 13
        },
        "end": {
          "row": 993,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 993,
          "column": 23
        },
        "end": {
          "row": 993,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 993,
          "column": 29
        },
        "end": {
          "row": 993,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Block",
        "start": {
          "row": 993,
          "column": 36
        },
        "end": {
          "row": 993,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 993,
          "column": 36
        },
        "end": {
          "row": 993,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 993,
          "column": 52
        },
        "end": {
          "row": 993,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Catch(..) => ExprPrecedence::Catch,",
        "start": {
          "row": 994,
          "column": 13
        },
        "end": {
          "row": 994,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Catch(..)",
        "start": {
          "row": 994,
          "column": 13
        },
        "end": {
          "row": 994,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Catch(..)",
        "start": {
          "row": 994,
          "column": 13
        },
        "end": {
          "row": 994,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Catch",
        "start": {
          "row": 994,
          "column": 13
        },
        "end": {
          "row": 994,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 994,
          "column": 13
        },
        "end": {
          "row": 994,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Catch",
        "start": {
          "row": 994,
          "column": 23
        },
        "end": {
          "row": 994,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 994,
          "column": 29
        },
        "end": {
          "row": 994,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Catch",
        "start": {
          "row": 994,
          "column": 36
        },
        "end": {
          "row": 994,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 994,
          "column": 36
        },
        "end": {
          "row": 994,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Catch",
        "start": {
          "row": 994,
          "column": 52
        },
        "end": {
          "row": 994,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Assign(..) => ExprPrecedence::Assign,",
        "start": {
          "row": 995,
          "column": 13
        },
        "end": {
          "row": 995,
          "column": 60
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Assign(..)",
        "start": {
          "row": 995,
          "column": 13
        },
        "end": {
          "row": 995,
          "column": 33
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Assign(..)",
        "start": {
          "row": 995,
          "column": 13
        },
        "end": {
          "row": 995,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Assign",
        "start": {
          "row": 995,
          "column": 13
        },
        "end": {
          "row": 995,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 995,
          "column": 13
        },
        "end": {
          "row": 995,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Assign",
        "start": {
          "row": 995,
          "column": 23
        },
        "end": {
          "row": 995,
          "column": 29
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 995,
          "column": 30
        },
        "end": {
          "row": 995,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Assign",
        "start": {
          "row": 995,
          "column": 37
        },
        "end": {
          "row": 995,
          "column": 59
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 995,
          "column": 37
        },
        "end": {
          "row": 995,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Assign",
        "start": {
          "row": 995,
          "column": 53
        },
        "end": {
          "row": 995,
          "column": 59
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::AssignOp(..) => ExprPrecedence::AssignOp,",
        "start": {
          "row": 996,
          "column": 13
        },
        "end": {
          "row": 996,
          "column": 64
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::AssignOp(..)",
        "start": {
          "row": 996,
          "column": 13
        },
        "end": {
          "row": 996,
          "column": 35
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::AssignOp(..)",
        "start": {
          "row": 996,
          "column": 13
        },
        "end": {
          "row": 996,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::AssignOp",
        "start": {
          "row": 996,
          "column": 13
        },
        "end": {
          "row": 996,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 996,
          "column": 13
        },
        "end": {
          "row": 996,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "AssignOp",
        "start": {
          "row": 996,
          "column": 23
        },
        "end": {
          "row": 996,
          "column": 31
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 996,
          "column": 32
        },
        "end": {
          "row": 996,
          "column": 34
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::AssignOp",
        "start": {
          "row": 996,
          "column": 39
        },
        "end": {
          "row": 996,
          "column": 63
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 996,
          "column": 39
        },
        "end": {
          "row": 996,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "AssignOp",
        "start": {
          "row": 996,
          "column": 55
        },
        "end": {
          "row": 996,
          "column": 63
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Field(..) => ExprPrecedence::Field,",
        "start": {
          "row": 997,
          "column": 13
        },
        "end": {
          "row": 997,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Field(..)",
        "start": {
          "row": 997,
          "column": 13
        },
        "end": {
          "row": 997,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Field(..)",
        "start": {
          "row": 997,
          "column": 13
        },
        "end": {
          "row": 997,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Field",
        "start": {
          "row": 997,
          "column": 13
        },
        "end": {
          "row": 997,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 997,
          "column": 13
        },
        "end": {
          "row": 997,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Field",
        "start": {
          "row": 997,
          "column": 23
        },
        "end": {
          "row": 997,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 997,
          "column": 29
        },
        "end": {
          "row": 997,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Field",
        "start": {
          "row": 997,
          "column": 36
        },
        "end": {
          "row": 997,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 997,
          "column": 36
        },
        "end": {
          "row": 997,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Field",
        "start": {
          "row": 997,
          "column": 52
        },
        "end": {
          "row": 997,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::TupField(..) => ExprPrecedence::TupField,",
        "start": {
          "row": 998,
          "column": 13
        },
        "end": {
          "row": 998,
          "column": 64
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::TupField(..)",
        "start": {
          "row": 998,
          "column": 13
        },
        "end": {
          "row": 998,
          "column": 35
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::TupField(..)",
        "start": {
          "row": 998,
          "column": 13
        },
        "end": {
          "row": 998,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::TupField",
        "start": {
          "row": 998,
          "column": 13
        },
        "end": {
          "row": 998,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 998,
          "column": 13
        },
        "end": {
          "row": 998,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TupField",
        "start": {
          "row": 998,
          "column": 23
        },
        "end": {
          "row": 998,
          "column": 31
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 998,
          "column": 32
        },
        "end": {
          "row": 998,
          "column": 34
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::TupField",
        "start": {
          "row": 998,
          "column": 39
        },
        "end": {
          "row": 998,
          "column": 63
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 998,
          "column": 39
        },
        "end": {
          "row": 998,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TupField",
        "start": {
          "row": 998,
          "column": 55
        },
        "end": {
          "row": 998,
          "column": 63
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Index(..) => ExprPrecedence::Index,",
        "start": {
          "row": 999,
          "column": 13
        },
        "end": {
          "row": 999,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Index(..)",
        "start": {
          "row": 999,
          "column": 13
        },
        "end": {
          "row": 999,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Index(..)",
        "start": {
          "row": 999,
          "column": 13
        },
        "end": {
          "row": 999,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Index",
        "start": {
          "row": 999,
          "column": 13
        },
        "end": {
          "row": 999,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 999,
          "column": 13
        },
        "end": {
          "row": 999,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Index",
        "start": {
          "row": 999,
          "column": 23
        },
        "end": {
          "row": 999,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 999,
          "column": 29
        },
        "end": {
          "row": 999,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Index",
        "start": {
          "row": 999,
          "column": 36
        },
        "end": {
          "row": 999,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 999,
          "column": 36
        },
        "end": {
          "row": 999,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Index",
        "start": {
          "row": 999,
          "column": 52
        },
        "end": {
          "row": 999,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Range(..) => ExprPrecedence::Range,",
        "start": {
          "row": 1000,
          "column": 13
        },
        "end": {
          "row": 1000,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Range(..)",
        "start": {
          "row": 1000,
          "column": 13
        },
        "end": {
          "row": 1000,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Range(..)",
        "start": {
          "row": 1000,
          "column": 13
        },
        "end": {
          "row": 1000,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Range",
        "start": {
          "row": 1000,
          "column": 13
        },
        "end": {
          "row": 1000,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1000,
          "column": 13
        },
        "end": {
          "row": 1000,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Range",
        "start": {
          "row": 1000,
          "column": 23
        },
        "end": {
          "row": 1000,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1000,
          "column": 29
        },
        "end": {
          "row": 1000,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Range",
        "start": {
          "row": 1000,
          "column": 36
        },
        "end": {
          "row": 1000,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1000,
          "column": 36
        },
        "end": {
          "row": 1000,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Range",
        "start": {
          "row": 1000,
          "column": 52
        },
        "end": {
          "row": 1000,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Path(..) => ExprPrecedence::Path,",
        "start": {
          "row": 1001,
          "column": 13
        },
        "end": {
          "row": 1001,
          "column": 56
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Path(..)",
        "start": {
          "row": 1001,
          "column": 13
        },
        "end": {
          "row": 1001,
          "column": 31
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Path(..)",
        "start": {
          "row": 1001,
          "column": 13
        },
        "end": {
          "row": 1001,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Path",
        "start": {
          "row": 1001,
          "column": 13
        },
        "end": {
          "row": 1001,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1001,
          "column": 13
        },
        "end": {
          "row": 1001,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1001,
          "column": 23
        },
        "end": {
          "row": 1001,
          "column": 27
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1001,
          "column": 28
        },
        "end": {
          "row": 1001,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Path",
        "start": {
          "row": 1001,
          "column": 35
        },
        "end": {
          "row": 1001,
          "column": 55
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1001,
          "column": 35
        },
        "end": {
          "row": 1001,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1001,
          "column": 51
        },
        "end": {
          "row": 1001,
          "column": 55
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::AddrOf(..) => ExprPrecedence::AddrOf,",
        "start": {
          "row": 1002,
          "column": 13
        },
        "end": {
          "row": 1002,
          "column": 60
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::AddrOf(..)",
        "start": {
          "row": 1002,
          "column": 13
        },
        "end": {
          "row": 1002,
          "column": 33
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::AddrOf(..)",
        "start": {
          "row": 1002,
          "column": 13
        },
        "end": {
          "row": 1002,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::AddrOf",
        "start": {
          "row": 1002,
          "column": 13
        },
        "end": {
          "row": 1002,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1002,
          "column": 13
        },
        "end": {
          "row": 1002,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "AddrOf",
        "start": {
          "row": 1002,
          "column": 23
        },
        "end": {
          "row": 1002,
          "column": 29
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1002,
          "column": 30
        },
        "end": {
          "row": 1002,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::AddrOf",
        "start": {
          "row": 1002,
          "column": 37
        },
        "end": {
          "row": 1002,
          "column": 59
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1002,
          "column": 37
        },
        "end": {
          "row": 1002,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "AddrOf",
        "start": {
          "row": 1002,
          "column": 53
        },
        "end": {
          "row": 1002,
          "column": 59
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Break(..) => ExprPrecedence::Break,",
        "start": {
          "row": 1003,
          "column": 13
        },
        "end": {
          "row": 1003,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Break(..)",
        "start": {
          "row": 1003,
          "column": 13
        },
        "end": {
          "row": 1003,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Break(..)",
        "start": {
          "row": 1003,
          "column": 13
        },
        "end": {
          "row": 1003,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Break",
        "start": {
          "row": 1003,
          "column": 13
        },
        "end": {
          "row": 1003,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1003,
          "column": 13
        },
        "end": {
          "row": 1003,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Break",
        "start": {
          "row": 1003,
          "column": 23
        },
        "end": {
          "row": 1003,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1003,
          "column": 29
        },
        "end": {
          "row": 1003,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Break",
        "start": {
          "row": 1003,
          "column": 36
        },
        "end": {
          "row": 1003,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1003,
          "column": 36
        },
        "end": {
          "row": 1003,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Break",
        "start": {
          "row": 1003,
          "column": 52
        },
        "end": {
          "row": 1003,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Continue(..) => ExprPrecedence::Continue,",
        "start": {
          "row": 1004,
          "column": 13
        },
        "end": {
          "row": 1004,
          "column": 64
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Continue(..)",
        "start": {
          "row": 1004,
          "column": 13
        },
        "end": {
          "row": 1004,
          "column": 35
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Continue(..)",
        "start": {
          "row": 1004,
          "column": 13
        },
        "end": {
          "row": 1004,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Continue",
        "start": {
          "row": 1004,
          "column": 13
        },
        "end": {
          "row": 1004,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1004,
          "column": 13
        },
        "end": {
          "row": 1004,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Continue",
        "start": {
          "row": 1004,
          "column": 23
        },
        "end": {
          "row": 1004,
          "column": 31
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1004,
          "column": 32
        },
        "end": {
          "row": 1004,
          "column": 34
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Continue",
        "start": {
          "row": 1004,
          "column": 39
        },
        "end": {
          "row": 1004,
          "column": 63
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1004,
          "column": 39
        },
        "end": {
          "row": 1004,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Continue",
        "start": {
          "row": 1004,
          "column": 55
        },
        "end": {
          "row": 1004,
          "column": 63
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Ret(..) => ExprPrecedence::Ret,",
        "start": {
          "row": 1005,
          "column": 13
        },
        "end": {
          "row": 1005,
          "column": 54
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Ret(..)",
        "start": {
          "row": 1005,
          "column": 13
        },
        "end": {
          "row": 1005,
          "column": 30
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Ret(..)",
        "start": {
          "row": 1005,
          "column": 13
        },
        "end": {
          "row": 1005,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Ret",
        "start": {
          "row": 1005,
          "column": 13
        },
        "end": {
          "row": 1005,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1005,
          "column": 13
        },
        "end": {
          "row": 1005,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ret",
        "start": {
          "row": 1005,
          "column": 23
        },
        "end": {
          "row": 1005,
          "column": 26
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1005,
          "column": 27
        },
        "end": {
          "row": 1005,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Ret",
        "start": {
          "row": 1005,
          "column": 34
        },
        "end": {
          "row": 1005,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1005,
          "column": 34
        },
        "end": {
          "row": 1005,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ret",
        "start": {
          "row": 1005,
          "column": 50
        },
        "end": {
          "row": 1005,
          "column": 53
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::InlineAsm(..) => ExprPrecedence::InlineAsm,",
        "start": {
          "row": 1006,
          "column": 13
        },
        "end": {
          "row": 1006,
          "column": 66
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::InlineAsm(..)",
        "start": {
          "row": 1006,
          "column": 13
        },
        "end": {
          "row": 1006,
          "column": 36
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::InlineAsm(..)",
        "start": {
          "row": 1006,
          "column": 13
        },
        "end": {
          "row": 1006,
          "column": 36
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::InlineAsm",
        "start": {
          "row": 1006,
          "column": 13
        },
        "end": {
          "row": 1006,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1006,
          "column": 13
        },
        "end": {
          "row": 1006,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "InlineAsm",
        "start": {
          "row": 1006,
          "column": 23
        },
        "end": {
          "row": 1006,
          "column": 32
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1006,
          "column": 33
        },
        "end": {
          "row": 1006,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::InlineAsm",
        "start": {
          "row": 1006,
          "column": 40
        },
        "end": {
          "row": 1006,
          "column": 65
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1006,
          "column": 40
        },
        "end": {
          "row": 1006,
          "column": 54
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "InlineAsm",
        "start": {
          "row": 1006,
          "column": 56
        },
        "end": {
          "row": 1006,
          "column": 65
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Mac(..) => ExprPrecedence::Mac,",
        "start": {
          "row": 1007,
          "column": 13
        },
        "end": {
          "row": 1007,
          "column": 54
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Mac(..)",
        "start": {
          "row": 1007,
          "column": 13
        },
        "end": {
          "row": 1007,
          "column": 30
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Mac(..)",
        "start": {
          "row": 1007,
          "column": 13
        },
        "end": {
          "row": 1007,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Mac",
        "start": {
          "row": 1007,
          "column": 13
        },
        "end": {
          "row": 1007,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1007,
          "column": 13
        },
        "end": {
          "row": 1007,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 1007,
          "column": 23
        },
        "end": {
          "row": 1007,
          "column": 26
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1007,
          "column": 27
        },
        "end": {
          "row": 1007,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Mac",
        "start": {
          "row": 1007,
          "column": 34
        },
        "end": {
          "row": 1007,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1007,
          "column": 34
        },
        "end": {
          "row": 1007,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 1007,
          "column": 50
        },
        "end": {
          "row": 1007,
          "column": 53
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Struct(..) => ExprPrecedence::Struct,",
        "start": {
          "row": 1008,
          "column": 13
        },
        "end": {
          "row": 1008,
          "column": 60
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Struct(..)",
        "start": {
          "row": 1008,
          "column": 13
        },
        "end": {
          "row": 1008,
          "column": 33
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Struct(..)",
        "start": {
          "row": 1008,
          "column": 13
        },
        "end": {
          "row": 1008,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Struct",
        "start": {
          "row": 1008,
          "column": 13
        },
        "end": {
          "row": 1008,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1008,
          "column": 13
        },
        "end": {
          "row": 1008,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Struct",
        "start": {
          "row": 1008,
          "column": 23
        },
        "end": {
          "row": 1008,
          "column": 29
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1008,
          "column": 30
        },
        "end": {
          "row": 1008,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Struct",
        "start": {
          "row": 1008,
          "column": 37
        },
        "end": {
          "row": 1008,
          "column": 59
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1008,
          "column": 37
        },
        "end": {
          "row": 1008,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Struct",
        "start": {
          "row": 1008,
          "column": 53
        },
        "end": {
          "row": 1008,
          "column": 59
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Repeat(..) => ExprPrecedence::Repeat,",
        "start": {
          "row": 1009,
          "column": 13
        },
        "end": {
          "row": 1009,
          "column": 60
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Repeat(..)",
        "start": {
          "row": 1009,
          "column": 13
        },
        "end": {
          "row": 1009,
          "column": 33
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Repeat(..)",
        "start": {
          "row": 1009,
          "column": 13
        },
        "end": {
          "row": 1009,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Repeat",
        "start": {
          "row": 1009,
          "column": 13
        },
        "end": {
          "row": 1009,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1009,
          "column": 13
        },
        "end": {
          "row": 1009,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Repeat",
        "start": {
          "row": 1009,
          "column": 23
        },
        "end": {
          "row": 1009,
          "column": 29
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1009,
          "column": 30
        },
        "end": {
          "row": 1009,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Repeat",
        "start": {
          "row": 1009,
          "column": 37
        },
        "end": {
          "row": 1009,
          "column": 59
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1009,
          "column": 37
        },
        "end": {
          "row": 1009,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Repeat",
        "start": {
          "row": 1009,
          "column": 53
        },
        "end": {
          "row": 1009,
          "column": 59
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Paren(..) => ExprPrecedence::Paren,",
        "start": {
          "row": 1010,
          "column": 13
        },
        "end": {
          "row": 1010,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Paren(..)",
        "start": {
          "row": 1010,
          "column": 13
        },
        "end": {
          "row": 1010,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Paren(..)",
        "start": {
          "row": 1010,
          "column": 13
        },
        "end": {
          "row": 1010,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Paren",
        "start": {
          "row": 1010,
          "column": 13
        },
        "end": {
          "row": 1010,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1010,
          "column": 13
        },
        "end": {
          "row": 1010,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Paren",
        "start": {
          "row": 1010,
          "column": 23
        },
        "end": {
          "row": 1010,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1010,
          "column": 29
        },
        "end": {
          "row": 1010,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Paren",
        "start": {
          "row": 1010,
          "column": 36
        },
        "end": {
          "row": 1010,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1010,
          "column": 36
        },
        "end": {
          "row": 1010,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Paren",
        "start": {
          "row": 1010,
          "column": 52
        },
        "end": {
          "row": 1010,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Try(..) => ExprPrecedence::Try,",
        "start": {
          "row": 1011,
          "column": 13
        },
        "end": {
          "row": 1011,
          "column": 54
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Try(..)",
        "start": {
          "row": 1011,
          "column": 13
        },
        "end": {
          "row": 1011,
          "column": 30
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Try(..)",
        "start": {
          "row": 1011,
          "column": 13
        },
        "end": {
          "row": 1011,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Try",
        "start": {
          "row": 1011,
          "column": 13
        },
        "end": {
          "row": 1011,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1011,
          "column": 13
        },
        "end": {
          "row": 1011,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Try",
        "start": {
          "row": 1011,
          "column": 23
        },
        "end": {
          "row": 1011,
          "column": 26
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1011,
          "column": 27
        },
        "end": {
          "row": 1011,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Try",
        "start": {
          "row": 1011,
          "column": 34
        },
        "end": {
          "row": 1011,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1011,
          "column": 34
        },
        "end": {
          "row": 1011,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Try",
        "start": {
          "row": 1011,
          "column": 50
        },
        "end": {
          "row": 1011,
          "column": 53
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ExprKind::Yield(..) => ExprPrecedence::Yield,",
        "start": {
          "row": 1012,
          "column": 13
        },
        "end": {
          "row": 1012,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ExprKind::Yield(..)",
        "start": {
          "row": 1012,
          "column": 13
        },
        "end": {
          "row": 1012,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ExprKind::Yield(..)",
        "start": {
          "row": 1012,
          "column": 13
        },
        "end": {
          "row": 1012,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprKind::Yield",
        "start": {
          "row": 1012,
          "column": 13
        },
        "end": {
          "row": 1012,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1012,
          "column": 13
        },
        "end": {
          "row": 1012,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Yield",
        "start": {
          "row": 1012,
          "column": 23
        },
        "end": {
          "row": 1012,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1012,
          "column": 29
        },
        "end": {
          "row": 1012,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ExprPrecedence::Yield",
        "start": {
          "row": 1012,
          "column": 36
        },
        "end": {
          "row": 1012,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExprPrecedence",
        "start": {
          "row": 1012,
          "column": 36
        },
        "end": {
          "row": 1012,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Yield",
        "start": {
          "row": 1012,
          "column": 52
        },
        "end": {
          "row": 1012,
          "column": 57
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Debug for Expr {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"expr({}: {})\", self.id, pprust::expr_to_string(self))\n    }\n}",
        "start": {
          "row": 1017,
          "column": 1
        },
        "end": {
          "row": 1021,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Debug",
        "start": {
          "row": 1017,
          "column": 6
        },
        "end": {
          "row": 1017,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1017,
          "column": 6
        },
        "end": {
          "row": 1017,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1017,
          "column": 11
        },
        "end": {
          "row": 1017,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1017,
          "column": 21
        },
        "end": {
          "row": 1017,
          "column": 25
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"expr({}: {})\", self.id, pprust::expr_to_string(self))\n    }\n}",
        "start": {
          "row": 1017,
          "column": 26
        },
        "end": {
          "row": 1021,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"expr({}: {})\", self.id, pprust::expr_to_string(self))\n    }",
        "start": {
          "row": 1018,
          "column": 5
        },
        "end": {
          "row": 1020,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1018,
          "column": 8
        },
        "end": {
          "row": 1018,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 1018,
          "column": 11
        },
        "end": {
          "row": 1018,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1018,
          "column": 12
        },
        "end": {
          "row": 1018,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1018,
          "column": 13
        },
        "end": {
          "row": 1018,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 1018,
          "column": 19
        },
        "end": {
          "row": 1018,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1018,
          "column": 19
        },
        "end": {
          "row": 1018,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 1018,
          "column": 22
        },
        "end": {
          "row": 1018,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 1018,
          "column": 23
        },
        "end": {
          "row": 1018,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 1018,
          "column": 27
        },
        "end": {
          "row": 1018,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1018,
          "column": 27
        },
        "end": {
          "row": 1018,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 1018,
          "column": 32
        },
        "end": {
          "row": 1018,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 1018,
          "column": 46
        },
        "end": {
          "row": 1018,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1018,
          "column": 46
        },
        "end": {
          "row": 1018,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 1018,
          "column": 51
        },
        "end": {
          "row": 1018,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        write!(f, \"expr({}: {})\", self.id, pprust::expr_to_string(self))\n    }",
        "start": {
          "row": 1018,
          "column": 58
        },
        "end": {
          "row": 1020,
          "column": 6
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "write!(f, \"expr({}: {})\", self.id, pprust::expr_to_string(self))",
        "start": {
          "row": 1019,
          "column": 9
        },
        "end": {
          "row": 1019,
          "column": 73
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "write",
        "start": {
          "row": 1019,
          "column": 9
        },
        "end": {
          "row": 1019,
          "column": 14
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(f, \"expr({}: {})\", self.id, pprust::expr_to_string(self))",
        "start": {
          "row": 1019,
          "column": 15
        },
        "end": {
          "row": 1019,
          "column": 73
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1019,
          "column": 16
        },
        "end": {
          "row": 1019,
          "column": 17
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"expr({}: {})\"",
        "start": {
          "row": 1019,
          "column": 19
        },
        "end": {
          "row": 1019,
          "column": 33
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1019,
          "column": 35
        },
        "end": {
          "row": 1019,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1019,
          "column": 40
        },
        "end": {
          "row": 1019,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pprust",
        "start": {
          "row": 1019,
          "column": 44
        },
        "end": {
          "row": 1019,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "expr_to_string",
        "start": {
          "row": 1019,
          "column": 52
        },
        "end": {
          "row": 1019,
          "column": 66
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 1019,
          "column": 66
        },
        "end": {
          "row": 1019,
          "column": 72
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1019,
          "column": 67
        },
        "end": {
          "row": 1019,
          "column": 71
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Limit types of a range (inclusive or exclusive)",
        "start": {
          "row": 1023,
          "column": 1
        },
        "end": {
          "row": 1023,
          "column": 52
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1024,
          "column": 1
        },
        "end": {
          "row": 1024,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1024,
          "column": 3
        },
        "end": {
          "row": 1024,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1024,
          "column": 3
        },
        "end": {
          "row": 1024,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1024,
          "column": 9
        },
        "end": {
          "row": 1024,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1024,
          "column": 10
        },
        "end": {
          "row": 1024,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1024,
          "column": 10
        },
        "end": {
          "row": 1024,
          "column": 14
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1024,
          "column": 16
        },
        "end": {
          "row": 1024,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1024,
          "column": 16
        },
        "end": {
          "row": 1024,
          "column": 21
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1024,
          "column": 23
        },
        "end": {
          "row": 1024,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1024,
          "column": 23
        },
        "end": {
          "row": 1024,
          "column": 32
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1024,
          "column": 34
        },
        "end": {
          "row": 1024,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1024,
          "column": 34
        },
        "end": {
          "row": 1024,
          "column": 36
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1024,
          "column": 38
        },
        "end": {
          "row": 1024,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1024,
          "column": 38
        },
        "end": {
          "row": 1024,
          "column": 52
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1024,
          "column": 54
        },
        "end": {
          "row": 1024,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1024,
          "column": 54
        },
        "end": {
          "row": 1024,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1024,
          "column": 70
        },
        "end": {
          "row": 1024,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1024,
          "column": 70
        },
        "end": {
          "row": 1024,
          "column": 74
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1024,
          "column": 76
        },
        "end": {
          "row": 1024,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1024,
          "column": 76
        },
        "end": {
          "row": 1024,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum RangeLimits {\n    /// Inclusive at the beginning, exclusive at the end\n    HalfOpen,\n    /// Inclusive at the beginning and end\n    Closed,\n}",
        "start": {
          "row": 1025,
          "column": 1
        },
        "end": {
          "row": 1030,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1025,
          "column": 1
        },
        "end": {
          "row": 1025,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "RangeLimits",
        "start": {
          "row": 1025,
          "column": 10
        },
        "end": {
          "row": 1025,
          "column": 21
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// Inclusive at the beginning, exclusive at the end\n    HalfOpen,\n    /// Inclusive at the beginning and end\n    Closed,\n}",
        "start": {
          "row": 1025,
          "column": 22
        },
        "end": {
          "row": 1030,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Inclusive at the beginning, exclusive at the end",
        "start": {
          "row": 1026,
          "column": 5
        },
        "end": {
          "row": 1026,
          "column": 57
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "HalfOpen",
        "start": {
          "row": 1027,
          "column": 5
        },
        "end": {
          "row": 1027,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "HalfOpen",
        "start": {
          "row": 1027,
          "column": 5
        },
        "end": {
          "row": 1027,
          "column": 13
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Inclusive at the beginning and end",
        "start": {
          "row": 1028,
          "column": 5
        },
        "end": {
          "row": 1028,
          "column": 43
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Closed",
        "start": {
          "row": 1029,
          "column": 5
        },
        "end": {
          "row": 1029,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Closed",
        "start": {
          "row": 1029,
          "column": 5
        },
        "end": {
          "row": 1029,
          "column": 11
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1032,
          "column": 1
        },
        "end": {
          "row": 1032,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1032,
          "column": 3
        },
        "end": {
          "row": 1032,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1032,
          "column": 3
        },
        "end": {
          "row": 1032,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1032,
          "column": 9
        },
        "end": {
          "row": 1032,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1032,
          "column": 10
        },
        "end": {
          "row": 1032,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1032,
          "column": 10
        },
        "end": {
          "row": 1032,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1032,
          "column": 17
        },
        "end": {
          "row": 1032,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1032,
          "column": 17
        },
        "end": {
          "row": 1032,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1032,
          "column": 28
        },
        "end": {
          "row": 1032,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1032,
          "column": 28
        },
        "end": {
          "row": 1032,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1032,
          "column": 32
        },
        "end": {
          "row": 1032,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1032,
          "column": 32
        },
        "end": {
          "row": 1032,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1032,
          "column": 48
        },
        "end": {
          "row": 1032,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1032,
          "column": 48
        },
        "end": {
          "row": 1032,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1032,
          "column": 64
        },
        "end": {
          "row": 1032,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1032,
          "column": 64
        },
        "end": {
          "row": 1032,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1032,
          "column": 70
        },
        "end": {
          "row": 1032,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1032,
          "column": 70
        },
        "end": {
          "row": 1032,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum ExprKind {\n    /// A `box x` expression.\n    Box(P<Expr>),\n    /// First expr is the place; second expr is the value.\n    InPlace(P<Expr>, P<Expr>),\n    /// An array (`[a, b, c, d]`)\n    Array(Vec<P<Expr>>),\n    /// A function call\n    ///\n    /// The first field resolves to the function itself,\n    /// and the second field is the list of arguments.\n    /// This also represents calling the constructor of\n    /// tuple-like ADTs such as tuple structs and enum variants.\n    Call(P<Expr>, Vec<P<Expr>>),\n    /// A method call (`x.foo::<'static, Bar, Baz>(a, b, c, d)`)\n    ///\n    /// The `PathSegment` represents the method name and its generic arguments\n    /// (within the angle brackets).\n    /// The first element of the vector of `Expr`s is the expression that evaluates\n    /// to the object on which the method is being called on (the receiver),\n    /// and the remaining elements are the rest of the arguments.\n    /// Thus, `x.foo::<Bar, Baz>(a, b, c, d)` is represented as\n    /// `ExprKind::MethodCall(PathSegment { foo, [Bar, Baz] }, [x, a, b, c, d])`.\n    MethodCall(PathSegment, Vec<P<Expr>>),\n    /// A tuple (`(a, b, c ,d)`)\n    Tup(Vec<P<Expr>>),\n    /// A binary operation (For example: `a + b`, `a * b`)\n    Binary(BinOp, P<Expr>, P<Expr>),\n    /// A unary operation (For example: `!x`, `*x`)\n    Unary(UnOp, P<Expr>),\n    /// A literal (For example: `1`, `\"foo\"`)\n    Lit(P<Lit>),\n    /// A cast (`foo as f64`)\n    Cast(P<Expr>, P<Ty>),\n    Type(P<Expr>, P<Ty>),\n    /// An `if` block, with an optional else block\n    ///\n    /// `if expr { block } else { expr }`\n    If(P<Expr>, P<Block>, Option<P<Expr>>),\n    /// An `if let` expression with an optional else block\n    ///\n    /// `if let pat = expr { block } else { expr }`\n    ///\n    /// This is desugared to a `match` expression.\n    IfLet(P<Pat>, P<Expr>, P<Block>, Option<P<Expr>>),\n    /// A while loop, with an optional label\n    ///\n    /// `'label: while expr { block }`\n    While(P<Expr>, P<Block>, Option<SpannedIdent>),\n    /// A while-let loop, with an optional label\n    ///\n    /// `'label: while let pat = expr { block }`\n    ///\n    /// This is desugared to a combination of `loop` and `match` expressions.\n    WhileLet(P<Pat>, P<Expr>, P<Block>, Option<SpannedIdent>),\n    /// A for loop, with an optional label\n    ///\n    /// `'label: for pat in expr { block }`\n    ///\n    /// This is desugared to a combination of `loop` and `match` expressions.\n    ForLoop(P<Pat>, P<Expr>, P<Block>, Option<SpannedIdent>),\n    /// Conditionless loop (can be exited with break, continue, or return)\n    ///\n    /// `'label: loop { block }`\n    Loop(P<Block>, Option<SpannedIdent>),\n    /// A `match` block.\n    Match(P<Expr>, Vec<Arm>),\n    /// A closure (for example, `move |a, b, c| a + b + c`)\n    ///\n    /// The final span is the span of the argument block `|...|`\n    Closure(CaptureBy, P<FnDecl>, P<Expr>, Span),\n    /// A block (`{ ... }`)\n    Block(P<Block>),\n    /// A catch block (`catch { ... }`)\n    Catch(P<Block>),\n\n    /// An assignment (`a = foo()`)\n    Assign(P<Expr>, P<Expr>),\n    /// An assignment with an operator\n    ///\n    /// For example, `a += 1`.\n    AssignOp(BinOp, P<Expr>, P<Expr>),\n    /// Access of a named struct field (`obj.foo`)\n    Field(P<Expr>, SpannedIdent),\n    /// Access of an unnamed field of a struct or tuple-struct\n    ///\n    /// For example, `foo.0`.\n    TupField(P<Expr>, Spanned<usize>),\n    /// An indexing operation (`foo[2]`)\n    Index(P<Expr>, P<Expr>),\n    /// A range (`1..2`, `1..`, `..2`, `1...2`, `1...`, `...2`)\n    Range(Option<P<Expr>>, Option<P<Expr>>, RangeLimits),\n\n    /// Variable reference, possibly containing `::` and/or type\n    /// parameters, e.g. foo::bar::<baz>.\n    ///\n    /// Optionally \"qualified\",\n    /// E.g. `<Vec<T> as SomeTrait>::SomeType`.\n    Path(Option<QSelf>, Path),\n\n    /// A referencing operation (`&a` or `&mut a`)\n    AddrOf(Mutability, P<Expr>),\n    /// A `break`, with an optional label to break, and an optional expression\n    Break(Option<SpannedIdent>, Option<P<Expr>>),\n    /// A `continue`, with an optional label\n    Continue(Option<SpannedIdent>),\n    /// A `return`, with an optional value to be returned\n    Ret(Option<P<Expr>>),\n\n    /// Output of the `asm!()` macro\n    InlineAsm(P<InlineAsm>),\n\n    /// A macro invocation; pre-expansion\n    Mac(Mac),\n\n    /// A struct literal expression.\n    ///\n    /// For example, `Foo {x: 1, y: 2}`, or\n    /// `Foo {x: 1, .. base}`, where `base` is the `Option<Expr>`.\n    Struct(Path, Vec<Field>, Option<P<Expr>>),\n\n    /// An array literal constructed from one repeated element.\n    ///\n    /// For example, `[1; 5]`. The first expression is the element\n    /// to be repeated; the second is the number of times to repeat it.\n    Repeat(P<Expr>, P<Expr>),\n\n    /// No-op: used solely so we can pretty-print faithfully\n    Paren(P<Expr>),\n\n    /// `expr?`\n    Try(P<Expr>),\n\n    /// A `yield`, with an optional value to be yielded\n    Yield(Option<P<Expr>>),\n}",
        "start": {
          "row": 1033,
          "column": 1
        },
        "end": {
          "row": 1168,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1033,
          "column": 1
        },
        "end": {
          "row": 1033,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ExprKind",
        "start": {
          "row": 1033,
          "column": 10
        },
        "end": {
          "row": 1033,
          "column": 18
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// A `box x` expression.\n    Box(P<Expr>),\n    /// First expr is the place; second expr is the value.\n    InPlace(P<Expr>, P<Expr>),\n    /// An array (`[a, b, c, d]`)\n    Array(Vec<P<Expr>>),\n    /// A function call\n    ///\n    /// The first field resolves to the function itself,\n    /// and the second field is the list of arguments.\n    /// This also represents calling the constructor of\n    /// tuple-like ADTs such as tuple structs and enum variants.\n    Call(P<Expr>, Vec<P<Expr>>),\n    /// A method call (`x.foo::<'static, Bar, Baz>(a, b, c, d)`)\n    ///\n    /// The `PathSegment` represents the method name and its generic arguments\n    /// (within the angle brackets).\n    /// The first element of the vector of `Expr`s is the expression that evaluates\n    /// to the object on which the method is being called on (the receiver),\n    /// and the remaining elements are the rest of the arguments.\n    /// Thus, `x.foo::<Bar, Baz>(a, b, c, d)` is represented as\n    /// `ExprKind::MethodCall(PathSegment { foo, [Bar, Baz] }, [x, a, b, c, d])`.\n    MethodCall(PathSegment, Vec<P<Expr>>),\n    /// A tuple (`(a, b, c ,d)`)\n    Tup(Vec<P<Expr>>),\n    /// A binary operation (For example: `a + b`, `a * b`)\n    Binary(BinOp, P<Expr>, P<Expr>),\n    /// A unary operation (For example: `!x`, `*x`)\n    Unary(UnOp, P<Expr>),\n    /// A literal (For example: `1`, `\"foo\"`)\n    Lit(P<Lit>),\n    /// A cast (`foo as f64`)\n    Cast(P<Expr>, P<Ty>),\n    Type(P<Expr>, P<Ty>),\n    /// An `if` block, with an optional else block\n    ///\n    /// `if expr { block } else { expr }`\n    If(P<Expr>, P<Block>, Option<P<Expr>>),\n    /// An `if let` expression with an optional else block\n    ///\n    /// `if let pat = expr { block } else { expr }`\n    ///\n    /// This is desugared to a `match` expression.\n    IfLet(P<Pat>, P<Expr>, P<Block>, Option<P<Expr>>),\n    /// A while loop, with an optional label\n    ///\n    /// `'label: while expr { block }`\n    While(P<Expr>, P<Block>, Option<SpannedIdent>),\n    /// A while-let loop, with an optional label\n    ///\n    /// `'label: while let pat = expr { block }`\n    ///\n    /// This is desugared to a combination of `loop` and `match` expressions.\n    WhileLet(P<Pat>, P<Expr>, P<Block>, Option<SpannedIdent>),\n    /// A for loop, with an optional label\n    ///\n    /// `'label: for pat in expr { block }`\n    ///\n    /// This is desugared to a combination of `loop` and `match` expressions.\n    ForLoop(P<Pat>, P<Expr>, P<Block>, Option<SpannedIdent>),\n    /// Conditionless loop (can be exited with break, continue, or return)\n    ///\n    /// `'label: loop { block }`\n    Loop(P<Block>, Option<SpannedIdent>),\n    /// A `match` block.\n    Match(P<Expr>, Vec<Arm>),\n    /// A closure (for example, `move |a, b, c| a + b + c`)\n    ///\n    /// The final span is the span of the argument block `|...|`\n    Closure(CaptureBy, P<FnDecl>, P<Expr>, Span),\n    /// A block (`{ ... }`)\n    Block(P<Block>),\n    /// A catch block (`catch { ... }`)\n    Catch(P<Block>),\n\n    /// An assignment (`a = foo()`)\n    Assign(P<Expr>, P<Expr>),\n    /// An assignment with an operator\n    ///\n    /// For example, `a += 1`.\n    AssignOp(BinOp, P<Expr>, P<Expr>),\n    /// Access of a named struct field (`obj.foo`)\n    Field(P<Expr>, SpannedIdent),\n    /// Access of an unnamed field of a struct or tuple-struct\n    ///\n    /// For example, `foo.0`.\n    TupField(P<Expr>, Spanned<usize>),\n    /// An indexing operation (`foo[2]`)\n    Index(P<Expr>, P<Expr>),\n    /// A range (`1..2`, `1..`, `..2`, `1...2`, `1...`, `...2`)\n    Range(Option<P<Expr>>, Option<P<Expr>>, RangeLimits),\n\n    /// Variable reference, possibly containing `::` and/or type\n    /// parameters, e.g. foo::bar::<baz>.\n    ///\n    /// Optionally \"qualified\",\n    /// E.g. `<Vec<T> as SomeTrait>::SomeType`.\n    Path(Option<QSelf>, Path),\n\n    /// A referencing operation (`&a` or `&mut a`)\n    AddrOf(Mutability, P<Expr>),\n    /// A `break`, with an optional label to break, and an optional expression\n    Break(Option<SpannedIdent>, Option<P<Expr>>),\n    /// A `continue`, with an optional label\n    Continue(Option<SpannedIdent>),\n    /// A `return`, with an optional value to be returned\n    Ret(Option<P<Expr>>),\n\n    /// Output of the `asm!()` macro\n    InlineAsm(P<InlineAsm>),\n\n    /// A macro invocation; pre-expansion\n    Mac(Mac),\n\n    /// A struct literal expression.\n    ///\n    /// For example, `Foo {x: 1, y: 2}`, or\n    /// `Foo {x: 1, .. base}`, where `base` is the `Option<Expr>`.\n    Struct(Path, Vec<Field>, Option<P<Expr>>),\n\n    /// An array literal constructed from one repeated element.\n    ///\n    /// For example, `[1; 5]`. The first expression is the element\n    /// to be repeated; the second is the number of times to repeat it.\n    Repeat(P<Expr>, P<Expr>),\n\n    /// No-op: used solely so we can pretty-print faithfully\n    Paren(P<Expr>),\n\n    /// `expr?`\n    Try(P<Expr>),\n\n    /// A `yield`, with an optional value to be yielded\n    Yield(Option<P<Expr>>),\n}",
        "start": {
          "row": 1033,
          "column": 19
        },
        "end": {
          "row": 1168,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A `box x` expression.",
        "start": {
          "row": 1034,
          "column": 5
        },
        "end": {
          "row": 1034,
          "column": 30
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Box(P<Expr>)",
        "start": {
          "row": 1035,
          "column": 5
        },
        "end": {
          "row": 1035,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Box",
        "start": {
          "row": 1035,
          "column": 5
        },
        "end": {
          "row": 1035,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>)",
        "start": {
          "row": 1035,
          "column": 8
        },
        "end": {
          "row": 1035,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1035,
          "column": 9
        },
        "end": {
          "row": 1035,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1035,
          "column": 9
        },
        "end": {
          "row": 1035,
          "column": 10
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1035,
          "column": 10
        },
        "end": {
          "row": 1035,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1035,
          "column": 11
        },
        "end": {
          "row": 1035,
          "column": 15
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// First expr is the place; second expr is the value.",
        "start": {
          "row": 1036,
          "column": 5
        },
        "end": {
          "row": 1036,
          "column": 59
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "InPlace(P<Expr>, P<Expr>)",
        "start": {
          "row": 1037,
          "column": 5
        },
        "end": {
          "row": 1037,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "InPlace",
        "start": {
          "row": 1037,
          "column": 5
        },
        "end": {
          "row": 1037,
          "column": 12
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, P<Expr>)",
        "start": {
          "row": 1037,
          "column": 12
        },
        "end": {
          "row": 1037,
          "column": 30
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1037,
          "column": 13
        },
        "end": {
          "row": 1037,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1037,
          "column": 13
        },
        "end": {
          "row": 1037,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1037,
          "column": 14
        },
        "end": {
          "row": 1037,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1037,
          "column": 15
        },
        "end": {
          "row": 1037,
          "column": 19
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1037,
          "column": 22
        },
        "end": {
          "row": 1037,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1037,
          "column": 22
        },
        "end": {
          "row": 1037,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1037,
          "column": 23
        },
        "end": {
          "row": 1037,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1037,
          "column": 24
        },
        "end": {
          "row": 1037,
          "column": 28
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An array (`[a, b, c, d]`)",
        "start": {
          "row": 1038,
          "column": 5
        },
        "end": {
          "row": 1038,
          "column": 34
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Array(Vec<P<Expr>>)",
        "start": {
          "row": 1039,
          "column": 5
        },
        "end": {
          "row": 1039,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Array",
        "start": {
          "row": 1039,
          "column": 5
        },
        "end": {
          "row": 1039,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Vec<P<Expr>>)",
        "start": {
          "row": 1039,
          "column": 10
        },
        "end": {
          "row": 1039,
          "column": 24
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Expr>>",
        "start": {
          "row": 1039,
          "column": 11
        },
        "end": {
          "row": 1039,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1039,
          "column": 11
        },
        "end": {
          "row": 1039,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1039,
          "column": 14
        },
        "end": {
          "row": 1039,
          "column": 23
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1039,
          "column": 15
        },
        "end": {
          "row": 1039,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1039,
          "column": 15
        },
        "end": {
          "row": 1039,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1039,
          "column": 16
        },
        "end": {
          "row": 1039,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1039,
          "column": 17
        },
        "end": {
          "row": 1039,
          "column": 21
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A function call",
        "start": {
          "row": 1040,
          "column": 5
        },
        "end": {
          "row": 1040,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1041,
          "column": 5
        },
        "end": {
          "row": 1041,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The first field resolves to the function itself,",
        "start": {
          "row": 1042,
          "column": 5
        },
        "end": {
          "row": 1042,
          "column": 57
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// and the second field is the list of arguments.",
        "start": {
          "row": 1043,
          "column": 5
        },
        "end": {
          "row": 1043,
          "column": 55
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// This also represents calling the constructor of",
        "start": {
          "row": 1044,
          "column": 5
        },
        "end": {
          "row": 1044,
          "column": 56
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// tuple-like ADTs such as tuple structs and enum variants.",
        "start": {
          "row": 1045,
          "column": 5
        },
        "end": {
          "row": 1045,
          "column": 65
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Call(P<Expr>, Vec<P<Expr>>)",
        "start": {
          "row": 1046,
          "column": 5
        },
        "end": {
          "row": 1046,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Call",
        "start": {
          "row": 1046,
          "column": 5
        },
        "end": {
          "row": 1046,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, Vec<P<Expr>>)",
        "start": {
          "row": 1046,
          "column": 9
        },
        "end": {
          "row": 1046,
          "column": 32
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1046,
          "column": 10
        },
        "end": {
          "row": 1046,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1046,
          "column": 10
        },
        "end": {
          "row": 1046,
          "column": 11
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1046,
          "column": 11
        },
        "end": {
          "row": 1046,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1046,
          "column": 12
        },
        "end": {
          "row": 1046,
          "column": 16
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Expr>>",
        "start": {
          "row": 1046,
          "column": 19
        },
        "end": {
          "row": 1046,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1046,
          "column": 19
        },
        "end": {
          "row": 1046,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1046,
          "column": 22
        },
        "end": {
          "row": 1046,
          "column": 31
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1046,
          "column": 23
        },
        "end": {
          "row": 1046,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1046,
          "column": 23
        },
        "end": {
          "row": 1046,
          "column": 24
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1046,
          "column": 24
        },
        "end": {
          "row": 1046,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1046,
          "column": 25
        },
        "end": {
          "row": 1046,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A method call (`x.foo::<'static, Bar, Baz>(a, b, c, d)`)",
        "start": {
          "row": 1047,
          "column": 5
        },
        "end": {
          "row": 1047,
          "column": 65
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1048,
          "column": 5
        },
        "end": {
          "row": 1048,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `PathSegment` represents the method name and its generic arguments",
        "start": {
          "row": 1049,
          "column": 5
        },
        "end": {
          "row": 1049,
          "column": 79
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// (within the angle brackets).",
        "start": {
          "row": 1050,
          "column": 5
        },
        "end": {
          "row": 1050,
          "column": 37
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The first element of the vector of `Expr`s is the expression that evaluates",
        "start": {
          "row": 1051,
          "column": 5
        },
        "end": {
          "row": 1051,
          "column": 84
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// to the object on which the method is being called on (the receiver),",
        "start": {
          "row": 1052,
          "column": 5
        },
        "end": {
          "row": 1052,
          "column": 77
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// and the remaining elements are the rest of the arguments.",
        "start": {
          "row": 1053,
          "column": 5
        },
        "end": {
          "row": 1053,
          "column": 66
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Thus, `x.foo::<Bar, Baz>(a, b, c, d)` is represented as",
        "start": {
          "row": 1054,
          "column": 5
        },
        "end": {
          "row": 1054,
          "column": 64
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `ExprKind::MethodCall(PathSegment { foo, [Bar, Baz] }, [x, a, b, c, d])`.",
        "start": {
          "row": 1055,
          "column": 5
        },
        "end": {
          "row": 1055,
          "column": 82
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "MethodCall(PathSegment, Vec<P<Expr>>)",
        "start": {
          "row": 1056,
          "column": 5
        },
        "end": {
          "row": 1056,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "MethodCall",
        "start": {
          "row": 1056,
          "column": 5
        },
        "end": {
          "row": 1056,
          "column": 15
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(PathSegment, Vec<P<Expr>>)",
        "start": {
          "row": 1056,
          "column": 15
        },
        "end": {
          "row": 1056,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PathSegment",
        "start": {
          "row": 1056,
          "column": 16
        },
        "end": {
          "row": 1056,
          "column": 27
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Expr>>",
        "start": {
          "row": 1056,
          "column": 29
        },
        "end": {
          "row": 1056,
          "column": 41
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1056,
          "column": 29
        },
        "end": {
          "row": 1056,
          "column": 32
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1056,
          "column": 32
        },
        "end": {
          "row": 1056,
          "column": 41
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1056,
          "column": 33
        },
        "end": {
          "row": 1056,
          "column": 40
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1056,
          "column": 33
        },
        "end": {
          "row": 1056,
          "column": 34
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1056,
          "column": 34
        },
        "end": {
          "row": 1056,
          "column": 40
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1056,
          "column": 35
        },
        "end": {
          "row": 1056,
          "column": 39
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A tuple (`(a, b, c ,d)`)",
        "start": {
          "row": 1057,
          "column": 5
        },
        "end": {
          "row": 1057,
          "column": 33
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Tup(Vec<P<Expr>>)",
        "start": {
          "row": 1058,
          "column": 5
        },
        "end": {
          "row": 1058,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tup",
        "start": {
          "row": 1058,
          "column": 5
        },
        "end": {
          "row": 1058,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Vec<P<Expr>>)",
        "start": {
          "row": 1058,
          "column": 8
        },
        "end": {
          "row": 1058,
          "column": 22
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Expr>>",
        "start": {
          "row": 1058,
          "column": 9
        },
        "end": {
          "row": 1058,
          "column": 21
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1058,
          "column": 9
        },
        "end": {
          "row": 1058,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1058,
          "column": 12
        },
        "end": {
          "row": 1058,
          "column": 21
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1058,
          "column": 13
        },
        "end": {
          "row": 1058,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1058,
          "column": 13
        },
        "end": {
          "row": 1058,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1058,
          "column": 14
        },
        "end": {
          "row": 1058,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1058,
          "column": 15
        },
        "end": {
          "row": 1058,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A binary operation (For example: `a + b`, `a * b`)",
        "start": {
          "row": 1059,
          "column": 5
        },
        "end": {
          "row": 1059,
          "column": 59
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Binary(BinOp, P<Expr>, P<Expr>)",
        "start": {
          "row": 1060,
          "column": 5
        },
        "end": {
          "row": 1060,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Binary",
        "start": {
          "row": 1060,
          "column": 5
        },
        "end": {
          "row": 1060,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(BinOp, P<Expr>, P<Expr>)",
        "start": {
          "row": 1060,
          "column": 11
        },
        "end": {
          "row": 1060,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "BinOp",
        "start": {
          "row": 1060,
          "column": 12
        },
        "end": {
          "row": 1060,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1060,
          "column": 19
        },
        "end": {
          "row": 1060,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1060,
          "column": 19
        },
        "end": {
          "row": 1060,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1060,
          "column": 20
        },
        "end": {
          "row": 1060,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1060,
          "column": 21
        },
        "end": {
          "row": 1060,
          "column": 25
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1060,
          "column": 28
        },
        "end": {
          "row": 1060,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1060,
          "column": 28
        },
        "end": {
          "row": 1060,
          "column": 29
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1060,
          "column": 29
        },
        "end": {
          "row": 1060,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1060,
          "column": 30
        },
        "end": {
          "row": 1060,
          "column": 34
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A unary operation (For example: `!x`, `*x`)",
        "start": {
          "row": 1061,
          "column": 5
        },
        "end": {
          "row": 1061,
          "column": 52
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Unary(UnOp, P<Expr>)",
        "start": {
          "row": 1062,
          "column": 5
        },
        "end": {
          "row": 1062,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unary",
        "start": {
          "row": 1062,
          "column": 5
        },
        "end": {
          "row": 1062,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(UnOp, P<Expr>)",
        "start": {
          "row": 1062,
          "column": 10
        },
        "end": {
          "row": 1062,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UnOp",
        "start": {
          "row": 1062,
          "column": 11
        },
        "end": {
          "row": 1062,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1062,
          "column": 17
        },
        "end": {
          "row": 1062,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1062,
          "column": 17
        },
        "end": {
          "row": 1062,
          "column": 18
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1062,
          "column": 18
        },
        "end": {
          "row": 1062,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1062,
          "column": 19
        },
        "end": {
          "row": 1062,
          "column": 23
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A literal (For example: `1`, `\"foo\"`)",
        "start": {
          "row": 1063,
          "column": 5
        },
        "end": {
          "row": 1063,
          "column": 46
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Lit(P<Lit>)",
        "start": {
          "row": 1064,
          "column": 5
        },
        "end": {
          "row": 1064,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Lit",
        "start": {
          "row": 1064,
          "column": 5
        },
        "end": {
          "row": 1064,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Lit>)",
        "start": {
          "row": 1064,
          "column": 8
        },
        "end": {
          "row": 1064,
          "column": 16
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Lit>",
        "start": {
          "row": 1064,
          "column": 9
        },
        "end": {
          "row": 1064,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1064,
          "column": 9
        },
        "end": {
          "row": 1064,
          "column": 10
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Lit>",
        "start": {
          "row": 1064,
          "column": 10
        },
        "end": {
          "row": 1064,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lit",
        "start": {
          "row": 1064,
          "column": 11
        },
        "end": {
          "row": 1064,
          "column": 14
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A cast (`foo as f64`)",
        "start": {
          "row": 1065,
          "column": 5
        },
        "end": {
          "row": 1065,
          "column": 30
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Cast(P<Expr>, P<Ty>)",
        "start": {
          "row": 1066,
          "column": 5
        },
        "end": {
          "row": 1066,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Cast",
        "start": {
          "row": 1066,
          "column": 5
        },
        "end": {
          "row": 1066,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, P<Ty>)",
        "start": {
          "row": 1066,
          "column": 9
        },
        "end": {
          "row": 1066,
          "column": 25
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1066,
          "column": 10
        },
        "end": {
          "row": 1066,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1066,
          "column": 10
        },
        "end": {
          "row": 1066,
          "column": 11
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1066,
          "column": 11
        },
        "end": {
          "row": 1066,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1066,
          "column": 12
        },
        "end": {
          "row": 1066,
          "column": 16
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1066,
          "column": 19
        },
        "end": {
          "row": 1066,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1066,
          "column": 19
        },
        "end": {
          "row": 1066,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1066,
          "column": 20
        },
        "end": {
          "row": 1066,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1066,
          "column": 21
        },
        "end": {
          "row": 1066,
          "column": 23
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Type(P<Expr>, P<Ty>)",
        "start": {
          "row": 1067,
          "column": 5
        },
        "end": {
          "row": 1067,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Type",
        "start": {
          "row": 1067,
          "column": 5
        },
        "end": {
          "row": 1067,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, P<Ty>)",
        "start": {
          "row": 1067,
          "column": 9
        },
        "end": {
          "row": 1067,
          "column": 25
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1067,
          "column": 10
        },
        "end": {
          "row": 1067,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1067,
          "column": 10
        },
        "end": {
          "row": 1067,
          "column": 11
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1067,
          "column": 11
        },
        "end": {
          "row": 1067,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1067,
          "column": 12
        },
        "end": {
          "row": 1067,
          "column": 16
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1067,
          "column": 19
        },
        "end": {
          "row": 1067,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1067,
          "column": 19
        },
        "end": {
          "row": 1067,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1067,
          "column": 20
        },
        "end": {
          "row": 1067,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1067,
          "column": 21
        },
        "end": {
          "row": 1067,
          "column": 23
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An `if` block, with an optional else block",
        "start": {
          "row": 1068,
          "column": 5
        },
        "end": {
          "row": 1068,
          "column": 51
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1069,
          "column": 5
        },
        "end": {
          "row": 1069,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `if expr { block } else { expr }`",
        "start": {
          "row": 1070,
          "column": 5
        },
        "end": {
          "row": 1070,
          "column": 42
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "If(P<Expr>, P<Block>, Option<P<Expr>>)",
        "start": {
          "row": 1071,
          "column": 5
        },
        "end": {
          "row": 1071,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "If",
        "start": {
          "row": 1071,
          "column": 5
        },
        "end": {
          "row": 1071,
          "column": 7
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, P<Block>, Option<P<Expr>>)",
        "start": {
          "row": 1071,
          "column": 7
        },
        "end": {
          "row": 1071,
          "column": 43
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1071,
          "column": 8
        },
        "end": {
          "row": 1071,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1071,
          "column": 8
        },
        "end": {
          "row": 1071,
          "column": 9
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1071,
          "column": 9
        },
        "end": {
          "row": 1071,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1071,
          "column": 10
        },
        "end": {
          "row": 1071,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Block>",
        "start": {
          "row": 1071,
          "column": 17
        },
        "end": {
          "row": 1071,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1071,
          "column": 17
        },
        "end": {
          "row": 1071,
          "column": 18
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Block>",
        "start": {
          "row": 1071,
          "column": 18
        },
        "end": {
          "row": 1071,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 1071,
          "column": 19
        },
        "end": {
          "row": 1071,
          "column": 24
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Expr>>",
        "start": {
          "row": 1071,
          "column": 27
        },
        "end": {
          "row": 1071,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1071,
          "column": 27
        },
        "end": {
          "row": 1071,
          "column": 33
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1071,
          "column": 33
        },
        "end": {
          "row": 1071,
          "column": 42
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1071,
          "column": 34
        },
        "end": {
          "row": 1071,
          "column": 41
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1071,
          "column": 34
        },
        "end": {
          "row": 1071,
          "column": 35
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1071,
          "column": 35
        },
        "end": {
          "row": 1071,
          "column": 41
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1071,
          "column": 36
        },
        "end": {
          "row": 1071,
          "column": 40
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An `if let` expression with an optional else block",
        "start": {
          "row": 1072,
          "column": 5
        },
        "end": {
          "row": 1072,
          "column": 59
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1073,
          "column": 5
        },
        "end": {
          "row": 1073,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `if let pat = expr { block } else { expr }`",
        "start": {
          "row": 1074,
          "column": 5
        },
        "end": {
          "row": 1074,
          "column": 52
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1075,
          "column": 5
        },
        "end": {
          "row": 1075,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// This is desugared to a `match` expression.",
        "start": {
          "row": 1076,
          "column": 5
        },
        "end": {
          "row": 1076,
          "column": 51
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "IfLet(P<Pat>, P<Expr>, P<Block>, Option<P<Expr>>)",
        "start": {
          "row": 1077,
          "column": 5
        },
        "end": {
          "row": 1077,
          "column": 54
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IfLet",
        "start": {
          "row": 1077,
          "column": 5
        },
        "end": {
          "row": 1077,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Pat>, P<Expr>, P<Block>, Option<P<Expr>>)",
        "start": {
          "row": 1077,
          "column": 10
        },
        "end": {
          "row": 1077,
          "column": 54
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 1077,
          "column": 11
        },
        "end": {
          "row": 1077,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1077,
          "column": 11
        },
        "end": {
          "row": 1077,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 1077,
          "column": 12
        },
        "end": {
          "row": 1077,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 1077,
          "column": 13
        },
        "end": {
          "row": 1077,
          "column": 16
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1077,
          "column": 19
        },
        "end": {
          "row": 1077,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1077,
          "column": 19
        },
        "end": {
          "row": 1077,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1077,
          "column": 20
        },
        "end": {
          "row": 1077,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1077,
          "column": 21
        },
        "end": {
          "row": 1077,
          "column": 25
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Block>",
        "start": {
          "row": 1077,
          "column": 28
        },
        "end": {
          "row": 1077,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1077,
          "column": 28
        },
        "end": {
          "row": 1077,
          "column": 29
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Block>",
        "start": {
          "row": 1077,
          "column": 29
        },
        "end": {
          "row": 1077,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 1077,
          "column": 30
        },
        "end": {
          "row": 1077,
          "column": 35
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Expr>>",
        "start": {
          "row": 1077,
          "column": 38
        },
        "end": {
          "row": 1077,
          "column": 53
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1077,
          "column": 38
        },
        "end": {
          "row": 1077,
          "column": 44
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1077,
          "column": 44
        },
        "end": {
          "row": 1077,
          "column": 53
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1077,
          "column": 45
        },
        "end": {
          "row": 1077,
          "column": 52
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1077,
          "column": 45
        },
        "end": {
          "row": 1077,
          "column": 46
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1077,
          "column": 46
        },
        "end": {
          "row": 1077,
          "column": 52
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1077,
          "column": 47
        },
        "end": {
          "row": 1077,
          "column": 51
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A while loop, with an optional label",
        "start": {
          "row": 1078,
          "column": 5
        },
        "end": {
          "row": 1078,
          "column": 45
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1079,
          "column": 5
        },
        "end": {
          "row": 1079,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `'label: while expr { block }`",
        "start": {
          "row": 1080,
          "column": 5
        },
        "end": {
          "row": 1080,
          "column": 39
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "While(P<Expr>, P<Block>, Option<SpannedIdent>)",
        "start": {
          "row": 1081,
          "column": 5
        },
        "end": {
          "row": 1081,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "While",
        "start": {
          "row": 1081,
          "column": 5
        },
        "end": {
          "row": 1081,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, P<Block>, Option<SpannedIdent>)",
        "start": {
          "row": 1081,
          "column": 10
        },
        "end": {
          "row": 1081,
          "column": 51
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1081,
          "column": 11
        },
        "end": {
          "row": 1081,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1081,
          "column": 11
        },
        "end": {
          "row": 1081,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1081,
          "column": 12
        },
        "end": {
          "row": 1081,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1081,
          "column": 13
        },
        "end": {
          "row": 1081,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Block>",
        "start": {
          "row": 1081,
          "column": 20
        },
        "end": {
          "row": 1081,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1081,
          "column": 20
        },
        "end": {
          "row": 1081,
          "column": 21
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Block>",
        "start": {
          "row": 1081,
          "column": 21
        },
        "end": {
          "row": 1081,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 1081,
          "column": 22
        },
        "end": {
          "row": 1081,
          "column": 27
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<SpannedIdent>",
        "start": {
          "row": 1081,
          "column": 30
        },
        "end": {
          "row": 1081,
          "column": 50
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1081,
          "column": 30
        },
        "end": {
          "row": 1081,
          "column": 36
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<SpannedIdent>",
        "start": {
          "row": 1081,
          "column": 36
        },
        "end": {
          "row": 1081,
          "column": 50
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SpannedIdent",
        "start": {
          "row": 1081,
          "column": 37
        },
        "end": {
          "row": 1081,
          "column": 49
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A while-let loop, with an optional label",
        "start": {
          "row": 1082,
          "column": 5
        },
        "end": {
          "row": 1082,
          "column": 49
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1083,
          "column": 5
        },
        "end": {
          "row": 1083,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `'label: while let pat = expr { block }`",
        "start": {
          "row": 1084,
          "column": 5
        },
        "end": {
          "row": 1084,
          "column": 49
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1085,
          "column": 5
        },
        "end": {
          "row": 1085,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// This is desugared to a combination of `loop` and `match` expressions.",
        "start": {
          "row": 1086,
          "column": 5
        },
        "end": {
          "row": 1086,
          "column": 78
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "WhileLet(P<Pat>, P<Expr>, P<Block>, Option<SpannedIdent>)",
        "start": {
          "row": 1087,
          "column": 5
        },
        "end": {
          "row": 1087,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "WhileLet",
        "start": {
          "row": 1087,
          "column": 5
        },
        "end": {
          "row": 1087,
          "column": 13
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Pat>, P<Expr>, P<Block>, Option<SpannedIdent>)",
        "start": {
          "row": 1087,
          "column": 13
        },
        "end": {
          "row": 1087,
          "column": 62
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 1087,
          "column": 14
        },
        "end": {
          "row": 1087,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1087,
          "column": 14
        },
        "end": {
          "row": 1087,
          "column": 15
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 1087,
          "column": 15
        },
        "end": {
          "row": 1087,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 1087,
          "column": 16
        },
        "end": {
          "row": 1087,
          "column": 19
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1087,
          "column": 22
        },
        "end": {
          "row": 1087,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1087,
          "column": 22
        },
        "end": {
          "row": 1087,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1087,
          "column": 23
        },
        "end": {
          "row": 1087,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1087,
          "column": 24
        },
        "end": {
          "row": 1087,
          "column": 28
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Block>",
        "start": {
          "row": 1087,
          "column": 31
        },
        "end": {
          "row": 1087,
          "column": 39
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1087,
          "column": 31
        },
        "end": {
          "row": 1087,
          "column": 32
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Block>",
        "start": {
          "row": 1087,
          "column": 32
        },
        "end": {
          "row": 1087,
          "column": 39
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 1087,
          "column": 33
        },
        "end": {
          "row": 1087,
          "column": 38
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<SpannedIdent>",
        "start": {
          "row": 1087,
          "column": 41
        },
        "end": {
          "row": 1087,
          "column": 61
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1087,
          "column": 41
        },
        "end": {
          "row": 1087,
          "column": 47
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<SpannedIdent>",
        "start": {
          "row": 1087,
          "column": 47
        },
        "end": {
          "row": 1087,
          "column": 61
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SpannedIdent",
        "start": {
          "row": 1087,
          "column": 48
        },
        "end": {
          "row": 1087,
          "column": 60
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A for loop, with an optional label",
        "start": {
          "row": 1088,
          "column": 5
        },
        "end": {
          "row": 1088,
          "column": 43
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1089,
          "column": 5
        },
        "end": {
          "row": 1089,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `'label: for pat in expr { block }`",
        "start": {
          "row": 1090,
          "column": 5
        },
        "end": {
          "row": 1090,
          "column": 44
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1091,
          "column": 5
        },
        "end": {
          "row": 1091,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// This is desugared to a combination of `loop` and `match` expressions.",
        "start": {
          "row": 1092,
          "column": 5
        },
        "end": {
          "row": 1092,
          "column": 78
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "ForLoop(P<Pat>, P<Expr>, P<Block>, Option<SpannedIdent>)",
        "start": {
          "row": 1093,
          "column": 5
        },
        "end": {
          "row": 1093,
          "column": 61
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ForLoop",
        "start": {
          "row": 1093,
          "column": 5
        },
        "end": {
          "row": 1093,
          "column": 12
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Pat>, P<Expr>, P<Block>, Option<SpannedIdent>)",
        "start": {
          "row": 1093,
          "column": 12
        },
        "end": {
          "row": 1093,
          "column": 61
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 1093,
          "column": 13
        },
        "end": {
          "row": 1093,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1093,
          "column": 13
        },
        "end": {
          "row": 1093,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 1093,
          "column": 14
        },
        "end": {
          "row": 1093,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 1093,
          "column": 15
        },
        "end": {
          "row": 1093,
          "column": 18
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1093,
          "column": 21
        },
        "end": {
          "row": 1093,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1093,
          "column": 21
        },
        "end": {
          "row": 1093,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1093,
          "column": 22
        },
        "end": {
          "row": 1093,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1093,
          "column": 23
        },
        "end": {
          "row": 1093,
          "column": 27
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Block>",
        "start": {
          "row": 1093,
          "column": 30
        },
        "end": {
          "row": 1093,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1093,
          "column": 30
        },
        "end": {
          "row": 1093,
          "column": 31
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Block>",
        "start": {
          "row": 1093,
          "column": 31
        },
        "end": {
          "row": 1093,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 1093,
          "column": 32
        },
        "end": {
          "row": 1093,
          "column": 37
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<SpannedIdent>",
        "start": {
          "row": 1093,
          "column": 40
        },
        "end": {
          "row": 1093,
          "column": 60
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1093,
          "column": 40
        },
        "end": {
          "row": 1093,
          "column": 46
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<SpannedIdent>",
        "start": {
          "row": 1093,
          "column": 46
        },
        "end": {
          "row": 1093,
          "column": 60
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SpannedIdent",
        "start": {
          "row": 1093,
          "column": 47
        },
        "end": {
          "row": 1093,
          "column": 59
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Conditionless loop (can be exited with break, continue, or return)",
        "start": {
          "row": 1094,
          "column": 5
        },
        "end": {
          "row": 1094,
          "column": 75
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1095,
          "column": 5
        },
        "end": {
          "row": 1095,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `'label: loop { block }`",
        "start": {
          "row": 1096,
          "column": 5
        },
        "end": {
          "row": 1096,
          "column": 33
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Loop(P<Block>, Option<SpannedIdent>)",
        "start": {
          "row": 1097,
          "column": 5
        },
        "end": {
          "row": 1097,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Loop",
        "start": {
          "row": 1097,
          "column": 5
        },
        "end": {
          "row": 1097,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Block>, Option<SpannedIdent>)",
        "start": {
          "row": 1097,
          "column": 9
        },
        "end": {
          "row": 1097,
          "column": 41
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Block>",
        "start": {
          "row": 1097,
          "column": 10
        },
        "end": {
          "row": 1097,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1097,
          "column": 10
        },
        "end": {
          "row": 1097,
          "column": 11
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Block>",
        "start": {
          "row": 1097,
          "column": 11
        },
        "end": {
          "row": 1097,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 1097,
          "column": 12
        },
        "end": {
          "row": 1097,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<SpannedIdent>",
        "start": {
          "row": 1097,
          "column": 20
        },
        "end": {
          "row": 1097,
          "column": 40
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1097,
          "column": 20
        },
        "end": {
          "row": 1097,
          "column": 26
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<SpannedIdent>",
        "start": {
          "row": 1097,
          "column": 26
        },
        "end": {
          "row": 1097,
          "column": 40
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SpannedIdent",
        "start": {
          "row": 1097,
          "column": 27
        },
        "end": {
          "row": 1097,
          "column": 39
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A `match` block.",
        "start": {
          "row": 1098,
          "column": 5
        },
        "end": {
          "row": 1098,
          "column": 25
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Match(P<Expr>, Vec<Arm>)",
        "start": {
          "row": 1099,
          "column": 5
        },
        "end": {
          "row": 1099,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Match",
        "start": {
          "row": 1099,
          "column": 5
        },
        "end": {
          "row": 1099,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, Vec<Arm>)",
        "start": {
          "row": 1099,
          "column": 10
        },
        "end": {
          "row": 1099,
          "column": 29
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1099,
          "column": 11
        },
        "end": {
          "row": 1099,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1099,
          "column": 11
        },
        "end": {
          "row": 1099,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1099,
          "column": 12
        },
        "end": {
          "row": 1099,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1099,
          "column": 13
        },
        "end": {
          "row": 1099,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Arm>",
        "start": {
          "row": 1099,
          "column": 20
        },
        "end": {
          "row": 1099,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1099,
          "column": 20
        },
        "end": {
          "row": 1099,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Arm>",
        "start": {
          "row": 1099,
          "column": 23
        },
        "end": {
          "row": 1099,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Arm",
        "start": {
          "row": 1099,
          "column": 24
        },
        "end": {
          "row": 1099,
          "column": 27
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A closure (for example, `move |a, b, c| a + b + c`)",
        "start": {
          "row": 1100,
          "column": 5
        },
        "end": {
          "row": 1100,
          "column": 60
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1101,
          "column": 5
        },
        "end": {
          "row": 1101,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The final span is the span of the argument block `|...|`",
        "start": {
          "row": 1102,
          "column": 5
        },
        "end": {
          "row": 1102,
          "column": 65
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Closure(CaptureBy, P<FnDecl>, P<Expr>, Span)",
        "start": {
          "row": 1103,
          "column": 5
        },
        "end": {
          "row": 1103,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Closure",
        "start": {
          "row": 1103,
          "column": 5
        },
        "end": {
          "row": 1103,
          "column": 12
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(CaptureBy, P<FnDecl>, P<Expr>, Span)",
        "start": {
          "row": 1103,
          "column": 12
        },
        "end": {
          "row": 1103,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "CaptureBy",
        "start": {
          "row": 1103,
          "column": 13
        },
        "end": {
          "row": 1103,
          "column": 22
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<FnDecl>",
        "start": {
          "row": 1103,
          "column": 24
        },
        "end": {
          "row": 1103,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1103,
          "column": 24
        },
        "end": {
          "row": 1103,
          "column": 25
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<FnDecl>",
        "start": {
          "row": 1103,
          "column": 25
        },
        "end": {
          "row": 1103,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FnDecl",
        "start": {
          "row": 1103,
          "column": 26
        },
        "end": {
          "row": 1103,
          "column": 32
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1103,
          "column": 35
        },
        "end": {
          "row": 1103,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1103,
          "column": 35
        },
        "end": {
          "row": 1103,
          "column": 36
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1103,
          "column": 36
        },
        "end": {
          "row": 1103,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1103,
          "column": 37
        },
        "end": {
          "row": 1103,
          "column": 41
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1103,
          "column": 44
        },
        "end": {
          "row": 1103,
          "column": 48
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A block (`{ ... }`)",
        "start": {
          "row": 1104,
          "column": 5
        },
        "end": {
          "row": 1104,
          "column": 28
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Block(P<Block>)",
        "start": {
          "row": 1105,
          "column": 5
        },
        "end": {
          "row": 1105,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 1105,
          "column": 5
        },
        "end": {
          "row": 1105,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Block>)",
        "start": {
          "row": 1105,
          "column": 10
        },
        "end": {
          "row": 1105,
          "column": 20
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Block>",
        "start": {
          "row": 1105,
          "column": 11
        },
        "end": {
          "row": 1105,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1105,
          "column": 11
        },
        "end": {
          "row": 1105,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Block>",
        "start": {
          "row": 1105,
          "column": 12
        },
        "end": {
          "row": 1105,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 1105,
          "column": 13
        },
        "end": {
          "row": 1105,
          "column": 18
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A catch block (`catch { ... }`)",
        "start": {
          "row": 1106,
          "column": 5
        },
        "end": {
          "row": 1106,
          "column": 40
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Catch(P<Block>)",
        "start": {
          "row": 1107,
          "column": 5
        },
        "end": {
          "row": 1107,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Catch",
        "start": {
          "row": 1107,
          "column": 5
        },
        "end": {
          "row": 1107,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Block>)",
        "start": {
          "row": 1107,
          "column": 10
        },
        "end": {
          "row": 1107,
          "column": 20
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Block>",
        "start": {
          "row": 1107,
          "column": 11
        },
        "end": {
          "row": 1107,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1107,
          "column": 11
        },
        "end": {
          "row": 1107,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Block>",
        "start": {
          "row": 1107,
          "column": 12
        },
        "end": {
          "row": 1107,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 1107,
          "column": 13
        },
        "end": {
          "row": 1107,
          "column": 18
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An assignment (`a = foo()`)",
        "start": {
          "row": 1109,
          "column": 5
        },
        "end": {
          "row": 1109,
          "column": 36
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Assign(P<Expr>, P<Expr>)",
        "start": {
          "row": 1110,
          "column": 5
        },
        "end": {
          "row": 1110,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Assign",
        "start": {
          "row": 1110,
          "column": 5
        },
        "end": {
          "row": 1110,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, P<Expr>)",
        "start": {
          "row": 1110,
          "column": 11
        },
        "end": {
          "row": 1110,
          "column": 29
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1110,
          "column": 12
        },
        "end": {
          "row": 1110,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1110,
          "column": 12
        },
        "end": {
          "row": 1110,
          "column": 13
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1110,
          "column": 13
        },
        "end": {
          "row": 1110,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1110,
          "column": 14
        },
        "end": {
          "row": 1110,
          "column": 18
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1110,
          "column": 21
        },
        "end": {
          "row": 1110,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1110,
          "column": 21
        },
        "end": {
          "row": 1110,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1110,
          "column": 22
        },
        "end": {
          "row": 1110,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1110,
          "column": 23
        },
        "end": {
          "row": 1110,
          "column": 27
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An assignment with an operator",
        "start": {
          "row": 1111,
          "column": 5
        },
        "end": {
          "row": 1111,
          "column": 39
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1112,
          "column": 5
        },
        "end": {
          "row": 1112,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// For example, `a += 1`.",
        "start": {
          "row": 1113,
          "column": 5
        },
        "end": {
          "row": 1113,
          "column": 31
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "AssignOp(BinOp, P<Expr>, P<Expr>)",
        "start": {
          "row": 1114,
          "column": 5
        },
        "end": {
          "row": 1114,
          "column": 38
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "AssignOp",
        "start": {
          "row": 1114,
          "column": 5
        },
        "end": {
          "row": 1114,
          "column": 13
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(BinOp, P<Expr>, P<Expr>)",
        "start": {
          "row": 1114,
          "column": 13
        },
        "end": {
          "row": 1114,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "BinOp",
        "start": {
          "row": 1114,
          "column": 14
        },
        "end": {
          "row": 1114,
          "column": 19
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1114,
          "column": 21
        },
        "end": {
          "row": 1114,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1114,
          "column": 21
        },
        "end": {
          "row": 1114,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1114,
          "column": 22
        },
        "end": {
          "row": 1114,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1114,
          "column": 23
        },
        "end": {
          "row": 1114,
          "column": 27
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1114,
          "column": 30
        },
        "end": {
          "row": 1114,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1114,
          "column": 30
        },
        "end": {
          "row": 1114,
          "column": 31
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1114,
          "column": 31
        },
        "end": {
          "row": 1114,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1114,
          "column": 32
        },
        "end": {
          "row": 1114,
          "column": 36
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Access of a named struct field (`obj.foo`)",
        "start": {
          "row": 1115,
          "column": 5
        },
        "end": {
          "row": 1115,
          "column": 51
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Field(P<Expr>, SpannedIdent)",
        "start": {
          "row": 1116,
          "column": 5
        },
        "end": {
          "row": 1116,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Field",
        "start": {
          "row": 1116,
          "column": 5
        },
        "end": {
          "row": 1116,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, SpannedIdent)",
        "start": {
          "row": 1116,
          "column": 10
        },
        "end": {
          "row": 1116,
          "column": 33
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1116,
          "column": 11
        },
        "end": {
          "row": 1116,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1116,
          "column": 11
        },
        "end": {
          "row": 1116,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1116,
          "column": 12
        },
        "end": {
          "row": 1116,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1116,
          "column": 13
        },
        "end": {
          "row": 1116,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SpannedIdent",
        "start": {
          "row": 1116,
          "column": 20
        },
        "end": {
          "row": 1116,
          "column": 32
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Access of an unnamed field of a struct or tuple-struct",
        "start": {
          "row": 1117,
          "column": 5
        },
        "end": {
          "row": 1117,
          "column": 63
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1118,
          "column": 5
        },
        "end": {
          "row": 1118,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// For example, `foo.0`.",
        "start": {
          "row": 1119,
          "column": 5
        },
        "end": {
          "row": 1119,
          "column": 30
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "TupField(P<Expr>, Spanned<usize>)",
        "start": {
          "row": 1120,
          "column": 5
        },
        "end": {
          "row": 1120,
          "column": 38
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TupField",
        "start": {
          "row": 1120,
          "column": 5
        },
        "end": {
          "row": 1120,
          "column": 13
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, Spanned<usize>)",
        "start": {
          "row": 1120,
          "column": 13
        },
        "end": {
          "row": 1120,
          "column": 38
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1120,
          "column": 14
        },
        "end": {
          "row": 1120,
          "column": 21
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1120,
          "column": 14
        },
        "end": {
          "row": 1120,
          "column": 15
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1120,
          "column": 15
        },
        "end": {
          "row": 1120,
          "column": 21
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1120,
          "column": 16
        },
        "end": {
          "row": 1120,
          "column": 20
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Spanned<usize>",
        "start": {
          "row": 1120,
          "column": 23
        },
        "end": {
          "row": 1120,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Spanned",
        "start": {
          "row": 1120,
          "column": 23
        },
        "end": {
          "row": 1120,
          "column": 30
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<usize>",
        "start": {
          "row": 1120,
          "column": 30
        },
        "end": {
          "row": 1120,
          "column": 37
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 1120,
          "column": 31
        },
        "end": {
          "row": 1120,
          "column": 36
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An indexing operation (`foo[2]`)",
        "start": {
          "row": 1121,
          "column": 5
        },
        "end": {
          "row": 1121,
          "column": 41
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Index(P<Expr>, P<Expr>)",
        "start": {
          "row": 1122,
          "column": 5
        },
        "end": {
          "row": 1122,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Index",
        "start": {
          "row": 1122,
          "column": 5
        },
        "end": {
          "row": 1122,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, P<Expr>)",
        "start": {
          "row": 1122,
          "column": 10
        },
        "end": {
          "row": 1122,
          "column": 28
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1122,
          "column": 11
        },
        "end": {
          "row": 1122,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1122,
          "column": 11
        },
        "end": {
          "row": 1122,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1122,
          "column": 12
        },
        "end": {
          "row": 1122,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1122,
          "column": 13
        },
        "end": {
          "row": 1122,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1122,
          "column": 20
        },
        "end": {
          "row": 1122,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1122,
          "column": 20
        },
        "end": {
          "row": 1122,
          "column": 21
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1122,
          "column": 21
        },
        "end": {
          "row": 1122,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1122,
          "column": 22
        },
        "end": {
          "row": 1122,
          "column": 26
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A range (`1..2`, `1..`, `..2`, `1...2`, `1...`, `...2`)",
        "start": {
          "row": 1123,
          "column": 5
        },
        "end": {
          "row": 1123,
          "column": 64
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Range(Option<P<Expr>>, Option<P<Expr>>, RangeLimits)",
        "start": {
          "row": 1124,
          "column": 5
        },
        "end": {
          "row": 1124,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Range",
        "start": {
          "row": 1124,
          "column": 5
        },
        "end": {
          "row": 1124,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Option<P<Expr>>, Option<P<Expr>>, RangeLimits)",
        "start": {
          "row": 1124,
          "column": 10
        },
        "end": {
          "row": 1124,
          "column": 57
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Expr>>",
        "start": {
          "row": 1124,
          "column": 11
        },
        "end": {
          "row": 1124,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1124,
          "column": 11
        },
        "end": {
          "row": 1124,
          "column": 17
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1124,
          "column": 17
        },
        "end": {
          "row": 1124,
          "column": 26
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1124,
          "column": 18
        },
        "end": {
          "row": 1124,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1124,
          "column": 18
        },
        "end": {
          "row": 1124,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1124,
          "column": 19
        },
        "end": {
          "row": 1124,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1124,
          "column": 20
        },
        "end": {
          "row": 1124,
          "column": 24
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Expr>>",
        "start": {
          "row": 1124,
          "column": 28
        },
        "end": {
          "row": 1124,
          "column": 43
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1124,
          "column": 28
        },
        "end": {
          "row": 1124,
          "column": 34
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1124,
          "column": 34
        },
        "end": {
          "row": 1124,
          "column": 43
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1124,
          "column": 35
        },
        "end": {
          "row": 1124,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1124,
          "column": 35
        },
        "end": {
          "row": 1124,
          "column": 36
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1124,
          "column": 36
        },
        "end": {
          "row": 1124,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1124,
          "column": 37
        },
        "end": {
          "row": 1124,
          "column": 41
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "RangeLimits",
        "start": {
          "row": 1124,
          "column": 45
        },
        "end": {
          "row": 1124,
          "column": 56
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Variable reference, possibly containing `::` and/or type",
        "start": {
          "row": 1126,
          "column": 5
        },
        "end": {
          "row": 1126,
          "column": 65
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// parameters, e.g. foo::bar::<baz>.",
        "start": {
          "row": 1127,
          "column": 5
        },
        "end": {
          "row": 1127,
          "column": 42
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1128,
          "column": 5
        },
        "end": {
          "row": 1128,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Optionally \"qualified\",",
        "start": {
          "row": 1129,
          "column": 5
        },
        "end": {
          "row": 1129,
          "column": 32
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `<Vec<T> as SomeTrait>::SomeType`.",
        "start": {
          "row": 1130,
          "column": 5
        },
        "end": {
          "row": 1130,
          "column": 48
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Path(Option<QSelf>, Path)",
        "start": {
          "row": 1131,
          "column": 5
        },
        "end": {
          "row": 1131,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1131,
          "column": 5
        },
        "end": {
          "row": 1131,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Option<QSelf>, Path)",
        "start": {
          "row": 1131,
          "column": 9
        },
        "end": {
          "row": 1131,
          "column": 30
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<QSelf>",
        "start": {
          "row": 1131,
          "column": 10
        },
        "end": {
          "row": 1131,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1131,
          "column": 10
        },
        "end": {
          "row": 1131,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<QSelf>",
        "start": {
          "row": 1131,
          "column": 16
        },
        "end": {
          "row": 1131,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "QSelf",
        "start": {
          "row": 1131,
          "column": 17
        },
        "end": {
          "row": 1131,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1131,
          "column": 25
        },
        "end": {
          "row": 1131,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A referencing operation (`&a` or `&mut a`)",
        "start": {
          "row": 1133,
          "column": 5
        },
        "end": {
          "row": 1133,
          "column": 51
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "AddrOf(Mutability, P<Expr>)",
        "start": {
          "row": 1134,
          "column": 5
        },
        "end": {
          "row": 1134,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "AddrOf",
        "start": {
          "row": 1134,
          "column": 5
        },
        "end": {
          "row": 1134,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Mutability, P<Expr>)",
        "start": {
          "row": 1134,
          "column": 11
        },
        "end": {
          "row": 1134,
          "column": 32
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mutability",
        "start": {
          "row": 1134,
          "column": 12
        },
        "end": {
          "row": 1134,
          "column": 22
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1134,
          "column": 24
        },
        "end": {
          "row": 1134,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1134,
          "column": 24
        },
        "end": {
          "row": 1134,
          "column": 25
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1134,
          "column": 25
        },
        "end": {
          "row": 1134,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1134,
          "column": 26
        },
        "end": {
          "row": 1134,
          "column": 30
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A `break`, with an optional label to break, and an optional expression",
        "start": {
          "row": 1135,
          "column": 5
        },
        "end": {
          "row": 1135,
          "column": 79
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Break(Option<SpannedIdent>, Option<P<Expr>>)",
        "start": {
          "row": 1136,
          "column": 5
        },
        "end": {
          "row": 1136,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Break",
        "start": {
          "row": 1136,
          "column": 5
        },
        "end": {
          "row": 1136,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Option<SpannedIdent>, Option<P<Expr>>)",
        "start": {
          "row": 1136,
          "column": 10
        },
        "end": {
          "row": 1136,
          "column": 49
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<SpannedIdent>",
        "start": {
          "row": 1136,
          "column": 11
        },
        "end": {
          "row": 1136,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1136,
          "column": 11
        },
        "end": {
          "row": 1136,
          "column": 17
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<SpannedIdent>",
        "start": {
          "row": 1136,
          "column": 17
        },
        "end": {
          "row": 1136,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SpannedIdent",
        "start": {
          "row": 1136,
          "column": 18
        },
        "end": {
          "row": 1136,
          "column": 30
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Expr>>",
        "start": {
          "row": 1136,
          "column": 33
        },
        "end": {
          "row": 1136,
          "column": 48
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1136,
          "column": 33
        },
        "end": {
          "row": 1136,
          "column": 39
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1136,
          "column": 39
        },
        "end": {
          "row": 1136,
          "column": 48
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1136,
          "column": 40
        },
        "end": {
          "row": 1136,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1136,
          "column": 40
        },
        "end": {
          "row": 1136,
          "column": 41
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1136,
          "column": 41
        },
        "end": {
          "row": 1136,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1136,
          "column": 42
        },
        "end": {
          "row": 1136,
          "column": 46
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A `continue`, with an optional label",
        "start": {
          "row": 1137,
          "column": 5
        },
        "end": {
          "row": 1137,
          "column": 45
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Continue(Option<SpannedIdent>)",
        "start": {
          "row": 1138,
          "column": 5
        },
        "end": {
          "row": 1138,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Continue",
        "start": {
          "row": 1138,
          "column": 5
        },
        "end": {
          "row": 1138,
          "column": 13
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Option<SpannedIdent>)",
        "start": {
          "row": 1138,
          "column": 13
        },
        "end": {
          "row": 1138,
          "column": 35
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<SpannedIdent>",
        "start": {
          "row": 1138,
          "column": 14
        },
        "end": {
          "row": 1138,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1138,
          "column": 14
        },
        "end": {
          "row": 1138,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<SpannedIdent>",
        "start": {
          "row": 1138,
          "column": 20
        },
        "end": {
          "row": 1138,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SpannedIdent",
        "start": {
          "row": 1138,
          "column": 21
        },
        "end": {
          "row": 1138,
          "column": 33
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A `return`, with an optional value to be returned",
        "start": {
          "row": 1139,
          "column": 5
        },
        "end": {
          "row": 1139,
          "column": 58
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Ret(Option<P<Expr>>)",
        "start": {
          "row": 1140,
          "column": 5
        },
        "end": {
          "row": 1140,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ret",
        "start": {
          "row": 1140,
          "column": 5
        },
        "end": {
          "row": 1140,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Option<P<Expr>>)",
        "start": {
          "row": 1140,
          "column": 8
        },
        "end": {
          "row": 1140,
          "column": 25
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Expr>>",
        "start": {
          "row": 1140,
          "column": 9
        },
        "end": {
          "row": 1140,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1140,
          "column": 9
        },
        "end": {
          "row": 1140,
          "column": 15
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1140,
          "column": 15
        },
        "end": {
          "row": 1140,
          "column": 24
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1140,
          "column": 16
        },
        "end": {
          "row": 1140,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1140,
          "column": 16
        },
        "end": {
          "row": 1140,
          "column": 17
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1140,
          "column": 17
        },
        "end": {
          "row": 1140,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1140,
          "column": 18
        },
        "end": {
          "row": 1140,
          "column": 22
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Output of the `asm!()` macro",
        "start": {
          "row": 1142,
          "column": 5
        },
        "end": {
          "row": 1142,
          "column": 37
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "InlineAsm(P<InlineAsm>)",
        "start": {
          "row": 1143,
          "column": 5
        },
        "end": {
          "row": 1143,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "InlineAsm",
        "start": {
          "row": 1143,
          "column": 5
        },
        "end": {
          "row": 1143,
          "column": 14
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<InlineAsm>)",
        "start": {
          "row": 1143,
          "column": 14
        },
        "end": {
          "row": 1143,
          "column": 28
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<InlineAsm>",
        "start": {
          "row": 1143,
          "column": 15
        },
        "end": {
          "row": 1143,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1143,
          "column": 15
        },
        "end": {
          "row": 1143,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<InlineAsm>",
        "start": {
          "row": 1143,
          "column": 16
        },
        "end": {
          "row": 1143,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "InlineAsm",
        "start": {
          "row": 1143,
          "column": 17
        },
        "end": {
          "row": 1143,
          "column": 26
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A macro invocation; pre-expansion",
        "start": {
          "row": 1145,
          "column": 5
        },
        "end": {
          "row": 1145,
          "column": 42
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Mac(Mac)",
        "start": {
          "row": 1146,
          "column": 5
        },
        "end": {
          "row": 1146,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 1146,
          "column": 5
        },
        "end": {
          "row": 1146,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Mac)",
        "start": {
          "row": 1146,
          "column": 8
        },
        "end": {
          "row": 1146,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 1146,
          "column": 9
        },
        "end": {
          "row": 1146,
          "column": 12
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A struct literal expression.",
        "start": {
          "row": 1148,
          "column": 5
        },
        "end": {
          "row": 1148,
          "column": 37
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1149,
          "column": 5
        },
        "end": {
          "row": 1149,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// For example, `Foo {x: 1, y: 2}`, or",
        "start": {
          "row": 1150,
          "column": 5
        },
        "end": {
          "row": 1150,
          "column": 44
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `Foo {x: 1, .. base}`, where `base` is the `Option<Expr>`.",
        "start": {
          "row": 1151,
          "column": 5
        },
        "end": {
          "row": 1151,
          "column": 67
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Struct(Path, Vec<Field>, Option<P<Expr>>)",
        "start": {
          "row": 1152,
          "column": 5
        },
        "end": {
          "row": 1152,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Struct",
        "start": {
          "row": 1152,
          "column": 5
        },
        "end": {
          "row": 1152,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Path, Vec<Field>, Option<P<Expr>>)",
        "start": {
          "row": 1152,
          "column": 11
        },
        "end": {
          "row": 1152,
          "column": 46
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1152,
          "column": 12
        },
        "end": {
          "row": 1152,
          "column": 16
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Field>",
        "start": {
          "row": 1152,
          "column": 18
        },
        "end": {
          "row": 1152,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1152,
          "column": 18
        },
        "end": {
          "row": 1152,
          "column": 21
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Field>",
        "start": {
          "row": 1152,
          "column": 21
        },
        "end": {
          "row": 1152,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Field",
        "start": {
          "row": 1152,
          "column": 22
        },
        "end": {
          "row": 1152,
          "column": 27
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Expr>>",
        "start": {
          "row": 1152,
          "column": 30
        },
        "end": {
          "row": 1152,
          "column": 45
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1152,
          "column": 30
        },
        "end": {
          "row": 1152,
          "column": 36
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1152,
          "column": 36
        },
        "end": {
          "row": 1152,
          "column": 45
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1152,
          "column": 37
        },
        "end": {
          "row": 1152,
          "column": 44
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1152,
          "column": 37
        },
        "end": {
          "row": 1152,
          "column": 38
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1152,
          "column": 38
        },
        "end": {
          "row": 1152,
          "column": 44
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1152,
          "column": 39
        },
        "end": {
          "row": 1152,
          "column": 43
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An array literal constructed from one repeated element.",
        "start": {
          "row": 1154,
          "column": 5
        },
        "end": {
          "row": 1154,
          "column": 64
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1155,
          "column": 5
        },
        "end": {
          "row": 1155,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// For example, `[1; 5]`. The first expression is the element",
        "start": {
          "row": 1156,
          "column": 5
        },
        "end": {
          "row": 1156,
          "column": 67
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// to be repeated; the second is the number of times to repeat it.",
        "start": {
          "row": 1157,
          "column": 5
        },
        "end": {
          "row": 1157,
          "column": 72
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Repeat(P<Expr>, P<Expr>)",
        "start": {
          "row": 1158,
          "column": 5
        },
        "end": {
          "row": 1158,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Repeat",
        "start": {
          "row": 1158,
          "column": 5
        },
        "end": {
          "row": 1158,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>, P<Expr>)",
        "start": {
          "row": 1158,
          "column": 11
        },
        "end": {
          "row": 1158,
          "column": 29
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1158,
          "column": 12
        },
        "end": {
          "row": 1158,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1158,
          "column": 12
        },
        "end": {
          "row": 1158,
          "column": 13
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1158,
          "column": 13
        },
        "end": {
          "row": 1158,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1158,
          "column": 14
        },
        "end": {
          "row": 1158,
          "column": 18
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1158,
          "column": 21
        },
        "end": {
          "row": 1158,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1158,
          "column": 21
        },
        "end": {
          "row": 1158,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1158,
          "column": 22
        },
        "end": {
          "row": 1158,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1158,
          "column": 23
        },
        "end": {
          "row": 1158,
          "column": 27
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// No-op: used solely so we can pretty-print faithfully",
        "start": {
          "row": 1160,
          "column": 5
        },
        "end": {
          "row": 1160,
          "column": 61
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Paren(P<Expr>)",
        "start": {
          "row": 1161,
          "column": 5
        },
        "end": {
          "row": 1161,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Paren",
        "start": {
          "row": 1161,
          "column": 5
        },
        "end": {
          "row": 1161,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>)",
        "start": {
          "row": 1161,
          "column": 10
        },
        "end": {
          "row": 1161,
          "column": 19
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1161,
          "column": 11
        },
        "end": {
          "row": 1161,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1161,
          "column": 11
        },
        "end": {
          "row": 1161,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1161,
          "column": 12
        },
        "end": {
          "row": 1161,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1161,
          "column": 13
        },
        "end": {
          "row": 1161,
          "column": 17
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `expr?`",
        "start": {
          "row": 1163,
          "column": 5
        },
        "end": {
          "row": 1163,
          "column": 16
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Try(P<Expr>)",
        "start": {
          "row": 1164,
          "column": 5
        },
        "end": {
          "row": 1164,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Try",
        "start": {
          "row": 1164,
          "column": 5
        },
        "end": {
          "row": 1164,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>)",
        "start": {
          "row": 1164,
          "column": 8
        },
        "end": {
          "row": 1164,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1164,
          "column": 9
        },
        "end": {
          "row": 1164,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1164,
          "column": 9
        },
        "end": {
          "row": 1164,
          "column": 10
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1164,
          "column": 10
        },
        "end": {
          "row": 1164,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1164,
          "column": 11
        },
        "end": {
          "row": 1164,
          "column": 15
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A `yield`, with an optional value to be yielded",
        "start": {
          "row": 1166,
          "column": 5
        },
        "end": {
          "row": 1166,
          "column": 56
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Yield(Option<P<Expr>>)",
        "start": {
          "row": 1167,
          "column": 5
        },
        "end": {
          "row": 1167,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Yield",
        "start": {
          "row": 1167,
          "column": 5
        },
        "end": {
          "row": 1167,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Option<P<Expr>>)",
        "start": {
          "row": 1167,
          "column": 10
        },
        "end": {
          "row": 1167,
          "column": 27
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Expr>>",
        "start": {
          "row": 1167,
          "column": 11
        },
        "end": {
          "row": 1167,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1167,
          "column": 11
        },
        "end": {
          "row": 1167,
          "column": 17
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1167,
          "column": 17
        },
        "end": {
          "row": 1167,
          "column": 26
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1167,
          "column": 18
        },
        "end": {
          "row": 1167,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1167,
          "column": 18
        },
        "end": {
          "row": 1167,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1167,
          "column": 19
        },
        "end": {
          "row": 1167,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1167,
          "column": 20
        },
        "end": {
          "row": 1167,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The explicit Self type in a \"qualified path\". The actual",
        "start": {
          "row": 1170,
          "column": 1
        },
        "end": {
          "row": 1170,
          "column": 61
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// path, including the trait and the associated item, is stored",
        "start": {
          "row": 1171,
          "column": 1
        },
        "end": {
          "row": 1171,
          "column": 65
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// separately. `position` represents the index of the associated",
        "start": {
          "row": 1172,
          "column": 1
        },
        "end": {
          "row": 1172,
          "column": 66
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// item qualified with this Self type.",
        "start": {
          "row": 1173,
          "column": 1
        },
        "end": {
          "row": 1173,
          "column": 40
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1174,
          "column": 1
        },
        "end": {
          "row": 1174,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// ```ignore (only-for-syntax-highlight)",
        "start": {
          "row": 1175,
          "column": 1
        },
        "end": {
          "row": 1175,
          "column": 42
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// <Vec<T> as a::b::Trait>::AssociatedItem",
        "start": {
          "row": 1176,
          "column": 1
        },
        "end": {
          "row": 1176,
          "column": 44
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///  ^~~~~     ~~~~~~~~~~~~~~^",
        "start": {
          "row": 1177,
          "column": 1
        },
        "end": {
          "row": 1177,
          "column": 31
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///  ty        position = 3",
        "start": {
          "row": 1178,
          "column": 1
        },
        "end": {
          "row": 1178,
          "column": 28
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1179,
          "column": 1
        },
        "end": {
          "row": 1179,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// <Vec<T>>::AssociatedItem",
        "start": {
          "row": 1180,
          "column": 1
        },
        "end": {
          "row": 1180,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///  ^~~~~    ^",
        "start": {
          "row": 1181,
          "column": 1
        },
        "end": {
          "row": 1181,
          "column": 16
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///  ty       position = 0",
        "start": {
          "row": 1182,
          "column": 1
        },
        "end": {
          "row": 1182,
          "column": 27
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// ```",
        "start": {
          "row": 1183,
          "column": 1
        },
        "end": {
          "row": 1183,
          "column": 8
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1184,
          "column": 1
        },
        "end": {
          "row": 1184,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1184,
          "column": 3
        },
        "end": {
          "row": 1184,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1184,
          "column": 3
        },
        "end": {
          "row": 1184,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1184,
          "column": 9
        },
        "end": {
          "row": 1184,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1184,
          "column": 10
        },
        "end": {
          "row": 1184,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1184,
          "column": 10
        },
        "end": {
          "row": 1184,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1184,
          "column": 17
        },
        "end": {
          "row": 1184,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1184,
          "column": 17
        },
        "end": {
          "row": 1184,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1184,
          "column": 28
        },
        "end": {
          "row": 1184,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1184,
          "column": 28
        },
        "end": {
          "row": 1184,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1184,
          "column": 32
        },
        "end": {
          "row": 1184,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1184,
          "column": 32
        },
        "end": {
          "row": 1184,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1184,
          "column": 48
        },
        "end": {
          "row": 1184,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1184,
          "column": 48
        },
        "end": {
          "row": 1184,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1184,
          "column": 64
        },
        "end": {
          "row": 1184,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1184,
          "column": 64
        },
        "end": {
          "row": 1184,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1184,
          "column": 70
        },
        "end": {
          "row": 1184,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1184,
          "column": 70
        },
        "end": {
          "row": 1184,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct QSelf {\n    pub ty: P<Ty>,\n    pub position: usize\n}",
        "start": {
          "row": 1185,
          "column": 1
        },
        "end": {
          "row": 1188,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1185,
          "column": 1
        },
        "end": {
          "row": 1185,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "QSelf",
        "start": {
          "row": 1185,
          "column": 12
        },
        "end": {
          "row": 1185,
          "column": 17
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub ty: P<Ty>,\n    pub position: usize\n}",
        "start": {
          "row": 1185,
          "column": 18
        },
        "end": {
          "row": 1188,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ty: P<Ty>",
        "start": {
          "row": 1186,
          "column": 5
        },
        "end": {
          "row": 1186,
          "column": 18
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1186,
          "column": 5
        },
        "end": {
          "row": 1186,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1186,
          "column": 9
        },
        "end": {
          "row": 1186,
          "column": 11
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1186,
          "column": 13
        },
        "end": {
          "row": 1186,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1186,
          "column": 13
        },
        "end": {
          "row": 1186,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1186,
          "column": 14
        },
        "end": {
          "row": 1186,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1186,
          "column": 15
        },
        "end": {
          "row": 1186,
          "column": 17
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub position: usize",
        "start": {
          "row": 1187,
          "column": 5
        },
        "end": {
          "row": 1187,
          "column": 24
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1187,
          "column": 5
        },
        "end": {
          "row": 1187,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "position",
        "start": {
          "row": 1187,
          "column": 9
        },
        "end": {
          "row": 1187,
          "column": 17
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 1187,
          "column": 19
        },
        "end": {
          "row": 1187,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A capture clause",
        "start": {
          "row": 1190,
          "column": 1
        },
        "end": {
          "row": 1190,
          "column": 21
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 1191,
          "column": 1
        },
        "end": {
          "row": 1191,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1191,
          "column": 3
        },
        "end": {
          "row": 1191,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1191,
          "column": 3
        },
        "end": {
          "row": 1191,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1191,
          "column": 9
        },
        "end": {
          "row": 1191,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1191,
          "column": 10
        },
        "end": {
          "row": 1191,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1191,
          "column": 10
        },
        "end": {
          "row": 1191,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1191,
          "column": 17
        },
        "end": {
          "row": 1191,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1191,
          "column": 17
        },
        "end": {
          "row": 1191,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1191,
          "column": 28
        },
        "end": {
          "row": 1191,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1191,
          "column": 28
        },
        "end": {
          "row": 1191,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1191,
          "column": 32
        },
        "end": {
          "row": 1191,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1191,
          "column": 32
        },
        "end": {
          "row": 1191,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1191,
          "column": 48
        },
        "end": {
          "row": 1191,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1191,
          "column": 48
        },
        "end": {
          "row": 1191,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1191,
          "column": 64
        },
        "end": {
          "row": 1191,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1191,
          "column": 64
        },
        "end": {
          "row": 1191,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1191,
          "column": 70
        },
        "end": {
          "row": 1191,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1191,
          "column": 70
        },
        "end": {
          "row": 1191,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1191,
          "column": 77
        },
        "end": {
          "row": 1191,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1191,
          "column": 77
        },
        "end": {
          "row": 1191,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum CaptureBy {\n    Value,\n    Ref,\n}",
        "start": {
          "row": 1192,
          "column": 1
        },
        "end": {
          "row": 1195,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1192,
          "column": 1
        },
        "end": {
          "row": 1192,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "CaptureBy",
        "start": {
          "row": 1192,
          "column": 10
        },
        "end": {
          "row": 1192,
          "column": 19
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Value,\n    Ref,\n}",
        "start": {
          "row": 1192,
          "column": 20
        },
        "end": {
          "row": 1195,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Value",
        "start": {
          "row": 1193,
          "column": 5
        },
        "end": {
          "row": 1193,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Value",
        "start": {
          "row": 1193,
          "column": 5
        },
        "end": {
          "row": 1193,
          "column": 10
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Ref",
        "start": {
          "row": 1194,
          "column": 5
        },
        "end": {
          "row": 1194,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ref",
        "start": {
          "row": 1194,
          "column": 5
        },
        "end": {
          "row": 1194,
          "column": 8
        }
      },
      {
        "kind": "type_item",
        "name": "query",
        "text": "pub type Mac = Spanned<Mac_>;",
        "start": {
          "row": 1197,
          "column": 1
        },
        "end": {
          "row": 1197,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1197,
          "column": 1
        },
        "end": {
          "row": 1197,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 1197,
          "column": 10
        },
        "end": {
          "row": 1197,
          "column": 13
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Spanned<Mac_>",
        "start": {
          "row": 1197,
          "column": 16
        },
        "end": {
          "row": 1197,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Spanned",
        "start": {
          "row": 1197,
          "column": 16
        },
        "end": {
          "row": 1197,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Mac_>",
        "start": {
          "row": 1197,
          "column": 23
        },
        "end": {
          "row": 1197,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mac_",
        "start": {
          "row": 1197,
          "column": 24
        },
        "end": {
          "row": 1197,
          "column": 28
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Represents a macro invocation. The Path indicates which macro",
        "start": {
          "row": 1199,
          "column": 1
        },
        "end": {
          "row": 1199,
          "column": 66
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// is being invoked, and the vector of token-trees contains the source",
        "start": {
          "row": 1200,
          "column": 1
        },
        "end": {
          "row": 1200,
          "column": 72
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// of the macro invocation.",
        "start": {
          "row": 1201,
          "column": 1
        },
        "end": {
          "row": 1201,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1202,
          "column": 1
        },
        "end": {
          "row": 1202,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// NB: the additional ident for a macro_rules-style macro is actually",
        "start": {
          "row": 1203,
          "column": 1
        },
        "end": {
          "row": 1203,
          "column": 71
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// stored in the enclosing item. Oog.",
        "start": {
          "row": 1204,
          "column": 1
        },
        "end": {
          "row": 1204,
          "column": 39
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1205,
          "column": 1
        },
        "end": {
          "row": 1205,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1205,
          "column": 3
        },
        "end": {
          "row": 1205,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1205,
          "column": 3
        },
        "end": {
          "row": 1205,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1205,
          "column": 9
        },
        "end": {
          "row": 1205,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1205,
          "column": 10
        },
        "end": {
          "row": 1205,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1205,
          "column": 10
        },
        "end": {
          "row": 1205,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1205,
          "column": 17
        },
        "end": {
          "row": 1205,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1205,
          "column": 17
        },
        "end": {
          "row": 1205,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1205,
          "column": 28
        },
        "end": {
          "row": 1205,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1205,
          "column": 28
        },
        "end": {
          "row": 1205,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1205,
          "column": 32
        },
        "end": {
          "row": 1205,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1205,
          "column": 32
        },
        "end": {
          "row": 1205,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1205,
          "column": 48
        },
        "end": {
          "row": 1205,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1205,
          "column": 48
        },
        "end": {
          "row": 1205,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1205,
          "column": 64
        },
        "end": {
          "row": 1205,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1205,
          "column": 64
        },
        "end": {
          "row": 1205,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1205,
          "column": 70
        },
        "end": {
          "row": 1205,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1205,
          "column": 70
        },
        "end": {
          "row": 1205,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Mac_ {\n    pub path: Path,\n    pub tts: ThinTokenStream,\n}",
        "start": {
          "row": 1206,
          "column": 1
        },
        "end": {
          "row": 1209,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1206,
          "column": 1
        },
        "end": {
          "row": 1206,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mac_",
        "start": {
          "row": 1206,
          "column": 12
        },
        "end": {
          "row": 1206,
          "column": 16
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub path: Path,\n    pub tts: ThinTokenStream,\n}",
        "start": {
          "row": 1206,
          "column": 17
        },
        "end": {
          "row": 1209,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub path: Path",
        "start": {
          "row": 1207,
          "column": 5
        },
        "end": {
          "row": 1207,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1207,
          "column": 5
        },
        "end": {
          "row": 1207,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 1207,
          "column": 9
        },
        "end": {
          "row": 1207,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1207,
          "column": 15
        },
        "end": {
          "row": 1207,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub tts: ThinTokenStream",
        "start": {
          "row": 1208,
          "column": 5
        },
        "end": {
          "row": 1208,
          "column": 29
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1208,
          "column": 5
        },
        "end": {
          "row": 1208,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "tts",
        "start": {
          "row": 1208,
          "column": 9
        },
        "end": {
          "row": 1208,
          "column": 12
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ThinTokenStream",
        "start": {
          "row": 1208,
          "column": 14
        },
        "end": {
          "row": 1208,
          "column": 29
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl Mac_ {\n    pub fn stream(&self) -> TokenStream {\n        self.tts.clone().into()\n    }\n}",
        "start": {
          "row": 1211,
          "column": 1
        },
        "end": {
          "row": 1215,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mac_",
        "start": {
          "row": 1211,
          "column": 6
        },
        "end": {
          "row": 1211,
          "column": 10
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn stream(&self) -> TokenStream {\n        self.tts.clone().into()\n    }\n}",
        "start": {
          "row": 1211,
          "column": 11
        },
        "end": {
          "row": 1215,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn stream(&self) -> TokenStream {\n        self.tts.clone().into()\n    }",
        "start": {
          "row": 1212,
          "column": 5
        },
        "end": {
          "row": 1214,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1212,
          "column": 5
        },
        "end": {
          "row": 1212,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "stream",
        "start": {
          "row": 1212,
          "column": 12
        },
        "end": {
          "row": 1212,
          "column": 18
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1212,
          "column": 18
        },
        "end": {
          "row": 1212,
          "column": 25
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1212,
          "column": 19
        },
        "end": {
          "row": 1212,
          "column": 24
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1212,
          "column": 20
        },
        "end": {
          "row": 1212,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TokenStream",
        "start": {
          "row": 1212,
          "column": 29
        },
        "end": {
          "row": 1212,
          "column": 40
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        self.tts.clone().into()\n    }",
        "start": {
          "row": 1212,
          "column": 41
        },
        "end": {
          "row": 1214,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.tts.clone().into()",
        "start": {
          "row": 1213,
          "column": 9
        },
        "end": {
          "row": 1213,
          "column": 32
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.tts.clone().into",
        "start": {
          "row": 1213,
          "column": 9
        },
        "end": {
          "row": 1213,
          "column": 30
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.tts.clone()",
        "start": {
          "row": 1213,
          "column": 9
        },
        "end": {
          "row": 1213,
          "column": 25
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.tts.clone",
        "start": {
          "row": 1213,
          "column": 9
        },
        "end": {
          "row": 1213,
          "column": 23
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.tts",
        "start": {
          "row": 1213,
          "column": 9
        },
        "end": {
          "row": 1213,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1213,
          "column": 9
        },
        "end": {
          "row": 1213,
          "column": 13
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "tts",
        "start": {
          "row": 1213,
          "column": 14
        },
        "end": {
          "row": 1213,
          "column": 17
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "clone",
        "start": {
          "row": 1213,
          "column": 18
        },
        "end": {
          "row": 1213,
          "column": 23
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1213,
          "column": 23
        },
        "end": {
          "row": 1213,
          "column": 25
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "into",
        "start": {
          "row": 1213,
          "column": 26
        },
        "end": {
          "row": 1213,
          "column": 30
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1213,
          "column": 30
        },
        "end": {
          "row": 1213,
          "column": 32
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1217,
          "column": 1
        },
        "end": {
          "row": 1217,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1217,
          "column": 3
        },
        "end": {
          "row": 1217,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1217,
          "column": 3
        },
        "end": {
          "row": 1217,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1217,
          "column": 9
        },
        "end": {
          "row": 1217,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1217,
          "column": 10
        },
        "end": {
          "row": 1217,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1217,
          "column": 10
        },
        "end": {
          "row": 1217,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1217,
          "column": 17
        },
        "end": {
          "row": 1217,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1217,
          "column": 17
        },
        "end": {
          "row": 1217,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1217,
          "column": 28
        },
        "end": {
          "row": 1217,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1217,
          "column": 28
        },
        "end": {
          "row": 1217,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1217,
          "column": 32
        },
        "end": {
          "row": 1217,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1217,
          "column": 32
        },
        "end": {
          "row": 1217,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1217,
          "column": 48
        },
        "end": {
          "row": 1217,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1217,
          "column": 48
        },
        "end": {
          "row": 1217,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1217,
          "column": 64
        },
        "end": {
          "row": 1217,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1217,
          "column": 64
        },
        "end": {
          "row": 1217,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1217,
          "column": 70
        },
        "end": {
          "row": 1217,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1217,
          "column": 70
        },
        "end": {
          "row": 1217,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct MacroDef {\n    pub tokens: ThinTokenStream,\n    pub legacy: bool,\n}",
        "start": {
          "row": 1218,
          "column": 1
        },
        "end": {
          "row": 1221,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1218,
          "column": 1
        },
        "end": {
          "row": 1218,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MacroDef",
        "start": {
          "row": 1218,
          "column": 12
        },
        "end": {
          "row": 1218,
          "column": 20
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub tokens: ThinTokenStream,\n    pub legacy: bool,\n}",
        "start": {
          "row": 1218,
          "column": 21
        },
        "end": {
          "row": 1221,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub tokens: ThinTokenStream",
        "start": {
          "row": 1219,
          "column": 5
        },
        "end": {
          "row": 1219,
          "column": 32
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1219,
          "column": 5
        },
        "end": {
          "row": 1219,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "tokens",
        "start": {
          "row": 1219,
          "column": 9
        },
        "end": {
          "row": 1219,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ThinTokenStream",
        "start": {
          "row": 1219,
          "column": 17
        },
        "end": {
          "row": 1219,
          "column": 32
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub legacy: bool",
        "start": {
          "row": 1220,
          "column": 5
        },
        "end": {
          "row": 1220,
          "column": 21
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1220,
          "column": 5
        },
        "end": {
          "row": 1220,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "legacy",
        "start": {
          "row": 1220,
          "column": 9
        },
        "end": {
          "row": 1220,
          "column": 15
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1220,
          "column": 17
        },
        "end": {
          "row": 1220,
          "column": 21
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl MacroDef {\n    pub fn stream(&self) -> TokenStream {\n        self.tokens.clone().into()\n    }\n}",
        "start": {
          "row": 1223,
          "column": 1
        },
        "end": {
          "row": 1227,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MacroDef",
        "start": {
          "row": 1223,
          "column": 6
        },
        "end": {
          "row": 1223,
          "column": 14
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn stream(&self) -> TokenStream {\n        self.tokens.clone().into()\n    }\n}",
        "start": {
          "row": 1223,
          "column": 15
        },
        "end": {
          "row": 1227,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn stream(&self) -> TokenStream {\n        self.tokens.clone().into()\n    }",
        "start": {
          "row": 1224,
          "column": 5
        },
        "end": {
          "row": 1226,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1224,
          "column": 5
        },
        "end": {
          "row": 1224,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "stream",
        "start": {
          "row": 1224,
          "column": 12
        },
        "end": {
          "row": 1224,
          "column": 18
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1224,
          "column": 18
        },
        "end": {
          "row": 1224,
          "column": 25
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1224,
          "column": 19
        },
        "end": {
          "row": 1224,
          "column": 24
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1224,
          "column": 20
        },
        "end": {
          "row": 1224,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TokenStream",
        "start": {
          "row": 1224,
          "column": 29
        },
        "end": {
          "row": 1224,
          "column": 40
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        self.tokens.clone().into()\n    }",
        "start": {
          "row": 1224,
          "column": 41
        },
        "end": {
          "row": 1226,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.tokens.clone().into()",
        "start": {
          "row": 1225,
          "column": 9
        },
        "end": {
          "row": 1225,
          "column": 35
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.tokens.clone().into",
        "start": {
          "row": 1225,
          "column": 9
        },
        "end": {
          "row": 1225,
          "column": 33
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.tokens.clone()",
        "start": {
          "row": 1225,
          "column": 9
        },
        "end": {
          "row": 1225,
          "column": 28
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.tokens.clone",
        "start": {
          "row": 1225,
          "column": 9
        },
        "end": {
          "row": 1225,
          "column": 26
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.tokens",
        "start": {
          "row": 1225,
          "column": 9
        },
        "end": {
          "row": 1225,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1225,
          "column": 9
        },
        "end": {
          "row": 1225,
          "column": 13
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "tokens",
        "start": {
          "row": 1225,
          "column": 14
        },
        "end": {
          "row": 1225,
          "column": 20
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "clone",
        "start": {
          "row": 1225,
          "column": 21
        },
        "end": {
          "row": 1225,
          "column": 26
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1225,
          "column": 26
        },
        "end": {
          "row": 1225,
          "column": 28
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "into",
        "start": {
          "row": 1225,
          "column": 29
        },
        "end": {
          "row": 1225,
          "column": 33
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1225,
          "column": 33
        },
        "end": {
          "row": 1225,
          "column": 35
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 1229,
          "column": 1
        },
        "end": {
          "row": 1229,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1229,
          "column": 3
        },
        "end": {
          "row": 1229,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1229,
          "column": 3
        },
        "end": {
          "row": 1229,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1229,
          "column": 9
        },
        "end": {
          "row": 1229,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1229,
          "column": 10
        },
        "end": {
          "row": 1229,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1229,
          "column": 10
        },
        "end": {
          "row": 1229,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1229,
          "column": 17
        },
        "end": {
          "row": 1229,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1229,
          "column": 17
        },
        "end": {
          "row": 1229,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1229,
          "column": 28
        },
        "end": {
          "row": 1229,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1229,
          "column": 28
        },
        "end": {
          "row": 1229,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1229,
          "column": 32
        },
        "end": {
          "row": 1229,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1229,
          "column": 32
        },
        "end": {
          "row": 1229,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1229,
          "column": 48
        },
        "end": {
          "row": 1229,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1229,
          "column": 48
        },
        "end": {
          "row": 1229,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1229,
          "column": 64
        },
        "end": {
          "row": 1229,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1229,
          "column": 64
        },
        "end": {
          "row": 1229,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1229,
          "column": 70
        },
        "end": {
          "row": 1229,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1229,
          "column": 70
        },
        "end": {
          "row": 1229,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1229,
          "column": 77
        },
        "end": {
          "row": 1229,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1229,
          "column": 77
        },
        "end": {
          "row": 1229,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum StrStyle {\n    /// A regular string, like `\"foo\"`\n    Cooked,\n    /// A raw string, like `r##\"foo\"##`\n    ///\n    /// The uint is the number of `#` symbols used\n    Raw(usize)\n}",
        "start": {
          "row": 1230,
          "column": 1
        },
        "end": {
          "row": 1237,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1230,
          "column": 1
        },
        "end": {
          "row": 1230,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "StrStyle",
        "start": {
          "row": 1230,
          "column": 10
        },
        "end": {
          "row": 1230,
          "column": 18
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// A regular string, like `\"foo\"`\n    Cooked,\n    /// A raw string, like `r##\"foo\"##`\n    ///\n    /// The uint is the number of `#` symbols used\n    Raw(usize)\n}",
        "start": {
          "row": 1230,
          "column": 19
        },
        "end": {
          "row": 1237,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A regular string, like `\"foo\"`",
        "start": {
          "row": 1231,
          "column": 5
        },
        "end": {
          "row": 1231,
          "column": 39
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Cooked",
        "start": {
          "row": 1232,
          "column": 5
        },
        "end": {
          "row": 1232,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Cooked",
        "start": {
          "row": 1232,
          "column": 5
        },
        "end": {
          "row": 1232,
          "column": 11
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A raw string, like `r##\"foo\"##`",
        "start": {
          "row": 1233,
          "column": 5
        },
        "end": {
          "row": 1233,
          "column": 40
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1234,
          "column": 5
        },
        "end": {
          "row": 1234,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The uint is the number of `#` symbols used",
        "start": {
          "row": 1235,
          "column": 5
        },
        "end": {
          "row": 1235,
          "column": 51
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Raw(usize)",
        "start": {
          "row": 1236,
          "column": 5
        },
        "end": {
          "row": 1236,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Raw",
        "start": {
          "row": 1236,
          "column": 5
        },
        "end": {
          "row": 1236,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(usize)",
        "start": {
          "row": 1236,
          "column": 8
        },
        "end": {
          "row": 1236,
          "column": 15
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 1236,
          "column": 9
        },
        "end": {
          "row": 1236,
          "column": 14
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A literal",
        "start": {
          "row": 1239,
          "column": 1
        },
        "end": {
          "row": 1239,
          "column": 14
        }
      },
      {
        "kind": "type_item",
        "name": "query",
        "text": "pub type Lit = Spanned<LitKind>;",
        "start": {
          "row": 1240,
          "column": 1
        },
        "end": {
          "row": 1240,
          "column": 33
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1240,
          "column": 1
        },
        "end": {
          "row": 1240,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lit",
        "start": {
          "row": 1240,
          "column": 10
        },
        "end": {
          "row": 1240,
          "column": 13
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Spanned<LitKind>",
        "start": {
          "row": 1240,
          "column": 16
        },
        "end": {
          "row": 1240,
          "column": 32
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Spanned",
        "start": {
          "row": 1240,
          "column": 16
        },
        "end": {
          "row": 1240,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<LitKind>",
        "start": {
          "row": 1240,
          "column": 23
        },
        "end": {
          "row": 1240,
          "column": 32
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1240,
          "column": 24
        },
        "end": {
          "row": 1240,
          "column": 31
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 1242,
          "column": 1
        },
        "end": {
          "row": 1242,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1242,
          "column": 3
        },
        "end": {
          "row": 1242,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1242,
          "column": 3
        },
        "end": {
          "row": 1242,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1242,
          "column": 9
        },
        "end": {
          "row": 1242,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1242,
          "column": 10
        },
        "end": {
          "row": 1242,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1242,
          "column": 10
        },
        "end": {
          "row": 1242,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1242,
          "column": 17
        },
        "end": {
          "row": 1242,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1242,
          "column": 17
        },
        "end": {
          "row": 1242,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1242,
          "column": 28
        },
        "end": {
          "row": 1242,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1242,
          "column": 28
        },
        "end": {
          "row": 1242,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1242,
          "column": 32
        },
        "end": {
          "row": 1242,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1242,
          "column": 32
        },
        "end": {
          "row": 1242,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1242,
          "column": 48
        },
        "end": {
          "row": 1242,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1242,
          "column": 48
        },
        "end": {
          "row": 1242,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1242,
          "column": 64
        },
        "end": {
          "row": 1242,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1242,
          "column": 64
        },
        "end": {
          "row": 1242,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1242,
          "column": 70
        },
        "end": {
          "row": 1242,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1242,
          "column": 70
        },
        "end": {
          "row": 1242,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1242,
          "column": 77
        },
        "end": {
          "row": 1242,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1242,
          "column": 77
        },
        "end": {
          "row": 1242,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum LitIntType {\n    Signed(IntTy),\n    Unsigned(UintTy),\n    Unsuffixed,\n}",
        "start": {
          "row": 1243,
          "column": 1
        },
        "end": {
          "row": 1247,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1243,
          "column": 1
        },
        "end": {
          "row": 1243,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "LitIntType",
        "start": {
          "row": 1243,
          "column": 10
        },
        "end": {
          "row": 1243,
          "column": 20
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Signed(IntTy),\n    Unsigned(UintTy),\n    Unsuffixed,\n}",
        "start": {
          "row": 1243,
          "column": 21
        },
        "end": {
          "row": 1247,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Signed(IntTy)",
        "start": {
          "row": 1244,
          "column": 5
        },
        "end": {
          "row": 1244,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Signed",
        "start": {
          "row": 1244,
          "column": 5
        },
        "end": {
          "row": 1244,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(IntTy)",
        "start": {
          "row": 1244,
          "column": 11
        },
        "end": {
          "row": 1244,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1244,
          "column": 12
        },
        "end": {
          "row": 1244,
          "column": 17
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Unsigned(UintTy)",
        "start": {
          "row": 1245,
          "column": 5
        },
        "end": {
          "row": 1245,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unsigned",
        "start": {
          "row": 1245,
          "column": 5
        },
        "end": {
          "row": 1245,
          "column": 13
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(UintTy)",
        "start": {
          "row": 1245,
          "column": 13
        },
        "end": {
          "row": 1245,
          "column": 21
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1245,
          "column": 14
        },
        "end": {
          "row": 1245,
          "column": 20
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Unsuffixed",
        "start": {
          "row": 1246,
          "column": 5
        },
        "end": {
          "row": 1246,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unsuffixed",
        "start": {
          "row": 1246,
          "column": 5
        },
        "end": {
          "row": 1246,
          "column": 15
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Literal kind.",
        "start": {
          "row": 1249,
          "column": 1
        },
        "end": {
          "row": 1249,
          "column": 18
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1250,
          "column": 1
        },
        "end": {
          "row": 1250,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `\"foo\"`, `42`, `12.34` or `bool`",
        "start": {
          "row": 1251,
          "column": 1
        },
        "end": {
          "row": 1251,
          "column": 42
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1252,
          "column": 1
        },
        "end": {
          "row": 1252,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1252,
          "column": 3
        },
        "end": {
          "row": 1252,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1252,
          "column": 3
        },
        "end": {
          "row": 1252,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1252,
          "column": 9
        },
        "end": {
          "row": 1252,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1252,
          "column": 10
        },
        "end": {
          "row": 1252,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1252,
          "column": 10
        },
        "end": {
          "row": 1252,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1252,
          "column": 17
        },
        "end": {
          "row": 1252,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1252,
          "column": 17
        },
        "end": {
          "row": 1252,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1252,
          "column": 28
        },
        "end": {
          "row": 1252,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1252,
          "column": 28
        },
        "end": {
          "row": 1252,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1252,
          "column": 32
        },
        "end": {
          "row": 1252,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1252,
          "column": 32
        },
        "end": {
          "row": 1252,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1252,
          "column": 48
        },
        "end": {
          "row": 1252,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1252,
          "column": 48
        },
        "end": {
          "row": 1252,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1252,
          "column": 64
        },
        "end": {
          "row": 1252,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1252,
          "column": 64
        },
        "end": {
          "row": 1252,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1252,
          "column": 70
        },
        "end": {
          "row": 1252,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1252,
          "column": 70
        },
        "end": {
          "row": 1252,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum LitKind {\n    /// A string literal (`\"foo\"`)\n    Str(Symbol, StrStyle),\n    /// A byte string (`b\"foo\"`)\n    ByteStr(Rc<Vec<u8>>),\n    /// A byte char (`b'f'`)\n    Byte(u8),\n    /// A character literal (`'a'`)\n    Char(char),\n    /// An integer literal (`1`)\n    Int(u128, LitIntType),\n    /// A float literal (`1f64` or `1E10f64`)\n    Float(Symbol, FloatTy),\n    /// A float literal without a suffix (`1.0 or 1.0E10`)\n    FloatUnsuffixed(Symbol),\n    /// A boolean literal\n    Bool(bool),\n}",
        "start": {
          "row": 1253,
          "column": 1
        },
        "end": {
          "row": 1270,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1253,
          "column": 1
        },
        "end": {
          "row": 1253,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1253,
          "column": 10
        },
        "end": {
          "row": 1253,
          "column": 17
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// A string literal (`\"foo\"`)\n    Str(Symbol, StrStyle),\n    /// A byte string (`b\"foo\"`)\n    ByteStr(Rc<Vec<u8>>),\n    /// A byte char (`b'f'`)\n    Byte(u8),\n    /// A character literal (`'a'`)\n    Char(char),\n    /// An integer literal (`1`)\n    Int(u128, LitIntType),\n    /// A float literal (`1f64` or `1E10f64`)\n    Float(Symbol, FloatTy),\n    /// A float literal without a suffix (`1.0 or 1.0E10`)\n    FloatUnsuffixed(Symbol),\n    /// A boolean literal\n    Bool(bool),\n}",
        "start": {
          "row": 1253,
          "column": 18
        },
        "end": {
          "row": 1270,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A string literal (`\"foo\"`)",
        "start": {
          "row": 1254,
          "column": 5
        },
        "end": {
          "row": 1254,
          "column": 35
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Str(Symbol, StrStyle)",
        "start": {
          "row": 1255,
          "column": 5
        },
        "end": {
          "row": 1255,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Str",
        "start": {
          "row": 1255,
          "column": 5
        },
        "end": {
          "row": 1255,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Symbol, StrStyle)",
        "start": {
          "row": 1255,
          "column": 8
        },
        "end": {
          "row": 1255,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Symbol",
        "start": {
          "row": 1255,
          "column": 9
        },
        "end": {
          "row": 1255,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "StrStyle",
        "start": {
          "row": 1255,
          "column": 17
        },
        "end": {
          "row": 1255,
          "column": 25
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A byte string (`b\"foo\"`)",
        "start": {
          "row": 1256,
          "column": 5
        },
        "end": {
          "row": 1256,
          "column": 33
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "ByteStr(Rc<Vec<u8>>)",
        "start": {
          "row": 1257,
          "column": 5
        },
        "end": {
          "row": 1257,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ByteStr",
        "start": {
          "row": 1257,
          "column": 5
        },
        "end": {
          "row": 1257,
          "column": 12
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Rc<Vec<u8>>)",
        "start": {
          "row": 1257,
          "column": 12
        },
        "end": {
          "row": 1257,
          "column": 25
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Rc<Vec<u8>>",
        "start": {
          "row": 1257,
          "column": 13
        },
        "end": {
          "row": 1257,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Rc",
        "start": {
          "row": 1257,
          "column": 13
        },
        "end": {
          "row": 1257,
          "column": 15
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Vec<u8>>",
        "start": {
          "row": 1257,
          "column": 15
        },
        "end": {
          "row": 1257,
          "column": 24
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<u8>",
        "start": {
          "row": 1257,
          "column": 16
        },
        "end": {
          "row": 1257,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1257,
          "column": 16
        },
        "end": {
          "row": 1257,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<u8>",
        "start": {
          "row": 1257,
          "column": 19
        },
        "end": {
          "row": 1257,
          "column": 23
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "u8",
        "start": {
          "row": 1257,
          "column": 20
        },
        "end": {
          "row": 1257,
          "column": 22
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A byte char (`b'f'`)",
        "start": {
          "row": 1258,
          "column": 5
        },
        "end": {
          "row": 1258,
          "column": 29
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Byte(u8)",
        "start": {
          "row": 1259,
          "column": 5
        },
        "end": {
          "row": 1259,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Byte",
        "start": {
          "row": 1259,
          "column": 5
        },
        "end": {
          "row": 1259,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(u8)",
        "start": {
          "row": 1259,
          "column": 9
        },
        "end": {
          "row": 1259,
          "column": 13
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "u8",
        "start": {
          "row": 1259,
          "column": 10
        },
        "end": {
          "row": 1259,
          "column": 12
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A character literal (`'a'`)",
        "start": {
          "row": 1260,
          "column": 5
        },
        "end": {
          "row": 1260,
          "column": 36
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Char(char)",
        "start": {
          "row": 1261,
          "column": 5
        },
        "end": {
          "row": 1261,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Char",
        "start": {
          "row": 1261,
          "column": 5
        },
        "end": {
          "row": 1261,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(char)",
        "start": {
          "row": 1261,
          "column": 9
        },
        "end": {
          "row": 1261,
          "column": 15
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "char",
        "start": {
          "row": 1261,
          "column": 10
        },
        "end": {
          "row": 1261,
          "column": 14
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An integer literal (`1`)",
        "start": {
          "row": 1262,
          "column": 5
        },
        "end": {
          "row": 1262,
          "column": 33
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Int(u128, LitIntType)",
        "start": {
          "row": 1263,
          "column": 5
        },
        "end": {
          "row": 1263,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Int",
        "start": {
          "row": 1263,
          "column": 5
        },
        "end": {
          "row": 1263,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(u128, LitIntType)",
        "start": {
          "row": 1263,
          "column": 8
        },
        "end": {
          "row": 1263,
          "column": 26
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "u128",
        "start": {
          "row": 1263,
          "column": 9
        },
        "end": {
          "row": 1263,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "LitIntType",
        "start": {
          "row": 1263,
          "column": 15
        },
        "end": {
          "row": 1263,
          "column": 25
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A float literal (`1f64` or `1E10f64`)",
        "start": {
          "row": 1264,
          "column": 5
        },
        "end": {
          "row": 1264,
          "column": 46
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Float(Symbol, FloatTy)",
        "start": {
          "row": 1265,
          "column": 5
        },
        "end": {
          "row": 1265,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Float",
        "start": {
          "row": 1265,
          "column": 5
        },
        "end": {
          "row": 1265,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Symbol, FloatTy)",
        "start": {
          "row": 1265,
          "column": 10
        },
        "end": {
          "row": 1265,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Symbol",
        "start": {
          "row": 1265,
          "column": 11
        },
        "end": {
          "row": 1265,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FloatTy",
        "start": {
          "row": 1265,
          "column": 19
        },
        "end": {
          "row": 1265,
          "column": 26
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A float literal without a suffix (`1.0 or 1.0E10`)",
        "start": {
          "row": 1266,
          "column": 5
        },
        "end": {
          "row": 1266,
          "column": 59
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "FloatUnsuffixed(Symbol)",
        "start": {
          "row": 1267,
          "column": 5
        },
        "end": {
          "row": 1267,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "FloatUnsuffixed",
        "start": {
          "row": 1267,
          "column": 5
        },
        "end": {
          "row": 1267,
          "column": 20
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Symbol)",
        "start": {
          "row": 1267,
          "column": 20
        },
        "end": {
          "row": 1267,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Symbol",
        "start": {
          "row": 1267,
          "column": 21
        },
        "end": {
          "row": 1267,
          "column": 27
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A boolean literal",
        "start": {
          "row": 1268,
          "column": 5
        },
        "end": {
          "row": 1268,
          "column": 26
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Bool(bool)",
        "start": {
          "row": 1269,
          "column": 5
        },
        "end": {
          "row": 1269,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Bool",
        "start": {
          "row": 1269,
          "column": 5
        },
        "end": {
          "row": 1269,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(bool)",
        "start": {
          "row": 1269,
          "column": 9
        },
        "end": {
          "row": 1269,
          "column": 15
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1269,
          "column": 10
        },
        "end": {
          "row": 1269,
          "column": 14
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl LitKind {\n    /// Returns true if this literal is a string and false otherwise.\n    pub fn is_str(&self) -> bool {\n        match *self {\n            LitKind::Str(..) => true,\n            _ => false,\n        }\n    }\n\n    /// Returns true if this literal has no suffix. Note: this will return true\n    /// for literals with prefixes such as raw strings and byte strings.\n    pub fn is_unsuffixed(&self) -> bool {\n        match *self {\n            // unsuffixed variants\n            LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..) |\n            LitKind::Int(_, LitIntType::Unsuffixed) |\n            LitKind::FloatUnsuffixed(..) |\n            LitKind::Bool(..) => true,\n            // suffixed variants\n            LitKind::Int(_, LitIntType::Signed(..)) |\n            LitKind::Int(_, LitIntType::Unsigned(..)) |\n            LitKind::Float(..) => false,\n        }\n    }\n\n    /// Returns true if this literal has a suffix.\n    pub fn is_suffixed(&self) -> bool {\n        !self.is_unsuffixed()\n    }\n}",
        "start": {
          "row": 1272,
          "column": 1
        },
        "end": {
          "row": 1304,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1272,
          "column": 6
        },
        "end": {
          "row": 1272,
          "column": 13
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    /// Returns true if this literal is a string and false otherwise.\n    pub fn is_str(&self) -> bool {\n        match *self {\n            LitKind::Str(..) => true,\n            _ => false,\n        }\n    }\n\n    /// Returns true if this literal has no suffix. Note: this will return true\n    /// for literals with prefixes such as raw strings and byte strings.\n    pub fn is_unsuffixed(&self) -> bool {\n        match *self {\n            // unsuffixed variants\n            LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..) |\n            LitKind::Int(_, LitIntType::Unsuffixed) |\n            LitKind::FloatUnsuffixed(..) |\n            LitKind::Bool(..) => true,\n            // suffixed variants\n            LitKind::Int(_, LitIntType::Signed(..)) |\n            LitKind::Int(_, LitIntType::Unsigned(..)) |\n            LitKind::Float(..) => false,\n        }\n    }\n\n    /// Returns true if this literal has a suffix.\n    pub fn is_suffixed(&self) -> bool {\n        !self.is_unsuffixed()\n    }\n}",
        "start": {
          "row": 1272,
          "column": 14
        },
        "end": {
          "row": 1304,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Returns true if this literal is a string and false otherwise.",
        "start": {
          "row": 1273,
          "column": 5
        },
        "end": {
          "row": 1273,
          "column": 70
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_str(&self) -> bool {\n        match *self {\n            LitKind::Str(..) => true,\n            _ => false,\n        }\n    }",
        "start": {
          "row": 1274,
          "column": 5
        },
        "end": {
          "row": 1279,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1274,
          "column": 5
        },
        "end": {
          "row": 1274,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_str",
        "start": {
          "row": 1274,
          "column": 12
        },
        "end": {
          "row": 1274,
          "column": 18
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1274,
          "column": 18
        },
        "end": {
          "row": 1274,
          "column": 25
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1274,
          "column": 19
        },
        "end": {
          "row": 1274,
          "column": 24
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1274,
          "column": 20
        },
        "end": {
          "row": 1274,
          "column": 24
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1274,
          "column": 29
        },
        "end": {
          "row": 1274,
          "column": 33
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            LitKind::Str(..) => true,\n            _ => false,\n        }\n    }",
        "start": {
          "row": 1274,
          "column": 34
        },
        "end": {
          "row": 1279,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            LitKind::Str(..) => true,\n            _ => false,\n        }",
        "start": {
          "row": 1275,
          "column": 9
        },
        "end": {
          "row": 1278,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1275,
          "column": 15
        },
        "end": {
          "row": 1275,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1275,
          "column": 16
        },
        "end": {
          "row": 1275,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            LitKind::Str(..) => true,\n            _ => false,\n        }",
        "start": {
          "row": 1275,
          "column": 21
        },
        "end": {
          "row": 1278,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "LitKind::Str(..) => true,",
        "start": {
          "row": 1276,
          "column": 13
        },
        "end": {
          "row": 1276,
          "column": 38
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "LitKind::Str(..)",
        "start": {
          "row": 1276,
          "column": 13
        },
        "end": {
          "row": 1276,
          "column": 29
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitKind::Str(..)",
        "start": {
          "row": 1276,
          "column": 13
        },
        "end": {
          "row": 1276,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitKind::Str",
        "start": {
          "row": 1276,
          "column": 13
        },
        "end": {
          "row": 1276,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1276,
          "column": 13
        },
        "end": {
          "row": 1276,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Str",
        "start": {
          "row": 1276,
          "column": 22
        },
        "end": {
          "row": 1276,
          "column": 25
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1276,
          "column": 26
        },
        "end": {
          "row": 1276,
          "column": 28
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 1276,
          "column": 33
        },
        "end": {
          "row": 1276,
          "column": 37
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => false,",
        "start": {
          "row": 1277,
          "column": 13
        },
        "end": {
          "row": 1277,
          "column": 24
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 1277,
          "column": 13
        },
        "end": {
          "row": 1277,
          "column": 14
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 1277,
          "column": 18
        },
        "end": {
          "row": 1277,
          "column": 23
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Returns true if this literal has no suffix. Note: this will return true",
        "start": {
          "row": 1281,
          "column": 5
        },
        "end": {
          "row": 1281,
          "column": 80
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// for literals with prefixes such as raw strings and byte strings.",
        "start": {
          "row": 1282,
          "column": 5
        },
        "end": {
          "row": 1282,
          "column": 73
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_unsuffixed(&self) -> bool {\n        match *self {\n            // unsuffixed variants\n            LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..) |\n            LitKind::Int(_, LitIntType::Unsuffixed) |\n            LitKind::FloatUnsuffixed(..) |\n            LitKind::Bool(..) => true,\n            // suffixed variants\n            LitKind::Int(_, LitIntType::Signed(..)) |\n            LitKind::Int(_, LitIntType::Unsigned(..)) |\n            LitKind::Float(..) => false,\n        }\n    }",
        "start": {
          "row": 1283,
          "column": 5
        },
        "end": {
          "row": 1298,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1283,
          "column": 5
        },
        "end": {
          "row": 1283,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_unsuffixed",
        "start": {
          "row": 1283,
          "column": 12
        },
        "end": {
          "row": 1283,
          "column": 25
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1283,
          "column": 25
        },
        "end": {
          "row": 1283,
          "column": 32
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1283,
          "column": 26
        },
        "end": {
          "row": 1283,
          "column": 31
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1283,
          "column": 27
        },
        "end": {
          "row": 1283,
          "column": 31
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1283,
          "column": 36
        },
        "end": {
          "row": 1283,
          "column": 40
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            // unsuffixed variants\n            LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..) |\n            LitKind::Int(_, LitIntType::Unsuffixed) |\n            LitKind::FloatUnsuffixed(..) |\n            LitKind::Bool(..) => true,\n            // suffixed variants\n            LitKind::Int(_, LitIntType::Signed(..)) |\n            LitKind::Int(_, LitIntType::Unsigned(..)) |\n            LitKind::Float(..) => false,\n        }\n    }",
        "start": {
          "row": 1283,
          "column": 41
        },
        "end": {
          "row": 1298,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            // unsuffixed variants\n            LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..) |\n            LitKind::Int(_, LitIntType::Unsuffixed) |\n            LitKind::FloatUnsuffixed(..) |\n            LitKind::Bool(..) => true,\n            // suffixed variants\n            LitKind::Int(_, LitIntType::Signed(..)) |\n            LitKind::Int(_, LitIntType::Unsigned(..)) |\n            LitKind::Float(..) => false,\n        }",
        "start": {
          "row": 1284,
          "column": 9
        },
        "end": {
          "row": 1297,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1284,
          "column": 15
        },
        "end": {
          "row": 1284,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1284,
          "column": 16
        },
        "end": {
          "row": 1284,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            // unsuffixed variants\n            LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..) |\n            LitKind::Int(_, LitIntType::Unsuffixed) |\n            LitKind::FloatUnsuffixed(..) |\n            LitKind::Bool(..) => true,\n            // suffixed variants\n            LitKind::Int(_, LitIntType::Signed(..)) |\n            LitKind::Int(_, LitIntType::Unsigned(..)) |\n            LitKind::Float(..) => false,\n        }",
        "start": {
          "row": 1284,
          "column": 21
        },
        "end": {
          "row": 1297,
          "column": 10
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// unsuffixed variants",
        "start": {
          "row": 1285,
          "column": 13
        },
        "end": {
          "row": 1285,
          "column": 35
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..) |\n            LitKind::Int(_, LitIntType::Unsuffixed) |\n            LitKind::FloatUnsuffixed(..) |\n            LitKind::Bool(..) => true,",
        "start": {
          "row": 1286,
          "column": 13
        },
        "end": {
          "row": 1292,
          "column": 39
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..) |\n            LitKind::Int(_, LitIntType::Unsuffixed) |\n            LitKind::FloatUnsuffixed(..) |\n            LitKind::Bool(..)",
        "start": {
          "row": 1286,
          "column": 13
        },
        "end": {
          "row": 1292,
          "column": 30
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..) |\n            LitKind::Int(_, LitIntType::Unsuffixed) |\n            LitKind::FloatUnsuffixed(..) |\n            LitKind::Bool(..)",
        "start": {
          "row": 1286,
          "column": 13
        },
        "end": {
          "row": 1292,
          "column": 30
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..) |\n            LitKind::Int(_, LitIntType::Unsuffixed) |\n            LitKind::FloatUnsuffixed(..)",
        "start": {
          "row": 1286,
          "column": 13
        },
        "end": {
          "row": 1291,
          "column": 41
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..) |\n            LitKind::Int(_, LitIntType::Unsuffixed)",
        "start": {
          "row": 1286,
          "column": 13
        },
        "end": {
          "row": 1290,
          "column": 52
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..) |\n            LitKind::Char(..)",
        "start": {
          "row": 1286,
          "column": 13
        },
        "end": {
          "row": 1289,
          "column": 30
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "LitKind::Str(..) |\n            LitKind::ByteStr(..) |\n            LitKind::Byte(..)",
        "start": {
          "row": 1286,
          "column": 13
        },
        "end": {
          "row": 1288,
          "column": 30
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "LitKind::Str(..) |\n            LitKind::ByteStr(..)",
        "start": {
          "row": 1286,
          "column": 13
        },
        "end": {
          "row": 1287,
          "column": 33
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitKind::Str(..)",
        "start": {
          "row": 1286,
          "column": 13
        },
        "end": {
          "row": 1286,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitKind::Str",
        "start": {
          "row": 1286,
          "column": 13
        },
        "end": {
          "row": 1286,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1286,
          "column": 13
        },
        "end": {
          "row": 1286,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Str",
        "start": {
          "row": 1286,
          "column": 22
        },
        "end": {
          "row": 1286,
          "column": 25
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1286,
          "column": 26
        },
        "end": {
          "row": 1286,
          "column": 28
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitKind::ByteStr(..)",
        "start": {
          "row": 1287,
          "column": 13
        },
        "end": {
          "row": 1287,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitKind::ByteStr",
        "start": {
          "row": 1287,
          "column": 13
        },
        "end": {
          "row": 1287,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1287,
          "column": 13
        },
        "end": {
          "row": 1287,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ByteStr",
        "start": {
          "row": 1287,
          "column": 22
        },
        "end": {
          "row": 1287,
          "column": 29
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1287,
          "column": 30
        },
        "end": {
          "row": 1287,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitKind::Byte(..)",
        "start": {
          "row": 1288,
          "column": 13
        },
        "end": {
          "row": 1288,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitKind::Byte",
        "start": {
          "row": 1288,
          "column": 13
        },
        "end": {
          "row": 1288,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1288,
          "column": 13
        },
        "end": {
          "row": 1288,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Byte",
        "start": {
          "row": 1288,
          "column": 22
        },
        "end": {
          "row": 1288,
          "column": 26
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1288,
          "column": 27
        },
        "end": {
          "row": 1288,
          "column": 29
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitKind::Char(..)",
        "start": {
          "row": 1289,
          "column": 13
        },
        "end": {
          "row": 1289,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitKind::Char",
        "start": {
          "row": 1289,
          "column": 13
        },
        "end": {
          "row": 1289,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1289,
          "column": 13
        },
        "end": {
          "row": 1289,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Char",
        "start": {
          "row": 1289,
          "column": 22
        },
        "end": {
          "row": 1289,
          "column": 26
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1289,
          "column": 27
        },
        "end": {
          "row": 1289,
          "column": 29
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitKind::Int(_, LitIntType::Unsuffixed)",
        "start": {
          "row": 1290,
          "column": 13
        },
        "end": {
          "row": 1290,
          "column": 52
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitKind::Int",
        "start": {
          "row": 1290,
          "column": 13
        },
        "end": {
          "row": 1290,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1290,
          "column": 13
        },
        "end": {
          "row": 1290,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Int",
        "start": {
          "row": 1290,
          "column": 22
        },
        "end": {
          "row": 1290,
          "column": 25
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitIntType::Unsuffixed",
        "start": {
          "row": 1290,
          "column": 29
        },
        "end": {
          "row": 1290,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitIntType",
        "start": {
          "row": 1290,
          "column": 29
        },
        "end": {
          "row": 1290,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unsuffixed",
        "start": {
          "row": 1290,
          "column": 41
        },
        "end": {
          "row": 1290,
          "column": 51
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitKind::FloatUnsuffixed(..)",
        "start": {
          "row": 1291,
          "column": 13
        },
        "end": {
          "row": 1291,
          "column": 41
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitKind::FloatUnsuffixed",
        "start": {
          "row": 1291,
          "column": 13
        },
        "end": {
          "row": 1291,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1291,
          "column": 13
        },
        "end": {
          "row": 1291,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "FloatUnsuffixed",
        "start": {
          "row": 1291,
          "column": 22
        },
        "end": {
          "row": 1291,
          "column": 37
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1291,
          "column": 38
        },
        "end": {
          "row": 1291,
          "column": 40
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitKind::Bool(..)",
        "start": {
          "row": 1292,
          "column": 13
        },
        "end": {
          "row": 1292,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitKind::Bool",
        "start": {
          "row": 1292,
          "column": 13
        },
        "end": {
          "row": 1292,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1292,
          "column": 13
        },
        "end": {
          "row": 1292,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Bool",
        "start": {
          "row": 1292,
          "column": 22
        },
        "end": {
          "row": 1292,
          "column": 26
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1292,
          "column": 27
        },
        "end": {
          "row": 1292,
          "column": 29
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 1292,
          "column": 34
        },
        "end": {
          "row": 1292,
          "column": 38
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// suffixed variants",
        "start": {
          "row": 1293,
          "column": 13
        },
        "end": {
          "row": 1293,
          "column": 33
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "LitKind::Int(_, LitIntType::Signed(..)) |\n            LitKind::Int(_, LitIntType::Unsigned(..)) |\n            LitKind::Float(..) => false,",
        "start": {
          "row": 1294,
          "column": 13
        },
        "end": {
          "row": 1296,
          "column": 41
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "LitKind::Int(_, LitIntType::Signed(..)) |\n            LitKind::Int(_, LitIntType::Unsigned(..)) |\n            LitKind::Float(..)",
        "start": {
          "row": 1294,
          "column": 13
        },
        "end": {
          "row": 1296,
          "column": 31
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "LitKind::Int(_, LitIntType::Signed(..)) |\n            LitKind::Int(_, LitIntType::Unsigned(..)) |\n            LitKind::Float(..)",
        "start": {
          "row": 1294,
          "column": 13
        },
        "end": {
          "row": 1296,
          "column": 31
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "LitKind::Int(_, LitIntType::Signed(..)) |\n            LitKind::Int(_, LitIntType::Unsigned(..))",
        "start": {
          "row": 1294,
          "column": 13
        },
        "end": {
          "row": 1295,
          "column": 54
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitKind::Int(_, LitIntType::Signed(..))",
        "start": {
          "row": 1294,
          "column": 13
        },
        "end": {
          "row": 1294,
          "column": 52
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitKind::Int",
        "start": {
          "row": 1294,
          "column": 13
        },
        "end": {
          "row": 1294,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1294,
          "column": 13
        },
        "end": {
          "row": 1294,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Int",
        "start": {
          "row": 1294,
          "column": 22
        },
        "end": {
          "row": 1294,
          "column": 25
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitIntType::Signed(..)",
        "start": {
          "row": 1294,
          "column": 29
        },
        "end": {
          "row": 1294,
          "column": 51
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitIntType::Signed",
        "start": {
          "row": 1294,
          "column": 29
        },
        "end": {
          "row": 1294,
          "column": 47
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitIntType",
        "start": {
          "row": 1294,
          "column": 29
        },
        "end": {
          "row": 1294,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Signed",
        "start": {
          "row": 1294,
          "column": 41
        },
        "end": {
          "row": 1294,
          "column": 47
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1294,
          "column": 48
        },
        "end": {
          "row": 1294,
          "column": 50
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitKind::Int(_, LitIntType::Unsigned(..))",
        "start": {
          "row": 1295,
          "column": 13
        },
        "end": {
          "row": 1295,
          "column": 54
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitKind::Int",
        "start": {
          "row": 1295,
          "column": 13
        },
        "end": {
          "row": 1295,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1295,
          "column": 13
        },
        "end": {
          "row": 1295,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Int",
        "start": {
          "row": 1295,
          "column": 22
        },
        "end": {
          "row": 1295,
          "column": 25
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitIntType::Unsigned(..)",
        "start": {
          "row": 1295,
          "column": 29
        },
        "end": {
          "row": 1295,
          "column": 53
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitIntType::Unsigned",
        "start": {
          "row": 1295,
          "column": 29
        },
        "end": {
          "row": 1295,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitIntType",
        "start": {
          "row": 1295,
          "column": 29
        },
        "end": {
          "row": 1295,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unsigned",
        "start": {
          "row": 1295,
          "column": 41
        },
        "end": {
          "row": 1295,
          "column": 49
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1295,
          "column": 50
        },
        "end": {
          "row": 1295,
          "column": 52
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "LitKind::Float(..)",
        "start": {
          "row": 1296,
          "column": 13
        },
        "end": {
          "row": 1296,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "LitKind::Float",
        "start": {
          "row": 1296,
          "column": 13
        },
        "end": {
          "row": 1296,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "LitKind",
        "start": {
          "row": 1296,
          "column": 13
        },
        "end": {
          "row": 1296,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Float",
        "start": {
          "row": 1296,
          "column": 22
        },
        "end": {
          "row": 1296,
          "column": 27
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1296,
          "column": 28
        },
        "end": {
          "row": 1296,
          "column": 30
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 1296,
          "column": 35
        },
        "end": {
          "row": 1296,
          "column": 40
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Returns true if this literal has a suffix.",
        "start": {
          "row": 1300,
          "column": 5
        },
        "end": {
          "row": 1300,
          "column": 51
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_suffixed(&self) -> bool {\n        !self.is_unsuffixed()\n    }",
        "start": {
          "row": 1301,
          "column": 5
        },
        "end": {
          "row": 1303,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1301,
          "column": 5
        },
        "end": {
          "row": 1301,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_suffixed",
        "start": {
          "row": 1301,
          "column": 12
        },
        "end": {
          "row": 1301,
          "column": 23
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1301,
          "column": 23
        },
        "end": {
          "row": 1301,
          "column": 30
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1301,
          "column": 24
        },
        "end": {
          "row": 1301,
          "column": 29
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1301,
          "column": 25
        },
        "end": {
          "row": 1301,
          "column": 29
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1301,
          "column": 34
        },
        "end": {
          "row": 1301,
          "column": 38
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        !self.is_unsuffixed()\n    }",
        "start": {
          "row": 1301,
          "column": 39
        },
        "end": {
          "row": 1303,
          "column": 6
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "!self.is_unsuffixed()",
        "start": {
          "row": 1302,
          "column": 9
        },
        "end": {
          "row": 1302,
          "column": 30
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.is_unsuffixed()",
        "start": {
          "row": 1302,
          "column": 10
        },
        "end": {
          "row": 1302,
          "column": 30
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.is_unsuffixed",
        "start": {
          "row": 1302,
          "column": 10
        },
        "end": {
          "row": 1302,
          "column": 28
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1302,
          "column": 10
        },
        "end": {
          "row": 1302,
          "column": 14
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_unsuffixed",
        "start": {
          "row": 1302,
          "column": 15
        },
        "end": {
          "row": 1302,
          "column": 28
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1302,
          "column": 28
        },
        "end": {
          "row": 1302,
          "column": 30
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// NB: If you change this, you'll probably want to change the corresponding",
        "start": {
          "row": 1306,
          "column": 1
        },
        "end": {
          "row": 1306,
          "column": 76
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// type structure in middle/ty.rs as well.",
        "start": {
          "row": 1307,
          "column": 1
        },
        "end": {
          "row": 1307,
          "column": 43
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1308,
          "column": 1
        },
        "end": {
          "row": 1308,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1308,
          "column": 3
        },
        "end": {
          "row": 1308,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1308,
          "column": 3
        },
        "end": {
          "row": 1308,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1308,
          "column": 9
        },
        "end": {
          "row": 1308,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1308,
          "column": 10
        },
        "end": {
          "row": 1308,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1308,
          "column": 10
        },
        "end": {
          "row": 1308,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1308,
          "column": 17
        },
        "end": {
          "row": 1308,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1308,
          "column": 17
        },
        "end": {
          "row": 1308,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1308,
          "column": 28
        },
        "end": {
          "row": 1308,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1308,
          "column": 28
        },
        "end": {
          "row": 1308,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1308,
          "column": 32
        },
        "end": {
          "row": 1308,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1308,
          "column": 32
        },
        "end": {
          "row": 1308,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1308,
          "column": 48
        },
        "end": {
          "row": 1308,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1308,
          "column": 48
        },
        "end": {
          "row": 1308,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1308,
          "column": 64
        },
        "end": {
          "row": 1308,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1308,
          "column": 64
        },
        "end": {
          "row": 1308,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1308,
          "column": 70
        },
        "end": {
          "row": 1308,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1308,
          "column": 70
        },
        "end": {
          "row": 1308,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct MutTy {\n    pub ty: P<Ty>,\n    pub mutbl: Mutability,\n}",
        "start": {
          "row": 1309,
          "column": 1
        },
        "end": {
          "row": 1312,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1309,
          "column": 1
        },
        "end": {
          "row": 1309,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MutTy",
        "start": {
          "row": 1309,
          "column": 12
        },
        "end": {
          "row": 1309,
          "column": 17
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub ty: P<Ty>,\n    pub mutbl: Mutability,\n}",
        "start": {
          "row": 1309,
          "column": 18
        },
        "end": {
          "row": 1312,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ty: P<Ty>",
        "start": {
          "row": 1310,
          "column": 5
        },
        "end": {
          "row": 1310,
          "column": 18
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1310,
          "column": 5
        },
        "end": {
          "row": 1310,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1310,
          "column": 9
        },
        "end": {
          "row": 1310,
          "column": 11
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1310,
          "column": 13
        },
        "end": {
          "row": 1310,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1310,
          "column": 13
        },
        "end": {
          "row": 1310,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1310,
          "column": 14
        },
        "end": {
          "row": 1310,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1310,
          "column": 15
        },
        "end": {
          "row": 1310,
          "column": 17
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub mutbl: Mutability",
        "start": {
          "row": 1311,
          "column": 5
        },
        "end": {
          "row": 1311,
          "column": 26
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1311,
          "column": 5
        },
        "end": {
          "row": 1311,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1311,
          "column": 9
        },
        "end": {
          "row": 1311,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mutability",
        "start": {
          "row": 1311,
          "column": 16
        },
        "end": {
          "row": 1311,
          "column": 26
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Represents a method's signature in a trait declaration,",
        "start": {
          "row": 1314,
          "column": 1
        },
        "end": {
          "row": 1314,
          "column": 60
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// or in an implementation.",
        "start": {
          "row": 1315,
          "column": 1
        },
        "end": {
          "row": 1315,
          "column": 29
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1316,
          "column": 1
        },
        "end": {
          "row": 1316,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1316,
          "column": 3
        },
        "end": {
          "row": 1316,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1316,
          "column": 3
        },
        "end": {
          "row": 1316,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1316,
          "column": 9
        },
        "end": {
          "row": 1316,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1316,
          "column": 10
        },
        "end": {
          "row": 1316,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1316,
          "column": 10
        },
        "end": {
          "row": 1316,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1316,
          "column": 17
        },
        "end": {
          "row": 1316,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1316,
          "column": 17
        },
        "end": {
          "row": 1316,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1316,
          "column": 28
        },
        "end": {
          "row": 1316,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1316,
          "column": 28
        },
        "end": {
          "row": 1316,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1316,
          "column": 32
        },
        "end": {
          "row": 1316,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1316,
          "column": 32
        },
        "end": {
          "row": 1316,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1316,
          "column": 48
        },
        "end": {
          "row": 1316,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1316,
          "column": 48
        },
        "end": {
          "row": 1316,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1316,
          "column": 64
        },
        "end": {
          "row": 1316,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1316,
          "column": 64
        },
        "end": {
          "row": 1316,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1316,
          "column": 70
        },
        "end": {
          "row": 1316,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1316,
          "column": 70
        },
        "end": {
          "row": 1316,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct MethodSig {\n    pub unsafety: Unsafety,\n    pub constness: Spanned<Constness>,\n    pub abi: Abi,\n    pub decl: P<FnDecl>,\n}",
        "start": {
          "row": 1317,
          "column": 1
        },
        "end": {
          "row": 1322,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1317,
          "column": 1
        },
        "end": {
          "row": 1317,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MethodSig",
        "start": {
          "row": 1317,
          "column": 12
        },
        "end": {
          "row": 1317,
          "column": 21
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub unsafety: Unsafety,\n    pub constness: Spanned<Constness>,\n    pub abi: Abi,\n    pub decl: P<FnDecl>,\n}",
        "start": {
          "row": 1317,
          "column": 22
        },
        "end": {
          "row": 1322,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub unsafety: Unsafety",
        "start": {
          "row": 1318,
          "column": 5
        },
        "end": {
          "row": 1318,
          "column": 27
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1318,
          "column": 5
        },
        "end": {
          "row": 1318,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "unsafety",
        "start": {
          "row": 1318,
          "column": 9
        },
        "end": {
          "row": 1318,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Unsafety",
        "start": {
          "row": 1318,
          "column": 19
        },
        "end": {
          "row": 1318,
          "column": 27
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub constness: Spanned<Constness>",
        "start": {
          "row": 1319,
          "column": 5
        },
        "end": {
          "row": 1319,
          "column": 38
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1319,
          "column": 5
        },
        "end": {
          "row": 1319,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "constness",
        "start": {
          "row": 1319,
          "column": 9
        },
        "end": {
          "row": 1319,
          "column": 18
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Spanned<Constness>",
        "start": {
          "row": 1319,
          "column": 20
        },
        "end": {
          "row": 1319,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Spanned",
        "start": {
          "row": 1319,
          "column": 20
        },
        "end": {
          "row": 1319,
          "column": 27
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Constness>",
        "start": {
          "row": 1319,
          "column": 27
        },
        "end": {
          "row": 1319,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Constness",
        "start": {
          "row": 1319,
          "column": 28
        },
        "end": {
          "row": 1319,
          "column": 37
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub abi: Abi",
        "start": {
          "row": 1320,
          "column": 5
        },
        "end": {
          "row": 1320,
          "column": 17
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1320,
          "column": 5
        },
        "end": {
          "row": 1320,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "abi",
        "start": {
          "row": 1320,
          "column": 9
        },
        "end": {
          "row": 1320,
          "column": 12
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Abi",
        "start": {
          "row": 1320,
          "column": 14
        },
        "end": {
          "row": 1320,
          "column": 17
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub decl: P<FnDecl>",
        "start": {
          "row": 1321,
          "column": 5
        },
        "end": {
          "row": 1321,
          "column": 24
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1321,
          "column": 5
        },
        "end": {
          "row": 1321,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "decl",
        "start": {
          "row": 1321,
          "column": 9
        },
        "end": {
          "row": 1321,
          "column": 13
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<FnDecl>",
        "start": {
          "row": 1321,
          "column": 15
        },
        "end": {
          "row": 1321,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1321,
          "column": 15
        },
        "end": {
          "row": 1321,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<FnDecl>",
        "start": {
          "row": 1321,
          "column": 16
        },
        "end": {
          "row": 1321,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FnDecl",
        "start": {
          "row": 1321,
          "column": 17
        },
        "end": {
          "row": 1321,
          "column": 23
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Represents an item declaration within a trait declaration,",
        "start": {
          "row": 1324,
          "column": 1
        },
        "end": {
          "row": 1324,
          "column": 63
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// possibly including a default implementation. A trait item is",
        "start": {
          "row": 1325,
          "column": 1
        },
        "end": {
          "row": 1325,
          "column": 65
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// either required (meaning it doesn't have an implementation, just a",
        "start": {
          "row": 1326,
          "column": 1
        },
        "end": {
          "row": 1326,
          "column": 71
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// signature) or provided (meaning it has a default implementation).",
        "start": {
          "row": 1327,
          "column": 1
        },
        "end": {
          "row": 1327,
          "column": 70
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1328,
          "column": 1
        },
        "end": {
          "row": 1328,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1328,
          "column": 3
        },
        "end": {
          "row": 1328,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1328,
          "column": 3
        },
        "end": {
          "row": 1328,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1328,
          "column": 9
        },
        "end": {
          "row": 1328,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1328,
          "column": 10
        },
        "end": {
          "row": 1328,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1328,
          "column": 10
        },
        "end": {
          "row": 1328,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1328,
          "column": 17
        },
        "end": {
          "row": 1328,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1328,
          "column": 17
        },
        "end": {
          "row": 1328,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1328,
          "column": 28
        },
        "end": {
          "row": 1328,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1328,
          "column": 28
        },
        "end": {
          "row": 1328,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1328,
          "column": 32
        },
        "end": {
          "row": 1328,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1328,
          "column": 32
        },
        "end": {
          "row": 1328,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1328,
          "column": 48
        },
        "end": {
          "row": 1328,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1328,
          "column": 48
        },
        "end": {
          "row": 1328,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1328,
          "column": 64
        },
        "end": {
          "row": 1328,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1328,
          "column": 64
        },
        "end": {
          "row": 1328,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1328,
          "column": 70
        },
        "end": {
          "row": 1328,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1328,
          "column": 70
        },
        "end": {
          "row": 1328,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct TraitItem {\n    pub id: NodeId,\n    pub ident: Ident,\n    pub attrs: Vec<Attribute>,\n    pub generics: Generics,\n    pub node: TraitItemKind,\n    pub span: Span,\n    /// See `Item::tokens` for what this is\n    pub tokens: Option<TokenStream>,\n}",
        "start": {
          "row": 1329,
          "column": 1
        },
        "end": {
          "row": 1338,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1329,
          "column": 1
        },
        "end": {
          "row": 1329,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TraitItem",
        "start": {
          "row": 1329,
          "column": 12
        },
        "end": {
          "row": 1329,
          "column": 21
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub id: NodeId,\n    pub ident: Ident,\n    pub attrs: Vec<Attribute>,\n    pub generics: Generics,\n    pub node: TraitItemKind,\n    pub span: Span,\n    /// See `Item::tokens` for what this is\n    pub tokens: Option<TokenStream>,\n}",
        "start": {
          "row": 1329,
          "column": 22
        },
        "end": {
          "row": 1338,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 1330,
          "column": 5
        },
        "end": {
          "row": 1330,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1330,
          "column": 5
        },
        "end": {
          "row": 1330,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1330,
          "column": 9
        },
        "end": {
          "row": 1330,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1330,
          "column": 13
        },
        "end": {
          "row": 1330,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ident: Ident",
        "start": {
          "row": 1331,
          "column": 5
        },
        "end": {
          "row": 1331,
          "column": 21
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1331,
          "column": 5
        },
        "end": {
          "row": 1331,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 1331,
          "column": 9
        },
        "end": {
          "row": 1331,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 1331,
          "column": 16
        },
        "end": {
          "row": 1331,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: Vec<Attribute>",
        "start": {
          "row": 1332,
          "column": 5
        },
        "end": {
          "row": 1332,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1332,
          "column": 5
        },
        "end": {
          "row": 1332,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 1332,
          "column": 9
        },
        "end": {
          "row": 1332,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Attribute>",
        "start": {
          "row": 1332,
          "column": 16
        },
        "end": {
          "row": 1332,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1332,
          "column": 16
        },
        "end": {
          "row": 1332,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 1332,
          "column": 19
        },
        "end": {
          "row": 1332,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 1332,
          "column": 20
        },
        "end": {
          "row": 1332,
          "column": 29
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub generics: Generics",
        "start": {
          "row": 1333,
          "column": 5
        },
        "end": {
          "row": 1333,
          "column": 27
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1333,
          "column": 5
        },
        "end": {
          "row": 1333,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "generics",
        "start": {
          "row": 1333,
          "column": 9
        },
        "end": {
          "row": 1333,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 1333,
          "column": 19
        },
        "end": {
          "row": 1333,
          "column": 27
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub node: TraitItemKind",
        "start": {
          "row": 1334,
          "column": 5
        },
        "end": {
          "row": 1334,
          "column": 28
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1334,
          "column": 5
        },
        "end": {
          "row": 1334,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1334,
          "column": 9
        },
        "end": {
          "row": 1334,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TraitItemKind",
        "start": {
          "row": 1334,
          "column": 15
        },
        "end": {
          "row": 1334,
          "column": 28
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 1335,
          "column": 5
        },
        "end": {
          "row": 1335,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1335,
          "column": 5
        },
        "end": {
          "row": 1335,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1335,
          "column": 9
        },
        "end": {
          "row": 1335,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1335,
          "column": 15
        },
        "end": {
          "row": 1335,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// See `Item::tokens` for what this is",
        "start": {
          "row": 1336,
          "column": 5
        },
        "end": {
          "row": 1336,
          "column": 44
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub tokens: Option<TokenStream>",
        "start": {
          "row": 1337,
          "column": 5
        },
        "end": {
          "row": 1337,
          "column": 36
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1337,
          "column": 5
        },
        "end": {
          "row": 1337,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "tokens",
        "start": {
          "row": 1337,
          "column": 9
        },
        "end": {
          "row": 1337,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<TokenStream>",
        "start": {
          "row": 1337,
          "column": 17
        },
        "end": {
          "row": 1337,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1337,
          "column": 17
        },
        "end": {
          "row": 1337,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<TokenStream>",
        "start": {
          "row": 1337,
          "column": 23
        },
        "end": {
          "row": 1337,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TokenStream",
        "start": {
          "row": 1337,
          "column": 24
        },
        "end": {
          "row": 1337,
          "column": 35
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1340,
          "column": 1
        },
        "end": {
          "row": 1340,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1340,
          "column": 3
        },
        "end": {
          "row": 1340,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1340,
          "column": 3
        },
        "end": {
          "row": 1340,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1340,
          "column": 9
        },
        "end": {
          "row": 1340,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1340,
          "column": 10
        },
        "end": {
          "row": 1340,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1340,
          "column": 10
        },
        "end": {
          "row": 1340,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1340,
          "column": 17
        },
        "end": {
          "row": 1340,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1340,
          "column": 17
        },
        "end": {
          "row": 1340,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1340,
          "column": 28
        },
        "end": {
          "row": 1340,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1340,
          "column": 28
        },
        "end": {
          "row": 1340,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1340,
          "column": 32
        },
        "end": {
          "row": 1340,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1340,
          "column": 32
        },
        "end": {
          "row": 1340,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1340,
          "column": 48
        },
        "end": {
          "row": 1340,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1340,
          "column": 48
        },
        "end": {
          "row": 1340,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1340,
          "column": 64
        },
        "end": {
          "row": 1340,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1340,
          "column": 64
        },
        "end": {
          "row": 1340,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1340,
          "column": 70
        },
        "end": {
          "row": 1340,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1340,
          "column": 70
        },
        "end": {
          "row": 1340,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum TraitItemKind {\n    Const(P<Ty>, Option<P<Expr>>),\n    Method(MethodSig, Option<P<Block>>),\n    Type(TyParamBounds, Option<P<Ty>>),\n    Macro(Mac),\n}",
        "start": {
          "row": 1341,
          "column": 1
        },
        "end": {
          "row": 1346,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1341,
          "column": 1
        },
        "end": {
          "row": 1341,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TraitItemKind",
        "start": {
          "row": 1341,
          "column": 10
        },
        "end": {
          "row": 1341,
          "column": 23
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Const(P<Ty>, Option<P<Expr>>),\n    Method(MethodSig, Option<P<Block>>),\n    Type(TyParamBounds, Option<P<Ty>>),\n    Macro(Mac),\n}",
        "start": {
          "row": 1341,
          "column": 24
        },
        "end": {
          "row": 1346,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Const(P<Ty>, Option<P<Expr>>)",
        "start": {
          "row": 1342,
          "column": 5
        },
        "end": {
          "row": 1342,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Const",
        "start": {
          "row": 1342,
          "column": 5
        },
        "end": {
          "row": 1342,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Ty>, Option<P<Expr>>)",
        "start": {
          "row": 1342,
          "column": 10
        },
        "end": {
          "row": 1342,
          "column": 34
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1342,
          "column": 11
        },
        "end": {
          "row": 1342,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1342,
          "column": 11
        },
        "end": {
          "row": 1342,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1342,
          "column": 12
        },
        "end": {
          "row": 1342,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1342,
          "column": 13
        },
        "end": {
          "row": 1342,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Expr>>",
        "start": {
          "row": 1342,
          "column": 18
        },
        "end": {
          "row": 1342,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1342,
          "column": 18
        },
        "end": {
          "row": 1342,
          "column": 24
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1342,
          "column": 24
        },
        "end": {
          "row": 1342,
          "column": 33
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1342,
          "column": 25
        },
        "end": {
          "row": 1342,
          "column": 32
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1342,
          "column": 25
        },
        "end": {
          "row": 1342,
          "column": 26
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1342,
          "column": 26
        },
        "end": {
          "row": 1342,
          "column": 32
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1342,
          "column": 27
        },
        "end": {
          "row": 1342,
          "column": 31
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Method(MethodSig, Option<P<Block>>)",
        "start": {
          "row": 1343,
          "column": 5
        },
        "end": {
          "row": 1343,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Method",
        "start": {
          "row": 1343,
          "column": 5
        },
        "end": {
          "row": 1343,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(MethodSig, Option<P<Block>>)",
        "start": {
          "row": 1343,
          "column": 11
        },
        "end": {
          "row": 1343,
          "column": 40
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MethodSig",
        "start": {
          "row": 1343,
          "column": 12
        },
        "end": {
          "row": 1343,
          "column": 21
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Block>>",
        "start": {
          "row": 1343,
          "column": 23
        },
        "end": {
          "row": 1343,
          "column": 39
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1343,
          "column": 23
        },
        "end": {
          "row": 1343,
          "column": 29
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Block>>",
        "start": {
          "row": 1343,
          "column": 29
        },
        "end": {
          "row": 1343,
          "column": 39
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Block>",
        "start": {
          "row": 1343,
          "column": 30
        },
        "end": {
          "row": 1343,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1343,
          "column": 30
        },
        "end": {
          "row": 1343,
          "column": 31
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Block>",
        "start": {
          "row": 1343,
          "column": 31
        },
        "end": {
          "row": 1343,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 1343,
          "column": 32
        },
        "end": {
          "row": 1343,
          "column": 37
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Type(TyParamBounds, Option<P<Ty>>)",
        "start": {
          "row": 1344,
          "column": 5
        },
        "end": {
          "row": 1344,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Type",
        "start": {
          "row": 1344,
          "column": 5
        },
        "end": {
          "row": 1344,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(TyParamBounds, Option<P<Ty>>)",
        "start": {
          "row": 1344,
          "column": 9
        },
        "end": {
          "row": 1344,
          "column": 39
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParamBounds",
        "start": {
          "row": 1344,
          "column": 10
        },
        "end": {
          "row": 1344,
          "column": 23
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Ty>>",
        "start": {
          "row": 1344,
          "column": 25
        },
        "end": {
          "row": 1344,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1344,
          "column": 25
        },
        "end": {
          "row": 1344,
          "column": 31
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Ty>>",
        "start": {
          "row": 1344,
          "column": 31
        },
        "end": {
          "row": 1344,
          "column": 38
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1344,
          "column": 32
        },
        "end": {
          "row": 1344,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1344,
          "column": 32
        },
        "end": {
          "row": 1344,
          "column": 33
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1344,
          "column": 33
        },
        "end": {
          "row": 1344,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1344,
          "column": 34
        },
        "end": {
          "row": 1344,
          "column": 36
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Macro(Mac)",
        "start": {
          "row": 1345,
          "column": 5
        },
        "end": {
          "row": 1345,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Macro",
        "start": {
          "row": 1345,
          "column": 5
        },
        "end": {
          "row": 1345,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Mac)",
        "start": {
          "row": 1345,
          "column": 10
        },
        "end": {
          "row": 1345,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 1345,
          "column": 11
        },
        "end": {
          "row": 1345,
          "column": 14
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1348,
          "column": 1
        },
        "end": {
          "row": 1348,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1348,
          "column": 3
        },
        "end": {
          "row": 1348,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1348,
          "column": 3
        },
        "end": {
          "row": 1348,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1348,
          "column": 9
        },
        "end": {
          "row": 1348,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1348,
          "column": 10
        },
        "end": {
          "row": 1348,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1348,
          "column": 10
        },
        "end": {
          "row": 1348,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1348,
          "column": 17
        },
        "end": {
          "row": 1348,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1348,
          "column": 17
        },
        "end": {
          "row": 1348,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1348,
          "column": 28
        },
        "end": {
          "row": 1348,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1348,
          "column": 28
        },
        "end": {
          "row": 1348,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1348,
          "column": 32
        },
        "end": {
          "row": 1348,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1348,
          "column": 32
        },
        "end": {
          "row": 1348,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1348,
          "column": 48
        },
        "end": {
          "row": 1348,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1348,
          "column": 48
        },
        "end": {
          "row": 1348,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1348,
          "column": 64
        },
        "end": {
          "row": 1348,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1348,
          "column": 64
        },
        "end": {
          "row": 1348,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1348,
          "column": 70
        },
        "end": {
          "row": 1348,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1348,
          "column": 70
        },
        "end": {
          "row": 1348,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct ImplItem {\n    pub id: NodeId,\n    pub ident: Ident,\n    pub vis: Visibility,\n    pub defaultness: Defaultness,\n    pub attrs: Vec<Attribute>,\n    pub generics: Generics,\n    pub node: ImplItemKind,\n    pub span: Span,\n    /// See `Item::tokens` for what this is\n    pub tokens: Option<TokenStream>,\n}",
        "start": {
          "row": 1349,
          "column": 1
        },
        "end": {
          "row": 1360,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1349,
          "column": 1
        },
        "end": {
          "row": 1349,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ImplItem",
        "start": {
          "row": 1349,
          "column": 12
        },
        "end": {
          "row": 1349,
          "column": 20
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub id: NodeId,\n    pub ident: Ident,\n    pub vis: Visibility,\n    pub defaultness: Defaultness,\n    pub attrs: Vec<Attribute>,\n    pub generics: Generics,\n    pub node: ImplItemKind,\n    pub span: Span,\n    /// See `Item::tokens` for what this is\n    pub tokens: Option<TokenStream>,\n}",
        "start": {
          "row": 1349,
          "column": 21
        },
        "end": {
          "row": 1360,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 1350,
          "column": 5
        },
        "end": {
          "row": 1350,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1350,
          "column": 5
        },
        "end": {
          "row": 1350,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1350,
          "column": 9
        },
        "end": {
          "row": 1350,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1350,
          "column": 13
        },
        "end": {
          "row": 1350,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ident: Ident",
        "start": {
          "row": 1351,
          "column": 5
        },
        "end": {
          "row": 1351,
          "column": 21
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1351,
          "column": 5
        },
        "end": {
          "row": 1351,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 1351,
          "column": 9
        },
        "end": {
          "row": 1351,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 1351,
          "column": 16
        },
        "end": {
          "row": 1351,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub vis: Visibility",
        "start": {
          "row": 1352,
          "column": 5
        },
        "end": {
          "row": 1352,
          "column": 24
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1352,
          "column": 5
        },
        "end": {
          "row": 1352,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "vis",
        "start": {
          "row": 1352,
          "column": 9
        },
        "end": {
          "row": 1352,
          "column": 12
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Visibility",
        "start": {
          "row": 1352,
          "column": 14
        },
        "end": {
          "row": 1352,
          "column": 24
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub defaultness: Defaultness",
        "start": {
          "row": 1353,
          "column": 5
        },
        "end": {
          "row": 1353,
          "column": 33
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1353,
          "column": 5
        },
        "end": {
          "row": 1353,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "defaultness",
        "start": {
          "row": 1353,
          "column": 9
        },
        "end": {
          "row": 1353,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Defaultness",
        "start": {
          "row": 1353,
          "column": 22
        },
        "end": {
          "row": 1353,
          "column": 33
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: Vec<Attribute>",
        "start": {
          "row": 1354,
          "column": 5
        },
        "end": {
          "row": 1354,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1354,
          "column": 5
        },
        "end": {
          "row": 1354,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 1354,
          "column": 9
        },
        "end": {
          "row": 1354,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Attribute>",
        "start": {
          "row": 1354,
          "column": 16
        },
        "end": {
          "row": 1354,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1354,
          "column": 16
        },
        "end": {
          "row": 1354,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 1354,
          "column": 19
        },
        "end": {
          "row": 1354,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 1354,
          "column": 20
        },
        "end": {
          "row": 1354,
          "column": 29
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub generics: Generics",
        "start": {
          "row": 1355,
          "column": 5
        },
        "end": {
          "row": 1355,
          "column": 27
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1355,
          "column": 5
        },
        "end": {
          "row": 1355,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "generics",
        "start": {
          "row": 1355,
          "column": 9
        },
        "end": {
          "row": 1355,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 1355,
          "column": 19
        },
        "end": {
          "row": 1355,
          "column": 27
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub node: ImplItemKind",
        "start": {
          "row": 1356,
          "column": 5
        },
        "end": {
          "row": 1356,
          "column": 27
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1356,
          "column": 5
        },
        "end": {
          "row": 1356,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1356,
          "column": 9
        },
        "end": {
          "row": 1356,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ImplItemKind",
        "start": {
          "row": 1356,
          "column": 15
        },
        "end": {
          "row": 1356,
          "column": 27
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 1357,
          "column": 5
        },
        "end": {
          "row": 1357,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1357,
          "column": 5
        },
        "end": {
          "row": 1357,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1357,
          "column": 9
        },
        "end": {
          "row": 1357,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1357,
          "column": 15
        },
        "end": {
          "row": 1357,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// See `Item::tokens` for what this is",
        "start": {
          "row": 1358,
          "column": 5
        },
        "end": {
          "row": 1358,
          "column": 44
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub tokens: Option<TokenStream>",
        "start": {
          "row": 1359,
          "column": 5
        },
        "end": {
          "row": 1359,
          "column": 36
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1359,
          "column": 5
        },
        "end": {
          "row": 1359,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "tokens",
        "start": {
          "row": 1359,
          "column": 9
        },
        "end": {
          "row": 1359,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<TokenStream>",
        "start": {
          "row": 1359,
          "column": 17
        },
        "end": {
          "row": 1359,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1359,
          "column": 17
        },
        "end": {
          "row": 1359,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<TokenStream>",
        "start": {
          "row": 1359,
          "column": 23
        },
        "end": {
          "row": 1359,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TokenStream",
        "start": {
          "row": 1359,
          "column": 24
        },
        "end": {
          "row": 1359,
          "column": 35
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1362,
          "column": 1
        },
        "end": {
          "row": 1362,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1362,
          "column": 3
        },
        "end": {
          "row": 1362,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1362,
          "column": 3
        },
        "end": {
          "row": 1362,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1362,
          "column": 9
        },
        "end": {
          "row": 1362,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1362,
          "column": 10
        },
        "end": {
          "row": 1362,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1362,
          "column": 10
        },
        "end": {
          "row": 1362,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1362,
          "column": 17
        },
        "end": {
          "row": 1362,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1362,
          "column": 17
        },
        "end": {
          "row": 1362,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1362,
          "column": 28
        },
        "end": {
          "row": 1362,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1362,
          "column": 28
        },
        "end": {
          "row": 1362,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1362,
          "column": 32
        },
        "end": {
          "row": 1362,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1362,
          "column": 32
        },
        "end": {
          "row": 1362,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1362,
          "column": 48
        },
        "end": {
          "row": 1362,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1362,
          "column": 48
        },
        "end": {
          "row": 1362,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1362,
          "column": 64
        },
        "end": {
          "row": 1362,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1362,
          "column": 64
        },
        "end": {
          "row": 1362,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1362,
          "column": 70
        },
        "end": {
          "row": 1362,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1362,
          "column": 70
        },
        "end": {
          "row": 1362,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum ImplItemKind {\n    Const(P<Ty>, P<Expr>),\n    Method(MethodSig, P<Block>),\n    Type(P<Ty>),\n    Macro(Mac),\n}",
        "start": {
          "row": 1363,
          "column": 1
        },
        "end": {
          "row": 1368,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1363,
          "column": 1
        },
        "end": {
          "row": 1363,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ImplItemKind",
        "start": {
          "row": 1363,
          "column": 10
        },
        "end": {
          "row": 1363,
          "column": 22
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Const(P<Ty>, P<Expr>),\n    Method(MethodSig, P<Block>),\n    Type(P<Ty>),\n    Macro(Mac),\n}",
        "start": {
          "row": 1363,
          "column": 23
        },
        "end": {
          "row": 1368,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Const(P<Ty>, P<Expr>)",
        "start": {
          "row": 1364,
          "column": 5
        },
        "end": {
          "row": 1364,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Const",
        "start": {
          "row": 1364,
          "column": 5
        },
        "end": {
          "row": 1364,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Ty>, P<Expr>)",
        "start": {
          "row": 1364,
          "column": 10
        },
        "end": {
          "row": 1364,
          "column": 26
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1364,
          "column": 11
        },
        "end": {
          "row": 1364,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1364,
          "column": 11
        },
        "end": {
          "row": 1364,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1364,
          "column": 12
        },
        "end": {
          "row": 1364,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1364,
          "column": 13
        },
        "end": {
          "row": 1364,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1364,
          "column": 18
        },
        "end": {
          "row": 1364,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1364,
          "column": 18
        },
        "end": {
          "row": 1364,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1364,
          "column": 19
        },
        "end": {
          "row": 1364,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1364,
          "column": 20
        },
        "end": {
          "row": 1364,
          "column": 24
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Method(MethodSig, P<Block>)",
        "start": {
          "row": 1365,
          "column": 5
        },
        "end": {
          "row": 1365,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Method",
        "start": {
          "row": 1365,
          "column": 5
        },
        "end": {
          "row": 1365,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(MethodSig, P<Block>)",
        "start": {
          "row": 1365,
          "column": 11
        },
        "end": {
          "row": 1365,
          "column": 32
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MethodSig",
        "start": {
          "row": 1365,
          "column": 12
        },
        "end": {
          "row": 1365,
          "column": 21
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Block>",
        "start": {
          "row": 1365,
          "column": 23
        },
        "end": {
          "row": 1365,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1365,
          "column": 23
        },
        "end": {
          "row": 1365,
          "column": 24
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Block>",
        "start": {
          "row": 1365,
          "column": 24
        },
        "end": {
          "row": 1365,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 1365,
          "column": 25
        },
        "end": {
          "row": 1365,
          "column": 30
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Type(P<Ty>)",
        "start": {
          "row": 1366,
          "column": 5
        },
        "end": {
          "row": 1366,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Type",
        "start": {
          "row": 1366,
          "column": 5
        },
        "end": {
          "row": 1366,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Ty>)",
        "start": {
          "row": 1366,
          "column": 9
        },
        "end": {
          "row": 1366,
          "column": 16
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1366,
          "column": 10
        },
        "end": {
          "row": 1366,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1366,
          "column": 10
        },
        "end": {
          "row": 1366,
          "column": 11
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1366,
          "column": 11
        },
        "end": {
          "row": 1366,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1366,
          "column": 12
        },
        "end": {
          "row": 1366,
          "column": 14
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Macro(Mac)",
        "start": {
          "row": 1367,
          "column": 5
        },
        "end": {
          "row": 1367,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Macro",
        "start": {
          "row": 1367,
          "column": 5
        },
        "end": {
          "row": 1367,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Mac)",
        "start": {
          "row": 1367,
          "column": 10
        },
        "end": {
          "row": 1367,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 1367,
          "column": 11
        },
        "end": {
          "row": 1367,
          "column": 14
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy,\n         PartialOrd, Ord)]",
        "start": {
          "row": 1370,
          "column": 1
        },
        "end": {
          "row": 1371,
          "column": 27
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy,\n         PartialOrd, Ord)",
        "start": {
          "row": 1370,
          "column": 3
        },
        "end": {
          "row": 1371,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1370,
          "column": 3
        },
        "end": {
          "row": 1370,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy,\n         PartialOrd, Ord)",
        "start": {
          "row": 1370,
          "column": 9
        },
        "end": {
          "row": 1371,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1370,
          "column": 10
        },
        "end": {
          "row": 1370,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1370,
          "column": 10
        },
        "end": {
          "row": 1370,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1370,
          "column": 17
        },
        "end": {
          "row": 1370,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1370,
          "column": 17
        },
        "end": {
          "row": 1370,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1370,
          "column": 28
        },
        "end": {
          "row": 1370,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1370,
          "column": 28
        },
        "end": {
          "row": 1370,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1370,
          "column": 32
        },
        "end": {
          "row": 1370,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1370,
          "column": 32
        },
        "end": {
          "row": 1370,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1370,
          "column": 48
        },
        "end": {
          "row": 1370,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1370,
          "column": 48
        },
        "end": {
          "row": 1370,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1370,
          "column": 64
        },
        "end": {
          "row": 1370,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1370,
          "column": 64
        },
        "end": {
          "row": 1370,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1370,
          "column": 70
        },
        "end": {
          "row": 1370,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1370,
          "column": 70
        },
        "end": {
          "row": 1370,
          "column": 74
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialOrd",
        "start": {
          "row": 1371,
          "column": 10
        },
        "end": {
          "row": 1371,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialOrd",
        "start": {
          "row": 1371,
          "column": 10
        },
        "end": {
          "row": 1371,
          "column": 20
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Ord",
        "start": {
          "row": 1371,
          "column": 22
        },
        "end": {
          "row": 1371,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ord",
        "start": {
          "row": 1371,
          "column": 22
        },
        "end": {
          "row": 1371,
          "column": 25
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum IntTy {\n    Isize,\n    I8,\n    I16,\n    I32,\n    I64,\n    I128,\n}",
        "start": {
          "row": 1372,
          "column": 1
        },
        "end": {
          "row": 1379,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1372,
          "column": 1
        },
        "end": {
          "row": 1372,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1372,
          "column": 10
        },
        "end": {
          "row": 1372,
          "column": 15
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Isize,\n    I8,\n    I16,\n    I32,\n    I64,\n    I128,\n}",
        "start": {
          "row": 1372,
          "column": 16
        },
        "end": {
          "row": 1379,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Isize",
        "start": {
          "row": 1373,
          "column": 5
        },
        "end": {
          "row": 1373,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Isize",
        "start": {
          "row": 1373,
          "column": 5
        },
        "end": {
          "row": 1373,
          "column": 10
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "I8",
        "start": {
          "row": 1374,
          "column": 5
        },
        "end": {
          "row": 1374,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I8",
        "start": {
          "row": 1374,
          "column": 5
        },
        "end": {
          "row": 1374,
          "column": 7
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "I16",
        "start": {
          "row": 1375,
          "column": 5
        },
        "end": {
          "row": 1375,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I16",
        "start": {
          "row": 1375,
          "column": 5
        },
        "end": {
          "row": 1375,
          "column": 8
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "I32",
        "start": {
          "row": 1376,
          "column": 5
        },
        "end": {
          "row": 1376,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I32",
        "start": {
          "row": 1376,
          "column": 5
        },
        "end": {
          "row": 1376,
          "column": 8
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "I64",
        "start": {
          "row": 1377,
          "column": 5
        },
        "end": {
          "row": 1377,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I64",
        "start": {
          "row": 1377,
          "column": 5
        },
        "end": {
          "row": 1377,
          "column": 8
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "I128",
        "start": {
          "row": 1378,
          "column": 5
        },
        "end": {
          "row": 1378,
          "column": 9
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I128",
        "start": {
          "row": 1378,
          "column": 5
        },
        "end": {
          "row": 1378,
          "column": 9
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Debug for IntTy {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(self, f)\n    }\n}",
        "start": {
          "row": 1381,
          "column": 1
        },
        "end": {
          "row": 1385,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Debug",
        "start": {
          "row": 1381,
          "column": 6
        },
        "end": {
          "row": 1381,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1381,
          "column": 6
        },
        "end": {
          "row": 1381,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1381,
          "column": 11
        },
        "end": {
          "row": 1381,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1381,
          "column": 21
        },
        "end": {
          "row": 1381,
          "column": 26
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(self, f)\n    }\n}",
        "start": {
          "row": 1381,
          "column": 27
        },
        "end": {
          "row": 1385,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(self, f)\n    }",
        "start": {
          "row": 1382,
          "column": 5
        },
        "end": {
          "row": 1384,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1382,
          "column": 8
        },
        "end": {
          "row": 1382,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 1382,
          "column": 11
        },
        "end": {
          "row": 1382,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1382,
          "column": 12
        },
        "end": {
          "row": 1382,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1382,
          "column": 13
        },
        "end": {
          "row": 1382,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 1382,
          "column": 19
        },
        "end": {
          "row": 1382,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1382,
          "column": 19
        },
        "end": {
          "row": 1382,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 1382,
          "column": 22
        },
        "end": {
          "row": 1382,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 1382,
          "column": 23
        },
        "end": {
          "row": 1382,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 1382,
          "column": 27
        },
        "end": {
          "row": 1382,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1382,
          "column": 27
        },
        "end": {
          "row": 1382,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 1382,
          "column": 32
        },
        "end": {
          "row": 1382,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 1382,
          "column": 46
        },
        "end": {
          "row": 1382,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1382,
          "column": 46
        },
        "end": {
          "row": 1382,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 1382,
          "column": 51
        },
        "end": {
          "row": 1382,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        fmt::Display::fmt(self, f)\n    }",
        "start": {
          "row": 1382,
          "column": 58
        },
        "end": {
          "row": 1384,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "fmt::Display::fmt(self, f)",
        "start": {
          "row": 1383,
          "column": 9
        },
        "end": {
          "row": 1383,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "fmt::Display::fmt",
        "start": {
          "row": 1383,
          "column": 9
        },
        "end": {
          "row": 1383,
          "column": 26
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "fmt::Display",
        "start": {
          "row": 1383,
          "column": 9
        },
        "end": {
          "row": 1383,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1383,
          "column": 9
        },
        "end": {
          "row": 1383,
          "column": 12
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Display",
        "start": {
          "row": 1383,
          "column": 14
        },
        "end": {
          "row": 1383,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1383,
          "column": 23
        },
        "end": {
          "row": 1383,
          "column": 26
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self, f)",
        "start": {
          "row": 1383,
          "column": 26
        },
        "end": {
          "row": 1383,
          "column": 35
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1383,
          "column": 27
        },
        "end": {
          "row": 1383,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1383,
          "column": 33
        },
        "end": {
          "row": 1383,
          "column": 34
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Display for IntTy {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.ty_to_string())\n    }\n}",
        "start": {
          "row": 1387,
          "column": 1
        },
        "end": {
          "row": 1391,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Display",
        "start": {
          "row": 1387,
          "column": 6
        },
        "end": {
          "row": 1387,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1387,
          "column": 6
        },
        "end": {
          "row": 1387,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Display",
        "start": {
          "row": 1387,
          "column": 11
        },
        "end": {
          "row": 1387,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1387,
          "column": 23
        },
        "end": {
          "row": 1387,
          "column": 28
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.ty_to_string())\n    }\n}",
        "start": {
          "row": 1387,
          "column": 29
        },
        "end": {
          "row": 1391,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.ty_to_string())\n    }",
        "start": {
          "row": 1388,
          "column": 5
        },
        "end": {
          "row": 1390,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1388,
          "column": 8
        },
        "end": {
          "row": 1388,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 1388,
          "column": 11
        },
        "end": {
          "row": 1388,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1388,
          "column": 12
        },
        "end": {
          "row": 1388,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1388,
          "column": 13
        },
        "end": {
          "row": 1388,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 1388,
          "column": 19
        },
        "end": {
          "row": 1388,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1388,
          "column": 19
        },
        "end": {
          "row": 1388,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 1388,
          "column": 22
        },
        "end": {
          "row": 1388,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 1388,
          "column": 23
        },
        "end": {
          "row": 1388,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 1388,
          "column": 27
        },
        "end": {
          "row": 1388,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1388,
          "column": 27
        },
        "end": {
          "row": 1388,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 1388,
          "column": 32
        },
        "end": {
          "row": 1388,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 1388,
          "column": 46
        },
        "end": {
          "row": 1388,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1388,
          "column": 46
        },
        "end": {
          "row": 1388,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 1388,
          "column": 51
        },
        "end": {
          "row": 1388,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        write!(f, \"{}\", self.ty_to_string())\n    }",
        "start": {
          "row": 1388,
          "column": 58
        },
        "end": {
          "row": 1390,
          "column": 6
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "write!(f, \"{}\", self.ty_to_string())",
        "start": {
          "row": 1389,
          "column": 9
        },
        "end": {
          "row": 1389,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "write",
        "start": {
          "row": 1389,
          "column": 9
        },
        "end": {
          "row": 1389,
          "column": 14
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(f, \"{}\", self.ty_to_string())",
        "start": {
          "row": 1389,
          "column": 15
        },
        "end": {
          "row": 1389,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1389,
          "column": 16
        },
        "end": {
          "row": 1389,
          "column": 17
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"{}\"",
        "start": {
          "row": 1389,
          "column": 19
        },
        "end": {
          "row": 1389,
          "column": 23
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1389,
          "column": 25
        },
        "end": {
          "row": 1389,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty_to_string",
        "start": {
          "row": 1389,
          "column": 30
        },
        "end": {
          "row": 1389,
          "column": 42
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1389,
          "column": 42
        },
        "end": {
          "row": 1389,
          "column": 44
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl IntTy {\n    pub fn ty_to_string(&self) -> &'static str {\n        match *self {\n            IntTy::Isize => \"isize\",\n            IntTy::I8 => \"i8\",\n            IntTy::I16 => \"i16\",\n            IntTy::I32 => \"i32\",\n            IntTy::I64 => \"i64\",\n            IntTy::I128 => \"i128\",\n        }\n    }\n\n    pub fn val_to_string(&self, val: i128) -> String {\n        // cast to a u128 so we can correctly print INT128_MIN. All integral types\n        // are parsed as u128, so we wouldn't want to print an extra negative\n        // sign.\n        format!(\"{}{}\", val as u128, self.ty_to_string())\n    }\n\n    pub fn bit_width(&self) -> Option<usize> {\n        Some(match *self {\n            IntTy::Isize => return None,\n            IntTy::I8 => 8,\n            IntTy::I16 => 16,\n            IntTy::I32 => 32,\n            IntTy::I64 => 64,\n            IntTy::I128 => 128,\n        })\n    }\n}",
        "start": {
          "row": 1393,
          "column": 1
        },
        "end": {
          "row": 1422,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1393,
          "column": 6
        },
        "end": {
          "row": 1393,
          "column": 11
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn ty_to_string(&self) -> &'static str {\n        match *self {\n            IntTy::Isize => \"isize\",\n            IntTy::I8 => \"i8\",\n            IntTy::I16 => \"i16\",\n            IntTy::I32 => \"i32\",\n            IntTy::I64 => \"i64\",\n            IntTy::I128 => \"i128\",\n        }\n    }\n\n    pub fn val_to_string(&self, val: i128) -> String {\n        // cast to a u128 so we can correctly print INT128_MIN. All integral types\n        // are parsed as u128, so we wouldn't want to print an extra negative\n        // sign.\n        format!(\"{}{}\", val as u128, self.ty_to_string())\n    }\n\n    pub fn bit_width(&self) -> Option<usize> {\n        Some(match *self {\n            IntTy::Isize => return None,\n            IntTy::I8 => 8,\n            IntTy::I16 => 16,\n            IntTy::I32 => 32,\n            IntTy::I64 => 64,\n            IntTy::I128 => 128,\n        })\n    }\n}",
        "start": {
          "row": 1393,
          "column": 12
        },
        "end": {
          "row": 1422,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn ty_to_string(&self) -> &'static str {\n        match *self {\n            IntTy::Isize => \"isize\",\n            IntTy::I8 => \"i8\",\n            IntTy::I16 => \"i16\",\n            IntTy::I32 => \"i32\",\n            IntTy::I64 => \"i64\",\n            IntTy::I128 => \"i128\",\n        }\n    }",
        "start": {
          "row": 1394,
          "column": 5
        },
        "end": {
          "row": 1403,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1394,
          "column": 5
        },
        "end": {
          "row": 1394,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty_to_string",
        "start": {
          "row": 1394,
          "column": 12
        },
        "end": {
          "row": 1394,
          "column": 24
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1394,
          "column": 24
        },
        "end": {
          "row": 1394,
          "column": 31
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1394,
          "column": 25
        },
        "end": {
          "row": 1394,
          "column": 30
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1394,
          "column": 26
        },
        "end": {
          "row": 1394,
          "column": 30
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&'static str",
        "start": {
          "row": 1394,
          "column": 35
        },
        "end": {
          "row": 1394,
          "column": 47
        }
      },
      {
        "kind": "lifetime",
        "name": "query",
        "text": "'static",
        "start": {
          "row": 1394,
          "column": 36
        },
        "end": {
          "row": 1394,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "static",
        "start": {
          "row": 1394,
          "column": 37
        },
        "end": {
          "row": 1394,
          "column": 43
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 1394,
          "column": 44
        },
        "end": {
          "row": 1394,
          "column": 47
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            IntTy::Isize => \"isize\",\n            IntTy::I8 => \"i8\",\n            IntTy::I16 => \"i16\",\n            IntTy::I32 => \"i32\",\n            IntTy::I64 => \"i64\",\n            IntTy::I128 => \"i128\",\n        }\n    }",
        "start": {
          "row": 1394,
          "column": 48
        },
        "end": {
          "row": 1403,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            IntTy::Isize => \"isize\",\n            IntTy::I8 => \"i8\",\n            IntTy::I16 => \"i16\",\n            IntTy::I32 => \"i32\",\n            IntTy::I64 => \"i64\",\n            IntTy::I128 => \"i128\",\n        }",
        "start": {
          "row": 1395,
          "column": 9
        },
        "end": {
          "row": 1402,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1395,
          "column": 15
        },
        "end": {
          "row": 1395,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1395,
          "column": 16
        },
        "end": {
          "row": 1395,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            IntTy::Isize => \"isize\",\n            IntTy::I8 => \"i8\",\n            IntTy::I16 => \"i16\",\n            IntTy::I32 => \"i32\",\n            IntTy::I64 => \"i64\",\n            IntTy::I128 => \"i128\",\n        }",
        "start": {
          "row": 1395,
          "column": 21
        },
        "end": {
          "row": 1402,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "IntTy::Isize => \"isize\",",
        "start": {
          "row": 1396,
          "column": 13
        },
        "end": {
          "row": 1396,
          "column": 37
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "IntTy::Isize",
        "start": {
          "row": 1396,
          "column": 13
        },
        "end": {
          "row": 1396,
          "column": 25
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "IntTy::Isize",
        "start": {
          "row": 1396,
          "column": 13
        },
        "end": {
          "row": 1396,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1396,
          "column": 13
        },
        "end": {
          "row": 1396,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Isize",
        "start": {
          "row": 1396,
          "column": 20
        },
        "end": {
          "row": 1396,
          "column": 25
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"isize\"",
        "start": {
          "row": 1396,
          "column": 29
        },
        "end": {
          "row": 1396,
          "column": 36
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "IntTy::I8 => \"i8\",",
        "start": {
          "row": 1397,
          "column": 13
        },
        "end": {
          "row": 1397,
          "column": 31
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "IntTy::I8",
        "start": {
          "row": 1397,
          "column": 13
        },
        "end": {
          "row": 1397,
          "column": 22
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "IntTy::I8",
        "start": {
          "row": 1397,
          "column": 13
        },
        "end": {
          "row": 1397,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1397,
          "column": 13
        },
        "end": {
          "row": 1397,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I8",
        "start": {
          "row": 1397,
          "column": 20
        },
        "end": {
          "row": 1397,
          "column": 22
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"i8\"",
        "start": {
          "row": 1397,
          "column": 26
        },
        "end": {
          "row": 1397,
          "column": 30
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "IntTy::I16 => \"i16\",",
        "start": {
          "row": 1398,
          "column": 13
        },
        "end": {
          "row": 1398,
          "column": 33
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "IntTy::I16",
        "start": {
          "row": 1398,
          "column": 13
        },
        "end": {
          "row": 1398,
          "column": 23
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "IntTy::I16",
        "start": {
          "row": 1398,
          "column": 13
        },
        "end": {
          "row": 1398,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1398,
          "column": 13
        },
        "end": {
          "row": 1398,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I16",
        "start": {
          "row": 1398,
          "column": 20
        },
        "end": {
          "row": 1398,
          "column": 23
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"i16\"",
        "start": {
          "row": 1398,
          "column": 27
        },
        "end": {
          "row": 1398,
          "column": 32
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "IntTy::I32 => \"i32\",",
        "start": {
          "row": 1399,
          "column": 13
        },
        "end": {
          "row": 1399,
          "column": 33
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "IntTy::I32",
        "start": {
          "row": 1399,
          "column": 13
        },
        "end": {
          "row": 1399,
          "column": 23
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "IntTy::I32",
        "start": {
          "row": 1399,
          "column": 13
        },
        "end": {
          "row": 1399,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1399,
          "column": 13
        },
        "end": {
          "row": 1399,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I32",
        "start": {
          "row": 1399,
          "column": 20
        },
        "end": {
          "row": 1399,
          "column": 23
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"i32\"",
        "start": {
          "row": 1399,
          "column": 27
        },
        "end": {
          "row": 1399,
          "column": 32
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "IntTy::I64 => \"i64\",",
        "start": {
          "row": 1400,
          "column": 13
        },
        "end": {
          "row": 1400,
          "column": 33
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "IntTy::I64",
        "start": {
          "row": 1400,
          "column": 13
        },
        "end": {
          "row": 1400,
          "column": 23
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "IntTy::I64",
        "start": {
          "row": 1400,
          "column": 13
        },
        "end": {
          "row": 1400,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1400,
          "column": 13
        },
        "end": {
          "row": 1400,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I64",
        "start": {
          "row": 1400,
          "column": 20
        },
        "end": {
          "row": 1400,
          "column": 23
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"i64\"",
        "start": {
          "row": 1400,
          "column": 27
        },
        "end": {
          "row": 1400,
          "column": 32
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "IntTy::I128 => \"i128\",",
        "start": {
          "row": 1401,
          "column": 13
        },
        "end": {
          "row": 1401,
          "column": 35
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "IntTy::I128",
        "start": {
          "row": 1401,
          "column": 13
        },
        "end": {
          "row": 1401,
          "column": 24
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "IntTy::I128",
        "start": {
          "row": 1401,
          "column": 13
        },
        "end": {
          "row": 1401,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1401,
          "column": 13
        },
        "end": {
          "row": 1401,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I128",
        "start": {
          "row": 1401,
          "column": 20
        },
        "end": {
          "row": 1401,
          "column": 24
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"i128\"",
        "start": {
          "row": 1401,
          "column": 28
        },
        "end": {
          "row": 1401,
          "column": 34
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn val_to_string(&self, val: i128) -> String {\n        // cast to a u128 so we can correctly print INT128_MIN. All integral types\n        // are parsed as u128, so we wouldn't want to print an extra negative\n        // sign.\n        format!(\"{}{}\", val as u128, self.ty_to_string())\n    }",
        "start": {
          "row": 1405,
          "column": 5
        },
        "end": {
          "row": 1410,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1405,
          "column": 5
        },
        "end": {
          "row": 1405,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "val_to_string",
        "start": {
          "row": 1405,
          "column": 12
        },
        "end": {
          "row": 1405,
          "column": 25
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, val: i128)",
        "start": {
          "row": 1405,
          "column": 25
        },
        "end": {
          "row": 1405,
          "column": 43
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1405,
          "column": 26
        },
        "end": {
          "row": 1405,
          "column": 31
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1405,
          "column": 27
        },
        "end": {
          "row": 1405,
          "column": 31
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "val: i128",
        "start": {
          "row": 1405,
          "column": 33
        },
        "end": {
          "row": 1405,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "val",
        "start": {
          "row": 1405,
          "column": 33
        },
        "end": {
          "row": 1405,
          "column": 36
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "i128",
        "start": {
          "row": 1405,
          "column": 38
        },
        "end": {
          "row": 1405,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "String",
        "start": {
          "row": 1405,
          "column": 47
        },
        "end": {
          "row": 1405,
          "column": 53
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        // cast to a u128 so we can correctly print INT128_MIN. All integral types\n        // are parsed as u128, so we wouldn't want to print an extra negative\n        // sign.\n        format!(\"{}{}\", val as u128, self.ty_to_string())\n    }",
        "start": {
          "row": 1405,
          "column": 54
        },
        "end": {
          "row": 1410,
          "column": 6
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// cast to a u128 so we can correctly print INT128_MIN. All integral types",
        "start": {
          "row": 1406,
          "column": 9
        },
        "end": {
          "row": 1406,
          "column": 83
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// are parsed as u128, so we wouldn't want to print an extra negative",
        "start": {
          "row": 1407,
          "column": 9
        },
        "end": {
          "row": 1407,
          "column": 78
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// sign.",
        "start": {
          "row": 1408,
          "column": 9
        },
        "end": {
          "row": 1408,
          "column": 17
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "format!(\"{}{}\", val as u128, self.ty_to_string())",
        "start": {
          "row": 1409,
          "column": 9
        },
        "end": {
          "row": 1409,
          "column": 58
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "format",
        "start": {
          "row": 1409,
          "column": 9
        },
        "end": {
          "row": 1409,
          "column": 15
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(\"{}{}\", val as u128, self.ty_to_string())",
        "start": {
          "row": 1409,
          "column": 16
        },
        "end": {
          "row": 1409,
          "column": 58
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"{}{}\"",
        "start": {
          "row": 1409,
          "column": 17
        },
        "end": {
          "row": 1409,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "val",
        "start": {
          "row": 1409,
          "column": 25
        },
        "end": {
          "row": 1409,
          "column": 28
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "u128",
        "start": {
          "row": 1409,
          "column": 32
        },
        "end": {
          "row": 1409,
          "column": 36
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1409,
          "column": 38
        },
        "end": {
          "row": 1409,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty_to_string",
        "start": {
          "row": 1409,
          "column": 43
        },
        "end": {
          "row": 1409,
          "column": 55
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1409,
          "column": 55
        },
        "end": {
          "row": 1409,
          "column": 57
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn bit_width(&self) -> Option<usize> {\n        Some(match *self {\n            IntTy::Isize => return None,\n            IntTy::I8 => 8,\n            IntTy::I16 => 16,\n            IntTy::I32 => 32,\n            IntTy::I64 => 64,\n            IntTy::I128 => 128,\n        })\n    }",
        "start": {
          "row": 1412,
          "column": 5
        },
        "end": {
          "row": 1421,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1412,
          "column": 5
        },
        "end": {
          "row": 1412,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "bit_width",
        "start": {
          "row": 1412,
          "column": 12
        },
        "end": {
          "row": 1412,
          "column": 21
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1412,
          "column": 21
        },
        "end": {
          "row": 1412,
          "column": 28
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1412,
          "column": 22
        },
        "end": {
          "row": 1412,
          "column": 27
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1412,
          "column": 23
        },
        "end": {
          "row": 1412,
          "column": 27
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<usize>",
        "start": {
          "row": 1412,
          "column": 32
        },
        "end": {
          "row": 1412,
          "column": 45
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1412,
          "column": 32
        },
        "end": {
          "row": 1412,
          "column": 38
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<usize>",
        "start": {
          "row": 1412,
          "column": 38
        },
        "end": {
          "row": 1412,
          "column": 45
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 1412,
          "column": 39
        },
        "end": {
          "row": 1412,
          "column": 44
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        Some(match *self {\n            IntTy::Isize => return None,\n            IntTy::I8 => 8,\n            IntTy::I16 => 16,\n            IntTy::I32 => 32,\n            IntTy::I64 => 64,\n            IntTy::I128 => 128,\n        })\n    }",
        "start": {
          "row": 1412,
          "column": 46
        },
        "end": {
          "row": 1421,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Some(match *self {\n            IntTy::Isize => return None,\n            IntTy::I8 => 8,\n            IntTy::I16 => 16,\n            IntTy::I32 => 32,\n            IntTy::I64 => 64,\n            IntTy::I128 => 128,\n        })",
        "start": {
          "row": 1413,
          "column": 9
        },
        "end": {
          "row": 1420,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 1413,
          "column": 9
        },
        "end": {
          "row": 1413,
          "column": 13
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(match *self {\n            IntTy::Isize => return None,\n            IntTy::I8 => 8,\n            IntTy::I16 => 16,\n            IntTy::I32 => 32,\n            IntTy::I64 => 64,\n            IntTy::I128 => 128,\n        })",
        "start": {
          "row": 1413,
          "column": 13
        },
        "end": {
          "row": 1420,
          "column": 11
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            IntTy::Isize => return None,\n            IntTy::I8 => 8,\n            IntTy::I16 => 16,\n            IntTy::I32 => 32,\n            IntTy::I64 => 64,\n            IntTy::I128 => 128,\n        }",
        "start": {
          "row": 1413,
          "column": 14
        },
        "end": {
          "row": 1420,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1413,
          "column": 20
        },
        "end": {
          "row": 1413,
          "column": 25
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1413,
          "column": 21
        },
        "end": {
          "row": 1413,
          "column": 25
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            IntTy::Isize => return None,\n            IntTy::I8 => 8,\n            IntTy::I16 => 16,\n            IntTy::I32 => 32,\n            IntTy::I64 => 64,\n            IntTy::I128 => 128,\n        }",
        "start": {
          "row": 1413,
          "column": 26
        },
        "end": {
          "row": 1420,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "IntTy::Isize => return None,",
        "start": {
          "row": 1414,
          "column": 13
        },
        "end": {
          "row": 1414,
          "column": 41
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "IntTy::Isize",
        "start": {
          "row": 1414,
          "column": 13
        },
        "end": {
          "row": 1414,
          "column": 25
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "IntTy::Isize",
        "start": {
          "row": 1414,
          "column": 13
        },
        "end": {
          "row": 1414,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1414,
          "column": 13
        },
        "end": {
          "row": 1414,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Isize",
        "start": {
          "row": 1414,
          "column": 20
        },
        "end": {
          "row": 1414,
          "column": 25
        }
      },
      {
        "kind": "return_expression",
        "name": "query",
        "text": "return None",
        "start": {
          "row": 1414,
          "column": 29
        },
        "end": {
          "row": 1414,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 1414,
          "column": 36
        },
        "end": {
          "row": 1414,
          "column": 40
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "IntTy::I8 => 8,",
        "start": {
          "row": 1415,
          "column": 13
        },
        "end": {
          "row": 1415,
          "column": 28
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "IntTy::I8",
        "start": {
          "row": 1415,
          "column": 13
        },
        "end": {
          "row": 1415,
          "column": 22
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "IntTy::I8",
        "start": {
          "row": 1415,
          "column": 13
        },
        "end": {
          "row": 1415,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1415,
          "column": 13
        },
        "end": {
          "row": 1415,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I8",
        "start": {
          "row": 1415,
          "column": 20
        },
        "end": {
          "row": 1415,
          "column": 22
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "8",
        "start": {
          "row": 1415,
          "column": 26
        },
        "end": {
          "row": 1415,
          "column": 27
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "IntTy::I16 => 16,",
        "start": {
          "row": 1416,
          "column": 13
        },
        "end": {
          "row": 1416,
          "column": 30
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "IntTy::I16",
        "start": {
          "row": 1416,
          "column": 13
        },
        "end": {
          "row": 1416,
          "column": 23
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "IntTy::I16",
        "start": {
          "row": 1416,
          "column": 13
        },
        "end": {
          "row": 1416,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1416,
          "column": 13
        },
        "end": {
          "row": 1416,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I16",
        "start": {
          "row": 1416,
          "column": 20
        },
        "end": {
          "row": 1416,
          "column": 23
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "16",
        "start": {
          "row": 1416,
          "column": 27
        },
        "end": {
          "row": 1416,
          "column": 29
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "IntTy::I32 => 32,",
        "start": {
          "row": 1417,
          "column": 13
        },
        "end": {
          "row": 1417,
          "column": 30
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "IntTy::I32",
        "start": {
          "row": 1417,
          "column": 13
        },
        "end": {
          "row": 1417,
          "column": 23
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "IntTy::I32",
        "start": {
          "row": 1417,
          "column": 13
        },
        "end": {
          "row": 1417,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1417,
          "column": 13
        },
        "end": {
          "row": 1417,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I32",
        "start": {
          "row": 1417,
          "column": 20
        },
        "end": {
          "row": 1417,
          "column": 23
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "32",
        "start": {
          "row": 1417,
          "column": 27
        },
        "end": {
          "row": 1417,
          "column": 29
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "IntTy::I64 => 64,",
        "start": {
          "row": 1418,
          "column": 13
        },
        "end": {
          "row": 1418,
          "column": 30
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "IntTy::I64",
        "start": {
          "row": 1418,
          "column": 13
        },
        "end": {
          "row": 1418,
          "column": 23
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "IntTy::I64",
        "start": {
          "row": 1418,
          "column": 13
        },
        "end": {
          "row": 1418,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1418,
          "column": 13
        },
        "end": {
          "row": 1418,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I64",
        "start": {
          "row": 1418,
          "column": 20
        },
        "end": {
          "row": 1418,
          "column": 23
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "64",
        "start": {
          "row": 1418,
          "column": 27
        },
        "end": {
          "row": 1418,
          "column": 29
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "IntTy::I128 => 128,",
        "start": {
          "row": 1419,
          "column": 13
        },
        "end": {
          "row": 1419,
          "column": 32
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "IntTy::I128",
        "start": {
          "row": 1419,
          "column": 13
        },
        "end": {
          "row": 1419,
          "column": 24
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "IntTy::I128",
        "start": {
          "row": 1419,
          "column": 13
        },
        "end": {
          "row": 1419,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "IntTy",
        "start": {
          "row": 1419,
          "column": 13
        },
        "end": {
          "row": 1419,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "I128",
        "start": {
          "row": 1419,
          "column": 20
        },
        "end": {
          "row": 1419,
          "column": 24
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "128",
        "start": {
          "row": 1419,
          "column": 28
        },
        "end": {
          "row": 1419,
          "column": 31
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy,\n         PartialOrd, Ord)]",
        "start": {
          "row": 1424,
          "column": 1
        },
        "end": {
          "row": 1425,
          "column": 27
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy,\n         PartialOrd, Ord)",
        "start": {
          "row": 1424,
          "column": 3
        },
        "end": {
          "row": 1425,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1424,
          "column": 3
        },
        "end": {
          "row": 1424,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy,\n         PartialOrd, Ord)",
        "start": {
          "row": 1424,
          "column": 9
        },
        "end": {
          "row": 1425,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1424,
          "column": 10
        },
        "end": {
          "row": 1424,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1424,
          "column": 10
        },
        "end": {
          "row": 1424,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1424,
          "column": 17
        },
        "end": {
          "row": 1424,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1424,
          "column": 17
        },
        "end": {
          "row": 1424,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1424,
          "column": 28
        },
        "end": {
          "row": 1424,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1424,
          "column": 28
        },
        "end": {
          "row": 1424,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1424,
          "column": 32
        },
        "end": {
          "row": 1424,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1424,
          "column": 32
        },
        "end": {
          "row": 1424,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1424,
          "column": 48
        },
        "end": {
          "row": 1424,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1424,
          "column": 48
        },
        "end": {
          "row": 1424,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1424,
          "column": 64
        },
        "end": {
          "row": 1424,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1424,
          "column": 64
        },
        "end": {
          "row": 1424,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1424,
          "column": 70
        },
        "end": {
          "row": 1424,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1424,
          "column": 70
        },
        "end": {
          "row": 1424,
          "column": 74
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialOrd",
        "start": {
          "row": 1425,
          "column": 10
        },
        "end": {
          "row": 1425,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialOrd",
        "start": {
          "row": 1425,
          "column": 10
        },
        "end": {
          "row": 1425,
          "column": 20
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Ord",
        "start": {
          "row": 1425,
          "column": 22
        },
        "end": {
          "row": 1425,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ord",
        "start": {
          "row": 1425,
          "column": 22
        },
        "end": {
          "row": 1425,
          "column": 25
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum UintTy {\n    Usize,\n    U8,\n    U16,\n    U32,\n    U64,\n    U128,\n}",
        "start": {
          "row": 1426,
          "column": 1
        },
        "end": {
          "row": 1433,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1426,
          "column": 1
        },
        "end": {
          "row": 1426,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1426,
          "column": 10
        },
        "end": {
          "row": 1426,
          "column": 16
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Usize,\n    U8,\n    U16,\n    U32,\n    U64,\n    U128,\n}",
        "start": {
          "row": 1426,
          "column": 17
        },
        "end": {
          "row": 1433,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Usize",
        "start": {
          "row": 1427,
          "column": 5
        },
        "end": {
          "row": 1427,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Usize",
        "start": {
          "row": 1427,
          "column": 5
        },
        "end": {
          "row": 1427,
          "column": 10
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "U8",
        "start": {
          "row": 1428,
          "column": 5
        },
        "end": {
          "row": 1428,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U8",
        "start": {
          "row": 1428,
          "column": 5
        },
        "end": {
          "row": 1428,
          "column": 7
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "U16",
        "start": {
          "row": 1429,
          "column": 5
        },
        "end": {
          "row": 1429,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U16",
        "start": {
          "row": 1429,
          "column": 5
        },
        "end": {
          "row": 1429,
          "column": 8
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "U32",
        "start": {
          "row": 1430,
          "column": 5
        },
        "end": {
          "row": 1430,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U32",
        "start": {
          "row": 1430,
          "column": 5
        },
        "end": {
          "row": 1430,
          "column": 8
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "U64",
        "start": {
          "row": 1431,
          "column": 5
        },
        "end": {
          "row": 1431,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U64",
        "start": {
          "row": 1431,
          "column": 5
        },
        "end": {
          "row": 1431,
          "column": 8
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "U128",
        "start": {
          "row": 1432,
          "column": 5
        },
        "end": {
          "row": 1432,
          "column": 9
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U128",
        "start": {
          "row": 1432,
          "column": 5
        },
        "end": {
          "row": 1432,
          "column": 9
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl UintTy {\n    pub fn ty_to_string(&self) -> &'static str {\n        match *self {\n            UintTy::Usize => \"usize\",\n            UintTy::U8 => \"u8\",\n            UintTy::U16 => \"u16\",\n            UintTy::U32 => \"u32\",\n            UintTy::U64 => \"u64\",\n            UintTy::U128 => \"u128\",\n        }\n    }\n\n    pub fn val_to_string(&self, val: u128) -> String {\n        format!(\"{}{}\", val, self.ty_to_string())\n    }\n\n    pub fn bit_width(&self) -> Option<usize> {\n        Some(match *self {\n            UintTy::Usize => return None,\n            UintTy::U8 => 8,\n            UintTy::U16 => 16,\n            UintTy::U32 => 32,\n            UintTy::U64 => 64,\n            UintTy::U128 => 128,\n        })\n    }\n}",
        "start": {
          "row": 1435,
          "column": 1
        },
        "end": {
          "row": 1461,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1435,
          "column": 6
        },
        "end": {
          "row": 1435,
          "column": 12
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn ty_to_string(&self) -> &'static str {\n        match *self {\n            UintTy::Usize => \"usize\",\n            UintTy::U8 => \"u8\",\n            UintTy::U16 => \"u16\",\n            UintTy::U32 => \"u32\",\n            UintTy::U64 => \"u64\",\n            UintTy::U128 => \"u128\",\n        }\n    }\n\n    pub fn val_to_string(&self, val: u128) -> String {\n        format!(\"{}{}\", val, self.ty_to_string())\n    }\n\n    pub fn bit_width(&self) -> Option<usize> {\n        Some(match *self {\n            UintTy::Usize => return None,\n            UintTy::U8 => 8,\n            UintTy::U16 => 16,\n            UintTy::U32 => 32,\n            UintTy::U64 => 64,\n            UintTy::U128 => 128,\n        })\n    }\n}",
        "start": {
          "row": 1435,
          "column": 13
        },
        "end": {
          "row": 1461,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn ty_to_string(&self) -> &'static str {\n        match *self {\n            UintTy::Usize => \"usize\",\n            UintTy::U8 => \"u8\",\n            UintTy::U16 => \"u16\",\n            UintTy::U32 => \"u32\",\n            UintTy::U64 => \"u64\",\n            UintTy::U128 => \"u128\",\n        }\n    }",
        "start": {
          "row": 1436,
          "column": 5
        },
        "end": {
          "row": 1445,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1436,
          "column": 5
        },
        "end": {
          "row": 1436,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty_to_string",
        "start": {
          "row": 1436,
          "column": 12
        },
        "end": {
          "row": 1436,
          "column": 24
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1436,
          "column": 24
        },
        "end": {
          "row": 1436,
          "column": 31
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1436,
          "column": 25
        },
        "end": {
          "row": 1436,
          "column": 30
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1436,
          "column": 26
        },
        "end": {
          "row": 1436,
          "column": 30
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&'static str",
        "start": {
          "row": 1436,
          "column": 35
        },
        "end": {
          "row": 1436,
          "column": 47
        }
      },
      {
        "kind": "lifetime",
        "name": "query",
        "text": "'static",
        "start": {
          "row": 1436,
          "column": 36
        },
        "end": {
          "row": 1436,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "static",
        "start": {
          "row": 1436,
          "column": 37
        },
        "end": {
          "row": 1436,
          "column": 43
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 1436,
          "column": 44
        },
        "end": {
          "row": 1436,
          "column": 47
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            UintTy::Usize => \"usize\",\n            UintTy::U8 => \"u8\",\n            UintTy::U16 => \"u16\",\n            UintTy::U32 => \"u32\",\n            UintTy::U64 => \"u64\",\n            UintTy::U128 => \"u128\",\n        }\n    }",
        "start": {
          "row": 1436,
          "column": 48
        },
        "end": {
          "row": 1445,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            UintTy::Usize => \"usize\",\n            UintTy::U8 => \"u8\",\n            UintTy::U16 => \"u16\",\n            UintTy::U32 => \"u32\",\n            UintTy::U64 => \"u64\",\n            UintTy::U128 => \"u128\",\n        }",
        "start": {
          "row": 1437,
          "column": 9
        },
        "end": {
          "row": 1444,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1437,
          "column": 15
        },
        "end": {
          "row": 1437,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1437,
          "column": 16
        },
        "end": {
          "row": 1437,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            UintTy::Usize => \"usize\",\n            UintTy::U8 => \"u8\",\n            UintTy::U16 => \"u16\",\n            UintTy::U32 => \"u32\",\n            UintTy::U64 => \"u64\",\n            UintTy::U128 => \"u128\",\n        }",
        "start": {
          "row": 1437,
          "column": 21
        },
        "end": {
          "row": 1444,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UintTy::Usize => \"usize\",",
        "start": {
          "row": 1438,
          "column": 13
        },
        "end": {
          "row": 1438,
          "column": 38
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UintTy::Usize",
        "start": {
          "row": 1438,
          "column": 13
        },
        "end": {
          "row": 1438,
          "column": 26
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UintTy::Usize",
        "start": {
          "row": 1438,
          "column": 13
        },
        "end": {
          "row": 1438,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1438,
          "column": 13
        },
        "end": {
          "row": 1438,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Usize",
        "start": {
          "row": 1438,
          "column": 21
        },
        "end": {
          "row": 1438,
          "column": 26
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"usize\"",
        "start": {
          "row": 1438,
          "column": 30
        },
        "end": {
          "row": 1438,
          "column": 37
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UintTy::U8 => \"u8\",",
        "start": {
          "row": 1439,
          "column": 13
        },
        "end": {
          "row": 1439,
          "column": 32
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UintTy::U8",
        "start": {
          "row": 1439,
          "column": 13
        },
        "end": {
          "row": 1439,
          "column": 23
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UintTy::U8",
        "start": {
          "row": 1439,
          "column": 13
        },
        "end": {
          "row": 1439,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1439,
          "column": 13
        },
        "end": {
          "row": 1439,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U8",
        "start": {
          "row": 1439,
          "column": 21
        },
        "end": {
          "row": 1439,
          "column": 23
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"u8\"",
        "start": {
          "row": 1439,
          "column": 27
        },
        "end": {
          "row": 1439,
          "column": 31
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UintTy::U16 => \"u16\",",
        "start": {
          "row": 1440,
          "column": 13
        },
        "end": {
          "row": 1440,
          "column": 34
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UintTy::U16",
        "start": {
          "row": 1440,
          "column": 13
        },
        "end": {
          "row": 1440,
          "column": 24
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UintTy::U16",
        "start": {
          "row": 1440,
          "column": 13
        },
        "end": {
          "row": 1440,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1440,
          "column": 13
        },
        "end": {
          "row": 1440,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U16",
        "start": {
          "row": 1440,
          "column": 21
        },
        "end": {
          "row": 1440,
          "column": 24
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"u16\"",
        "start": {
          "row": 1440,
          "column": 28
        },
        "end": {
          "row": 1440,
          "column": 33
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UintTy::U32 => \"u32\",",
        "start": {
          "row": 1441,
          "column": 13
        },
        "end": {
          "row": 1441,
          "column": 34
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UintTy::U32",
        "start": {
          "row": 1441,
          "column": 13
        },
        "end": {
          "row": 1441,
          "column": 24
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UintTy::U32",
        "start": {
          "row": 1441,
          "column": 13
        },
        "end": {
          "row": 1441,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1441,
          "column": 13
        },
        "end": {
          "row": 1441,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U32",
        "start": {
          "row": 1441,
          "column": 21
        },
        "end": {
          "row": 1441,
          "column": 24
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"u32\"",
        "start": {
          "row": 1441,
          "column": 28
        },
        "end": {
          "row": 1441,
          "column": 33
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UintTy::U64 => \"u64\",",
        "start": {
          "row": 1442,
          "column": 13
        },
        "end": {
          "row": 1442,
          "column": 34
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UintTy::U64",
        "start": {
          "row": 1442,
          "column": 13
        },
        "end": {
          "row": 1442,
          "column": 24
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UintTy::U64",
        "start": {
          "row": 1442,
          "column": 13
        },
        "end": {
          "row": 1442,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1442,
          "column": 13
        },
        "end": {
          "row": 1442,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U64",
        "start": {
          "row": 1442,
          "column": 21
        },
        "end": {
          "row": 1442,
          "column": 24
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"u64\"",
        "start": {
          "row": 1442,
          "column": 28
        },
        "end": {
          "row": 1442,
          "column": 33
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UintTy::U128 => \"u128\",",
        "start": {
          "row": 1443,
          "column": 13
        },
        "end": {
          "row": 1443,
          "column": 36
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UintTy::U128",
        "start": {
          "row": 1443,
          "column": 13
        },
        "end": {
          "row": 1443,
          "column": 25
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UintTy::U128",
        "start": {
          "row": 1443,
          "column": 13
        },
        "end": {
          "row": 1443,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1443,
          "column": 13
        },
        "end": {
          "row": 1443,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U128",
        "start": {
          "row": 1443,
          "column": 21
        },
        "end": {
          "row": 1443,
          "column": 25
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"u128\"",
        "start": {
          "row": 1443,
          "column": 29
        },
        "end": {
          "row": 1443,
          "column": 35
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn val_to_string(&self, val: u128) -> String {\n        format!(\"{}{}\", val, self.ty_to_string())\n    }",
        "start": {
          "row": 1447,
          "column": 5
        },
        "end": {
          "row": 1449,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1447,
          "column": 5
        },
        "end": {
          "row": 1447,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "val_to_string",
        "start": {
          "row": 1447,
          "column": 12
        },
        "end": {
          "row": 1447,
          "column": 25
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, val: u128)",
        "start": {
          "row": 1447,
          "column": 25
        },
        "end": {
          "row": 1447,
          "column": 43
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1447,
          "column": 26
        },
        "end": {
          "row": 1447,
          "column": 31
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1447,
          "column": 27
        },
        "end": {
          "row": 1447,
          "column": 31
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "val: u128",
        "start": {
          "row": 1447,
          "column": 33
        },
        "end": {
          "row": 1447,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "val",
        "start": {
          "row": 1447,
          "column": 33
        },
        "end": {
          "row": 1447,
          "column": 36
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "u128",
        "start": {
          "row": 1447,
          "column": 38
        },
        "end": {
          "row": 1447,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "String",
        "start": {
          "row": 1447,
          "column": 47
        },
        "end": {
          "row": 1447,
          "column": 53
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        format!(\"{}{}\", val, self.ty_to_string())\n    }",
        "start": {
          "row": 1447,
          "column": 54
        },
        "end": {
          "row": 1449,
          "column": 6
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "format!(\"{}{}\", val, self.ty_to_string())",
        "start": {
          "row": 1448,
          "column": 9
        },
        "end": {
          "row": 1448,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "format",
        "start": {
          "row": 1448,
          "column": 9
        },
        "end": {
          "row": 1448,
          "column": 15
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(\"{}{}\", val, self.ty_to_string())",
        "start": {
          "row": 1448,
          "column": 16
        },
        "end": {
          "row": 1448,
          "column": 50
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"{}{}\"",
        "start": {
          "row": 1448,
          "column": 17
        },
        "end": {
          "row": 1448,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "val",
        "start": {
          "row": 1448,
          "column": 25
        },
        "end": {
          "row": 1448,
          "column": 28
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1448,
          "column": 30
        },
        "end": {
          "row": 1448,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty_to_string",
        "start": {
          "row": 1448,
          "column": 35
        },
        "end": {
          "row": 1448,
          "column": 47
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1448,
          "column": 47
        },
        "end": {
          "row": 1448,
          "column": 49
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn bit_width(&self) -> Option<usize> {\n        Some(match *self {\n            UintTy::Usize => return None,\n            UintTy::U8 => 8,\n            UintTy::U16 => 16,\n            UintTy::U32 => 32,\n            UintTy::U64 => 64,\n            UintTy::U128 => 128,\n        })\n    }",
        "start": {
          "row": 1451,
          "column": 5
        },
        "end": {
          "row": 1460,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1451,
          "column": 5
        },
        "end": {
          "row": 1451,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "bit_width",
        "start": {
          "row": 1451,
          "column": 12
        },
        "end": {
          "row": 1451,
          "column": 21
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1451,
          "column": 21
        },
        "end": {
          "row": 1451,
          "column": 28
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1451,
          "column": 22
        },
        "end": {
          "row": 1451,
          "column": 27
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1451,
          "column": 23
        },
        "end": {
          "row": 1451,
          "column": 27
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<usize>",
        "start": {
          "row": 1451,
          "column": 32
        },
        "end": {
          "row": 1451,
          "column": 45
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1451,
          "column": 32
        },
        "end": {
          "row": 1451,
          "column": 38
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<usize>",
        "start": {
          "row": 1451,
          "column": 38
        },
        "end": {
          "row": 1451,
          "column": 45
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 1451,
          "column": 39
        },
        "end": {
          "row": 1451,
          "column": 44
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        Some(match *self {\n            UintTy::Usize => return None,\n            UintTy::U8 => 8,\n            UintTy::U16 => 16,\n            UintTy::U32 => 32,\n            UintTy::U64 => 64,\n            UintTy::U128 => 128,\n        })\n    }",
        "start": {
          "row": 1451,
          "column": 46
        },
        "end": {
          "row": 1460,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Some(match *self {\n            UintTy::Usize => return None,\n            UintTy::U8 => 8,\n            UintTy::U16 => 16,\n            UintTy::U32 => 32,\n            UintTy::U64 => 64,\n            UintTy::U128 => 128,\n        })",
        "start": {
          "row": 1452,
          "column": 9
        },
        "end": {
          "row": 1459,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 1452,
          "column": 9
        },
        "end": {
          "row": 1452,
          "column": 13
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(match *self {\n            UintTy::Usize => return None,\n            UintTy::U8 => 8,\n            UintTy::U16 => 16,\n            UintTy::U32 => 32,\n            UintTy::U64 => 64,\n            UintTy::U128 => 128,\n        })",
        "start": {
          "row": 1452,
          "column": 13
        },
        "end": {
          "row": 1459,
          "column": 11
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            UintTy::Usize => return None,\n            UintTy::U8 => 8,\n            UintTy::U16 => 16,\n            UintTy::U32 => 32,\n            UintTy::U64 => 64,\n            UintTy::U128 => 128,\n        }",
        "start": {
          "row": 1452,
          "column": 14
        },
        "end": {
          "row": 1459,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1452,
          "column": 20
        },
        "end": {
          "row": 1452,
          "column": 25
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1452,
          "column": 21
        },
        "end": {
          "row": 1452,
          "column": 25
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            UintTy::Usize => return None,\n            UintTy::U8 => 8,\n            UintTy::U16 => 16,\n            UintTy::U32 => 32,\n            UintTy::U64 => 64,\n            UintTy::U128 => 128,\n        }",
        "start": {
          "row": 1452,
          "column": 26
        },
        "end": {
          "row": 1459,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UintTy::Usize => return None,",
        "start": {
          "row": 1453,
          "column": 13
        },
        "end": {
          "row": 1453,
          "column": 42
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UintTy::Usize",
        "start": {
          "row": 1453,
          "column": 13
        },
        "end": {
          "row": 1453,
          "column": 26
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UintTy::Usize",
        "start": {
          "row": 1453,
          "column": 13
        },
        "end": {
          "row": 1453,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1453,
          "column": 13
        },
        "end": {
          "row": 1453,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Usize",
        "start": {
          "row": 1453,
          "column": 21
        },
        "end": {
          "row": 1453,
          "column": 26
        }
      },
      {
        "kind": "return_expression",
        "name": "query",
        "text": "return None",
        "start": {
          "row": 1453,
          "column": 30
        },
        "end": {
          "row": 1453,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 1453,
          "column": 37
        },
        "end": {
          "row": 1453,
          "column": 41
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UintTy::U8 => 8,",
        "start": {
          "row": 1454,
          "column": 13
        },
        "end": {
          "row": 1454,
          "column": 29
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UintTy::U8",
        "start": {
          "row": 1454,
          "column": 13
        },
        "end": {
          "row": 1454,
          "column": 23
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UintTy::U8",
        "start": {
          "row": 1454,
          "column": 13
        },
        "end": {
          "row": 1454,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1454,
          "column": 13
        },
        "end": {
          "row": 1454,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U8",
        "start": {
          "row": 1454,
          "column": 21
        },
        "end": {
          "row": 1454,
          "column": 23
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "8",
        "start": {
          "row": 1454,
          "column": 27
        },
        "end": {
          "row": 1454,
          "column": 28
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UintTy::U16 => 16,",
        "start": {
          "row": 1455,
          "column": 13
        },
        "end": {
          "row": 1455,
          "column": 31
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UintTy::U16",
        "start": {
          "row": 1455,
          "column": 13
        },
        "end": {
          "row": 1455,
          "column": 24
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UintTy::U16",
        "start": {
          "row": 1455,
          "column": 13
        },
        "end": {
          "row": 1455,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1455,
          "column": 13
        },
        "end": {
          "row": 1455,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U16",
        "start": {
          "row": 1455,
          "column": 21
        },
        "end": {
          "row": 1455,
          "column": 24
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "16",
        "start": {
          "row": 1455,
          "column": 28
        },
        "end": {
          "row": 1455,
          "column": 30
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UintTy::U32 => 32,",
        "start": {
          "row": 1456,
          "column": 13
        },
        "end": {
          "row": 1456,
          "column": 31
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UintTy::U32",
        "start": {
          "row": 1456,
          "column": 13
        },
        "end": {
          "row": 1456,
          "column": 24
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UintTy::U32",
        "start": {
          "row": 1456,
          "column": 13
        },
        "end": {
          "row": 1456,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1456,
          "column": 13
        },
        "end": {
          "row": 1456,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U32",
        "start": {
          "row": 1456,
          "column": 21
        },
        "end": {
          "row": 1456,
          "column": 24
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "32",
        "start": {
          "row": 1456,
          "column": 28
        },
        "end": {
          "row": 1456,
          "column": 30
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UintTy::U64 => 64,",
        "start": {
          "row": 1457,
          "column": 13
        },
        "end": {
          "row": 1457,
          "column": 31
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UintTy::U64",
        "start": {
          "row": 1457,
          "column": 13
        },
        "end": {
          "row": 1457,
          "column": 24
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UintTy::U64",
        "start": {
          "row": 1457,
          "column": 13
        },
        "end": {
          "row": 1457,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1457,
          "column": 13
        },
        "end": {
          "row": 1457,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U64",
        "start": {
          "row": 1457,
          "column": 21
        },
        "end": {
          "row": 1457,
          "column": 24
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "64",
        "start": {
          "row": 1457,
          "column": 28
        },
        "end": {
          "row": 1457,
          "column": 30
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "UintTy::U128 => 128,",
        "start": {
          "row": 1458,
          "column": 13
        },
        "end": {
          "row": 1458,
          "column": 33
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "UintTy::U128",
        "start": {
          "row": 1458,
          "column": 13
        },
        "end": {
          "row": 1458,
          "column": 25
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "UintTy::U128",
        "start": {
          "row": 1458,
          "column": 13
        },
        "end": {
          "row": 1458,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1458,
          "column": 13
        },
        "end": {
          "row": 1458,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "U128",
        "start": {
          "row": 1458,
          "column": 21
        },
        "end": {
          "row": 1458,
          "column": 25
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "128",
        "start": {
          "row": 1458,
          "column": 29
        },
        "end": {
          "row": 1458,
          "column": 32
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Debug for UintTy {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(self, f)\n    }\n}",
        "start": {
          "row": 1463,
          "column": 1
        },
        "end": {
          "row": 1467,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Debug",
        "start": {
          "row": 1463,
          "column": 6
        },
        "end": {
          "row": 1463,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1463,
          "column": 6
        },
        "end": {
          "row": 1463,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1463,
          "column": 11
        },
        "end": {
          "row": 1463,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1463,
          "column": 21
        },
        "end": {
          "row": 1463,
          "column": 27
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(self, f)\n    }\n}",
        "start": {
          "row": 1463,
          "column": 28
        },
        "end": {
          "row": 1467,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(self, f)\n    }",
        "start": {
          "row": 1464,
          "column": 5
        },
        "end": {
          "row": 1466,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1464,
          "column": 8
        },
        "end": {
          "row": 1464,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 1464,
          "column": 11
        },
        "end": {
          "row": 1464,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1464,
          "column": 12
        },
        "end": {
          "row": 1464,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1464,
          "column": 13
        },
        "end": {
          "row": 1464,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 1464,
          "column": 19
        },
        "end": {
          "row": 1464,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1464,
          "column": 19
        },
        "end": {
          "row": 1464,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 1464,
          "column": 22
        },
        "end": {
          "row": 1464,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 1464,
          "column": 23
        },
        "end": {
          "row": 1464,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 1464,
          "column": 27
        },
        "end": {
          "row": 1464,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1464,
          "column": 27
        },
        "end": {
          "row": 1464,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 1464,
          "column": 32
        },
        "end": {
          "row": 1464,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 1464,
          "column": 46
        },
        "end": {
          "row": 1464,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1464,
          "column": 46
        },
        "end": {
          "row": 1464,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 1464,
          "column": 51
        },
        "end": {
          "row": 1464,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        fmt::Display::fmt(self, f)\n    }",
        "start": {
          "row": 1464,
          "column": 58
        },
        "end": {
          "row": 1466,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "fmt::Display::fmt(self, f)",
        "start": {
          "row": 1465,
          "column": 9
        },
        "end": {
          "row": 1465,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "fmt::Display::fmt",
        "start": {
          "row": 1465,
          "column": 9
        },
        "end": {
          "row": 1465,
          "column": 26
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "fmt::Display",
        "start": {
          "row": 1465,
          "column": 9
        },
        "end": {
          "row": 1465,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1465,
          "column": 9
        },
        "end": {
          "row": 1465,
          "column": 12
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Display",
        "start": {
          "row": 1465,
          "column": 14
        },
        "end": {
          "row": 1465,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1465,
          "column": 23
        },
        "end": {
          "row": 1465,
          "column": 26
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self, f)",
        "start": {
          "row": 1465,
          "column": 26
        },
        "end": {
          "row": 1465,
          "column": 35
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1465,
          "column": 27
        },
        "end": {
          "row": 1465,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1465,
          "column": 33
        },
        "end": {
          "row": 1465,
          "column": 34
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Display for UintTy {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.ty_to_string())\n    }\n}",
        "start": {
          "row": 1469,
          "column": 1
        },
        "end": {
          "row": 1473,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Display",
        "start": {
          "row": 1469,
          "column": 6
        },
        "end": {
          "row": 1469,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1469,
          "column": 6
        },
        "end": {
          "row": 1469,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Display",
        "start": {
          "row": 1469,
          "column": 11
        },
        "end": {
          "row": 1469,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UintTy",
        "start": {
          "row": 1469,
          "column": 23
        },
        "end": {
          "row": 1469,
          "column": 29
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.ty_to_string())\n    }\n}",
        "start": {
          "row": 1469,
          "column": 30
        },
        "end": {
          "row": 1473,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.ty_to_string())\n    }",
        "start": {
          "row": 1470,
          "column": 5
        },
        "end": {
          "row": 1472,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1470,
          "column": 8
        },
        "end": {
          "row": 1470,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 1470,
          "column": 11
        },
        "end": {
          "row": 1470,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1470,
          "column": 12
        },
        "end": {
          "row": 1470,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1470,
          "column": 13
        },
        "end": {
          "row": 1470,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 1470,
          "column": 19
        },
        "end": {
          "row": 1470,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1470,
          "column": 19
        },
        "end": {
          "row": 1470,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 1470,
          "column": 22
        },
        "end": {
          "row": 1470,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 1470,
          "column": 23
        },
        "end": {
          "row": 1470,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 1470,
          "column": 27
        },
        "end": {
          "row": 1470,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1470,
          "column": 27
        },
        "end": {
          "row": 1470,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 1470,
          "column": 32
        },
        "end": {
          "row": 1470,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 1470,
          "column": 46
        },
        "end": {
          "row": 1470,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1470,
          "column": 46
        },
        "end": {
          "row": 1470,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 1470,
          "column": 51
        },
        "end": {
          "row": 1470,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        write!(f, \"{}\", self.ty_to_string())\n    }",
        "start": {
          "row": 1470,
          "column": 58
        },
        "end": {
          "row": 1472,
          "column": 6
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "write!(f, \"{}\", self.ty_to_string())",
        "start": {
          "row": 1471,
          "column": 9
        },
        "end": {
          "row": 1471,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "write",
        "start": {
          "row": 1471,
          "column": 9
        },
        "end": {
          "row": 1471,
          "column": 14
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(f, \"{}\", self.ty_to_string())",
        "start": {
          "row": 1471,
          "column": 15
        },
        "end": {
          "row": 1471,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1471,
          "column": 16
        },
        "end": {
          "row": 1471,
          "column": 17
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"{}\"",
        "start": {
          "row": 1471,
          "column": 19
        },
        "end": {
          "row": 1471,
          "column": 23
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1471,
          "column": 25
        },
        "end": {
          "row": 1471,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty_to_string",
        "start": {
          "row": 1471,
          "column": 30
        },
        "end": {
          "row": 1471,
          "column": 42
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1471,
          "column": 42
        },
        "end": {
          "row": 1471,
          "column": 44
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy,\n         PartialOrd, Ord)]",
        "start": {
          "row": 1475,
          "column": 1
        },
        "end": {
          "row": 1476,
          "column": 27
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy,\n         PartialOrd, Ord)",
        "start": {
          "row": 1475,
          "column": 3
        },
        "end": {
          "row": 1476,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1475,
          "column": 3
        },
        "end": {
          "row": 1475,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy,\n         PartialOrd, Ord)",
        "start": {
          "row": 1475,
          "column": 9
        },
        "end": {
          "row": 1476,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1475,
          "column": 10
        },
        "end": {
          "row": 1475,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1475,
          "column": 10
        },
        "end": {
          "row": 1475,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1475,
          "column": 17
        },
        "end": {
          "row": 1475,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1475,
          "column": 17
        },
        "end": {
          "row": 1475,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1475,
          "column": 28
        },
        "end": {
          "row": 1475,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1475,
          "column": 28
        },
        "end": {
          "row": 1475,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1475,
          "column": 32
        },
        "end": {
          "row": 1475,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1475,
          "column": 32
        },
        "end": {
          "row": 1475,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1475,
          "column": 48
        },
        "end": {
          "row": 1475,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1475,
          "column": 48
        },
        "end": {
          "row": 1475,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1475,
          "column": 64
        },
        "end": {
          "row": 1475,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1475,
          "column": 64
        },
        "end": {
          "row": 1475,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1475,
          "column": 70
        },
        "end": {
          "row": 1475,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1475,
          "column": 70
        },
        "end": {
          "row": 1475,
          "column": 74
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialOrd",
        "start": {
          "row": 1476,
          "column": 10
        },
        "end": {
          "row": 1476,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialOrd",
        "start": {
          "row": 1476,
          "column": 10
        },
        "end": {
          "row": 1476,
          "column": 20
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Ord",
        "start": {
          "row": 1476,
          "column": 22
        },
        "end": {
          "row": 1476,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ord",
        "start": {
          "row": 1476,
          "column": 22
        },
        "end": {
          "row": 1476,
          "column": 25
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum FloatTy {\n    F32,\n    F64,\n}",
        "start": {
          "row": 1477,
          "column": 1
        },
        "end": {
          "row": 1480,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1477,
          "column": 1
        },
        "end": {
          "row": 1477,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FloatTy",
        "start": {
          "row": 1477,
          "column": 10
        },
        "end": {
          "row": 1477,
          "column": 17
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    F32,\n    F64,\n}",
        "start": {
          "row": 1477,
          "column": 18
        },
        "end": {
          "row": 1480,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "F32",
        "start": {
          "row": 1478,
          "column": 5
        },
        "end": {
          "row": 1478,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "F32",
        "start": {
          "row": 1478,
          "column": 5
        },
        "end": {
          "row": 1478,
          "column": 8
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "F64",
        "start": {
          "row": 1479,
          "column": 5
        },
        "end": {
          "row": 1479,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "F64",
        "start": {
          "row": 1479,
          "column": 5
        },
        "end": {
          "row": 1479,
          "column": 8
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Debug for FloatTy {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(self, f)\n    }\n}",
        "start": {
          "row": 1482,
          "column": 1
        },
        "end": {
          "row": 1486,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Debug",
        "start": {
          "row": 1482,
          "column": 6
        },
        "end": {
          "row": 1482,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1482,
          "column": 6
        },
        "end": {
          "row": 1482,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1482,
          "column": 11
        },
        "end": {
          "row": 1482,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FloatTy",
        "start": {
          "row": 1482,
          "column": 21
        },
        "end": {
          "row": 1482,
          "column": 28
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(self, f)\n    }\n}",
        "start": {
          "row": 1482,
          "column": 29
        },
        "end": {
          "row": 1486,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(self, f)\n    }",
        "start": {
          "row": 1483,
          "column": 5
        },
        "end": {
          "row": 1485,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1483,
          "column": 8
        },
        "end": {
          "row": 1483,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 1483,
          "column": 11
        },
        "end": {
          "row": 1483,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1483,
          "column": 12
        },
        "end": {
          "row": 1483,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1483,
          "column": 13
        },
        "end": {
          "row": 1483,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 1483,
          "column": 19
        },
        "end": {
          "row": 1483,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1483,
          "column": 19
        },
        "end": {
          "row": 1483,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 1483,
          "column": 22
        },
        "end": {
          "row": 1483,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 1483,
          "column": 23
        },
        "end": {
          "row": 1483,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 1483,
          "column": 27
        },
        "end": {
          "row": 1483,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1483,
          "column": 27
        },
        "end": {
          "row": 1483,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 1483,
          "column": 32
        },
        "end": {
          "row": 1483,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 1483,
          "column": 46
        },
        "end": {
          "row": 1483,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1483,
          "column": 46
        },
        "end": {
          "row": 1483,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 1483,
          "column": 51
        },
        "end": {
          "row": 1483,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        fmt::Display::fmt(self, f)\n    }",
        "start": {
          "row": 1483,
          "column": 58
        },
        "end": {
          "row": 1485,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "fmt::Display::fmt(self, f)",
        "start": {
          "row": 1484,
          "column": 9
        },
        "end": {
          "row": 1484,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "fmt::Display::fmt",
        "start": {
          "row": 1484,
          "column": 9
        },
        "end": {
          "row": 1484,
          "column": 26
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "fmt::Display",
        "start": {
          "row": 1484,
          "column": 9
        },
        "end": {
          "row": 1484,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1484,
          "column": 9
        },
        "end": {
          "row": 1484,
          "column": 12
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Display",
        "start": {
          "row": 1484,
          "column": 14
        },
        "end": {
          "row": 1484,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1484,
          "column": 23
        },
        "end": {
          "row": 1484,
          "column": 26
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self, f)",
        "start": {
          "row": 1484,
          "column": 26
        },
        "end": {
          "row": 1484,
          "column": 35
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1484,
          "column": 27
        },
        "end": {
          "row": 1484,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1484,
          "column": 33
        },
        "end": {
          "row": 1484,
          "column": 34
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Display for FloatTy {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.ty_to_string())\n    }\n}",
        "start": {
          "row": 1488,
          "column": 1
        },
        "end": {
          "row": 1492,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Display",
        "start": {
          "row": 1488,
          "column": 6
        },
        "end": {
          "row": 1488,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1488,
          "column": 6
        },
        "end": {
          "row": 1488,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Display",
        "start": {
          "row": 1488,
          "column": 11
        },
        "end": {
          "row": 1488,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FloatTy",
        "start": {
          "row": 1488,
          "column": 23
        },
        "end": {
          "row": 1488,
          "column": 30
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.ty_to_string())\n    }\n}",
        "start": {
          "row": 1488,
          "column": 31
        },
        "end": {
          "row": 1492,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"{}\", self.ty_to_string())\n    }",
        "start": {
          "row": 1489,
          "column": 5
        },
        "end": {
          "row": 1491,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1489,
          "column": 8
        },
        "end": {
          "row": 1489,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 1489,
          "column": 11
        },
        "end": {
          "row": 1489,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1489,
          "column": 12
        },
        "end": {
          "row": 1489,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1489,
          "column": 13
        },
        "end": {
          "row": 1489,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 1489,
          "column": 19
        },
        "end": {
          "row": 1489,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1489,
          "column": 19
        },
        "end": {
          "row": 1489,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 1489,
          "column": 22
        },
        "end": {
          "row": 1489,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 1489,
          "column": 23
        },
        "end": {
          "row": 1489,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 1489,
          "column": 27
        },
        "end": {
          "row": 1489,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1489,
          "column": 27
        },
        "end": {
          "row": 1489,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 1489,
          "column": 32
        },
        "end": {
          "row": 1489,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 1489,
          "column": 46
        },
        "end": {
          "row": 1489,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1489,
          "column": 46
        },
        "end": {
          "row": 1489,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 1489,
          "column": 51
        },
        "end": {
          "row": 1489,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        write!(f, \"{}\", self.ty_to_string())\n    }",
        "start": {
          "row": 1489,
          "column": 58
        },
        "end": {
          "row": 1491,
          "column": 6
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "write!(f, \"{}\", self.ty_to_string())",
        "start": {
          "row": 1490,
          "column": 9
        },
        "end": {
          "row": 1490,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "write",
        "start": {
          "row": 1490,
          "column": 9
        },
        "end": {
          "row": 1490,
          "column": 14
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(f, \"{}\", self.ty_to_string())",
        "start": {
          "row": 1490,
          "column": 15
        },
        "end": {
          "row": 1490,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1490,
          "column": 16
        },
        "end": {
          "row": 1490,
          "column": 17
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"{}\"",
        "start": {
          "row": 1490,
          "column": 19
        },
        "end": {
          "row": 1490,
          "column": 23
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1490,
          "column": 25
        },
        "end": {
          "row": 1490,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty_to_string",
        "start": {
          "row": 1490,
          "column": 30
        },
        "end": {
          "row": 1490,
          "column": 42
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1490,
          "column": 42
        },
        "end": {
          "row": 1490,
          "column": 44
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl FloatTy {\n    pub fn ty_to_string(&self) -> &'static str {\n        match *self {\n            FloatTy::F32 => \"f32\",\n            FloatTy::F64 => \"f64\",\n        }\n    }\n\n    pub fn bit_width(&self) -> usize {\n        match *self {\n            FloatTy::F32 => 32,\n            FloatTy::F64 => 64,\n        }\n    }\n}",
        "start": {
          "row": 1494,
          "column": 1
        },
        "end": {
          "row": 1508,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FloatTy",
        "start": {
          "row": 1494,
          "column": 6
        },
        "end": {
          "row": 1494,
          "column": 13
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn ty_to_string(&self) -> &'static str {\n        match *self {\n            FloatTy::F32 => \"f32\",\n            FloatTy::F64 => \"f64\",\n        }\n    }\n\n    pub fn bit_width(&self) -> usize {\n        match *self {\n            FloatTy::F32 => 32,\n            FloatTy::F64 => 64,\n        }\n    }\n}",
        "start": {
          "row": 1494,
          "column": 14
        },
        "end": {
          "row": 1508,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn ty_to_string(&self) -> &'static str {\n        match *self {\n            FloatTy::F32 => \"f32\",\n            FloatTy::F64 => \"f64\",\n        }\n    }",
        "start": {
          "row": 1495,
          "column": 5
        },
        "end": {
          "row": 1500,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1495,
          "column": 5
        },
        "end": {
          "row": 1495,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty_to_string",
        "start": {
          "row": 1495,
          "column": 12
        },
        "end": {
          "row": 1495,
          "column": 24
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1495,
          "column": 24
        },
        "end": {
          "row": 1495,
          "column": 31
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1495,
          "column": 25
        },
        "end": {
          "row": 1495,
          "column": 30
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1495,
          "column": 26
        },
        "end": {
          "row": 1495,
          "column": 30
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&'static str",
        "start": {
          "row": 1495,
          "column": 35
        },
        "end": {
          "row": 1495,
          "column": 47
        }
      },
      {
        "kind": "lifetime",
        "name": "query",
        "text": "'static",
        "start": {
          "row": 1495,
          "column": 36
        },
        "end": {
          "row": 1495,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "static",
        "start": {
          "row": 1495,
          "column": 37
        },
        "end": {
          "row": 1495,
          "column": 43
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 1495,
          "column": 44
        },
        "end": {
          "row": 1495,
          "column": 47
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            FloatTy::F32 => \"f32\",\n            FloatTy::F64 => \"f64\",\n        }\n    }",
        "start": {
          "row": 1495,
          "column": 48
        },
        "end": {
          "row": 1500,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            FloatTy::F32 => \"f32\",\n            FloatTy::F64 => \"f64\",\n        }",
        "start": {
          "row": 1496,
          "column": 9
        },
        "end": {
          "row": 1499,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1496,
          "column": 15
        },
        "end": {
          "row": 1496,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1496,
          "column": 16
        },
        "end": {
          "row": 1496,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            FloatTy::F32 => \"f32\",\n            FloatTy::F64 => \"f64\",\n        }",
        "start": {
          "row": 1496,
          "column": 21
        },
        "end": {
          "row": 1499,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "FloatTy::F32 => \"f32\",",
        "start": {
          "row": 1497,
          "column": 13
        },
        "end": {
          "row": 1497,
          "column": 35
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "FloatTy::F32",
        "start": {
          "row": 1497,
          "column": 13
        },
        "end": {
          "row": 1497,
          "column": 25
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "FloatTy::F32",
        "start": {
          "row": 1497,
          "column": 13
        },
        "end": {
          "row": 1497,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "FloatTy",
        "start": {
          "row": 1497,
          "column": 13
        },
        "end": {
          "row": 1497,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "F32",
        "start": {
          "row": 1497,
          "column": 22
        },
        "end": {
          "row": 1497,
          "column": 25
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"f32\"",
        "start": {
          "row": 1497,
          "column": 29
        },
        "end": {
          "row": 1497,
          "column": 34
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "FloatTy::F64 => \"f64\",",
        "start": {
          "row": 1498,
          "column": 13
        },
        "end": {
          "row": 1498,
          "column": 35
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "FloatTy::F64",
        "start": {
          "row": 1498,
          "column": 13
        },
        "end": {
          "row": 1498,
          "column": 25
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "FloatTy::F64",
        "start": {
          "row": 1498,
          "column": 13
        },
        "end": {
          "row": 1498,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "FloatTy",
        "start": {
          "row": 1498,
          "column": 13
        },
        "end": {
          "row": 1498,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "F64",
        "start": {
          "row": 1498,
          "column": 22
        },
        "end": {
          "row": 1498,
          "column": 25
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"f64\"",
        "start": {
          "row": 1498,
          "column": 29
        },
        "end": {
          "row": 1498,
          "column": 34
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn bit_width(&self) -> usize {\n        match *self {\n            FloatTy::F32 => 32,\n            FloatTy::F64 => 64,\n        }\n    }",
        "start": {
          "row": 1502,
          "column": 5
        },
        "end": {
          "row": 1507,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1502,
          "column": 5
        },
        "end": {
          "row": 1502,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "bit_width",
        "start": {
          "row": 1502,
          "column": 12
        },
        "end": {
          "row": 1502,
          "column": 21
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1502,
          "column": 21
        },
        "end": {
          "row": 1502,
          "column": 28
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1502,
          "column": 22
        },
        "end": {
          "row": 1502,
          "column": 27
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1502,
          "column": 23
        },
        "end": {
          "row": 1502,
          "column": 27
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 1502,
          "column": 32
        },
        "end": {
          "row": 1502,
          "column": 37
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            FloatTy::F32 => 32,\n            FloatTy::F64 => 64,\n        }\n    }",
        "start": {
          "row": 1502,
          "column": 38
        },
        "end": {
          "row": 1507,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            FloatTy::F32 => 32,\n            FloatTy::F64 => 64,\n        }",
        "start": {
          "row": 1503,
          "column": 9
        },
        "end": {
          "row": 1506,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1503,
          "column": 15
        },
        "end": {
          "row": 1503,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1503,
          "column": 16
        },
        "end": {
          "row": 1503,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            FloatTy::F32 => 32,\n            FloatTy::F64 => 64,\n        }",
        "start": {
          "row": 1503,
          "column": 21
        },
        "end": {
          "row": 1506,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "FloatTy::F32 => 32,",
        "start": {
          "row": 1504,
          "column": 13
        },
        "end": {
          "row": 1504,
          "column": 32
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "FloatTy::F32",
        "start": {
          "row": 1504,
          "column": 13
        },
        "end": {
          "row": 1504,
          "column": 25
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "FloatTy::F32",
        "start": {
          "row": 1504,
          "column": 13
        },
        "end": {
          "row": 1504,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "FloatTy",
        "start": {
          "row": 1504,
          "column": 13
        },
        "end": {
          "row": 1504,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "F32",
        "start": {
          "row": 1504,
          "column": 22
        },
        "end": {
          "row": 1504,
          "column": 25
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "32",
        "start": {
          "row": 1504,
          "column": 29
        },
        "end": {
          "row": 1504,
          "column": 31
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "FloatTy::F64 => 64,",
        "start": {
          "row": 1505,
          "column": 13
        },
        "end": {
          "row": 1505,
          "column": 32
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "FloatTy::F64",
        "start": {
          "row": 1505,
          "column": 13
        },
        "end": {
          "row": 1505,
          "column": 25
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "FloatTy::F64",
        "start": {
          "row": 1505,
          "column": 13
        },
        "end": {
          "row": 1505,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "FloatTy",
        "start": {
          "row": 1505,
          "column": 13
        },
        "end": {
          "row": 1505,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "F64",
        "start": {
          "row": 1505,
          "column": 22
        },
        "end": {
          "row": 1505,
          "column": 25
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "64",
        "start": {
          "row": 1505,
          "column": 29
        },
        "end": {
          "row": 1505,
          "column": 31
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// Bind a type to an associated type: `A=Foo`.",
        "start": {
          "row": 1510,
          "column": 1
        },
        "end": {
          "row": 1510,
          "column": 47
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1511,
          "column": 1
        },
        "end": {
          "row": 1511,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1511,
          "column": 3
        },
        "end": {
          "row": 1511,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1511,
          "column": 3
        },
        "end": {
          "row": 1511,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1511,
          "column": 9
        },
        "end": {
          "row": 1511,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1511,
          "column": 10
        },
        "end": {
          "row": 1511,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1511,
          "column": 10
        },
        "end": {
          "row": 1511,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1511,
          "column": 17
        },
        "end": {
          "row": 1511,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1511,
          "column": 17
        },
        "end": {
          "row": 1511,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1511,
          "column": 28
        },
        "end": {
          "row": 1511,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1511,
          "column": 28
        },
        "end": {
          "row": 1511,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1511,
          "column": 32
        },
        "end": {
          "row": 1511,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1511,
          "column": 32
        },
        "end": {
          "row": 1511,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1511,
          "column": 48
        },
        "end": {
          "row": 1511,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1511,
          "column": 48
        },
        "end": {
          "row": 1511,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1511,
          "column": 64
        },
        "end": {
          "row": 1511,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1511,
          "column": 64
        },
        "end": {
          "row": 1511,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1511,
          "column": 70
        },
        "end": {
          "row": 1511,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1511,
          "column": 70
        },
        "end": {
          "row": 1511,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct TypeBinding {\n    pub id: NodeId,\n    pub ident: Ident,\n    pub ty: P<Ty>,\n    pub span: Span,\n}",
        "start": {
          "row": 1512,
          "column": 1
        },
        "end": {
          "row": 1517,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1512,
          "column": 1
        },
        "end": {
          "row": 1512,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TypeBinding",
        "start": {
          "row": 1512,
          "column": 12
        },
        "end": {
          "row": 1512,
          "column": 23
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub id: NodeId,\n    pub ident: Ident,\n    pub ty: P<Ty>,\n    pub span: Span,\n}",
        "start": {
          "row": 1512,
          "column": 24
        },
        "end": {
          "row": 1517,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 1513,
          "column": 5
        },
        "end": {
          "row": 1513,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1513,
          "column": 5
        },
        "end": {
          "row": 1513,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1513,
          "column": 9
        },
        "end": {
          "row": 1513,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1513,
          "column": 13
        },
        "end": {
          "row": 1513,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ident: Ident",
        "start": {
          "row": 1514,
          "column": 5
        },
        "end": {
          "row": 1514,
          "column": 21
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1514,
          "column": 5
        },
        "end": {
          "row": 1514,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 1514,
          "column": 9
        },
        "end": {
          "row": 1514,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 1514,
          "column": 16
        },
        "end": {
          "row": 1514,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ty: P<Ty>",
        "start": {
          "row": 1515,
          "column": 5
        },
        "end": {
          "row": 1515,
          "column": 18
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1515,
          "column": 5
        },
        "end": {
          "row": 1515,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1515,
          "column": 9
        },
        "end": {
          "row": 1515,
          "column": 11
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1515,
          "column": 13
        },
        "end": {
          "row": 1515,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1515,
          "column": 13
        },
        "end": {
          "row": 1515,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1515,
          "column": 14
        },
        "end": {
          "row": 1515,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1515,
          "column": 15
        },
        "end": {
          "row": 1515,
          "column": 17
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 1516,
          "column": 5
        },
        "end": {
          "row": 1516,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1516,
          "column": 5
        },
        "end": {
          "row": 1516,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1516,
          "column": 9
        },
        "end": {
          "row": 1516,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1516,
          "column": 15
        },
        "end": {
          "row": 1516,
          "column": 19
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]",
        "start": {
          "row": 1519,
          "column": 1
        },
        "end": {
          "row": 1519,
          "column": 70
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)",
        "start": {
          "row": 1519,
          "column": 3
        },
        "end": {
          "row": 1519,
          "column": 69
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1519,
          "column": 3
        },
        "end": {
          "row": 1519,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)",
        "start": {
          "row": 1519,
          "column": 9
        },
        "end": {
          "row": 1519,
          "column": 69
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1519,
          "column": 10
        },
        "end": {
          "row": 1519,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1519,
          "column": 10
        },
        "end": {
          "row": 1519,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1519,
          "column": 17
        },
        "end": {
          "row": 1519,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1519,
          "column": 17
        },
        "end": {
          "row": 1519,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1519,
          "column": 28
        },
        "end": {
          "row": 1519,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1519,
          "column": 28
        },
        "end": {
          "row": 1519,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1519,
          "column": 32
        },
        "end": {
          "row": 1519,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1519,
          "column": 32
        },
        "end": {
          "row": 1519,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1519,
          "column": 48
        },
        "end": {
          "row": 1519,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1519,
          "column": 48
        },
        "end": {
          "row": 1519,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1519,
          "column": 64
        },
        "end": {
          "row": 1519,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1519,
          "column": 64
        },
        "end": {
          "row": 1519,
          "column": 68
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Ty {\n    pub id: NodeId,\n    pub node: TyKind,\n    pub span: Span,\n}",
        "start": {
          "row": 1520,
          "column": 1
        },
        "end": {
          "row": 1524,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1520,
          "column": 1
        },
        "end": {
          "row": 1520,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1520,
          "column": 12
        },
        "end": {
          "row": 1520,
          "column": 14
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub id: NodeId,\n    pub node: TyKind,\n    pub span: Span,\n}",
        "start": {
          "row": 1520,
          "column": 15
        },
        "end": {
          "row": 1524,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 1521,
          "column": 5
        },
        "end": {
          "row": 1521,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1521,
          "column": 5
        },
        "end": {
          "row": 1521,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1521,
          "column": 9
        },
        "end": {
          "row": 1521,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1521,
          "column": 13
        },
        "end": {
          "row": 1521,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub node: TyKind",
        "start": {
          "row": 1522,
          "column": 5
        },
        "end": {
          "row": 1522,
          "column": 21
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1522,
          "column": 5
        },
        "end": {
          "row": 1522,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1522,
          "column": 9
        },
        "end": {
          "row": 1522,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 1522,
          "column": 15
        },
        "end": {
          "row": 1522,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 1523,
          "column": 5
        },
        "end": {
          "row": 1523,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1523,
          "column": 5
        },
        "end": {
          "row": 1523,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1523,
          "column": 9
        },
        "end": {
          "row": 1523,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1523,
          "column": 15
        },
        "end": {
          "row": 1523,
          "column": 19
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Debug for Ty {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"type({})\", pprust::ty_to_string(self))\n    }\n}",
        "start": {
          "row": 1526,
          "column": 1
        },
        "end": {
          "row": 1530,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Debug",
        "start": {
          "row": 1526,
          "column": 6
        },
        "end": {
          "row": 1526,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1526,
          "column": 6
        },
        "end": {
          "row": 1526,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1526,
          "column": 11
        },
        "end": {
          "row": 1526,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1526,
          "column": 21
        },
        "end": {
          "row": 1526,
          "column": 23
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"type({})\", pprust::ty_to_string(self))\n    }\n}",
        "start": {
          "row": 1526,
          "column": 24
        },
        "end": {
          "row": 1530,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, \"type({})\", pprust::ty_to_string(self))\n    }",
        "start": {
          "row": 1527,
          "column": 5
        },
        "end": {
          "row": 1529,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1527,
          "column": 8
        },
        "end": {
          "row": 1527,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 1527,
          "column": 11
        },
        "end": {
          "row": 1527,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1527,
          "column": 12
        },
        "end": {
          "row": 1527,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1527,
          "column": 13
        },
        "end": {
          "row": 1527,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 1527,
          "column": 19
        },
        "end": {
          "row": 1527,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1527,
          "column": 19
        },
        "end": {
          "row": 1527,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 1527,
          "column": 22
        },
        "end": {
          "row": 1527,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 1527,
          "column": 23
        },
        "end": {
          "row": 1527,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 1527,
          "column": 27
        },
        "end": {
          "row": 1527,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1527,
          "column": 27
        },
        "end": {
          "row": 1527,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 1527,
          "column": 32
        },
        "end": {
          "row": 1527,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 1527,
          "column": 46
        },
        "end": {
          "row": 1527,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1527,
          "column": 46
        },
        "end": {
          "row": 1527,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 1527,
          "column": 51
        },
        "end": {
          "row": 1527,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        write!(f, \"type({})\", pprust::ty_to_string(self))\n    }",
        "start": {
          "row": 1527,
          "column": 58
        },
        "end": {
          "row": 1529,
          "column": 6
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "write!(f, \"type({})\", pprust::ty_to_string(self))",
        "start": {
          "row": 1528,
          "column": 9
        },
        "end": {
          "row": 1528,
          "column": 58
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "write",
        "start": {
          "row": 1528,
          "column": 9
        },
        "end": {
          "row": 1528,
          "column": 14
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(f, \"type({})\", pprust::ty_to_string(self))",
        "start": {
          "row": 1528,
          "column": 15
        },
        "end": {
          "row": 1528,
          "column": 58
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1528,
          "column": 16
        },
        "end": {
          "row": 1528,
          "column": 17
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"type({})\"",
        "start": {
          "row": 1528,
          "column": 19
        },
        "end": {
          "row": 1528,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "pprust",
        "start": {
          "row": 1528,
          "column": 31
        },
        "end": {
          "row": 1528,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty_to_string",
        "start": {
          "row": 1528,
          "column": 39
        },
        "end": {
          "row": 1528,
          "column": 51
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(self)",
        "start": {
          "row": 1528,
          "column": 51
        },
        "end": {
          "row": 1528,
          "column": 57
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1528,
          "column": 52
        },
        "end": {
          "row": 1528,
          "column": 56
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1532,
          "column": 1
        },
        "end": {
          "row": 1532,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1532,
          "column": 3
        },
        "end": {
          "row": 1532,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1532,
          "column": 3
        },
        "end": {
          "row": 1532,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1532,
          "column": 9
        },
        "end": {
          "row": 1532,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1532,
          "column": 10
        },
        "end": {
          "row": 1532,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1532,
          "column": 10
        },
        "end": {
          "row": 1532,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1532,
          "column": 17
        },
        "end": {
          "row": 1532,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1532,
          "column": 17
        },
        "end": {
          "row": 1532,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1532,
          "column": 28
        },
        "end": {
          "row": 1532,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1532,
          "column": 28
        },
        "end": {
          "row": 1532,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1532,
          "column": 32
        },
        "end": {
          "row": 1532,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1532,
          "column": 32
        },
        "end": {
          "row": 1532,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1532,
          "column": 48
        },
        "end": {
          "row": 1532,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1532,
          "column": 48
        },
        "end": {
          "row": 1532,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1532,
          "column": 64
        },
        "end": {
          "row": 1532,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1532,
          "column": 64
        },
        "end": {
          "row": 1532,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1532,
          "column": 70
        },
        "end": {
          "row": 1532,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1532,
          "column": 70
        },
        "end": {
          "row": 1532,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct BareFnTy {\n    pub unsafety: Unsafety,\n    pub abi: Abi,\n    pub generic_params: Vec<GenericParam>,\n    pub decl: P<FnDecl>\n}",
        "start": {
          "row": 1533,
          "column": 1
        },
        "end": {
          "row": 1538,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1533,
          "column": 1
        },
        "end": {
          "row": 1533,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "BareFnTy",
        "start": {
          "row": 1533,
          "column": 12
        },
        "end": {
          "row": 1533,
          "column": 20
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub unsafety: Unsafety,\n    pub abi: Abi,\n    pub generic_params: Vec<GenericParam>,\n    pub decl: P<FnDecl>\n}",
        "start": {
          "row": 1533,
          "column": 21
        },
        "end": {
          "row": 1538,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub unsafety: Unsafety",
        "start": {
          "row": 1534,
          "column": 5
        },
        "end": {
          "row": 1534,
          "column": 27
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1534,
          "column": 5
        },
        "end": {
          "row": 1534,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "unsafety",
        "start": {
          "row": 1534,
          "column": 9
        },
        "end": {
          "row": 1534,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Unsafety",
        "start": {
          "row": 1534,
          "column": 19
        },
        "end": {
          "row": 1534,
          "column": 27
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub abi: Abi",
        "start": {
          "row": 1535,
          "column": 5
        },
        "end": {
          "row": 1535,
          "column": 17
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1535,
          "column": 5
        },
        "end": {
          "row": 1535,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "abi",
        "start": {
          "row": 1535,
          "column": 9
        },
        "end": {
          "row": 1535,
          "column": 12
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Abi",
        "start": {
          "row": 1535,
          "column": 14
        },
        "end": {
          "row": 1535,
          "column": 17
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub generic_params: Vec<GenericParam>",
        "start": {
          "row": 1536,
          "column": 5
        },
        "end": {
          "row": 1536,
          "column": 42
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1536,
          "column": 5
        },
        "end": {
          "row": 1536,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "generic_params",
        "start": {
          "row": 1536,
          "column": 9
        },
        "end": {
          "row": 1536,
          "column": 23
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<GenericParam>",
        "start": {
          "row": 1536,
          "column": 25
        },
        "end": {
          "row": 1536,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1536,
          "column": 25
        },
        "end": {
          "row": 1536,
          "column": 28
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<GenericParam>",
        "start": {
          "row": 1536,
          "column": 28
        },
        "end": {
          "row": 1536,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "GenericParam",
        "start": {
          "row": 1536,
          "column": 29
        },
        "end": {
          "row": 1536,
          "column": 41
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub decl: P<FnDecl>",
        "start": {
          "row": 1537,
          "column": 5
        },
        "end": {
          "row": 1537,
          "column": 24
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1537,
          "column": 5
        },
        "end": {
          "row": 1537,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "decl",
        "start": {
          "row": 1537,
          "column": 9
        },
        "end": {
          "row": 1537,
          "column": 13
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<FnDecl>",
        "start": {
          "row": 1537,
          "column": 15
        },
        "end": {
          "row": 1537,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1537,
          "column": 15
        },
        "end": {
          "row": 1537,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<FnDecl>",
        "start": {
          "row": 1537,
          "column": 16
        },
        "end": {
          "row": 1537,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FnDecl",
        "start": {
          "row": 1537,
          "column": 17
        },
        "end": {
          "row": 1537,
          "column": 23
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The different kinds of types recognized by the compiler",
        "start": {
          "row": 1540,
          "column": 1
        },
        "end": {
          "row": 1540,
          "column": 60
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1541,
          "column": 1
        },
        "end": {
          "row": 1541,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1541,
          "column": 3
        },
        "end": {
          "row": 1541,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1541,
          "column": 3
        },
        "end": {
          "row": 1541,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1541,
          "column": 9
        },
        "end": {
          "row": 1541,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1541,
          "column": 10
        },
        "end": {
          "row": 1541,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1541,
          "column": 10
        },
        "end": {
          "row": 1541,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1541,
          "column": 17
        },
        "end": {
          "row": 1541,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1541,
          "column": 17
        },
        "end": {
          "row": 1541,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1541,
          "column": 28
        },
        "end": {
          "row": 1541,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1541,
          "column": 28
        },
        "end": {
          "row": 1541,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1541,
          "column": 32
        },
        "end": {
          "row": 1541,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1541,
          "column": 32
        },
        "end": {
          "row": 1541,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1541,
          "column": 48
        },
        "end": {
          "row": 1541,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1541,
          "column": 48
        },
        "end": {
          "row": 1541,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1541,
          "column": 64
        },
        "end": {
          "row": 1541,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1541,
          "column": 64
        },
        "end": {
          "row": 1541,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1541,
          "column": 70
        },
        "end": {
          "row": 1541,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1541,
          "column": 70
        },
        "end": {
          "row": 1541,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum TyKind {\n    /// A variable-length slice (`[T]`)\n    Slice(P<Ty>),\n    /// A fixed length array (`[T; n]`)\n    Array(P<Ty>, P<Expr>),\n    /// A raw pointer (`*const T` or `*mut T`)\n    Ptr(MutTy),\n    /// A reference (`&'a T` or `&'a mut T`)\n    Rptr(Option<Lifetime>, MutTy),\n    /// A bare function (e.g. `fn(usize) -> bool`)\n    BareFn(P<BareFnTy>),\n    /// The never type (`!`)\n    Never,\n    /// A tuple (`(A, B, C, D,...)`)\n    Tup(Vec<P<Ty>> ),\n    /// A path (`module::module::...::Type`), optionally\n    /// \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.\n    ///\n    /// Type parameters are stored in the Path itself\n    Path(Option<QSelf>, Path),\n    /// A trait object type `Bound1 + Bound2 + Bound3`\n    /// where `Bound` is a trait or a lifetime.\n    TraitObject(TyParamBounds, TraitObjectSyntax),\n    /// An `impl Bound1 + Bound2 + Bound3` type\n    /// where `Bound` is a trait or a lifetime.\n    ImplTrait(TyParamBounds),\n    /// No-op; kept solely so that we can pretty-print faithfully\n    Paren(P<Ty>),\n    /// Unused for now\n    Typeof(P<Expr>),\n    /// TyKind::Infer means the type should be inferred instead of it having been\n    /// specified. This can appear anywhere in a type.\n    Infer,\n    /// Inferred type of a `self` or `&self` argument in a method.\n    ImplicitSelf,\n    // A macro in the type position.\n    Mac(Mac),\n    /// Placeholder for a kind that has failed to be defined.\n    Err,\n}",
        "start": {
          "row": 1542,
          "column": 1
        },
        "end": {
          "row": 1581,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1542,
          "column": 1
        },
        "end": {
          "row": 1542,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 1542,
          "column": 10
        },
        "end": {
          "row": 1542,
          "column": 16
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// A variable-length slice (`[T]`)\n    Slice(P<Ty>),\n    /// A fixed length array (`[T; n]`)\n    Array(P<Ty>, P<Expr>),\n    /// A raw pointer (`*const T` or `*mut T`)\n    Ptr(MutTy),\n    /// A reference (`&'a T` or `&'a mut T`)\n    Rptr(Option<Lifetime>, MutTy),\n    /// A bare function (e.g. `fn(usize) -> bool`)\n    BareFn(P<BareFnTy>),\n    /// The never type (`!`)\n    Never,\n    /// A tuple (`(A, B, C, D,...)`)\n    Tup(Vec<P<Ty>> ),\n    /// A path (`module::module::...::Type`), optionally\n    /// \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.\n    ///\n    /// Type parameters are stored in the Path itself\n    Path(Option<QSelf>, Path),\n    /// A trait object type `Bound1 + Bound2 + Bound3`\n    /// where `Bound` is a trait or a lifetime.\n    TraitObject(TyParamBounds, TraitObjectSyntax),\n    /// An `impl Bound1 + Bound2 + Bound3` type\n    /// where `Bound` is a trait or a lifetime.\n    ImplTrait(TyParamBounds),\n    /// No-op; kept solely so that we can pretty-print faithfully\n    Paren(P<Ty>),\n    /// Unused for now\n    Typeof(P<Expr>),\n    /// TyKind::Infer means the type should be inferred instead of it having been\n    /// specified. This can appear anywhere in a type.\n    Infer,\n    /// Inferred type of a `self` or `&self` argument in a method.\n    ImplicitSelf,\n    // A macro in the type position.\n    Mac(Mac),\n    /// Placeholder for a kind that has failed to be defined.\n    Err,\n}",
        "start": {
          "row": 1542,
          "column": 17
        },
        "end": {
          "row": 1581,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A variable-length slice (`[T]`)",
        "start": {
          "row": 1543,
          "column": 5
        },
        "end": {
          "row": 1543,
          "column": 40
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Slice(P<Ty>)",
        "start": {
          "row": 1544,
          "column": 5
        },
        "end": {
          "row": 1544,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Slice",
        "start": {
          "row": 1544,
          "column": 5
        },
        "end": {
          "row": 1544,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Ty>)",
        "start": {
          "row": 1544,
          "column": 10
        },
        "end": {
          "row": 1544,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1544,
          "column": 11
        },
        "end": {
          "row": 1544,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1544,
          "column": 11
        },
        "end": {
          "row": 1544,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1544,
          "column": 12
        },
        "end": {
          "row": 1544,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1544,
          "column": 13
        },
        "end": {
          "row": 1544,
          "column": 15
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A fixed length array (`[T; n]`)",
        "start": {
          "row": 1545,
          "column": 5
        },
        "end": {
          "row": 1545,
          "column": 40
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Array(P<Ty>, P<Expr>)",
        "start": {
          "row": 1546,
          "column": 5
        },
        "end": {
          "row": 1546,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Array",
        "start": {
          "row": 1546,
          "column": 5
        },
        "end": {
          "row": 1546,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Ty>, P<Expr>)",
        "start": {
          "row": 1546,
          "column": 10
        },
        "end": {
          "row": 1546,
          "column": 26
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1546,
          "column": 11
        },
        "end": {
          "row": 1546,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1546,
          "column": 11
        },
        "end": {
          "row": 1546,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1546,
          "column": 12
        },
        "end": {
          "row": 1546,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1546,
          "column": 13
        },
        "end": {
          "row": 1546,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1546,
          "column": 18
        },
        "end": {
          "row": 1546,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1546,
          "column": 18
        },
        "end": {
          "row": 1546,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1546,
          "column": 19
        },
        "end": {
          "row": 1546,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1546,
          "column": 20
        },
        "end": {
          "row": 1546,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A raw pointer (`*const T` or `*mut T`)",
        "start": {
          "row": 1547,
          "column": 5
        },
        "end": {
          "row": 1547,
          "column": 47
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Ptr(MutTy)",
        "start": {
          "row": 1548,
          "column": 5
        },
        "end": {
          "row": 1548,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ptr",
        "start": {
          "row": 1548,
          "column": 5
        },
        "end": {
          "row": 1548,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(MutTy)",
        "start": {
          "row": 1548,
          "column": 8
        },
        "end": {
          "row": 1548,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MutTy",
        "start": {
          "row": 1548,
          "column": 9
        },
        "end": {
          "row": 1548,
          "column": 14
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A reference (`&'a T` or `&'a mut T`)",
        "start": {
          "row": 1549,
          "column": 5
        },
        "end": {
          "row": 1549,
          "column": 45
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Rptr(Option<Lifetime>, MutTy)",
        "start": {
          "row": 1550,
          "column": 5
        },
        "end": {
          "row": 1550,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Rptr",
        "start": {
          "row": 1550,
          "column": 5
        },
        "end": {
          "row": 1550,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Option<Lifetime>, MutTy)",
        "start": {
          "row": 1550,
          "column": 9
        },
        "end": {
          "row": 1550,
          "column": 34
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<Lifetime>",
        "start": {
          "row": 1550,
          "column": 10
        },
        "end": {
          "row": 1550,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1550,
          "column": 10
        },
        "end": {
          "row": 1550,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Lifetime>",
        "start": {
          "row": 1550,
          "column": 16
        },
        "end": {
          "row": 1550,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lifetime",
        "start": {
          "row": 1550,
          "column": 17
        },
        "end": {
          "row": 1550,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MutTy",
        "start": {
          "row": 1550,
          "column": 28
        },
        "end": {
          "row": 1550,
          "column": 33
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A bare function (e.g. `fn(usize) -> bool`)",
        "start": {
          "row": 1551,
          "column": 5
        },
        "end": {
          "row": 1551,
          "column": 51
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "BareFn(P<BareFnTy>)",
        "start": {
          "row": 1552,
          "column": 5
        },
        "end": {
          "row": 1552,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BareFn",
        "start": {
          "row": 1552,
          "column": 5
        },
        "end": {
          "row": 1552,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<BareFnTy>)",
        "start": {
          "row": 1552,
          "column": 11
        },
        "end": {
          "row": 1552,
          "column": 24
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<BareFnTy>",
        "start": {
          "row": 1552,
          "column": 12
        },
        "end": {
          "row": 1552,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1552,
          "column": 12
        },
        "end": {
          "row": 1552,
          "column": 13
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<BareFnTy>",
        "start": {
          "row": 1552,
          "column": 13
        },
        "end": {
          "row": 1552,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "BareFnTy",
        "start": {
          "row": 1552,
          "column": 14
        },
        "end": {
          "row": 1552,
          "column": 22
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The never type (`!`)",
        "start": {
          "row": 1553,
          "column": 5
        },
        "end": {
          "row": 1553,
          "column": 29
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Never",
        "start": {
          "row": 1554,
          "column": 5
        },
        "end": {
          "row": 1554,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Never",
        "start": {
          "row": 1554,
          "column": 5
        },
        "end": {
          "row": 1554,
          "column": 10
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A tuple (`(A, B, C, D,...)`)",
        "start": {
          "row": 1555,
          "column": 5
        },
        "end": {
          "row": 1555,
          "column": 37
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Tup(Vec<P<Ty>> )",
        "start": {
          "row": 1556,
          "column": 5
        },
        "end": {
          "row": 1556,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tup",
        "start": {
          "row": 1556,
          "column": 5
        },
        "end": {
          "row": 1556,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Vec<P<Ty>> )",
        "start": {
          "row": 1556,
          "column": 8
        },
        "end": {
          "row": 1556,
          "column": 21
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Ty>>",
        "start": {
          "row": 1556,
          "column": 9
        },
        "end": {
          "row": 1556,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1556,
          "column": 9
        },
        "end": {
          "row": 1556,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Ty>>",
        "start": {
          "row": 1556,
          "column": 12
        },
        "end": {
          "row": 1556,
          "column": 19
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1556,
          "column": 13
        },
        "end": {
          "row": 1556,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1556,
          "column": 13
        },
        "end": {
          "row": 1556,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1556,
          "column": 14
        },
        "end": {
          "row": 1556,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1556,
          "column": 15
        },
        "end": {
          "row": 1556,
          "column": 17
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A path (`module::module::...::Type`), optionally",
        "start": {
          "row": 1557,
          "column": 5
        },
        "end": {
          "row": 1557,
          "column": 57
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.",
        "start": {
          "row": 1558,
          "column": 5
        },
        "end": {
          "row": 1558,
          "column": 61
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1559,
          "column": 5
        },
        "end": {
          "row": 1559,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Type parameters are stored in the Path itself",
        "start": {
          "row": 1560,
          "column": 5
        },
        "end": {
          "row": 1560,
          "column": 54
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Path(Option<QSelf>, Path)",
        "start": {
          "row": 1561,
          "column": 5
        },
        "end": {
          "row": 1561,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1561,
          "column": 5
        },
        "end": {
          "row": 1561,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Option<QSelf>, Path)",
        "start": {
          "row": 1561,
          "column": 9
        },
        "end": {
          "row": 1561,
          "column": 30
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<QSelf>",
        "start": {
          "row": 1561,
          "column": 10
        },
        "end": {
          "row": 1561,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1561,
          "column": 10
        },
        "end": {
          "row": 1561,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<QSelf>",
        "start": {
          "row": 1561,
          "column": 16
        },
        "end": {
          "row": 1561,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "QSelf",
        "start": {
          "row": 1561,
          "column": 17
        },
        "end": {
          "row": 1561,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1561,
          "column": 25
        },
        "end": {
          "row": 1561,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A trait object type `Bound1 + Bound2 + Bound3`",
        "start": {
          "row": 1562,
          "column": 5
        },
        "end": {
          "row": 1562,
          "column": 55
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// where `Bound` is a trait or a lifetime.",
        "start": {
          "row": 1563,
          "column": 5
        },
        "end": {
          "row": 1563,
          "column": 48
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "TraitObject(TyParamBounds, TraitObjectSyntax)",
        "start": {
          "row": 1564,
          "column": 5
        },
        "end": {
          "row": 1564,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TraitObject",
        "start": {
          "row": 1564,
          "column": 5
        },
        "end": {
          "row": 1564,
          "column": 16
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(TyParamBounds, TraitObjectSyntax)",
        "start": {
          "row": 1564,
          "column": 16
        },
        "end": {
          "row": 1564,
          "column": 50
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParamBounds",
        "start": {
          "row": 1564,
          "column": 17
        },
        "end": {
          "row": 1564,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TraitObjectSyntax",
        "start": {
          "row": 1564,
          "column": 32
        },
        "end": {
          "row": 1564,
          "column": 49
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An `impl Bound1 + Bound2 + Bound3` type",
        "start": {
          "row": 1565,
          "column": 5
        },
        "end": {
          "row": 1565,
          "column": 48
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// where `Bound` is a trait or a lifetime.",
        "start": {
          "row": 1566,
          "column": 5
        },
        "end": {
          "row": 1566,
          "column": 48
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "ImplTrait(TyParamBounds)",
        "start": {
          "row": 1567,
          "column": 5
        },
        "end": {
          "row": 1567,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ImplTrait",
        "start": {
          "row": 1567,
          "column": 5
        },
        "end": {
          "row": 1567,
          "column": 14
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(TyParamBounds)",
        "start": {
          "row": 1567,
          "column": 14
        },
        "end": {
          "row": 1567,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParamBounds",
        "start": {
          "row": 1567,
          "column": 15
        },
        "end": {
          "row": 1567,
          "column": 28
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// No-op; kept solely so that we can pretty-print faithfully",
        "start": {
          "row": 1568,
          "column": 5
        },
        "end": {
          "row": 1568,
          "column": 66
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Paren(P<Ty>)",
        "start": {
          "row": 1569,
          "column": 5
        },
        "end": {
          "row": 1569,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Paren",
        "start": {
          "row": 1569,
          "column": 5
        },
        "end": {
          "row": 1569,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Ty>)",
        "start": {
          "row": 1569,
          "column": 10
        },
        "end": {
          "row": 1569,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1569,
          "column": 11
        },
        "end": {
          "row": 1569,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1569,
          "column": 11
        },
        "end": {
          "row": 1569,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1569,
          "column": 12
        },
        "end": {
          "row": 1569,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1569,
          "column": 13
        },
        "end": {
          "row": 1569,
          "column": 15
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Unused for now",
        "start": {
          "row": 1570,
          "column": 5
        },
        "end": {
          "row": 1570,
          "column": 23
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Typeof(P<Expr>)",
        "start": {
          "row": 1571,
          "column": 5
        },
        "end": {
          "row": 1571,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Typeof",
        "start": {
          "row": 1571,
          "column": 5
        },
        "end": {
          "row": 1571,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Expr>)",
        "start": {
          "row": 1571,
          "column": 11
        },
        "end": {
          "row": 1571,
          "column": 20
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1571,
          "column": 12
        },
        "end": {
          "row": 1571,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1571,
          "column": 12
        },
        "end": {
          "row": 1571,
          "column": 13
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1571,
          "column": 13
        },
        "end": {
          "row": 1571,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1571,
          "column": 14
        },
        "end": {
          "row": 1571,
          "column": 18
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// TyKind::Infer means the type should be inferred instead of it having been",
        "start": {
          "row": 1572,
          "column": 5
        },
        "end": {
          "row": 1572,
          "column": 82
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// specified. This can appear anywhere in a type.",
        "start": {
          "row": 1573,
          "column": 5
        },
        "end": {
          "row": 1573,
          "column": 55
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Infer",
        "start": {
          "row": 1574,
          "column": 5
        },
        "end": {
          "row": 1574,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Infer",
        "start": {
          "row": 1574,
          "column": 5
        },
        "end": {
          "row": 1574,
          "column": 10
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Inferred type of a `self` or `&self` argument in a method.",
        "start": {
          "row": 1575,
          "column": 5
        },
        "end": {
          "row": 1575,
          "column": 67
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "ImplicitSelf",
        "start": {
          "row": 1576,
          "column": 5
        },
        "end": {
          "row": 1576,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ImplicitSelf",
        "start": {
          "row": 1576,
          "column": 5
        },
        "end": {
          "row": 1576,
          "column": 17
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// A macro in the type position.",
        "start": {
          "row": 1577,
          "column": 5
        },
        "end": {
          "row": 1577,
          "column": 37
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Mac(Mac)",
        "start": {
          "row": 1578,
          "column": 5
        },
        "end": {
          "row": 1578,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 1578,
          "column": 5
        },
        "end": {
          "row": 1578,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Mac)",
        "start": {
          "row": 1578,
          "column": 8
        },
        "end": {
          "row": 1578,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 1578,
          "column": 9
        },
        "end": {
          "row": 1578,
          "column": 12
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Placeholder for a kind that has failed to be defined.",
        "start": {
          "row": 1579,
          "column": 5
        },
        "end": {
          "row": 1579,
          "column": 62
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Err",
        "start": {
          "row": 1580,
          "column": 5
        },
        "end": {
          "row": 1580,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Err",
        "start": {
          "row": 1580,
          "column": 5
        },
        "end": {
          "row": 1580,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Syntax used to declare a trait object.",
        "start": {
          "row": 1583,
          "column": 1
        },
        "end": {
          "row": 1583,
          "column": 43
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, Copy, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1584,
          "column": 1
        },
        "end": {
          "row": 1584,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, Copy, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1584,
          "column": 3
        },
        "end": {
          "row": 1584,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1584,
          "column": 3
        },
        "end": {
          "row": 1584,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, Copy, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1584,
          "column": 9
        },
        "end": {
          "row": 1584,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1584,
          "column": 10
        },
        "end": {
          "row": 1584,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1584,
          "column": 10
        },
        "end": {
          "row": 1584,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1584,
          "column": 17
        },
        "end": {
          "row": 1584,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1584,
          "column": 17
        },
        "end": {
          "row": 1584,
          "column": 21
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1584,
          "column": 23
        },
        "end": {
          "row": 1584,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1584,
          "column": 23
        },
        "end": {
          "row": 1584,
          "column": 32
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1584,
          "column": 34
        },
        "end": {
          "row": 1584,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1584,
          "column": 34
        },
        "end": {
          "row": 1584,
          "column": 36
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1584,
          "column": 38
        },
        "end": {
          "row": 1584,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1584,
          "column": 38
        },
        "end": {
          "row": 1584,
          "column": 52
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1584,
          "column": 54
        },
        "end": {
          "row": 1584,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1584,
          "column": 54
        },
        "end": {
          "row": 1584,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1584,
          "column": 70
        },
        "end": {
          "row": 1584,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1584,
          "column": 70
        },
        "end": {
          "row": 1584,
          "column": 74
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1584,
          "column": 76
        },
        "end": {
          "row": 1584,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1584,
          "column": 76
        },
        "end": {
          "row": 1584,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum TraitObjectSyntax {\n    Dyn,\n    None,\n}",
        "start": {
          "row": 1585,
          "column": 1
        },
        "end": {
          "row": 1588,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1585,
          "column": 1
        },
        "end": {
          "row": 1585,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TraitObjectSyntax",
        "start": {
          "row": 1585,
          "column": 10
        },
        "end": {
          "row": 1585,
          "column": 27
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Dyn,\n    None,\n}",
        "start": {
          "row": 1585,
          "column": 28
        },
        "end": {
          "row": 1588,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Dyn",
        "start": {
          "row": 1586,
          "column": 5
        },
        "end": {
          "row": 1586,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Dyn",
        "start": {
          "row": 1586,
          "column": 5
        },
        "end": {
          "row": 1586,
          "column": 8
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "None",
        "start": {
          "row": 1587,
          "column": 5
        },
        "end": {
          "row": 1587,
          "column": 9
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 1587,
          "column": 5
        },
        "end": {
          "row": 1587,
          "column": 9
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Inline assembly dialect.",
        "start": {
          "row": 1590,
          "column": 1
        },
        "end": {
          "row": 1590,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1591,
          "column": 1
        },
        "end": {
          "row": 1591,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `\"intel\"` as in `asm!(\"mov eax, 2\" : \"={eax}\"(result) : : : \"intel\")`",
        "start": {
          "row": 1592,
          "column": 1
        },
        "end": {
          "row": 1592,
          "column": 79
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 1593,
          "column": 1
        },
        "end": {
          "row": 1593,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1593,
          "column": 3
        },
        "end": {
          "row": 1593,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1593,
          "column": 3
        },
        "end": {
          "row": 1593,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1593,
          "column": 9
        },
        "end": {
          "row": 1593,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1593,
          "column": 10
        },
        "end": {
          "row": 1593,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1593,
          "column": 10
        },
        "end": {
          "row": 1593,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1593,
          "column": 17
        },
        "end": {
          "row": 1593,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1593,
          "column": 17
        },
        "end": {
          "row": 1593,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1593,
          "column": 28
        },
        "end": {
          "row": 1593,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1593,
          "column": 28
        },
        "end": {
          "row": 1593,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1593,
          "column": 32
        },
        "end": {
          "row": 1593,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1593,
          "column": 32
        },
        "end": {
          "row": 1593,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1593,
          "column": 48
        },
        "end": {
          "row": 1593,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1593,
          "column": 48
        },
        "end": {
          "row": 1593,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1593,
          "column": 64
        },
        "end": {
          "row": 1593,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1593,
          "column": 64
        },
        "end": {
          "row": 1593,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1593,
          "column": 70
        },
        "end": {
          "row": 1593,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1593,
          "column": 70
        },
        "end": {
          "row": 1593,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1593,
          "column": 77
        },
        "end": {
          "row": 1593,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1593,
          "column": 77
        },
        "end": {
          "row": 1593,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum AsmDialect {\n    Att,\n    Intel,\n}",
        "start": {
          "row": 1594,
          "column": 1
        },
        "end": {
          "row": 1597,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1594,
          "column": 1
        },
        "end": {
          "row": 1594,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "AsmDialect",
        "start": {
          "row": 1594,
          "column": 10
        },
        "end": {
          "row": 1594,
          "column": 20
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Att,\n    Intel,\n}",
        "start": {
          "row": 1594,
          "column": 21
        },
        "end": {
          "row": 1597,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Att",
        "start": {
          "row": 1595,
          "column": 5
        },
        "end": {
          "row": 1595,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Att",
        "start": {
          "row": 1595,
          "column": 5
        },
        "end": {
          "row": 1595,
          "column": 8
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Intel",
        "start": {
          "row": 1596,
          "column": 5
        },
        "end": {
          "row": 1596,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Intel",
        "start": {
          "row": 1596,
          "column": 5
        },
        "end": {
          "row": 1596,
          "column": 10
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Inline assembly.",
        "start": {
          "row": 1599,
          "column": 1
        },
        "end": {
          "row": 1599,
          "column": 21
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1600,
          "column": 1
        },
        "end": {
          "row": 1600,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `\"={eax}\"(result)` as in `asm!(\"mov eax, 2\" : \"={eax}\"(result) : : : \"intel\")`",
        "start": {
          "row": 1601,
          "column": 1
        },
        "end": {
          "row": 1601,
          "column": 88
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1602,
          "column": 1
        },
        "end": {
          "row": 1602,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1602,
          "column": 3
        },
        "end": {
          "row": 1602,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1602,
          "column": 3
        },
        "end": {
          "row": 1602,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1602,
          "column": 9
        },
        "end": {
          "row": 1602,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1602,
          "column": 10
        },
        "end": {
          "row": 1602,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1602,
          "column": 10
        },
        "end": {
          "row": 1602,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1602,
          "column": 17
        },
        "end": {
          "row": 1602,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1602,
          "column": 17
        },
        "end": {
          "row": 1602,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1602,
          "column": 28
        },
        "end": {
          "row": 1602,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1602,
          "column": 28
        },
        "end": {
          "row": 1602,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1602,
          "column": 32
        },
        "end": {
          "row": 1602,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1602,
          "column": 32
        },
        "end": {
          "row": 1602,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1602,
          "column": 48
        },
        "end": {
          "row": 1602,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1602,
          "column": 48
        },
        "end": {
          "row": 1602,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1602,
          "column": 64
        },
        "end": {
          "row": 1602,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1602,
          "column": 64
        },
        "end": {
          "row": 1602,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1602,
          "column": 70
        },
        "end": {
          "row": 1602,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1602,
          "column": 70
        },
        "end": {
          "row": 1602,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct InlineAsmOutput {\n    pub constraint: Symbol,\n    pub expr: P<Expr>,\n    pub is_rw: bool,\n    pub is_indirect: bool,\n}",
        "start": {
          "row": 1603,
          "column": 1
        },
        "end": {
          "row": 1608,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1603,
          "column": 1
        },
        "end": {
          "row": 1603,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "InlineAsmOutput",
        "start": {
          "row": 1603,
          "column": 12
        },
        "end": {
          "row": 1603,
          "column": 27
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub constraint: Symbol,\n    pub expr: P<Expr>,\n    pub is_rw: bool,\n    pub is_indirect: bool,\n}",
        "start": {
          "row": 1603,
          "column": 28
        },
        "end": {
          "row": 1608,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub constraint: Symbol",
        "start": {
          "row": 1604,
          "column": 5
        },
        "end": {
          "row": 1604,
          "column": 27
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1604,
          "column": 5
        },
        "end": {
          "row": 1604,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "constraint",
        "start": {
          "row": 1604,
          "column": 9
        },
        "end": {
          "row": 1604,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Symbol",
        "start": {
          "row": 1604,
          "column": 21
        },
        "end": {
          "row": 1604,
          "column": 27
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub expr: P<Expr>",
        "start": {
          "row": 1605,
          "column": 5
        },
        "end": {
          "row": 1605,
          "column": 22
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1605,
          "column": 5
        },
        "end": {
          "row": 1605,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "expr",
        "start": {
          "row": 1605,
          "column": 9
        },
        "end": {
          "row": 1605,
          "column": 13
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1605,
          "column": 15
        },
        "end": {
          "row": 1605,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1605,
          "column": 15
        },
        "end": {
          "row": 1605,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1605,
          "column": 16
        },
        "end": {
          "row": 1605,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1605,
          "column": 17
        },
        "end": {
          "row": 1605,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub is_rw: bool",
        "start": {
          "row": 1606,
          "column": 5
        },
        "end": {
          "row": 1606,
          "column": 20
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1606,
          "column": 5
        },
        "end": {
          "row": 1606,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_rw",
        "start": {
          "row": 1606,
          "column": 9
        },
        "end": {
          "row": 1606,
          "column": 14
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1606,
          "column": 16
        },
        "end": {
          "row": 1606,
          "column": 20
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub is_indirect: bool",
        "start": {
          "row": 1607,
          "column": 5
        },
        "end": {
          "row": 1607,
          "column": 26
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1607,
          "column": 5
        },
        "end": {
          "row": 1607,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_indirect",
        "start": {
          "row": 1607,
          "column": 9
        },
        "end": {
          "row": 1607,
          "column": 20
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1607,
          "column": 22
        },
        "end": {
          "row": 1607,
          "column": 26
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Inline assembly.",
        "start": {
          "row": 1610,
          "column": 1
        },
        "end": {
          "row": 1610,
          "column": 21
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1611,
          "column": 1
        },
        "end": {
          "row": 1611,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `asm!(\"NOP\");`",
        "start": {
          "row": 1612,
          "column": 1
        },
        "end": {
          "row": 1612,
          "column": 24
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1613,
          "column": 1
        },
        "end": {
          "row": 1613,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1613,
          "column": 3
        },
        "end": {
          "row": 1613,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1613,
          "column": 3
        },
        "end": {
          "row": 1613,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1613,
          "column": 9
        },
        "end": {
          "row": 1613,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1613,
          "column": 10
        },
        "end": {
          "row": 1613,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1613,
          "column": 10
        },
        "end": {
          "row": 1613,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1613,
          "column": 17
        },
        "end": {
          "row": 1613,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1613,
          "column": 17
        },
        "end": {
          "row": 1613,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1613,
          "column": 28
        },
        "end": {
          "row": 1613,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1613,
          "column": 28
        },
        "end": {
          "row": 1613,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1613,
          "column": 32
        },
        "end": {
          "row": 1613,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1613,
          "column": 32
        },
        "end": {
          "row": 1613,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1613,
          "column": 48
        },
        "end": {
          "row": 1613,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1613,
          "column": 48
        },
        "end": {
          "row": 1613,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1613,
          "column": 64
        },
        "end": {
          "row": 1613,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1613,
          "column": 64
        },
        "end": {
          "row": 1613,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1613,
          "column": 70
        },
        "end": {
          "row": 1613,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1613,
          "column": 70
        },
        "end": {
          "row": 1613,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct InlineAsm {\n    pub asm: Symbol,\n    pub asm_str_style: StrStyle,\n    pub outputs: Vec<InlineAsmOutput>,\n    pub inputs: Vec<(Symbol, P<Expr>)>,\n    pub clobbers: Vec<Symbol>,\n    pub volatile: bool,\n    pub alignstack: bool,\n    pub dialect: AsmDialect,\n    pub ctxt: SyntaxContext,\n}",
        "start": {
          "row": 1614,
          "column": 1
        },
        "end": {
          "row": 1624,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1614,
          "column": 1
        },
        "end": {
          "row": 1614,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "InlineAsm",
        "start": {
          "row": 1614,
          "column": 12
        },
        "end": {
          "row": 1614,
          "column": 21
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub asm: Symbol,\n    pub asm_str_style: StrStyle,\n    pub outputs: Vec<InlineAsmOutput>,\n    pub inputs: Vec<(Symbol, P<Expr>)>,\n    pub clobbers: Vec<Symbol>,\n    pub volatile: bool,\n    pub alignstack: bool,\n    pub dialect: AsmDialect,\n    pub ctxt: SyntaxContext,\n}",
        "start": {
          "row": 1614,
          "column": 22
        },
        "end": {
          "row": 1624,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub asm: Symbol",
        "start": {
          "row": 1615,
          "column": 5
        },
        "end": {
          "row": 1615,
          "column": 20
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1615,
          "column": 5
        },
        "end": {
          "row": 1615,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "asm",
        "start": {
          "row": 1615,
          "column": 9
        },
        "end": {
          "row": 1615,
          "column": 12
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Symbol",
        "start": {
          "row": 1615,
          "column": 14
        },
        "end": {
          "row": 1615,
          "column": 20
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub asm_str_style: StrStyle",
        "start": {
          "row": 1616,
          "column": 5
        },
        "end": {
          "row": 1616,
          "column": 32
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1616,
          "column": 5
        },
        "end": {
          "row": 1616,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "asm_str_style",
        "start": {
          "row": 1616,
          "column": 9
        },
        "end": {
          "row": 1616,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "StrStyle",
        "start": {
          "row": 1616,
          "column": 24
        },
        "end": {
          "row": 1616,
          "column": 32
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub outputs: Vec<InlineAsmOutput>",
        "start": {
          "row": 1617,
          "column": 5
        },
        "end": {
          "row": 1617,
          "column": 38
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1617,
          "column": 5
        },
        "end": {
          "row": 1617,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "outputs",
        "start": {
          "row": 1617,
          "column": 9
        },
        "end": {
          "row": 1617,
          "column": 16
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<InlineAsmOutput>",
        "start": {
          "row": 1617,
          "column": 18
        },
        "end": {
          "row": 1617,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1617,
          "column": 18
        },
        "end": {
          "row": 1617,
          "column": 21
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<InlineAsmOutput>",
        "start": {
          "row": 1617,
          "column": 21
        },
        "end": {
          "row": 1617,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "InlineAsmOutput",
        "start": {
          "row": 1617,
          "column": 22
        },
        "end": {
          "row": 1617,
          "column": 37
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub inputs: Vec<(Symbol, P<Expr>)>",
        "start": {
          "row": 1618,
          "column": 5
        },
        "end": {
          "row": 1618,
          "column": 39
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1618,
          "column": 5
        },
        "end": {
          "row": 1618,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "inputs",
        "start": {
          "row": 1618,
          "column": 9
        },
        "end": {
          "row": 1618,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<(Symbol, P<Expr>)>",
        "start": {
          "row": 1618,
          "column": 17
        },
        "end": {
          "row": 1618,
          "column": 39
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1618,
          "column": 17
        },
        "end": {
          "row": 1618,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<(Symbol, P<Expr>)>",
        "start": {
          "row": 1618,
          "column": 20
        },
        "end": {
          "row": 1618,
          "column": 39
        }
      },
      {
        "kind": "tuple_type",
        "name": "query",
        "text": "(Symbol, P<Expr>)",
        "start": {
          "row": 1618,
          "column": 21
        },
        "end": {
          "row": 1618,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Symbol",
        "start": {
          "row": 1618,
          "column": 22
        },
        "end": {
          "row": 1618,
          "column": 28
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1618,
          "column": 30
        },
        "end": {
          "row": 1618,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1618,
          "column": 30
        },
        "end": {
          "row": 1618,
          "column": 31
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1618,
          "column": 31
        },
        "end": {
          "row": 1618,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1618,
          "column": 32
        },
        "end": {
          "row": 1618,
          "column": 36
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub clobbers: Vec<Symbol>",
        "start": {
          "row": 1619,
          "column": 5
        },
        "end": {
          "row": 1619,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1619,
          "column": 5
        },
        "end": {
          "row": 1619,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "clobbers",
        "start": {
          "row": 1619,
          "column": 9
        },
        "end": {
          "row": 1619,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Symbol>",
        "start": {
          "row": 1619,
          "column": 19
        },
        "end": {
          "row": 1619,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1619,
          "column": 19
        },
        "end": {
          "row": 1619,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Symbol>",
        "start": {
          "row": 1619,
          "column": 22
        },
        "end": {
          "row": 1619,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Symbol",
        "start": {
          "row": 1619,
          "column": 23
        },
        "end": {
          "row": 1619,
          "column": 29
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub volatile: bool",
        "start": {
          "row": 1620,
          "column": 5
        },
        "end": {
          "row": 1620,
          "column": 23
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1620,
          "column": 5
        },
        "end": {
          "row": 1620,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "volatile",
        "start": {
          "row": 1620,
          "column": 9
        },
        "end": {
          "row": 1620,
          "column": 17
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1620,
          "column": 19
        },
        "end": {
          "row": 1620,
          "column": 23
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub alignstack: bool",
        "start": {
          "row": 1621,
          "column": 5
        },
        "end": {
          "row": 1621,
          "column": 25
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1621,
          "column": 5
        },
        "end": {
          "row": 1621,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "alignstack",
        "start": {
          "row": 1621,
          "column": 9
        },
        "end": {
          "row": 1621,
          "column": 19
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1621,
          "column": 21
        },
        "end": {
          "row": 1621,
          "column": 25
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub dialect: AsmDialect",
        "start": {
          "row": 1622,
          "column": 5
        },
        "end": {
          "row": 1622,
          "column": 28
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1622,
          "column": 5
        },
        "end": {
          "row": 1622,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "dialect",
        "start": {
          "row": 1622,
          "column": 9
        },
        "end": {
          "row": 1622,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "AsmDialect",
        "start": {
          "row": 1622,
          "column": 18
        },
        "end": {
          "row": 1622,
          "column": 28
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ctxt: SyntaxContext",
        "start": {
          "row": 1623,
          "column": 5
        },
        "end": {
          "row": 1623,
          "column": 28
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1623,
          "column": 5
        },
        "end": {
          "row": 1623,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ctxt",
        "start": {
          "row": 1623,
          "column": 9
        },
        "end": {
          "row": 1623,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SyntaxContext",
        "start": {
          "row": 1623,
          "column": 15
        },
        "end": {
          "row": 1623,
          "column": 28
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An argument in a function header.",
        "start": {
          "row": 1626,
          "column": 1
        },
        "end": {
          "row": 1626,
          "column": 38
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1627,
          "column": 1
        },
        "end": {
          "row": 1627,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `bar: usize` as in `fn foo(bar: usize)`",
        "start": {
          "row": 1628,
          "column": 1
        },
        "end": {
          "row": 1628,
          "column": 49
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1629,
          "column": 1
        },
        "end": {
          "row": 1629,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1629,
          "column": 3
        },
        "end": {
          "row": 1629,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1629,
          "column": 3
        },
        "end": {
          "row": 1629,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1629,
          "column": 9
        },
        "end": {
          "row": 1629,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1629,
          "column": 10
        },
        "end": {
          "row": 1629,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1629,
          "column": 10
        },
        "end": {
          "row": 1629,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1629,
          "column": 17
        },
        "end": {
          "row": 1629,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1629,
          "column": 17
        },
        "end": {
          "row": 1629,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1629,
          "column": 28
        },
        "end": {
          "row": 1629,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1629,
          "column": 28
        },
        "end": {
          "row": 1629,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1629,
          "column": 32
        },
        "end": {
          "row": 1629,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1629,
          "column": 32
        },
        "end": {
          "row": 1629,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1629,
          "column": 48
        },
        "end": {
          "row": 1629,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1629,
          "column": 48
        },
        "end": {
          "row": 1629,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1629,
          "column": 64
        },
        "end": {
          "row": 1629,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1629,
          "column": 64
        },
        "end": {
          "row": 1629,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1629,
          "column": 70
        },
        "end": {
          "row": 1629,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1629,
          "column": 70
        },
        "end": {
          "row": 1629,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Arg {\n    pub ty: P<Ty>,\n    pub pat: P<Pat>,\n    pub id: NodeId,\n}",
        "start": {
          "row": 1630,
          "column": 1
        },
        "end": {
          "row": 1634,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1630,
          "column": 1
        },
        "end": {
          "row": 1630,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Arg",
        "start": {
          "row": 1630,
          "column": 12
        },
        "end": {
          "row": 1630,
          "column": 15
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub ty: P<Ty>,\n    pub pat: P<Pat>,\n    pub id: NodeId,\n}",
        "start": {
          "row": 1630,
          "column": 16
        },
        "end": {
          "row": 1634,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ty: P<Ty>",
        "start": {
          "row": 1631,
          "column": 5
        },
        "end": {
          "row": 1631,
          "column": 18
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1631,
          "column": 5
        },
        "end": {
          "row": 1631,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1631,
          "column": 9
        },
        "end": {
          "row": 1631,
          "column": 11
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1631,
          "column": 13
        },
        "end": {
          "row": 1631,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1631,
          "column": 13
        },
        "end": {
          "row": 1631,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1631,
          "column": 14
        },
        "end": {
          "row": 1631,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1631,
          "column": 15
        },
        "end": {
          "row": 1631,
          "column": 17
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub pat: P<Pat>",
        "start": {
          "row": 1632,
          "column": 5
        },
        "end": {
          "row": 1632,
          "column": 20
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1632,
          "column": 5
        },
        "end": {
          "row": 1632,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 1632,
          "column": 9
        },
        "end": {
          "row": 1632,
          "column": 12
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Pat>",
        "start": {
          "row": 1632,
          "column": 14
        },
        "end": {
          "row": 1632,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1632,
          "column": 14
        },
        "end": {
          "row": 1632,
          "column": 15
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Pat>",
        "start": {
          "row": 1632,
          "column": 15
        },
        "end": {
          "row": 1632,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 1632,
          "column": 16
        },
        "end": {
          "row": 1632,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 1633,
          "column": 5
        },
        "end": {
          "row": 1633,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1633,
          "column": 5
        },
        "end": {
          "row": 1633,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1633,
          "column": 9
        },
        "end": {
          "row": 1633,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1633,
          "column": 13
        },
        "end": {
          "row": 1633,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Alternative representation for `Arg`s describing `self` parameter of methods.",
        "start": {
          "row": 1636,
          "column": 1
        },
        "end": {
          "row": 1636,
          "column": 82
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1637,
          "column": 1
        },
        "end": {
          "row": 1637,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `&mut self` as in `fn foo(&mut self)`",
        "start": {
          "row": 1638,
          "column": 1
        },
        "end": {
          "row": 1638,
          "column": 47
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1639,
          "column": 1
        },
        "end": {
          "row": 1639,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1639,
          "column": 3
        },
        "end": {
          "row": 1639,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1639,
          "column": 3
        },
        "end": {
          "row": 1639,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1639,
          "column": 9
        },
        "end": {
          "row": 1639,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1639,
          "column": 10
        },
        "end": {
          "row": 1639,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1639,
          "column": 10
        },
        "end": {
          "row": 1639,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1639,
          "column": 17
        },
        "end": {
          "row": 1639,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1639,
          "column": 17
        },
        "end": {
          "row": 1639,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1639,
          "column": 28
        },
        "end": {
          "row": 1639,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1639,
          "column": 28
        },
        "end": {
          "row": 1639,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1639,
          "column": 32
        },
        "end": {
          "row": 1639,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1639,
          "column": 32
        },
        "end": {
          "row": 1639,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1639,
          "column": 48
        },
        "end": {
          "row": 1639,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1639,
          "column": 48
        },
        "end": {
          "row": 1639,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1639,
          "column": 64
        },
        "end": {
          "row": 1639,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1639,
          "column": 64
        },
        "end": {
          "row": 1639,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1639,
          "column": 70
        },
        "end": {
          "row": 1639,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1639,
          "column": 70
        },
        "end": {
          "row": 1639,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum SelfKind {\n    /// `self`, `mut self`\n    Value(Mutability),\n    /// `&'lt self`, `&'lt mut self`\n    Region(Option<Lifetime>, Mutability),\n    /// `self: TYPE`, `mut self: TYPE`\n    Explicit(P<Ty>, Mutability),\n}",
        "start": {
          "row": 1640,
          "column": 1
        },
        "end": {
          "row": 1647,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1640,
          "column": 1
        },
        "end": {
          "row": 1640,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SelfKind",
        "start": {
          "row": 1640,
          "column": 10
        },
        "end": {
          "row": 1640,
          "column": 18
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// `self`, `mut self`\n    Value(Mutability),\n    /// `&'lt self`, `&'lt mut self`\n    Region(Option<Lifetime>, Mutability),\n    /// `self: TYPE`, `mut self: TYPE`\n    Explicit(P<Ty>, Mutability),\n}",
        "start": {
          "row": 1640,
          "column": 19
        },
        "end": {
          "row": 1647,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `self`, `mut self`",
        "start": {
          "row": 1641,
          "column": 5
        },
        "end": {
          "row": 1641,
          "column": 27
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Value(Mutability)",
        "start": {
          "row": 1642,
          "column": 5
        },
        "end": {
          "row": 1642,
          "column": 22
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Value",
        "start": {
          "row": 1642,
          "column": 5
        },
        "end": {
          "row": 1642,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Mutability)",
        "start": {
          "row": 1642,
          "column": 10
        },
        "end": {
          "row": 1642,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mutability",
        "start": {
          "row": 1642,
          "column": 11
        },
        "end": {
          "row": 1642,
          "column": 21
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `&'lt self`, `&'lt mut self`",
        "start": {
          "row": 1643,
          "column": 5
        },
        "end": {
          "row": 1643,
          "column": 37
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Region(Option<Lifetime>, Mutability)",
        "start": {
          "row": 1644,
          "column": 5
        },
        "end": {
          "row": 1644,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Region",
        "start": {
          "row": 1644,
          "column": 5
        },
        "end": {
          "row": 1644,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Option<Lifetime>, Mutability)",
        "start": {
          "row": 1644,
          "column": 11
        },
        "end": {
          "row": 1644,
          "column": 41
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<Lifetime>",
        "start": {
          "row": 1644,
          "column": 12
        },
        "end": {
          "row": 1644,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1644,
          "column": 12
        },
        "end": {
          "row": 1644,
          "column": 18
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Lifetime>",
        "start": {
          "row": 1644,
          "column": 18
        },
        "end": {
          "row": 1644,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Lifetime",
        "start": {
          "row": 1644,
          "column": 19
        },
        "end": {
          "row": 1644,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mutability",
        "start": {
          "row": 1644,
          "column": 30
        },
        "end": {
          "row": 1644,
          "column": 40
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `self: TYPE`, `mut self: TYPE`",
        "start": {
          "row": 1645,
          "column": 5
        },
        "end": {
          "row": 1645,
          "column": 39
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Explicit(P<Ty>, Mutability)",
        "start": {
          "row": 1646,
          "column": 5
        },
        "end": {
          "row": 1646,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Explicit",
        "start": {
          "row": 1646,
          "column": 5
        },
        "end": {
          "row": 1646,
          "column": 13
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Ty>, Mutability)",
        "start": {
          "row": 1646,
          "column": 13
        },
        "end": {
          "row": 1646,
          "column": 32
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1646,
          "column": 14
        },
        "end": {
          "row": 1646,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1646,
          "column": 14
        },
        "end": {
          "row": 1646,
          "column": 15
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1646,
          "column": 15
        },
        "end": {
          "row": 1646,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1646,
          "column": 16
        },
        "end": {
          "row": 1646,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mutability",
        "start": {
          "row": 1646,
          "column": 21
        },
        "end": {
          "row": 1646,
          "column": 31
        }
      },
      {
        "kind": "type_item",
        "name": "query",
        "text": "pub type ExplicitSelf = Spanned<SelfKind>;",
        "start": {
          "row": 1649,
          "column": 1
        },
        "end": {
          "row": 1649,
          "column": 43
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1649,
          "column": 1
        },
        "end": {
          "row": 1649,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ExplicitSelf",
        "start": {
          "row": 1649,
          "column": 10
        },
        "end": {
          "row": 1649,
          "column": 22
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Spanned<SelfKind>",
        "start": {
          "row": 1649,
          "column": 25
        },
        "end": {
          "row": 1649,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Spanned",
        "start": {
          "row": 1649,
          "column": 25
        },
        "end": {
          "row": 1649,
          "column": 32
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<SelfKind>",
        "start": {
          "row": 1649,
          "column": 32
        },
        "end": {
          "row": 1649,
          "column": 42
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SelfKind",
        "start": {
          "row": 1649,
          "column": 33
        },
        "end": {
          "row": 1649,
          "column": 41
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl Arg {\n    pub fn to_self(&self) -> Option<ExplicitSelf> {\n        if let PatKind::Ident(BindingMode::ByValue(mutbl), ident, _) = self.pat.node {\n            if ident.node.name == keywords::SelfValue.name() {\n                return match self.ty.node {\n                    TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                    TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }\n                    _ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),\n                }\n            }\n        }\n        None\n    }\n\n    pub fn is_self(&self) -> bool {\n        if let PatKind::Ident(_, ident, _) = self.pat.node {\n            ident.node.name == keywords::SelfValue.name()\n        } else {\n            false\n        }\n    }\n\n    pub fn from_self(eself: ExplicitSelf, eself_ident: SpannedIdent) -> Arg {\n        let span = eself.span.to(eself_ident.span);\n        let infer_ty = P(Ty {\n            id: DUMMY_NODE_ID,\n            node: TyKind::ImplicitSelf,\n            span,\n        });\n        let arg = |mutbl, ty| Arg {\n            pat: P(Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            }),\n            ty,\n            id: DUMMY_NODE_ID,\n        };\n        match eself.node {\n            SelfKind::Explicit(ty, mutbl) => arg(mutbl, ty),\n            SelfKind::Value(mutbl) => arg(mutbl, infer_ty),\n            SelfKind::Region(lt, mutbl) => arg(Mutability::Immutable, P(Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            })),\n        }\n    }\n}",
        "start": {
          "row": 1651,
          "column": 1
        },
        "end": {
          "row": 1702,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Arg",
        "start": {
          "row": 1651,
          "column": 6
        },
        "end": {
          "row": 1651,
          "column": 9
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn to_self(&self) -> Option<ExplicitSelf> {\n        if let PatKind::Ident(BindingMode::ByValue(mutbl), ident, _) = self.pat.node {\n            if ident.node.name == keywords::SelfValue.name() {\n                return match self.ty.node {\n                    TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                    TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }\n                    _ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),\n                }\n            }\n        }\n        None\n    }\n\n    pub fn is_self(&self) -> bool {\n        if let PatKind::Ident(_, ident, _) = self.pat.node {\n            ident.node.name == keywords::SelfValue.name()\n        } else {\n            false\n        }\n    }\n\n    pub fn from_self(eself: ExplicitSelf, eself_ident: SpannedIdent) -> Arg {\n        let span = eself.span.to(eself_ident.span);\n        let infer_ty = P(Ty {\n            id: DUMMY_NODE_ID,\n            node: TyKind::ImplicitSelf,\n            span,\n        });\n        let arg = |mutbl, ty| Arg {\n            pat: P(Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            }),\n            ty,\n            id: DUMMY_NODE_ID,\n        };\n        match eself.node {\n            SelfKind::Explicit(ty, mutbl) => arg(mutbl, ty),\n            SelfKind::Value(mutbl) => arg(mutbl, infer_ty),\n            SelfKind::Region(lt, mutbl) => arg(Mutability::Immutable, P(Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            })),\n        }\n    }\n}",
        "start": {
          "row": 1651,
          "column": 10
        },
        "end": {
          "row": 1702,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn to_self(&self) -> Option<ExplicitSelf> {\n        if let PatKind::Ident(BindingMode::ByValue(mutbl), ident, _) = self.pat.node {\n            if ident.node.name == keywords::SelfValue.name() {\n                return match self.ty.node {\n                    TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                    TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }\n                    _ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),\n                }\n            }\n        }\n        None\n    }",
        "start": {
          "row": 1652,
          "column": 5
        },
        "end": {
          "row": 1666,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1652,
          "column": 5
        },
        "end": {
          "row": 1652,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "to_self",
        "start": {
          "row": 1652,
          "column": 12
        },
        "end": {
          "row": 1652,
          "column": 19
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1652,
          "column": 19
        },
        "end": {
          "row": 1652,
          "column": 26
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1652,
          "column": 20
        },
        "end": {
          "row": 1652,
          "column": 25
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1652,
          "column": 21
        },
        "end": {
          "row": 1652,
          "column": 25
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<ExplicitSelf>",
        "start": {
          "row": 1652,
          "column": 30
        },
        "end": {
          "row": 1652,
          "column": 50
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1652,
          "column": 30
        },
        "end": {
          "row": 1652,
          "column": 36
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<ExplicitSelf>",
        "start": {
          "row": 1652,
          "column": 36
        },
        "end": {
          "row": 1652,
          "column": 50
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ExplicitSelf",
        "start": {
          "row": 1652,
          "column": 37
        },
        "end": {
          "row": 1652,
          "column": 49
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        if let PatKind::Ident(BindingMode::ByValue(mutbl), ident, _) = self.pat.node {\n            if ident.node.name == keywords::SelfValue.name() {\n                return match self.ty.node {\n                    TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                    TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }\n                    _ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),\n                }\n            }\n        }\n        None\n    }",
        "start": {
          "row": 1652,
          "column": 51
        },
        "end": {
          "row": 1666,
          "column": 6
        }
      },
      {
        "kind": "if_let_expression",
        "name": "query",
        "text": "if let PatKind::Ident(BindingMode::ByValue(mutbl), ident, _) = self.pat.node {\n            if ident.node.name == keywords::SelfValue.name() {\n                return match self.ty.node {\n                    TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                    TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }\n                    _ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),\n                }\n            }\n        }",
        "start": {
          "row": 1653,
          "column": 9
        },
        "end": {
          "row": 1664,
          "column": 10
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Ident(BindingMode::ByValue(mutbl), ident, _)",
        "start": {
          "row": 1653,
          "column": 16
        },
        "end": {
          "row": 1653,
          "column": 69
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Ident",
        "start": {
          "row": 1653,
          "column": 16
        },
        "end": {
          "row": 1653,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 1653,
          "column": 16
        },
        "end": {
          "row": 1653,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 1653,
          "column": 25
        },
        "end": {
          "row": 1653,
          "column": 30
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "BindingMode::ByValue(mutbl)",
        "start": {
          "row": 1653,
          "column": 31
        },
        "end": {
          "row": 1653,
          "column": 58
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "BindingMode::ByValue",
        "start": {
          "row": 1653,
          "column": 31
        },
        "end": {
          "row": 1653,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BindingMode",
        "start": {
          "row": 1653,
          "column": 31
        },
        "end": {
          "row": 1653,
          "column": 42
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ByValue",
        "start": {
          "row": 1653,
          "column": 44
        },
        "end": {
          "row": 1653,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1653,
          "column": 52
        },
        "end": {
          "row": 1653,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 1653,
          "column": 60
        },
        "end": {
          "row": 1653,
          "column": 65
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.pat.node",
        "start": {
          "row": 1653,
          "column": 72
        },
        "end": {
          "row": 1653,
          "column": 85
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.pat",
        "start": {
          "row": 1653,
          "column": 72
        },
        "end": {
          "row": 1653,
          "column": 80
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1653,
          "column": 72
        },
        "end": {
          "row": 1653,
          "column": 76
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 1653,
          "column": 77
        },
        "end": {
          "row": 1653,
          "column": 80
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1653,
          "column": 81
        },
        "end": {
          "row": 1653,
          "column": 85
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n            if ident.node.name == keywords::SelfValue.name() {\n                return match self.ty.node {\n                    TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                    TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }\n                    _ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),\n                }\n            }\n        }",
        "start": {
          "row": 1653,
          "column": 86
        },
        "end": {
          "row": 1664,
          "column": 10
        }
      },
      {
        "kind": "if_expression",
        "name": "query",
        "text": "if ident.node.name == keywords::SelfValue.name() {\n                return match self.ty.node {\n                    TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                    TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }\n                    _ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),\n                }\n            }",
        "start": {
          "row": 1654,
          "column": 13
        },
        "end": {
          "row": 1663,
          "column": 14
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "ident.node.name == keywords::SelfValue.name()",
        "start": {
          "row": 1654,
          "column": 16
        },
        "end": {
          "row": 1654,
          "column": 61
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "ident.node.name",
        "start": {
          "row": 1654,
          "column": 16
        },
        "end": {
          "row": 1654,
          "column": 31
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "ident.node",
        "start": {
          "row": 1654,
          "column": 16
        },
        "end": {
          "row": 1654,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 1654,
          "column": 16
        },
        "end": {
          "row": 1654,
          "column": 21
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1654,
          "column": 22
        },
        "end": {
          "row": 1654,
          "column": 26
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 1654,
          "column": 27
        },
        "end": {
          "row": 1654,
          "column": 31
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "keywords::SelfValue.name()",
        "start": {
          "row": 1654,
          "column": 35
        },
        "end": {
          "row": 1654,
          "column": 61
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "keywords::SelfValue.name",
        "start": {
          "row": 1654,
          "column": 35
        },
        "end": {
          "row": 1654,
          "column": 59
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "keywords::SelfValue",
        "start": {
          "row": 1654,
          "column": 35
        },
        "end": {
          "row": 1654,
          "column": 54
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "keywords",
        "start": {
          "row": 1654,
          "column": 35
        },
        "end": {
          "row": 1654,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "SelfValue",
        "start": {
          "row": 1654,
          "column": 45
        },
        "end": {
          "row": 1654,
          "column": 54
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 1654,
          "column": 55
        },
        "end": {
          "row": 1654,
          "column": 59
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1654,
          "column": 59
        },
        "end": {
          "row": 1654,
          "column": 61
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                return match self.ty.node {\n                    TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                    TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }\n                    _ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),\n                }\n            }",
        "start": {
          "row": 1654,
          "column": 62
        },
        "end": {
          "row": 1663,
          "column": 14
        }
      },
      {
        "kind": "return_expression",
        "name": "query",
        "text": "return match self.ty.node {\n                    TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                    TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }\n                    _ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),\n                }",
        "start": {
          "row": 1655,
          "column": 17
        },
        "end": {
          "row": 1662,
          "column": 18
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match self.ty.node {\n                    TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                    TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }\n                    _ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),\n                }",
        "start": {
          "row": 1655,
          "column": 24
        },
        "end": {
          "row": 1662,
          "column": 18
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.ty.node",
        "start": {
          "row": 1655,
          "column": 30
        },
        "end": {
          "row": 1655,
          "column": 42
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.ty",
        "start": {
          "row": 1655,
          "column": 30
        },
        "end": {
          "row": 1655,
          "column": 37
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1655,
          "column": 30
        },
        "end": {
          "row": 1655,
          "column": 34
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1655,
          "column": 35
        },
        "end": {
          "row": 1655,
          "column": 37
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1655,
          "column": 38
        },
        "end": {
          "row": 1655,
          "column": 42
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n                    TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                    TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }\n                    _ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),\n                }",
        "start": {
          "row": 1655,
          "column": 43
        },
        "end": {
          "row": 1662,
          "column": 18
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "TyKind::ImplicitSelf => Some(respan(self.pat.span, SelfKind::Value(mutbl))),",
        "start": {
          "row": 1656,
          "column": 21
        },
        "end": {
          "row": 1656,
          "column": 97
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "TyKind::ImplicitSelf",
        "start": {
          "row": 1656,
          "column": 21
        },
        "end": {
          "row": 1656,
          "column": 41
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::ImplicitSelf",
        "start": {
          "row": 1656,
          "column": 21
        },
        "end": {
          "row": 1656,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 1656,
          "column": 21
        },
        "end": {
          "row": 1656,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ImplicitSelf",
        "start": {
          "row": 1656,
          "column": 29
        },
        "end": {
          "row": 1656,
          "column": 41
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Some(respan(self.pat.span, SelfKind::Value(mutbl)))",
        "start": {
          "row": 1656,
          "column": 45
        },
        "end": {
          "row": 1656,
          "column": 96
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 1656,
          "column": 45
        },
        "end": {
          "row": 1656,
          "column": 49
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(respan(self.pat.span, SelfKind::Value(mutbl)))",
        "start": {
          "row": 1656,
          "column": 49
        },
        "end": {
          "row": 1656,
          "column": 96
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "respan(self.pat.span, SelfKind::Value(mutbl))",
        "start": {
          "row": 1656,
          "column": 50
        },
        "end": {
          "row": 1656,
          "column": 95
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "respan",
        "start": {
          "row": 1656,
          "column": 50
        },
        "end": {
          "row": 1656,
          "column": 56
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self.pat.span, SelfKind::Value(mutbl))",
        "start": {
          "row": 1656,
          "column": 56
        },
        "end": {
          "row": 1656,
          "column": 95
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.pat.span",
        "start": {
          "row": 1656,
          "column": 57
        },
        "end": {
          "row": 1656,
          "column": 70
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.pat",
        "start": {
          "row": 1656,
          "column": 57
        },
        "end": {
          "row": 1656,
          "column": 65
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1656,
          "column": 57
        },
        "end": {
          "row": 1656,
          "column": 61
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 1656,
          "column": 62
        },
        "end": {
          "row": 1656,
          "column": 65
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1656,
          "column": 66
        },
        "end": {
          "row": 1656,
          "column": 70
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "SelfKind::Value(mutbl)",
        "start": {
          "row": 1656,
          "column": 72
        },
        "end": {
          "row": 1656,
          "column": 94
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "SelfKind::Value",
        "start": {
          "row": 1656,
          "column": 72
        },
        "end": {
          "row": 1656,
          "column": 87
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "SelfKind",
        "start": {
          "row": 1656,
          "column": 72
        },
        "end": {
          "row": 1656,
          "column": 80
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Value",
        "start": {
          "row": 1656,
          "column": 82
        },
        "end": {
          "row": 1656,
          "column": 87
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(mutbl)",
        "start": {
          "row": 1656,
          "column": 87
        },
        "end": {
          "row": 1656,
          "column": 94
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1656,
          "column": 88
        },
        "end": {
          "row": 1656,
          "column": 93
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf => {\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }",
        "start": {
          "row": 1657,
          "column": 21
        },
        "end": {
          "row": 1659,
          "column": 22
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "TyKind::Rptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyKind::ImplicitSelf",
        "start": {
          "row": 1657,
          "column": 21
        },
        "end": {
          "row": 1657,
          "column": 94
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "TyKind::Rptr(lt, MutTy{ref ty, mutbl})",
        "start": {
          "row": 1657,
          "column": 21
        },
        "end": {
          "row": 1657,
          "column": 59
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Rptr",
        "start": {
          "row": 1657,
          "column": 21
        },
        "end": {
          "row": 1657,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 1657,
          "column": 21
        },
        "end": {
          "row": 1657,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Rptr",
        "start": {
          "row": 1657,
          "column": 29
        },
        "end": {
          "row": 1657,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "lt",
        "start": {
          "row": 1657,
          "column": 34
        },
        "end": {
          "row": 1657,
          "column": 36
        }
      },
      {
        "kind": "struct_pattern",
        "name": "query",
        "text": "MutTy{ref ty, mutbl}",
        "start": {
          "row": 1657,
          "column": 38
        },
        "end": {
          "row": 1657,
          "column": 58
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MutTy",
        "start": {
          "row": 1657,
          "column": 38
        },
        "end": {
          "row": 1657,
          "column": 43
        }
      },
      {
        "kind": "field_pattern",
        "name": "query",
        "text": "ref ty",
        "start": {
          "row": 1657,
          "column": 44
        },
        "end": {
          "row": 1657,
          "column": 50
        }
      },
      {
        "kind": "shorthand_field_identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1657,
          "column": 48
        },
        "end": {
          "row": 1657,
          "column": 50
        }
      },
      {
        "kind": "field_pattern",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1657,
          "column": 52
        },
        "end": {
          "row": 1657,
          "column": 57
        }
      },
      {
        "kind": "shorthand_field_identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1657,
          "column": 52
        },
        "end": {
          "row": 1657,
          "column": 57
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "ty.node == TyKind::ImplicitSelf",
        "start": {
          "row": 1657,
          "column": 63
        },
        "end": {
          "row": 1657,
          "column": 94
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "ty.node",
        "start": {
          "row": 1657,
          "column": 63
        },
        "end": {
          "row": 1657,
          "column": 70
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1657,
          "column": 63
        },
        "end": {
          "row": 1657,
          "column": 65
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1657,
          "column": 66
        },
        "end": {
          "row": 1657,
          "column": 70
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::ImplicitSelf",
        "start": {
          "row": 1657,
          "column": 74
        },
        "end": {
          "row": 1657,
          "column": 94
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 1657,
          "column": 74
        },
        "end": {
          "row": 1657,
          "column": 80
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ImplicitSelf",
        "start": {
          "row": 1657,
          "column": 82
        },
        "end": {
          "row": 1657,
          "column": 94
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n                        Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))\n                    }",
        "start": {
          "row": 1657,
          "column": 98
        },
        "end": {
          "row": 1659,
          "column": 22
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Some(respan(self.pat.span, SelfKind::Region(lt, mutbl)))",
        "start": {
          "row": 1658,
          "column": 25
        },
        "end": {
          "row": 1658,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 1658,
          "column": 25
        },
        "end": {
          "row": 1658,
          "column": 29
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(respan(self.pat.span, SelfKind::Region(lt, mutbl)))",
        "start": {
          "row": 1658,
          "column": 29
        },
        "end": {
          "row": 1658,
          "column": 81
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "respan(self.pat.span, SelfKind::Region(lt, mutbl))",
        "start": {
          "row": 1658,
          "column": 30
        },
        "end": {
          "row": 1658,
          "column": 80
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "respan",
        "start": {
          "row": 1658,
          "column": 30
        },
        "end": {
          "row": 1658,
          "column": 36
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self.pat.span, SelfKind::Region(lt, mutbl))",
        "start": {
          "row": 1658,
          "column": 36
        },
        "end": {
          "row": 1658,
          "column": 80
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.pat.span",
        "start": {
          "row": 1658,
          "column": 37
        },
        "end": {
          "row": 1658,
          "column": 50
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.pat",
        "start": {
          "row": 1658,
          "column": 37
        },
        "end": {
          "row": 1658,
          "column": 45
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1658,
          "column": 37
        },
        "end": {
          "row": 1658,
          "column": 41
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 1658,
          "column": 42
        },
        "end": {
          "row": 1658,
          "column": 45
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1658,
          "column": 46
        },
        "end": {
          "row": 1658,
          "column": 50
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "SelfKind::Region(lt, mutbl)",
        "start": {
          "row": 1658,
          "column": 52
        },
        "end": {
          "row": 1658,
          "column": 79
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "SelfKind::Region",
        "start": {
          "row": 1658,
          "column": 52
        },
        "end": {
          "row": 1658,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "SelfKind",
        "start": {
          "row": 1658,
          "column": 52
        },
        "end": {
          "row": 1658,
          "column": 60
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Region",
        "start": {
          "row": 1658,
          "column": 62
        },
        "end": {
          "row": 1658,
          "column": 68
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(lt, mutbl)",
        "start": {
          "row": 1658,
          "column": 68
        },
        "end": {
          "row": 1658,
          "column": 79
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "lt",
        "start": {
          "row": 1658,
          "column": 69
        },
        "end": {
          "row": 1658,
          "column": 71
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1658,
          "column": 73
        },
        "end": {
          "row": 1658,
          "column": 78
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))),",
        "start": {
          "row": 1660,
          "column": 21
        },
        "end": {
          "row": 1661,
          "column": 83
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 1660,
          "column": 21
        },
        "end": {
          "row": 1660,
          "column": 22
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "Some(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl)))",
        "start": {
          "row": 1660,
          "column": 26
        },
        "end": {
          "row": 1661,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Some",
        "start": {
          "row": 1660,
          "column": 26
        },
        "end": {
          "row": 1660,
          "column": 30
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl)))",
        "start": {
          "row": 1660,
          "column": 30
        },
        "end": {
          "row": 1661,
          "column": 82
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "respan(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))",
        "start": {
          "row": 1660,
          "column": 31
        },
        "end": {
          "row": 1661,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "respan",
        "start": {
          "row": 1660,
          "column": 31
        },
        "end": {
          "row": 1660,
          "column": 37
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self.pat.span.to(self.ty.span),\n                                     SelfKind::Explicit(self.ty.clone(), mutbl))",
        "start": {
          "row": 1660,
          "column": 37
        },
        "end": {
          "row": 1661,
          "column": 81
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.pat.span.to(self.ty.span)",
        "start": {
          "row": 1660,
          "column": 38
        },
        "end": {
          "row": 1660,
          "column": 68
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.pat.span.to",
        "start": {
          "row": 1660,
          "column": 38
        },
        "end": {
          "row": 1660,
          "column": 54
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.pat.span",
        "start": {
          "row": 1660,
          "column": 38
        },
        "end": {
          "row": 1660,
          "column": 51
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.pat",
        "start": {
          "row": 1660,
          "column": 38
        },
        "end": {
          "row": 1660,
          "column": 46
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1660,
          "column": 38
        },
        "end": {
          "row": 1660,
          "column": 42
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 1660,
          "column": 43
        },
        "end": {
          "row": 1660,
          "column": 46
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1660,
          "column": 47
        },
        "end": {
          "row": 1660,
          "column": 51
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "to",
        "start": {
          "row": 1660,
          "column": 52
        },
        "end": {
          "row": 1660,
          "column": 54
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self.ty.span)",
        "start": {
          "row": 1660,
          "column": 54
        },
        "end": {
          "row": 1660,
          "column": 68
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.ty.span",
        "start": {
          "row": 1660,
          "column": 55
        },
        "end": {
          "row": 1660,
          "column": 67
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.ty",
        "start": {
          "row": 1660,
          "column": 55
        },
        "end": {
          "row": 1660,
          "column": 62
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1660,
          "column": 55
        },
        "end": {
          "row": 1660,
          "column": 59
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1660,
          "column": 60
        },
        "end": {
          "row": 1660,
          "column": 62
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1660,
          "column": 63
        },
        "end": {
          "row": 1660,
          "column": 67
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "SelfKind::Explicit(self.ty.clone(), mutbl)",
        "start": {
          "row": 1661,
          "column": 38
        },
        "end": {
          "row": 1661,
          "column": 80
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "SelfKind::Explicit",
        "start": {
          "row": 1661,
          "column": 38
        },
        "end": {
          "row": 1661,
          "column": 56
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "SelfKind",
        "start": {
          "row": 1661,
          "column": 38
        },
        "end": {
          "row": 1661,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Explicit",
        "start": {
          "row": 1661,
          "column": 48
        },
        "end": {
          "row": 1661,
          "column": 56
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(self.ty.clone(), mutbl)",
        "start": {
          "row": 1661,
          "column": 56
        },
        "end": {
          "row": 1661,
          "column": 80
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.ty.clone()",
        "start": {
          "row": 1661,
          "column": 57
        },
        "end": {
          "row": 1661,
          "column": 72
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.ty.clone",
        "start": {
          "row": 1661,
          "column": 57
        },
        "end": {
          "row": 1661,
          "column": 70
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.ty",
        "start": {
          "row": 1661,
          "column": 57
        },
        "end": {
          "row": 1661,
          "column": 64
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1661,
          "column": 57
        },
        "end": {
          "row": 1661,
          "column": 61
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1661,
          "column": 62
        },
        "end": {
          "row": 1661,
          "column": 64
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "clone",
        "start": {
          "row": 1661,
          "column": 65
        },
        "end": {
          "row": 1661,
          "column": 70
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1661,
          "column": 70
        },
        "end": {
          "row": 1661,
          "column": 72
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1661,
          "column": 74
        },
        "end": {
          "row": 1661,
          "column": 79
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 1665,
          "column": 9
        },
        "end": {
          "row": 1665,
          "column": 13
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_self(&self) -> bool {\n        if let PatKind::Ident(_, ident, _) = self.pat.node {\n            ident.node.name == keywords::SelfValue.name()\n        } else {\n            false\n        }\n    }",
        "start": {
          "row": 1668,
          "column": 5
        },
        "end": {
          "row": 1674,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1668,
          "column": 5
        },
        "end": {
          "row": 1668,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_self",
        "start": {
          "row": 1668,
          "column": 12
        },
        "end": {
          "row": 1668,
          "column": 19
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1668,
          "column": 19
        },
        "end": {
          "row": 1668,
          "column": 26
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1668,
          "column": 20
        },
        "end": {
          "row": 1668,
          "column": 25
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1668,
          "column": 21
        },
        "end": {
          "row": 1668,
          "column": 25
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1668,
          "column": 30
        },
        "end": {
          "row": 1668,
          "column": 34
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        if let PatKind::Ident(_, ident, _) = self.pat.node {\n            ident.node.name == keywords::SelfValue.name()\n        } else {\n            false\n        }\n    }",
        "start": {
          "row": 1668,
          "column": 35
        },
        "end": {
          "row": 1674,
          "column": 6
        }
      },
      {
        "kind": "if_let_expression",
        "name": "query",
        "text": "if let PatKind::Ident(_, ident, _) = self.pat.node {\n            ident.node.name == keywords::SelfValue.name()\n        } else {\n            false\n        }",
        "start": {
          "row": 1669,
          "column": 9
        },
        "end": {
          "row": 1673,
          "column": 10
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "PatKind::Ident(_, ident, _)",
        "start": {
          "row": 1669,
          "column": 16
        },
        "end": {
          "row": 1669,
          "column": 43
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Ident",
        "start": {
          "row": 1669,
          "column": 16
        },
        "end": {
          "row": 1669,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 1669,
          "column": 16
        },
        "end": {
          "row": 1669,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 1669,
          "column": 25
        },
        "end": {
          "row": 1669,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 1669,
          "column": 34
        },
        "end": {
          "row": 1669,
          "column": 39
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.pat.node",
        "start": {
          "row": 1669,
          "column": 46
        },
        "end": {
          "row": 1669,
          "column": 59
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.pat",
        "start": {
          "row": 1669,
          "column": 46
        },
        "end": {
          "row": 1669,
          "column": 54
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1669,
          "column": 46
        },
        "end": {
          "row": 1669,
          "column": 50
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 1669,
          "column": 51
        },
        "end": {
          "row": 1669,
          "column": 54
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1669,
          "column": 55
        },
        "end": {
          "row": 1669,
          "column": 59
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n            ident.node.name == keywords::SelfValue.name()\n        }",
        "start": {
          "row": 1669,
          "column": 60
        },
        "end": {
          "row": 1671,
          "column": 10
        }
      },
      {
        "kind": "binary_expression",
        "name": "query",
        "text": "ident.node.name == keywords::SelfValue.name()",
        "start": {
          "row": 1670,
          "column": 13
        },
        "end": {
          "row": 1670,
          "column": 58
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "ident.node.name",
        "start": {
          "row": 1670,
          "column": 13
        },
        "end": {
          "row": 1670,
          "column": 28
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "ident.node",
        "start": {
          "row": 1670,
          "column": 13
        },
        "end": {
          "row": 1670,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 1670,
          "column": 13
        },
        "end": {
          "row": 1670,
          "column": 18
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1670,
          "column": 19
        },
        "end": {
          "row": 1670,
          "column": 23
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 1670,
          "column": 24
        },
        "end": {
          "row": 1670,
          "column": 28
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "keywords::SelfValue.name()",
        "start": {
          "row": 1670,
          "column": 32
        },
        "end": {
          "row": 1670,
          "column": 58
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "keywords::SelfValue.name",
        "start": {
          "row": 1670,
          "column": 32
        },
        "end": {
          "row": 1670,
          "column": 56
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "keywords::SelfValue",
        "start": {
          "row": 1670,
          "column": 32
        },
        "end": {
          "row": 1670,
          "column": 51
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "keywords",
        "start": {
          "row": 1670,
          "column": 32
        },
        "end": {
          "row": 1670,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "SelfValue",
        "start": {
          "row": 1670,
          "column": 42
        },
        "end": {
          "row": 1670,
          "column": 51
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 1670,
          "column": 52
        },
        "end": {
          "row": 1670,
          "column": 56
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 1670,
          "column": 56
        },
        "end": {
          "row": 1670,
          "column": 58
        }
      },
      {
        "kind": "else_clause",
        "name": "query",
        "text": "else {\n            false\n        }",
        "start": {
          "row": 1671,
          "column": 11
        },
        "end": {
          "row": 1673,
          "column": 10
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n            false\n        }",
        "start": {
          "row": 1671,
          "column": 16
        },
        "end": {
          "row": 1673,
          "column": 10
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 1672,
          "column": 13
        },
        "end": {
          "row": 1672,
          "column": 18
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn from_self(eself: ExplicitSelf, eself_ident: SpannedIdent) -> Arg {\n        let span = eself.span.to(eself_ident.span);\n        let infer_ty = P(Ty {\n            id: DUMMY_NODE_ID,\n            node: TyKind::ImplicitSelf,\n            span,\n        });\n        let arg = |mutbl, ty| Arg {\n            pat: P(Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            }),\n            ty,\n            id: DUMMY_NODE_ID,\n        };\n        match eself.node {\n            SelfKind::Explicit(ty, mutbl) => arg(mutbl, ty),\n            SelfKind::Value(mutbl) => arg(mutbl, infer_ty),\n            SelfKind::Region(lt, mutbl) => arg(Mutability::Immutable, P(Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            })),\n        }\n    }",
        "start": {
          "row": 1676,
          "column": 5
        },
        "end": {
          "row": 1701,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1676,
          "column": 5
        },
        "end": {
          "row": 1676,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "from_self",
        "start": {
          "row": 1676,
          "column": 12
        },
        "end": {
          "row": 1676,
          "column": 21
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(eself: ExplicitSelf, eself_ident: SpannedIdent)",
        "start": {
          "row": 1676,
          "column": 21
        },
        "end": {
          "row": 1676,
          "column": 69
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "eself: ExplicitSelf",
        "start": {
          "row": 1676,
          "column": 22
        },
        "end": {
          "row": 1676,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "eself",
        "start": {
          "row": 1676,
          "column": 22
        },
        "end": {
          "row": 1676,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ExplicitSelf",
        "start": {
          "row": 1676,
          "column": 29
        },
        "end": {
          "row": 1676,
          "column": 41
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "eself_ident: SpannedIdent",
        "start": {
          "row": 1676,
          "column": 43
        },
        "end": {
          "row": 1676,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "eself_ident",
        "start": {
          "row": 1676,
          "column": 43
        },
        "end": {
          "row": 1676,
          "column": 54
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SpannedIdent",
        "start": {
          "row": 1676,
          "column": 56
        },
        "end": {
          "row": 1676,
          "column": 68
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Arg",
        "start": {
          "row": 1676,
          "column": 73
        },
        "end": {
          "row": 1676,
          "column": 76
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        let span = eself.span.to(eself_ident.span);\n        let infer_ty = P(Ty {\n            id: DUMMY_NODE_ID,\n            node: TyKind::ImplicitSelf,\n            span,\n        });\n        let arg = |mutbl, ty| Arg {\n            pat: P(Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            }),\n            ty,\n            id: DUMMY_NODE_ID,\n        };\n        match eself.node {\n            SelfKind::Explicit(ty, mutbl) => arg(mutbl, ty),\n            SelfKind::Value(mutbl) => arg(mutbl, infer_ty),\n            SelfKind::Region(lt, mutbl) => arg(Mutability::Immutable, P(Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            })),\n        }\n    }",
        "start": {
          "row": 1676,
          "column": 77
        },
        "end": {
          "row": 1701,
          "column": 6
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let span = eself.span.to(eself_ident.span);",
        "start": {
          "row": 1677,
          "column": 9
        },
        "end": {
          "row": 1677,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1677,
          "column": 13
        },
        "end": {
          "row": 1677,
          "column": 17
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "eself.span.to(eself_ident.span)",
        "start": {
          "row": 1677,
          "column": 20
        },
        "end": {
          "row": 1677,
          "column": 51
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "eself.span.to",
        "start": {
          "row": 1677,
          "column": 20
        },
        "end": {
          "row": 1677,
          "column": 33
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "eself.span",
        "start": {
          "row": 1677,
          "column": 20
        },
        "end": {
          "row": 1677,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "eself",
        "start": {
          "row": 1677,
          "column": 20
        },
        "end": {
          "row": 1677,
          "column": 25
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1677,
          "column": 26
        },
        "end": {
          "row": 1677,
          "column": 30
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "to",
        "start": {
          "row": 1677,
          "column": 31
        },
        "end": {
          "row": 1677,
          "column": 33
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(eself_ident.span)",
        "start": {
          "row": 1677,
          "column": 33
        },
        "end": {
          "row": 1677,
          "column": 51
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "eself_ident.span",
        "start": {
          "row": 1677,
          "column": 34
        },
        "end": {
          "row": 1677,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "eself_ident",
        "start": {
          "row": 1677,
          "column": 34
        },
        "end": {
          "row": 1677,
          "column": 45
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1677,
          "column": 46
        },
        "end": {
          "row": 1677,
          "column": 50
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let infer_ty = P(Ty {\n            id: DUMMY_NODE_ID,\n            node: TyKind::ImplicitSelf,\n            span,\n        });",
        "start": {
          "row": 1678,
          "column": 9
        },
        "end": {
          "row": 1682,
          "column": 12
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "infer_ty",
        "start": {
          "row": 1678,
          "column": 13
        },
        "end": {
          "row": 1678,
          "column": 21
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "P(Ty {\n            id: DUMMY_NODE_ID,\n            node: TyKind::ImplicitSelf,\n            span,\n        })",
        "start": {
          "row": 1678,
          "column": 24
        },
        "end": {
          "row": 1682,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1678,
          "column": 24
        },
        "end": {
          "row": 1678,
          "column": 25
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(Ty {\n            id: DUMMY_NODE_ID,\n            node: TyKind::ImplicitSelf,\n            span,\n        })",
        "start": {
          "row": 1678,
          "column": 25
        },
        "end": {
          "row": 1682,
          "column": 11
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "Ty {\n            id: DUMMY_NODE_ID,\n            node: TyKind::ImplicitSelf,\n            span,\n        }",
        "start": {
          "row": 1678,
          "column": 26
        },
        "end": {
          "row": 1682,
          "column": 10
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1678,
          "column": 26
        },
        "end": {
          "row": 1678,
          "column": 28
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{\n            id: DUMMY_NODE_ID,\n            node: TyKind::ImplicitSelf,\n            span,\n        }",
        "start": {
          "row": 1678,
          "column": 29
        },
        "end": {
          "row": 1682,
          "column": 10
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "id: DUMMY_NODE_ID",
        "start": {
          "row": 1679,
          "column": 13
        },
        "end": {
          "row": 1679,
          "column": 30
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1679,
          "column": 13
        },
        "end": {
          "row": 1679,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "DUMMY_NODE_ID",
        "start": {
          "row": 1679,
          "column": 17
        },
        "end": {
          "row": 1679,
          "column": 30
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "node: TyKind::ImplicitSelf",
        "start": {
          "row": 1680,
          "column": 13
        },
        "end": {
          "row": 1680,
          "column": 39
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1680,
          "column": 13
        },
        "end": {
          "row": 1680,
          "column": 17
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::ImplicitSelf",
        "start": {
          "row": 1680,
          "column": 19
        },
        "end": {
          "row": 1680,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 1680,
          "column": 19
        },
        "end": {
          "row": 1680,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ImplicitSelf",
        "start": {
          "row": 1680,
          "column": 27
        },
        "end": {
          "row": 1680,
          "column": 39
        }
      },
      {
        "kind": "shorthand_field_initializer",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1681,
          "column": 13
        },
        "end": {
          "row": 1681,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1681,
          "column": 13
        },
        "end": {
          "row": 1681,
          "column": 17
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let arg = |mutbl, ty| Arg {\n            pat: P(Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            }),\n            ty,\n            id: DUMMY_NODE_ID,\n        };",
        "start": {
          "row": 1683,
          "column": 9
        },
        "end": {
          "row": 1691,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "arg",
        "start": {
          "row": 1683,
          "column": 13
        },
        "end": {
          "row": 1683,
          "column": 16
        }
      },
      {
        "kind": "closure_expression",
        "name": "query",
        "text": "|mutbl, ty| Arg {\n            pat: P(Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            }),\n            ty,\n            id: DUMMY_NODE_ID,\n        }",
        "start": {
          "row": 1683,
          "column": 19
        },
        "end": {
          "row": 1691,
          "column": 10
        }
      },
      {
        "kind": "closure_parameters",
        "name": "query",
        "text": "|mutbl, ty|",
        "start": {
          "row": 1683,
          "column": 19
        },
        "end": {
          "row": 1683,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1683,
          "column": 20
        },
        "end": {
          "row": 1683,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1683,
          "column": 27
        },
        "end": {
          "row": 1683,
          "column": 29
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "Arg {\n            pat: P(Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            }),\n            ty,\n            id: DUMMY_NODE_ID,\n        }",
        "start": {
          "row": 1683,
          "column": 31
        },
        "end": {
          "row": 1691,
          "column": 10
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Arg",
        "start": {
          "row": 1683,
          "column": 31
        },
        "end": {
          "row": 1683,
          "column": 34
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{\n            pat: P(Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            }),\n            ty,\n            id: DUMMY_NODE_ID,\n        }",
        "start": {
          "row": 1683,
          "column": 35
        },
        "end": {
          "row": 1691,
          "column": 10
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "pat: P(Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            })",
        "start": {
          "row": 1684,
          "column": 13
        },
        "end": {
          "row": 1688,
          "column": 15
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "pat",
        "start": {
          "row": 1684,
          "column": 13
        },
        "end": {
          "row": 1684,
          "column": 16
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "P(Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            })",
        "start": {
          "row": 1684,
          "column": 18
        },
        "end": {
          "row": 1688,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1684,
          "column": 18
        },
        "end": {
          "row": 1684,
          "column": 19
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            })",
        "start": {
          "row": 1684,
          "column": 19
        },
        "end": {
          "row": 1688,
          "column": 15
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "Pat {\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            }",
        "start": {
          "row": 1684,
          "column": 20
        },
        "end": {
          "row": 1688,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Pat",
        "start": {
          "row": 1684,
          "column": 20
        },
        "end": {
          "row": 1684,
          "column": 23
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{\n                id: DUMMY_NODE_ID,\n                node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None),\n                span,\n            }",
        "start": {
          "row": 1684,
          "column": 24
        },
        "end": {
          "row": 1688,
          "column": 14
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "id: DUMMY_NODE_ID",
        "start": {
          "row": 1685,
          "column": 17
        },
        "end": {
          "row": 1685,
          "column": 34
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1685,
          "column": 17
        },
        "end": {
          "row": 1685,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "DUMMY_NODE_ID",
        "start": {
          "row": 1685,
          "column": 21
        },
        "end": {
          "row": 1685,
          "column": 34
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "node: PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None)",
        "start": {
          "row": 1686,
          "column": 17
        },
        "end": {
          "row": 1686,
          "column": 85
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1686,
          "column": 17
        },
        "end": {
          "row": 1686,
          "column": 21
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "PatKind::Ident(BindingMode::ByValue(mutbl), eself_ident, None)",
        "start": {
          "row": 1686,
          "column": 23
        },
        "end": {
          "row": 1686,
          "column": 85
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "PatKind::Ident",
        "start": {
          "row": 1686,
          "column": 23
        },
        "end": {
          "row": 1686,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PatKind",
        "start": {
          "row": 1686,
          "column": 23
        },
        "end": {
          "row": 1686,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 1686,
          "column": 32
        },
        "end": {
          "row": 1686,
          "column": 37
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(BindingMode::ByValue(mutbl), eself_ident, None)",
        "start": {
          "row": 1686,
          "column": 37
        },
        "end": {
          "row": 1686,
          "column": 85
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "BindingMode::ByValue(mutbl)",
        "start": {
          "row": 1686,
          "column": 38
        },
        "end": {
          "row": 1686,
          "column": 65
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "BindingMode::ByValue",
        "start": {
          "row": 1686,
          "column": 38
        },
        "end": {
          "row": 1686,
          "column": 58
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "BindingMode",
        "start": {
          "row": 1686,
          "column": 38
        },
        "end": {
          "row": 1686,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ByValue",
        "start": {
          "row": 1686,
          "column": 51
        },
        "end": {
          "row": 1686,
          "column": 58
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(mutbl)",
        "start": {
          "row": 1686,
          "column": 58
        },
        "end": {
          "row": 1686,
          "column": 65
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1686,
          "column": 59
        },
        "end": {
          "row": 1686,
          "column": 64
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "eself_ident",
        "start": {
          "row": 1686,
          "column": 67
        },
        "end": {
          "row": 1686,
          "column": 78
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "None",
        "start": {
          "row": 1686,
          "column": 80
        },
        "end": {
          "row": 1686,
          "column": 84
        }
      },
      {
        "kind": "shorthand_field_initializer",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1687,
          "column": 17
        },
        "end": {
          "row": 1687,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1687,
          "column": 17
        },
        "end": {
          "row": 1687,
          "column": 21
        }
      },
      {
        "kind": "shorthand_field_initializer",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1689,
          "column": 13
        },
        "end": {
          "row": 1689,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1689,
          "column": 13
        },
        "end": {
          "row": 1689,
          "column": 15
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "id: DUMMY_NODE_ID",
        "start": {
          "row": 1690,
          "column": 13
        },
        "end": {
          "row": 1690,
          "column": 30
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1690,
          "column": 13
        },
        "end": {
          "row": 1690,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "DUMMY_NODE_ID",
        "start": {
          "row": 1690,
          "column": 17
        },
        "end": {
          "row": 1690,
          "column": 30
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match eself.node {\n            SelfKind::Explicit(ty, mutbl) => arg(mutbl, ty),\n            SelfKind::Value(mutbl) => arg(mutbl, infer_ty),\n            SelfKind::Region(lt, mutbl) => arg(Mutability::Immutable, P(Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            })),\n        }",
        "start": {
          "row": 1692,
          "column": 9
        },
        "end": {
          "row": 1700,
          "column": 10
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "eself.node",
        "start": {
          "row": 1692,
          "column": 15
        },
        "end": {
          "row": 1692,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "eself",
        "start": {
          "row": 1692,
          "column": 15
        },
        "end": {
          "row": 1692,
          "column": 20
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1692,
          "column": 21
        },
        "end": {
          "row": 1692,
          "column": 25
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            SelfKind::Explicit(ty, mutbl) => arg(mutbl, ty),\n            SelfKind::Value(mutbl) => arg(mutbl, infer_ty),\n            SelfKind::Region(lt, mutbl) => arg(Mutability::Immutable, P(Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            })),\n        }",
        "start": {
          "row": 1692,
          "column": 26
        },
        "end": {
          "row": 1700,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "SelfKind::Explicit(ty, mutbl) => arg(mutbl, ty),",
        "start": {
          "row": 1693,
          "column": 13
        },
        "end": {
          "row": 1693,
          "column": 61
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "SelfKind::Explicit(ty, mutbl)",
        "start": {
          "row": 1693,
          "column": 13
        },
        "end": {
          "row": 1693,
          "column": 42
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "SelfKind::Explicit(ty, mutbl)",
        "start": {
          "row": 1693,
          "column": 13
        },
        "end": {
          "row": 1693,
          "column": 42
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "SelfKind::Explicit",
        "start": {
          "row": 1693,
          "column": 13
        },
        "end": {
          "row": 1693,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "SelfKind",
        "start": {
          "row": 1693,
          "column": 13
        },
        "end": {
          "row": 1693,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Explicit",
        "start": {
          "row": 1693,
          "column": 23
        },
        "end": {
          "row": 1693,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1693,
          "column": 32
        },
        "end": {
          "row": 1693,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1693,
          "column": 36
        },
        "end": {
          "row": 1693,
          "column": 41
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "arg(mutbl, ty)",
        "start": {
          "row": 1693,
          "column": 46
        },
        "end": {
          "row": 1693,
          "column": 60
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "arg",
        "start": {
          "row": 1693,
          "column": 46
        },
        "end": {
          "row": 1693,
          "column": 49
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(mutbl, ty)",
        "start": {
          "row": 1693,
          "column": 49
        },
        "end": {
          "row": 1693,
          "column": 60
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1693,
          "column": 50
        },
        "end": {
          "row": 1693,
          "column": 55
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1693,
          "column": 57
        },
        "end": {
          "row": 1693,
          "column": 59
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "SelfKind::Value(mutbl) => arg(mutbl, infer_ty),",
        "start": {
          "row": 1694,
          "column": 13
        },
        "end": {
          "row": 1694,
          "column": 60
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "SelfKind::Value(mutbl)",
        "start": {
          "row": 1694,
          "column": 13
        },
        "end": {
          "row": 1694,
          "column": 35
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "SelfKind::Value(mutbl)",
        "start": {
          "row": 1694,
          "column": 13
        },
        "end": {
          "row": 1694,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "SelfKind::Value",
        "start": {
          "row": 1694,
          "column": 13
        },
        "end": {
          "row": 1694,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "SelfKind",
        "start": {
          "row": 1694,
          "column": 13
        },
        "end": {
          "row": 1694,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Value",
        "start": {
          "row": 1694,
          "column": 23
        },
        "end": {
          "row": 1694,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1694,
          "column": 29
        },
        "end": {
          "row": 1694,
          "column": 34
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "arg(mutbl, infer_ty)",
        "start": {
          "row": 1694,
          "column": 39
        },
        "end": {
          "row": 1694,
          "column": 59
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "arg",
        "start": {
          "row": 1694,
          "column": 39
        },
        "end": {
          "row": 1694,
          "column": 42
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(mutbl, infer_ty)",
        "start": {
          "row": 1694,
          "column": 42
        },
        "end": {
          "row": 1694,
          "column": 59
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1694,
          "column": 43
        },
        "end": {
          "row": 1694,
          "column": 48
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "infer_ty",
        "start": {
          "row": 1694,
          "column": 50
        },
        "end": {
          "row": 1694,
          "column": 58
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "SelfKind::Region(lt, mutbl) => arg(Mutability::Immutable, P(Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            })),",
        "start": {
          "row": 1695,
          "column": 13
        },
        "end": {
          "row": 1699,
          "column": 17
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "SelfKind::Region(lt, mutbl)",
        "start": {
          "row": 1695,
          "column": 13
        },
        "end": {
          "row": 1695,
          "column": 40
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "SelfKind::Region(lt, mutbl)",
        "start": {
          "row": 1695,
          "column": 13
        },
        "end": {
          "row": 1695,
          "column": 40
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "SelfKind::Region",
        "start": {
          "row": 1695,
          "column": 13
        },
        "end": {
          "row": 1695,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "SelfKind",
        "start": {
          "row": 1695,
          "column": 13
        },
        "end": {
          "row": 1695,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Region",
        "start": {
          "row": 1695,
          "column": 23
        },
        "end": {
          "row": 1695,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "lt",
        "start": {
          "row": 1695,
          "column": 30
        },
        "end": {
          "row": 1695,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1695,
          "column": 34
        },
        "end": {
          "row": 1695,
          "column": 39
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "arg(Mutability::Immutable, P(Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            }))",
        "start": {
          "row": 1695,
          "column": 44
        },
        "end": {
          "row": 1699,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "arg",
        "start": {
          "row": 1695,
          "column": 44
        },
        "end": {
          "row": 1695,
          "column": 47
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(Mutability::Immutable, P(Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            }))",
        "start": {
          "row": 1695,
          "column": 47
        },
        "end": {
          "row": 1699,
          "column": 16
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Mutability::Immutable",
        "start": {
          "row": 1695,
          "column": 48
        },
        "end": {
          "row": 1695,
          "column": 69
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mutability",
        "start": {
          "row": 1695,
          "column": 48
        },
        "end": {
          "row": 1695,
          "column": 58
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Immutable",
        "start": {
          "row": 1695,
          "column": 60
        },
        "end": {
          "row": 1695,
          "column": 69
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "P(Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            })",
        "start": {
          "row": 1695,
          "column": 71
        },
        "end": {
          "row": 1699,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1695,
          "column": 71
        },
        "end": {
          "row": 1695,
          "column": 72
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            })",
        "start": {
          "row": 1695,
          "column": 72
        },
        "end": {
          "row": 1699,
          "column": 15
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "Ty {\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            }",
        "start": {
          "row": 1695,
          "column": 73
        },
        "end": {
          "row": 1699,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1695,
          "column": 73
        },
        "end": {
          "row": 1695,
          "column": 75
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{\n                id: DUMMY_NODE_ID,\n                node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl }),\n                span,\n            }",
        "start": {
          "row": 1695,
          "column": 76
        },
        "end": {
          "row": 1699,
          "column": 14
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "id: DUMMY_NODE_ID",
        "start": {
          "row": 1696,
          "column": 17
        },
        "end": {
          "row": 1696,
          "column": 34
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1696,
          "column": 17
        },
        "end": {
          "row": 1696,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "DUMMY_NODE_ID",
        "start": {
          "row": 1696,
          "column": 21
        },
        "end": {
          "row": 1696,
          "column": 34
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "node: TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl })",
        "start": {
          "row": 1697,
          "column": 17
        },
        "end": {
          "row": 1697,
          "column": 77
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 1697,
          "column": 17
        },
        "end": {
          "row": 1697,
          "column": 21
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "TyKind::Rptr(lt, MutTy { ty: infer_ty, mutbl: mutbl })",
        "start": {
          "row": 1697,
          "column": 23
        },
        "end": {
          "row": 1697,
          "column": 77
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "TyKind::Rptr",
        "start": {
          "row": 1697,
          "column": 23
        },
        "end": {
          "row": 1697,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TyKind",
        "start": {
          "row": 1697,
          "column": 23
        },
        "end": {
          "row": 1697,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Rptr",
        "start": {
          "row": 1697,
          "column": 31
        },
        "end": {
          "row": 1697,
          "column": 35
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(lt, MutTy { ty: infer_ty, mutbl: mutbl })",
        "start": {
          "row": 1697,
          "column": 35
        },
        "end": {
          "row": 1697,
          "column": 77
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "lt",
        "start": {
          "row": 1697,
          "column": 36
        },
        "end": {
          "row": 1697,
          "column": 38
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "MutTy { ty: infer_ty, mutbl: mutbl }",
        "start": {
          "row": 1697,
          "column": 40
        },
        "end": {
          "row": 1697,
          "column": 76
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MutTy",
        "start": {
          "row": 1697,
          "column": 40
        },
        "end": {
          "row": 1697,
          "column": 45
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{ ty: infer_ty, mutbl: mutbl }",
        "start": {
          "row": 1697,
          "column": 46
        },
        "end": {
          "row": 1697,
          "column": 76
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "ty: infer_ty",
        "start": {
          "row": 1697,
          "column": 48
        },
        "end": {
          "row": 1697,
          "column": 60
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1697,
          "column": 48
        },
        "end": {
          "row": 1697,
          "column": 50
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "infer_ty",
        "start": {
          "row": 1697,
          "column": 52
        },
        "end": {
          "row": 1697,
          "column": 60
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "mutbl: mutbl",
        "start": {
          "row": 1697,
          "column": 62
        },
        "end": {
          "row": 1697,
          "column": 74
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1697,
          "column": 62
        },
        "end": {
          "row": 1697,
          "column": 67
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "mutbl",
        "start": {
          "row": 1697,
          "column": 69
        },
        "end": {
          "row": 1697,
          "column": 74
        }
      },
      {
        "kind": "shorthand_field_initializer",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1698,
          "column": 17
        },
        "end": {
          "row": 1698,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1698,
          "column": 17
        },
        "end": {
          "row": 1698,
          "column": 21
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Header (not the body) of a function declaration.",
        "start": {
          "row": 1704,
          "column": 1
        },
        "end": {
          "row": 1704,
          "column": 53
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1705,
          "column": 1
        },
        "end": {
          "row": 1705,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `fn foo(bar: baz)`",
        "start": {
          "row": 1706,
          "column": 1
        },
        "end": {
          "row": 1706,
          "column": 28
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1707,
          "column": 1
        },
        "end": {
          "row": 1707,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1707,
          "column": 3
        },
        "end": {
          "row": 1707,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1707,
          "column": 3
        },
        "end": {
          "row": 1707,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1707,
          "column": 9
        },
        "end": {
          "row": 1707,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1707,
          "column": 10
        },
        "end": {
          "row": 1707,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1707,
          "column": 10
        },
        "end": {
          "row": 1707,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1707,
          "column": 17
        },
        "end": {
          "row": 1707,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1707,
          "column": 17
        },
        "end": {
          "row": 1707,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1707,
          "column": 28
        },
        "end": {
          "row": 1707,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1707,
          "column": 28
        },
        "end": {
          "row": 1707,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1707,
          "column": 32
        },
        "end": {
          "row": 1707,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1707,
          "column": 32
        },
        "end": {
          "row": 1707,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1707,
          "column": 48
        },
        "end": {
          "row": 1707,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1707,
          "column": 48
        },
        "end": {
          "row": 1707,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1707,
          "column": 64
        },
        "end": {
          "row": 1707,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1707,
          "column": 64
        },
        "end": {
          "row": 1707,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1707,
          "column": 70
        },
        "end": {
          "row": 1707,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1707,
          "column": 70
        },
        "end": {
          "row": 1707,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct FnDecl {\n    pub inputs: Vec<Arg>,\n    pub output: FunctionRetTy,\n    pub variadic: bool\n}",
        "start": {
          "row": 1708,
          "column": 1
        },
        "end": {
          "row": 1712,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1708,
          "column": 1
        },
        "end": {
          "row": 1708,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FnDecl",
        "start": {
          "row": 1708,
          "column": 12
        },
        "end": {
          "row": 1708,
          "column": 18
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub inputs: Vec<Arg>,\n    pub output: FunctionRetTy,\n    pub variadic: bool\n}",
        "start": {
          "row": 1708,
          "column": 19
        },
        "end": {
          "row": 1712,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub inputs: Vec<Arg>",
        "start": {
          "row": 1709,
          "column": 5
        },
        "end": {
          "row": 1709,
          "column": 25
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1709,
          "column": 5
        },
        "end": {
          "row": 1709,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "inputs",
        "start": {
          "row": 1709,
          "column": 9
        },
        "end": {
          "row": 1709,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Arg>",
        "start": {
          "row": 1709,
          "column": 17
        },
        "end": {
          "row": 1709,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1709,
          "column": 17
        },
        "end": {
          "row": 1709,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Arg>",
        "start": {
          "row": 1709,
          "column": 20
        },
        "end": {
          "row": 1709,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Arg",
        "start": {
          "row": 1709,
          "column": 21
        },
        "end": {
          "row": 1709,
          "column": 24
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub output: FunctionRetTy",
        "start": {
          "row": 1710,
          "column": 5
        },
        "end": {
          "row": 1710,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1710,
          "column": 5
        },
        "end": {
          "row": 1710,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "output",
        "start": {
          "row": 1710,
          "column": 9
        },
        "end": {
          "row": 1710,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FunctionRetTy",
        "start": {
          "row": 1710,
          "column": 17
        },
        "end": {
          "row": 1710,
          "column": 30
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub variadic: bool",
        "start": {
          "row": 1711,
          "column": 5
        },
        "end": {
          "row": 1711,
          "column": 23
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1711,
          "column": 5
        },
        "end": {
          "row": 1711,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "variadic",
        "start": {
          "row": 1711,
          "column": 9
        },
        "end": {
          "row": 1711,
          "column": 17
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1711,
          "column": 19
        },
        "end": {
          "row": 1711,
          "column": 23
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl FnDecl {\n    pub fn get_self(&self) -> Option<ExplicitSelf> {\n        self.inputs.get(0).and_then(Arg::to_self)\n    }\n    pub fn has_self(&self) -> bool {\n        self.inputs.get(0).map(Arg::is_self).unwrap_or(false)\n    }\n}",
        "start": {
          "row": 1714,
          "column": 1
        },
        "end": {
          "row": 1721,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FnDecl",
        "start": {
          "row": 1714,
          "column": 6
        },
        "end": {
          "row": 1714,
          "column": 12
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn get_self(&self) -> Option<ExplicitSelf> {\n        self.inputs.get(0).and_then(Arg::to_self)\n    }\n    pub fn has_self(&self) -> bool {\n        self.inputs.get(0).map(Arg::is_self).unwrap_or(false)\n    }\n}",
        "start": {
          "row": 1714,
          "column": 13
        },
        "end": {
          "row": 1721,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn get_self(&self) -> Option<ExplicitSelf> {\n        self.inputs.get(0).and_then(Arg::to_self)\n    }",
        "start": {
          "row": 1715,
          "column": 5
        },
        "end": {
          "row": 1717,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1715,
          "column": 5
        },
        "end": {
          "row": 1715,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "get_self",
        "start": {
          "row": 1715,
          "column": 12
        },
        "end": {
          "row": 1715,
          "column": 20
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1715,
          "column": 20
        },
        "end": {
          "row": 1715,
          "column": 27
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1715,
          "column": 21
        },
        "end": {
          "row": 1715,
          "column": 26
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1715,
          "column": 22
        },
        "end": {
          "row": 1715,
          "column": 26
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<ExplicitSelf>",
        "start": {
          "row": 1715,
          "column": 31
        },
        "end": {
          "row": 1715,
          "column": 51
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1715,
          "column": 31
        },
        "end": {
          "row": 1715,
          "column": 37
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<ExplicitSelf>",
        "start": {
          "row": 1715,
          "column": 37
        },
        "end": {
          "row": 1715,
          "column": 51
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ExplicitSelf",
        "start": {
          "row": 1715,
          "column": 38
        },
        "end": {
          "row": 1715,
          "column": 50
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        self.inputs.get(0).and_then(Arg::to_self)\n    }",
        "start": {
          "row": 1715,
          "column": 52
        },
        "end": {
          "row": 1717,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.inputs.get(0).and_then(Arg::to_self)",
        "start": {
          "row": 1716,
          "column": 9
        },
        "end": {
          "row": 1716,
          "column": 50
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.inputs.get(0).and_then",
        "start": {
          "row": 1716,
          "column": 9
        },
        "end": {
          "row": 1716,
          "column": 36
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.inputs.get(0)",
        "start": {
          "row": 1716,
          "column": 9
        },
        "end": {
          "row": 1716,
          "column": 27
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.inputs.get",
        "start": {
          "row": 1716,
          "column": 9
        },
        "end": {
          "row": 1716,
          "column": 24
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.inputs",
        "start": {
          "row": 1716,
          "column": 9
        },
        "end": {
          "row": 1716,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1716,
          "column": 9
        },
        "end": {
          "row": 1716,
          "column": 13
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "inputs",
        "start": {
          "row": 1716,
          "column": 14
        },
        "end": {
          "row": 1716,
          "column": 20
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "get",
        "start": {
          "row": 1716,
          "column": 21
        },
        "end": {
          "row": 1716,
          "column": 24
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(0)",
        "start": {
          "row": 1716,
          "column": 24
        },
        "end": {
          "row": 1716,
          "column": 27
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 1716,
          "column": 25
        },
        "end": {
          "row": 1716,
          "column": 26
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "and_then",
        "start": {
          "row": 1716,
          "column": 28
        },
        "end": {
          "row": 1716,
          "column": 36
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(Arg::to_self)",
        "start": {
          "row": 1716,
          "column": 36
        },
        "end": {
          "row": 1716,
          "column": 50
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Arg::to_self",
        "start": {
          "row": 1716,
          "column": 37
        },
        "end": {
          "row": 1716,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Arg",
        "start": {
          "row": 1716,
          "column": 37
        },
        "end": {
          "row": 1716,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "to_self",
        "start": {
          "row": 1716,
          "column": 42
        },
        "end": {
          "row": 1716,
          "column": 49
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn has_self(&self) -> bool {\n        self.inputs.get(0).map(Arg::is_self).unwrap_or(false)\n    }",
        "start": {
          "row": 1718,
          "column": 5
        },
        "end": {
          "row": 1720,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1718,
          "column": 5
        },
        "end": {
          "row": 1718,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "has_self",
        "start": {
          "row": 1718,
          "column": 12
        },
        "end": {
          "row": 1718,
          "column": 20
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1718,
          "column": 20
        },
        "end": {
          "row": 1718,
          "column": 27
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1718,
          "column": 21
        },
        "end": {
          "row": 1718,
          "column": 26
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1718,
          "column": 22
        },
        "end": {
          "row": 1718,
          "column": 26
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1718,
          "column": 31
        },
        "end": {
          "row": 1718,
          "column": 35
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        self.inputs.get(0).map(Arg::is_self).unwrap_or(false)\n    }",
        "start": {
          "row": 1718,
          "column": 36
        },
        "end": {
          "row": 1720,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.inputs.get(0).map(Arg::is_self).unwrap_or(false)",
        "start": {
          "row": 1719,
          "column": 9
        },
        "end": {
          "row": 1719,
          "column": 62
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.inputs.get(0).map(Arg::is_self).unwrap_or",
        "start": {
          "row": 1719,
          "column": 9
        },
        "end": {
          "row": 1719,
          "column": 55
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.inputs.get(0).map(Arg::is_self)",
        "start": {
          "row": 1719,
          "column": 9
        },
        "end": {
          "row": 1719,
          "column": 45
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.inputs.get(0).map",
        "start": {
          "row": 1719,
          "column": 9
        },
        "end": {
          "row": 1719,
          "column": 31
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "self.inputs.get(0)",
        "start": {
          "row": 1719,
          "column": 9
        },
        "end": {
          "row": 1719,
          "column": 27
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.inputs.get",
        "start": {
          "row": 1719,
          "column": 9
        },
        "end": {
          "row": 1719,
          "column": 24
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "self.inputs",
        "start": {
          "row": 1719,
          "column": 9
        },
        "end": {
          "row": 1719,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1719,
          "column": 9
        },
        "end": {
          "row": 1719,
          "column": 13
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "inputs",
        "start": {
          "row": 1719,
          "column": 14
        },
        "end": {
          "row": 1719,
          "column": 20
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "get",
        "start": {
          "row": 1719,
          "column": 21
        },
        "end": {
          "row": 1719,
          "column": 24
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(0)",
        "start": {
          "row": 1719,
          "column": 24
        },
        "end": {
          "row": 1719,
          "column": 27
        }
      },
      {
        "kind": "integer_literal",
        "name": "query",
        "text": "0",
        "start": {
          "row": 1719,
          "column": 25
        },
        "end": {
          "row": 1719,
          "column": 26
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "map",
        "start": {
          "row": 1719,
          "column": 28
        },
        "end": {
          "row": 1719,
          "column": 31
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(Arg::is_self)",
        "start": {
          "row": 1719,
          "column": 31
        },
        "end": {
          "row": 1719,
          "column": 45
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Arg::is_self",
        "start": {
          "row": 1719,
          "column": 32
        },
        "end": {
          "row": 1719,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Arg",
        "start": {
          "row": 1719,
          "column": 32
        },
        "end": {
          "row": 1719,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_self",
        "start": {
          "row": 1719,
          "column": 37
        },
        "end": {
          "row": 1719,
          "column": 44
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "unwrap_or",
        "start": {
          "row": 1719,
          "column": 46
        },
        "end": {
          "row": 1719,
          "column": 55
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(false)",
        "start": {
          "row": 1719,
          "column": 55
        },
        "end": {
          "row": 1719,
          "column": 62
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 1719,
          "column": 56
        },
        "end": {
          "row": 1719,
          "column": 61
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Is the trait definition an auto trait?",
        "start": {
          "row": 1723,
          "column": 1
        },
        "end": {
          "row": 1723,
          "column": 43
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1724,
          "column": 1
        },
        "end": {
          "row": 1724,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1724,
          "column": 3
        },
        "end": {
          "row": 1724,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1724,
          "column": 3
        },
        "end": {
          "row": 1724,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1724,
          "column": 9
        },
        "end": {
          "row": 1724,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1724,
          "column": 10
        },
        "end": {
          "row": 1724,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1724,
          "column": 10
        },
        "end": {
          "row": 1724,
          "column": 14
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1724,
          "column": 16
        },
        "end": {
          "row": 1724,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1724,
          "column": 16
        },
        "end": {
          "row": 1724,
          "column": 21
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1724,
          "column": 23
        },
        "end": {
          "row": 1724,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1724,
          "column": 23
        },
        "end": {
          "row": 1724,
          "column": 32
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1724,
          "column": 34
        },
        "end": {
          "row": 1724,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1724,
          "column": 34
        },
        "end": {
          "row": 1724,
          "column": 36
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1724,
          "column": 38
        },
        "end": {
          "row": 1724,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1724,
          "column": 38
        },
        "end": {
          "row": 1724,
          "column": 52
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1724,
          "column": 54
        },
        "end": {
          "row": 1724,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1724,
          "column": 54
        },
        "end": {
          "row": 1724,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1724,
          "column": 70
        },
        "end": {
          "row": 1724,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1724,
          "column": 70
        },
        "end": {
          "row": 1724,
          "column": 74
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1724,
          "column": 76
        },
        "end": {
          "row": 1724,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1724,
          "column": 76
        },
        "end": {
          "row": 1724,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum IsAuto {\n    Yes,\n    No\n}",
        "start": {
          "row": 1725,
          "column": 1
        },
        "end": {
          "row": 1728,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1725,
          "column": 1
        },
        "end": {
          "row": 1725,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "IsAuto",
        "start": {
          "row": 1725,
          "column": 10
        },
        "end": {
          "row": 1725,
          "column": 16
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Yes,\n    No\n}",
        "start": {
          "row": 1725,
          "column": 17
        },
        "end": {
          "row": 1728,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Yes",
        "start": {
          "row": 1726,
          "column": 5
        },
        "end": {
          "row": 1726,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Yes",
        "start": {
          "row": 1726,
          "column": 5
        },
        "end": {
          "row": 1726,
          "column": 8
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "No",
        "start": {
          "row": 1727,
          "column": 5
        },
        "end": {
          "row": 1727,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "No",
        "start": {
          "row": 1727,
          "column": 5
        },
        "end": {
          "row": 1727,
          "column": 7
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1730,
          "column": 1
        },
        "end": {
          "row": 1730,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1730,
          "column": 3
        },
        "end": {
          "row": 1730,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1730,
          "column": 3
        },
        "end": {
          "row": 1730,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1730,
          "column": 9
        },
        "end": {
          "row": 1730,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1730,
          "column": 10
        },
        "end": {
          "row": 1730,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1730,
          "column": 10
        },
        "end": {
          "row": 1730,
          "column": 14
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1730,
          "column": 16
        },
        "end": {
          "row": 1730,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1730,
          "column": 16
        },
        "end": {
          "row": 1730,
          "column": 21
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1730,
          "column": 23
        },
        "end": {
          "row": 1730,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1730,
          "column": 23
        },
        "end": {
          "row": 1730,
          "column": 32
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1730,
          "column": 34
        },
        "end": {
          "row": 1730,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1730,
          "column": 34
        },
        "end": {
          "row": 1730,
          "column": 36
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1730,
          "column": 38
        },
        "end": {
          "row": 1730,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1730,
          "column": 38
        },
        "end": {
          "row": 1730,
          "column": 52
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1730,
          "column": 54
        },
        "end": {
          "row": 1730,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1730,
          "column": 54
        },
        "end": {
          "row": 1730,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1730,
          "column": 70
        },
        "end": {
          "row": 1730,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1730,
          "column": 70
        },
        "end": {
          "row": 1730,
          "column": 74
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1730,
          "column": 76
        },
        "end": {
          "row": 1730,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1730,
          "column": 76
        },
        "end": {
          "row": 1730,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum Unsafety {\n    Unsafe,\n    Normal,\n}",
        "start": {
          "row": 1731,
          "column": 1
        },
        "end": {
          "row": 1734,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1731,
          "column": 1
        },
        "end": {
          "row": 1731,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Unsafety",
        "start": {
          "row": 1731,
          "column": 10
        },
        "end": {
          "row": 1731,
          "column": 18
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Unsafe,\n    Normal,\n}",
        "start": {
          "row": 1731,
          "column": 19
        },
        "end": {
          "row": 1734,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Unsafe",
        "start": {
          "row": 1732,
          "column": 5
        },
        "end": {
          "row": 1732,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unsafe",
        "start": {
          "row": 1732,
          "column": 5
        },
        "end": {
          "row": 1732,
          "column": 11
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Normal",
        "start": {
          "row": 1733,
          "column": 5
        },
        "end": {
          "row": 1733,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Normal",
        "start": {
          "row": 1733,
          "column": 5
        },
        "end": {
          "row": 1733,
          "column": 11
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1736,
          "column": 1
        },
        "end": {
          "row": 1736,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1736,
          "column": 3
        },
        "end": {
          "row": 1736,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1736,
          "column": 3
        },
        "end": {
          "row": 1736,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1736,
          "column": 9
        },
        "end": {
          "row": 1736,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1736,
          "column": 10
        },
        "end": {
          "row": 1736,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1736,
          "column": 10
        },
        "end": {
          "row": 1736,
          "column": 14
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1736,
          "column": 16
        },
        "end": {
          "row": 1736,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1736,
          "column": 16
        },
        "end": {
          "row": 1736,
          "column": 21
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1736,
          "column": 23
        },
        "end": {
          "row": 1736,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1736,
          "column": 23
        },
        "end": {
          "row": 1736,
          "column": 32
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1736,
          "column": 34
        },
        "end": {
          "row": 1736,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1736,
          "column": 34
        },
        "end": {
          "row": 1736,
          "column": 36
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1736,
          "column": 38
        },
        "end": {
          "row": 1736,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1736,
          "column": 38
        },
        "end": {
          "row": 1736,
          "column": 52
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1736,
          "column": 54
        },
        "end": {
          "row": 1736,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1736,
          "column": 54
        },
        "end": {
          "row": 1736,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1736,
          "column": 70
        },
        "end": {
          "row": 1736,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1736,
          "column": 70
        },
        "end": {
          "row": 1736,
          "column": 74
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1736,
          "column": 76
        },
        "end": {
          "row": 1736,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1736,
          "column": 76
        },
        "end": {
          "row": 1736,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum Constness {\n    Const,\n    NotConst,\n}",
        "start": {
          "row": 1737,
          "column": 1
        },
        "end": {
          "row": 1740,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1737,
          "column": 1
        },
        "end": {
          "row": 1737,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Constness",
        "start": {
          "row": 1737,
          "column": 10
        },
        "end": {
          "row": 1737,
          "column": 19
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Const,\n    NotConst,\n}",
        "start": {
          "row": 1737,
          "column": 20
        },
        "end": {
          "row": 1740,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Const",
        "start": {
          "row": 1738,
          "column": 5
        },
        "end": {
          "row": 1738,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Const",
        "start": {
          "row": 1738,
          "column": 5
        },
        "end": {
          "row": 1738,
          "column": 10
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "NotConst",
        "start": {
          "row": 1739,
          "column": 5
        },
        "end": {
          "row": 1739,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "NotConst",
        "start": {
          "row": 1739,
          "column": 5
        },
        "end": {
          "row": 1739,
          "column": 13
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1742,
          "column": 1
        },
        "end": {
          "row": 1742,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1742,
          "column": 3
        },
        "end": {
          "row": 1742,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1742,
          "column": 3
        },
        "end": {
          "row": 1742,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1742,
          "column": 9
        },
        "end": {
          "row": 1742,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1742,
          "column": 10
        },
        "end": {
          "row": 1742,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1742,
          "column": 10
        },
        "end": {
          "row": 1742,
          "column": 14
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1742,
          "column": 16
        },
        "end": {
          "row": 1742,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1742,
          "column": 16
        },
        "end": {
          "row": 1742,
          "column": 21
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1742,
          "column": 23
        },
        "end": {
          "row": 1742,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1742,
          "column": 23
        },
        "end": {
          "row": 1742,
          "column": 32
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1742,
          "column": 34
        },
        "end": {
          "row": 1742,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1742,
          "column": 34
        },
        "end": {
          "row": 1742,
          "column": 36
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1742,
          "column": 38
        },
        "end": {
          "row": 1742,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1742,
          "column": 38
        },
        "end": {
          "row": 1742,
          "column": 52
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1742,
          "column": 54
        },
        "end": {
          "row": 1742,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1742,
          "column": 54
        },
        "end": {
          "row": 1742,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1742,
          "column": 70
        },
        "end": {
          "row": 1742,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1742,
          "column": 70
        },
        "end": {
          "row": 1742,
          "column": 74
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1742,
          "column": 76
        },
        "end": {
          "row": 1742,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1742,
          "column": 76
        },
        "end": {
          "row": 1742,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum Defaultness {\n    Default,\n    Final,\n}",
        "start": {
          "row": 1743,
          "column": 1
        },
        "end": {
          "row": 1746,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1743,
          "column": 1
        },
        "end": {
          "row": 1743,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Defaultness",
        "start": {
          "row": 1743,
          "column": 10
        },
        "end": {
          "row": 1743,
          "column": 21
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Default,\n    Final,\n}",
        "start": {
          "row": 1743,
          "column": 22
        },
        "end": {
          "row": 1746,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Default",
        "start": {
          "row": 1744,
          "column": 5
        },
        "end": {
          "row": 1744,
          "column": 12
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Default",
        "start": {
          "row": 1744,
          "column": 5
        },
        "end": {
          "row": 1744,
          "column": 12
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Final",
        "start": {
          "row": 1745,
          "column": 5
        },
        "end": {
          "row": 1745,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Final",
        "start": {
          "row": 1745,
          "column": 5
        },
        "end": {
          "row": 1745,
          "column": 10
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Display for Unsafety {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(match *self {\n            Unsafety::Normal => \"normal\",\n            Unsafety::Unsafe => \"unsafe\",\n        }, f)\n    }\n}",
        "start": {
          "row": 1748,
          "column": 1
        },
        "end": {
          "row": 1755,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Display",
        "start": {
          "row": 1748,
          "column": 6
        },
        "end": {
          "row": 1748,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1748,
          "column": 6
        },
        "end": {
          "row": 1748,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Display",
        "start": {
          "row": 1748,
          "column": 11
        },
        "end": {
          "row": 1748,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Unsafety",
        "start": {
          "row": 1748,
          "column": 23
        },
        "end": {
          "row": 1748,
          "column": 31
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(match *self {\n            Unsafety::Normal => \"normal\",\n            Unsafety::Unsafe => \"unsafe\",\n        }, f)\n    }\n}",
        "start": {
          "row": 1748,
          "column": 32
        },
        "end": {
          "row": 1755,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(match *self {\n            Unsafety::Normal => \"normal\",\n            Unsafety::Unsafe => \"unsafe\",\n        }, f)\n    }",
        "start": {
          "row": 1749,
          "column": 5
        },
        "end": {
          "row": 1754,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1749,
          "column": 8
        },
        "end": {
          "row": 1749,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 1749,
          "column": 11
        },
        "end": {
          "row": 1749,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1749,
          "column": 12
        },
        "end": {
          "row": 1749,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1749,
          "column": 13
        },
        "end": {
          "row": 1749,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 1749,
          "column": 19
        },
        "end": {
          "row": 1749,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1749,
          "column": 19
        },
        "end": {
          "row": 1749,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 1749,
          "column": 22
        },
        "end": {
          "row": 1749,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 1749,
          "column": 23
        },
        "end": {
          "row": 1749,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 1749,
          "column": 27
        },
        "end": {
          "row": 1749,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1749,
          "column": 27
        },
        "end": {
          "row": 1749,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 1749,
          "column": 32
        },
        "end": {
          "row": 1749,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 1749,
          "column": 46
        },
        "end": {
          "row": 1749,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1749,
          "column": 46
        },
        "end": {
          "row": 1749,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 1749,
          "column": 51
        },
        "end": {
          "row": 1749,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        fmt::Display::fmt(match *self {\n            Unsafety::Normal => \"normal\",\n            Unsafety::Unsafe => \"unsafe\",\n        }, f)\n    }",
        "start": {
          "row": 1749,
          "column": 58
        },
        "end": {
          "row": 1754,
          "column": 6
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "fmt::Display::fmt(match *self {\n            Unsafety::Normal => \"normal\",\n            Unsafety::Unsafe => \"unsafe\",\n        }, f)",
        "start": {
          "row": 1750,
          "column": 9
        },
        "end": {
          "row": 1753,
          "column": 14
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "fmt::Display::fmt",
        "start": {
          "row": 1750,
          "column": 9
        },
        "end": {
          "row": 1750,
          "column": 26
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "fmt::Display",
        "start": {
          "row": 1750,
          "column": 9
        },
        "end": {
          "row": 1750,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1750,
          "column": 9
        },
        "end": {
          "row": 1750,
          "column": 12
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Display",
        "start": {
          "row": 1750,
          "column": 14
        },
        "end": {
          "row": 1750,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1750,
          "column": 23
        },
        "end": {
          "row": 1750,
          "column": 26
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(match *self {\n            Unsafety::Normal => \"normal\",\n            Unsafety::Unsafe => \"unsafe\",\n        }, f)",
        "start": {
          "row": 1750,
          "column": 26
        },
        "end": {
          "row": 1753,
          "column": 14
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            Unsafety::Normal => \"normal\",\n            Unsafety::Unsafe => \"unsafe\",\n        }",
        "start": {
          "row": 1750,
          "column": 27
        },
        "end": {
          "row": 1753,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1750,
          "column": 33
        },
        "end": {
          "row": 1750,
          "column": 38
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1750,
          "column": 34
        },
        "end": {
          "row": 1750,
          "column": 38
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            Unsafety::Normal => \"normal\",\n            Unsafety::Unsafe => \"unsafe\",\n        }",
        "start": {
          "row": 1750,
          "column": 39
        },
        "end": {
          "row": 1753,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Unsafety::Normal => \"normal\",",
        "start": {
          "row": 1751,
          "column": 13
        },
        "end": {
          "row": 1751,
          "column": 42
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Unsafety::Normal",
        "start": {
          "row": 1751,
          "column": 13
        },
        "end": {
          "row": 1751,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Unsafety::Normal",
        "start": {
          "row": 1751,
          "column": 13
        },
        "end": {
          "row": 1751,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unsafety",
        "start": {
          "row": 1751,
          "column": 13
        },
        "end": {
          "row": 1751,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Normal",
        "start": {
          "row": 1751,
          "column": 23
        },
        "end": {
          "row": 1751,
          "column": 29
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"normal\"",
        "start": {
          "row": 1751,
          "column": 33
        },
        "end": {
          "row": 1751,
          "column": 41
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "Unsafety::Unsafe => \"unsafe\",",
        "start": {
          "row": 1752,
          "column": 13
        },
        "end": {
          "row": 1752,
          "column": 42
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "Unsafety::Unsafe",
        "start": {
          "row": 1752,
          "column": 13
        },
        "end": {
          "row": 1752,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "Unsafety::Unsafe",
        "start": {
          "row": 1752,
          "column": 13
        },
        "end": {
          "row": 1752,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unsafety",
        "start": {
          "row": 1752,
          "column": 13
        },
        "end": {
          "row": 1752,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unsafe",
        "start": {
          "row": 1752,
          "column": 23
        },
        "end": {
          "row": 1752,
          "column": 29
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"unsafe\"",
        "start": {
          "row": 1752,
          "column": 33
        },
        "end": {
          "row": 1752,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1753,
          "column": 12
        },
        "end": {
          "row": 1753,
          "column": 13
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)]",
        "start": {
          "row": 1757,
          "column": 1
        },
        "end": {
          "row": 1757,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)",
        "start": {
          "row": 1757,
          "column": 3
        },
        "end": {
          "row": 1757,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1757,
          "column": 3
        },
        "end": {
          "row": 1757,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash)",
        "start": {
          "row": 1757,
          "column": 9
        },
        "end": {
          "row": 1757,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1757,
          "column": 10
        },
        "end": {
          "row": 1757,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1757,
          "column": 10
        },
        "end": {
          "row": 1757,
          "column": 14
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1757,
          "column": 16
        },
        "end": {
          "row": 1757,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1757,
          "column": 16
        },
        "end": {
          "row": 1757,
          "column": 21
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1757,
          "column": 23
        },
        "end": {
          "row": 1757,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1757,
          "column": 23
        },
        "end": {
          "row": 1757,
          "column": 32
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1757,
          "column": 34
        },
        "end": {
          "row": 1757,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1757,
          "column": 34
        },
        "end": {
          "row": 1757,
          "column": 36
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1757,
          "column": 38
        },
        "end": {
          "row": 1757,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1757,
          "column": 38
        },
        "end": {
          "row": 1757,
          "column": 52
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1757,
          "column": 54
        },
        "end": {
          "row": 1757,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1757,
          "column": 54
        },
        "end": {
          "row": 1757,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1757,
          "column": 70
        },
        "end": {
          "row": 1757,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1757,
          "column": 70
        },
        "end": {
          "row": 1757,
          "column": 74
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum ImplPolarity {\n    /// `impl Trait for Type`\n    Positive,\n    /// `impl !Trait for Type`\n    Negative,\n}",
        "start": {
          "row": 1758,
          "column": 1
        },
        "end": {
          "row": 1763,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1758,
          "column": 1
        },
        "end": {
          "row": 1758,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ImplPolarity",
        "start": {
          "row": 1758,
          "column": 10
        },
        "end": {
          "row": 1758,
          "column": 22
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// `impl Trait for Type`\n    Positive,\n    /// `impl !Trait for Type`\n    Negative,\n}",
        "start": {
          "row": 1758,
          "column": 23
        },
        "end": {
          "row": 1763,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `impl Trait for Type`",
        "start": {
          "row": 1759,
          "column": 5
        },
        "end": {
          "row": 1759,
          "column": 30
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Positive",
        "start": {
          "row": 1760,
          "column": 5
        },
        "end": {
          "row": 1760,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Positive",
        "start": {
          "row": 1760,
          "column": 5
        },
        "end": {
          "row": 1760,
          "column": 13
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// `impl !Trait for Type`",
        "start": {
          "row": 1761,
          "column": 5
        },
        "end": {
          "row": 1761,
          "column": 31
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Negative",
        "start": {
          "row": 1762,
          "column": 5
        },
        "end": {
          "row": 1762,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Negative",
        "start": {
          "row": 1762,
          "column": 5
        },
        "end": {
          "row": 1762,
          "column": 13
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl fmt::Debug for ImplPolarity {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        match *self {\n            ImplPolarity::Positive => \"positive\".fmt(f),\n            ImplPolarity::Negative => \"negative\".fmt(f),\n        }\n    }\n}",
        "start": {
          "row": 1765,
          "column": 1
        },
        "end": {
          "row": 1772,
          "column": 2
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Debug",
        "start": {
          "row": 1765,
          "column": 6
        },
        "end": {
          "row": 1765,
          "column": 16
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1765,
          "column": 6
        },
        "end": {
          "row": 1765,
          "column": 9
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1765,
          "column": 11
        },
        "end": {
          "row": 1765,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ImplPolarity",
        "start": {
          "row": 1765,
          "column": 21
        },
        "end": {
          "row": 1765,
          "column": 33
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        match *self {\n            ImplPolarity::Positive => \"positive\".fmt(f),\n            ImplPolarity::Negative => \"negative\".fmt(f),\n        }\n    }\n}",
        "start": {
          "row": 1765,
          "column": 34
        },
        "end": {
          "row": 1772,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        match *self {\n            ImplPolarity::Positive => \"positive\".fmt(f),\n            ImplPolarity::Negative => \"negative\".fmt(f),\n        }\n    }",
        "start": {
          "row": 1766,
          "column": 5
        },
        "end": {
          "row": 1771,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1766,
          "column": 8
        },
        "end": {
          "row": 1766,
          "column": 11
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self, f: &mut fmt::Formatter)",
        "start": {
          "row": 1766,
          "column": 11
        },
        "end": {
          "row": 1766,
          "column": 42
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1766,
          "column": 12
        },
        "end": {
          "row": 1766,
          "column": 17
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1766,
          "column": 13
        },
        "end": {
          "row": 1766,
          "column": 17
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "f: &mut fmt::Formatter",
        "start": {
          "row": 1766,
          "column": 19
        },
        "end": {
          "row": 1766,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1766,
          "column": 19
        },
        "end": {
          "row": 1766,
          "column": 20
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&mut fmt::Formatter",
        "start": {
          "row": 1766,
          "column": 22
        },
        "end": {
          "row": 1766,
          "column": 41
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 1766,
          "column": 23
        },
        "end": {
          "row": 1766,
          "column": 26
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Formatter",
        "start": {
          "row": 1766,
          "column": 27
        },
        "end": {
          "row": 1766,
          "column": 41
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1766,
          "column": 27
        },
        "end": {
          "row": 1766,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Formatter",
        "start": {
          "row": 1766,
          "column": 32
        },
        "end": {
          "row": 1766,
          "column": 41
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "fmt::Result",
        "start": {
          "row": 1766,
          "column": 46
        },
        "end": {
          "row": 1766,
          "column": 57
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1766,
          "column": 46
        },
        "end": {
          "row": 1766,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Result",
        "start": {
          "row": 1766,
          "column": 51
        },
        "end": {
          "row": 1766,
          "column": 57
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            ImplPolarity::Positive => \"positive\".fmt(f),\n            ImplPolarity::Negative => \"negative\".fmt(f),\n        }\n    }",
        "start": {
          "row": 1766,
          "column": 58
        },
        "end": {
          "row": 1771,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            ImplPolarity::Positive => \"positive\".fmt(f),\n            ImplPolarity::Negative => \"negative\".fmt(f),\n        }",
        "start": {
          "row": 1767,
          "column": 9
        },
        "end": {
          "row": 1770,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1767,
          "column": 15
        },
        "end": {
          "row": 1767,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1767,
          "column": 16
        },
        "end": {
          "row": 1767,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            ImplPolarity::Positive => \"positive\".fmt(f),\n            ImplPolarity::Negative => \"negative\".fmt(f),\n        }",
        "start": {
          "row": 1767,
          "column": 21
        },
        "end": {
          "row": 1770,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ImplPolarity::Positive => \"positive\".fmt(f),",
        "start": {
          "row": 1768,
          "column": 13
        },
        "end": {
          "row": 1768,
          "column": 57
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ImplPolarity::Positive",
        "start": {
          "row": 1768,
          "column": 13
        },
        "end": {
          "row": 1768,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ImplPolarity::Positive",
        "start": {
          "row": 1768,
          "column": 13
        },
        "end": {
          "row": 1768,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ImplPolarity",
        "start": {
          "row": 1768,
          "column": 13
        },
        "end": {
          "row": 1768,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Positive",
        "start": {
          "row": 1768,
          "column": 27
        },
        "end": {
          "row": 1768,
          "column": 35
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "\"positive\".fmt(f)",
        "start": {
          "row": 1768,
          "column": 39
        },
        "end": {
          "row": 1768,
          "column": 56
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "\"positive\".fmt",
        "start": {
          "row": 1768,
          "column": 39
        },
        "end": {
          "row": 1768,
          "column": 53
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"positive\"",
        "start": {
          "row": 1768,
          "column": 39
        },
        "end": {
          "row": 1768,
          "column": 49
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1768,
          "column": 50
        },
        "end": {
          "row": 1768,
          "column": 53
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(f)",
        "start": {
          "row": 1768,
          "column": 53
        },
        "end": {
          "row": 1768,
          "column": 56
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1768,
          "column": 54
        },
        "end": {
          "row": 1768,
          "column": 55
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ImplPolarity::Negative => \"negative\".fmt(f),",
        "start": {
          "row": 1769,
          "column": 13
        },
        "end": {
          "row": 1769,
          "column": 57
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ImplPolarity::Negative",
        "start": {
          "row": 1769,
          "column": 13
        },
        "end": {
          "row": 1769,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ImplPolarity::Negative",
        "start": {
          "row": 1769,
          "column": 13
        },
        "end": {
          "row": 1769,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ImplPolarity",
        "start": {
          "row": 1769,
          "column": 13
        },
        "end": {
          "row": 1769,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Negative",
        "start": {
          "row": 1769,
          "column": 27
        },
        "end": {
          "row": 1769,
          "column": 35
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "\"negative\".fmt(f)",
        "start": {
          "row": 1769,
          "column": 39
        },
        "end": {
          "row": 1769,
          "column": 56
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "\"negative\".fmt",
        "start": {
          "row": 1769,
          "column": 39
        },
        "end": {
          "row": 1769,
          "column": 53
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"negative\"",
        "start": {
          "row": 1769,
          "column": 39
        },
        "end": {
          "row": 1769,
          "column": 49
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "fmt",
        "start": {
          "row": 1769,
          "column": 50
        },
        "end": {
          "row": 1769,
          "column": 53
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(f)",
        "start": {
          "row": 1769,
          "column": 53
        },
        "end": {
          "row": 1769,
          "column": 56
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "f",
        "start": {
          "row": 1769,
          "column": 54
        },
        "end": {
          "row": 1769,
          "column": 55
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1775,
          "column": 1
        },
        "end": {
          "row": 1775,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1775,
          "column": 3
        },
        "end": {
          "row": 1775,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1775,
          "column": 3
        },
        "end": {
          "row": 1775,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1775,
          "column": 9
        },
        "end": {
          "row": 1775,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1775,
          "column": 10
        },
        "end": {
          "row": 1775,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1775,
          "column": 10
        },
        "end": {
          "row": 1775,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1775,
          "column": 17
        },
        "end": {
          "row": 1775,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1775,
          "column": 17
        },
        "end": {
          "row": 1775,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1775,
          "column": 28
        },
        "end": {
          "row": 1775,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1775,
          "column": 28
        },
        "end": {
          "row": 1775,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1775,
          "column": 32
        },
        "end": {
          "row": 1775,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1775,
          "column": 32
        },
        "end": {
          "row": 1775,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1775,
          "column": 48
        },
        "end": {
          "row": 1775,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1775,
          "column": 48
        },
        "end": {
          "row": 1775,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1775,
          "column": 64
        },
        "end": {
          "row": 1775,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1775,
          "column": 64
        },
        "end": {
          "row": 1775,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1775,
          "column": 70
        },
        "end": {
          "row": 1775,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1775,
          "column": 70
        },
        "end": {
          "row": 1775,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum FunctionRetTy {\n    /// Return type is not specified.\n    ///\n    /// Functions default to `()` and\n    /// closures default to inference. Span points to where return\n    /// type would be inserted.\n    Default(Span),\n    /// Everything else\n    Ty(P<Ty>),\n}",
        "start": {
          "row": 1776,
          "column": 1
        },
        "end": {
          "row": 1785,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1776,
          "column": 1
        },
        "end": {
          "row": 1776,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FunctionRetTy",
        "start": {
          "row": 1776,
          "column": 10
        },
        "end": {
          "row": 1776,
          "column": 23
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// Return type is not specified.\n    ///\n    /// Functions default to `()` and\n    /// closures default to inference. Span points to where return\n    /// type would be inserted.\n    Default(Span),\n    /// Everything else\n    Ty(P<Ty>),\n}",
        "start": {
          "row": 1776,
          "column": 24
        },
        "end": {
          "row": 1785,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Return type is not specified.",
        "start": {
          "row": 1777,
          "column": 5
        },
        "end": {
          "row": 1777,
          "column": 38
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1778,
          "column": 5
        },
        "end": {
          "row": 1778,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Functions default to `()` and",
        "start": {
          "row": 1779,
          "column": 5
        },
        "end": {
          "row": 1779,
          "column": 38
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// closures default to inference. Span points to where return",
        "start": {
          "row": 1780,
          "column": 5
        },
        "end": {
          "row": 1780,
          "column": 67
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// type would be inserted.",
        "start": {
          "row": 1781,
          "column": 5
        },
        "end": {
          "row": 1781,
          "column": 32
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Default(Span)",
        "start": {
          "row": 1782,
          "column": 5
        },
        "end": {
          "row": 1782,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Default",
        "start": {
          "row": 1782,
          "column": 5
        },
        "end": {
          "row": 1782,
          "column": 12
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Span)",
        "start": {
          "row": 1782,
          "column": 12
        },
        "end": {
          "row": 1782,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1782,
          "column": 13
        },
        "end": {
          "row": 1782,
          "column": 17
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Everything else",
        "start": {
          "row": 1783,
          "column": 5
        },
        "end": {
          "row": 1783,
          "column": 24
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Ty(P<Ty>)",
        "start": {
          "row": 1784,
          "column": 5
        },
        "end": {
          "row": 1784,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1784,
          "column": 5
        },
        "end": {
          "row": 1784,
          "column": 7
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Ty>)",
        "start": {
          "row": 1784,
          "column": 7
        },
        "end": {
          "row": 1784,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1784,
          "column": 8
        },
        "end": {
          "row": 1784,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1784,
          "column": 8
        },
        "end": {
          "row": 1784,
          "column": 9
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1784,
          "column": 9
        },
        "end": {
          "row": 1784,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1784,
          "column": 10
        },
        "end": {
          "row": 1784,
          "column": 12
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl FunctionRetTy {\n    pub fn span(&self) -> Span {\n        match *self {\n            FunctionRetTy::Default(span) => span,\n            FunctionRetTy::Ty(ref ty) => ty.span,\n        }\n    }\n}",
        "start": {
          "row": 1787,
          "column": 1
        },
        "end": {
          "row": 1794,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FunctionRetTy",
        "start": {
          "row": 1787,
          "column": 6
        },
        "end": {
          "row": 1787,
          "column": 19
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn span(&self) -> Span {\n        match *self {\n            FunctionRetTy::Default(span) => span,\n            FunctionRetTy::Ty(ref ty) => ty.span,\n        }\n    }\n}",
        "start": {
          "row": 1787,
          "column": 20
        },
        "end": {
          "row": 1794,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn span(&self) -> Span {\n        match *self {\n            FunctionRetTy::Default(span) => span,\n            FunctionRetTy::Ty(ref ty) => ty.span,\n        }\n    }",
        "start": {
          "row": 1788,
          "column": 5
        },
        "end": {
          "row": 1793,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1788,
          "column": 5
        },
        "end": {
          "row": 1788,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1788,
          "column": 12
        },
        "end": {
          "row": 1788,
          "column": 16
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1788,
          "column": 16
        },
        "end": {
          "row": 1788,
          "column": 23
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1788,
          "column": 17
        },
        "end": {
          "row": 1788,
          "column": 22
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1788,
          "column": 18
        },
        "end": {
          "row": 1788,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1788,
          "column": 27
        },
        "end": {
          "row": 1788,
          "column": 31
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            FunctionRetTy::Default(span) => span,\n            FunctionRetTy::Ty(ref ty) => ty.span,\n        }\n    }",
        "start": {
          "row": 1788,
          "column": 32
        },
        "end": {
          "row": 1793,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            FunctionRetTy::Default(span) => span,\n            FunctionRetTy::Ty(ref ty) => ty.span,\n        }",
        "start": {
          "row": 1789,
          "column": 9
        },
        "end": {
          "row": 1792,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1789,
          "column": 15
        },
        "end": {
          "row": 1789,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1789,
          "column": 16
        },
        "end": {
          "row": 1789,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            FunctionRetTy::Default(span) => span,\n            FunctionRetTy::Ty(ref ty) => ty.span,\n        }",
        "start": {
          "row": 1789,
          "column": 21
        },
        "end": {
          "row": 1792,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "FunctionRetTy::Default(span) => span,",
        "start": {
          "row": 1790,
          "column": 13
        },
        "end": {
          "row": 1790,
          "column": 50
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "FunctionRetTy::Default(span)",
        "start": {
          "row": 1790,
          "column": 13
        },
        "end": {
          "row": 1790,
          "column": 41
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "FunctionRetTy::Default(span)",
        "start": {
          "row": 1790,
          "column": 13
        },
        "end": {
          "row": 1790,
          "column": 41
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "FunctionRetTy::Default",
        "start": {
          "row": 1790,
          "column": 13
        },
        "end": {
          "row": 1790,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "FunctionRetTy",
        "start": {
          "row": 1790,
          "column": 13
        },
        "end": {
          "row": 1790,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Default",
        "start": {
          "row": 1790,
          "column": 28
        },
        "end": {
          "row": 1790,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1790,
          "column": 36
        },
        "end": {
          "row": 1790,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1790,
          "column": 45
        },
        "end": {
          "row": 1790,
          "column": 49
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "FunctionRetTy::Ty(ref ty) => ty.span,",
        "start": {
          "row": 1791,
          "column": 13
        },
        "end": {
          "row": 1791,
          "column": 50
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "FunctionRetTy::Ty(ref ty)",
        "start": {
          "row": 1791,
          "column": 13
        },
        "end": {
          "row": 1791,
          "column": 38
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "FunctionRetTy::Ty(ref ty)",
        "start": {
          "row": 1791,
          "column": 13
        },
        "end": {
          "row": 1791,
          "column": 38
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "FunctionRetTy::Ty",
        "start": {
          "row": 1791,
          "column": 13
        },
        "end": {
          "row": 1791,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "FunctionRetTy",
        "start": {
          "row": 1791,
          "column": 13
        },
        "end": {
          "row": 1791,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1791,
          "column": 28
        },
        "end": {
          "row": 1791,
          "column": 30
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref ty",
        "start": {
          "row": 1791,
          "column": 31
        },
        "end": {
          "row": 1791,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1791,
          "column": 35
        },
        "end": {
          "row": 1791,
          "column": 37
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "ty.span",
        "start": {
          "row": 1791,
          "column": 42
        },
        "end": {
          "row": 1791,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1791,
          "column": 42
        },
        "end": {
          "row": 1791,
          "column": 44
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1791,
          "column": 45
        },
        "end": {
          "row": 1791,
          "column": 49
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Module declaration.",
        "start": {
          "row": 1796,
          "column": 1
        },
        "end": {
          "row": 1796,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1797,
          "column": 1
        },
        "end": {
          "row": 1797,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `mod foo;` or `mod foo { .. }`",
        "start": {
          "row": 1798,
          "column": 1
        },
        "end": {
          "row": 1798,
          "column": 40
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1799,
          "column": 1
        },
        "end": {
          "row": 1799,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1799,
          "column": 3
        },
        "end": {
          "row": 1799,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1799,
          "column": 3
        },
        "end": {
          "row": 1799,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1799,
          "column": 9
        },
        "end": {
          "row": 1799,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1799,
          "column": 10
        },
        "end": {
          "row": 1799,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1799,
          "column": 10
        },
        "end": {
          "row": 1799,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1799,
          "column": 17
        },
        "end": {
          "row": 1799,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1799,
          "column": 17
        },
        "end": {
          "row": 1799,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1799,
          "column": 28
        },
        "end": {
          "row": 1799,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1799,
          "column": 28
        },
        "end": {
          "row": 1799,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1799,
          "column": 32
        },
        "end": {
          "row": 1799,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1799,
          "column": 32
        },
        "end": {
          "row": 1799,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1799,
          "column": 48
        },
        "end": {
          "row": 1799,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1799,
          "column": 48
        },
        "end": {
          "row": 1799,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1799,
          "column": 64
        },
        "end": {
          "row": 1799,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1799,
          "column": 64
        },
        "end": {
          "row": 1799,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1799,
          "column": 70
        },
        "end": {
          "row": 1799,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1799,
          "column": 70
        },
        "end": {
          "row": 1799,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Mod {\n    /// A span from the first token past `{` to the last token until `}`.\n    /// For `mod foo;`, the inner span ranges from the first token\n    /// to the last token in the external file.\n    pub inner: Span,\n    pub items: Vec<P<Item>>,\n}",
        "start": {
          "row": 1800,
          "column": 1
        },
        "end": {
          "row": 1806,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1800,
          "column": 1
        },
        "end": {
          "row": 1800,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mod",
        "start": {
          "row": 1800,
          "column": 12
        },
        "end": {
          "row": 1800,
          "column": 15
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    /// A span from the first token past `{` to the last token until `}`.\n    /// For `mod foo;`, the inner span ranges from the first token\n    /// to the last token in the external file.\n    pub inner: Span,\n    pub items: Vec<P<Item>>,\n}",
        "start": {
          "row": 1800,
          "column": 16
        },
        "end": {
          "row": 1806,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A span from the first token past `{` to the last token until `}`.",
        "start": {
          "row": 1801,
          "column": 5
        },
        "end": {
          "row": 1801,
          "column": 74
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// For `mod foo;`, the inner span ranges from the first token",
        "start": {
          "row": 1802,
          "column": 5
        },
        "end": {
          "row": 1802,
          "column": 67
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// to the last token in the external file.",
        "start": {
          "row": 1803,
          "column": 5
        },
        "end": {
          "row": 1803,
          "column": 48
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub inner: Span",
        "start": {
          "row": 1804,
          "column": 5
        },
        "end": {
          "row": 1804,
          "column": 20
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1804,
          "column": 5
        },
        "end": {
          "row": 1804,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "inner",
        "start": {
          "row": 1804,
          "column": 9
        },
        "end": {
          "row": 1804,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1804,
          "column": 16
        },
        "end": {
          "row": 1804,
          "column": 20
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub items: Vec<P<Item>>",
        "start": {
          "row": 1805,
          "column": 5
        },
        "end": {
          "row": 1805,
          "column": 28
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1805,
          "column": 5
        },
        "end": {
          "row": 1805,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "items",
        "start": {
          "row": 1805,
          "column": 9
        },
        "end": {
          "row": 1805,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<P<Item>>",
        "start": {
          "row": 1805,
          "column": 16
        },
        "end": {
          "row": 1805,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1805,
          "column": 16
        },
        "end": {
          "row": 1805,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Item>>",
        "start": {
          "row": 1805,
          "column": 19
        },
        "end": {
          "row": 1805,
          "column": 28
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Item>",
        "start": {
          "row": 1805,
          "column": 20
        },
        "end": {
          "row": 1805,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1805,
          "column": 20
        },
        "end": {
          "row": 1805,
          "column": 21
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Item>",
        "start": {
          "row": 1805,
          "column": 21
        },
        "end": {
          "row": 1805,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Item",
        "start": {
          "row": 1805,
          "column": 22
        },
        "end": {
          "row": 1805,
          "column": 26
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Foreign module declaration.",
        "start": {
          "row": 1808,
          "column": 1
        },
        "end": {
          "row": 1808,
          "column": 32
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1809,
          "column": 1
        },
        "end": {
          "row": 1809,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `extern { .. }` or `extern C { .. }`",
        "start": {
          "row": 1810,
          "column": 1
        },
        "end": {
          "row": 1810,
          "column": 46
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1811,
          "column": 1
        },
        "end": {
          "row": 1811,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1811,
          "column": 3
        },
        "end": {
          "row": 1811,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1811,
          "column": 3
        },
        "end": {
          "row": 1811,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1811,
          "column": 9
        },
        "end": {
          "row": 1811,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1811,
          "column": 10
        },
        "end": {
          "row": 1811,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1811,
          "column": 10
        },
        "end": {
          "row": 1811,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1811,
          "column": 17
        },
        "end": {
          "row": 1811,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1811,
          "column": 17
        },
        "end": {
          "row": 1811,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1811,
          "column": 28
        },
        "end": {
          "row": 1811,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1811,
          "column": 28
        },
        "end": {
          "row": 1811,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1811,
          "column": 32
        },
        "end": {
          "row": 1811,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1811,
          "column": 32
        },
        "end": {
          "row": 1811,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1811,
          "column": 48
        },
        "end": {
          "row": 1811,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1811,
          "column": 48
        },
        "end": {
          "row": 1811,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1811,
          "column": 64
        },
        "end": {
          "row": 1811,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1811,
          "column": 64
        },
        "end": {
          "row": 1811,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1811,
          "column": 70
        },
        "end": {
          "row": 1811,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1811,
          "column": 70
        },
        "end": {
          "row": 1811,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct ForeignMod {\n    pub abi: Abi,\n    pub items: Vec<ForeignItem>,\n}",
        "start": {
          "row": 1812,
          "column": 1
        },
        "end": {
          "row": 1815,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1812,
          "column": 1
        },
        "end": {
          "row": 1812,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ForeignMod",
        "start": {
          "row": 1812,
          "column": 12
        },
        "end": {
          "row": 1812,
          "column": 22
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub abi: Abi,\n    pub items: Vec<ForeignItem>,\n}",
        "start": {
          "row": 1812,
          "column": 23
        },
        "end": {
          "row": 1815,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub abi: Abi",
        "start": {
          "row": 1813,
          "column": 5
        },
        "end": {
          "row": 1813,
          "column": 17
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1813,
          "column": 5
        },
        "end": {
          "row": 1813,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "abi",
        "start": {
          "row": 1813,
          "column": 9
        },
        "end": {
          "row": 1813,
          "column": 12
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Abi",
        "start": {
          "row": 1813,
          "column": 14
        },
        "end": {
          "row": 1813,
          "column": 17
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub items: Vec<ForeignItem>",
        "start": {
          "row": 1814,
          "column": 5
        },
        "end": {
          "row": 1814,
          "column": 32
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1814,
          "column": 5
        },
        "end": {
          "row": 1814,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "items",
        "start": {
          "row": 1814,
          "column": 9
        },
        "end": {
          "row": 1814,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<ForeignItem>",
        "start": {
          "row": 1814,
          "column": 16
        },
        "end": {
          "row": 1814,
          "column": 32
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1814,
          "column": 16
        },
        "end": {
          "row": 1814,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<ForeignItem>",
        "start": {
          "row": 1814,
          "column": 19
        },
        "end": {
          "row": 1814,
          "column": 32
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ForeignItem",
        "start": {
          "row": 1814,
          "column": 20
        },
        "end": {
          "row": 1814,
          "column": 31
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Global inline assembly",
        "start": {
          "row": 1817,
          "column": 1
        },
        "end": {
          "row": 1817,
          "column": 27
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1818,
          "column": 1
        },
        "end": {
          "row": 1818,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// aka module-level assembly or file-scoped assembly",
        "start": {
          "row": 1819,
          "column": 1
        },
        "end": {
          "row": 1819,
          "column": 54
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 1820,
          "column": 1
        },
        "end": {
          "row": 1820,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1820,
          "column": 3
        },
        "end": {
          "row": 1820,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1820,
          "column": 3
        },
        "end": {
          "row": 1820,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1820,
          "column": 9
        },
        "end": {
          "row": 1820,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1820,
          "column": 10
        },
        "end": {
          "row": 1820,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1820,
          "column": 10
        },
        "end": {
          "row": 1820,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1820,
          "column": 17
        },
        "end": {
          "row": 1820,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1820,
          "column": 17
        },
        "end": {
          "row": 1820,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1820,
          "column": 28
        },
        "end": {
          "row": 1820,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1820,
          "column": 28
        },
        "end": {
          "row": 1820,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1820,
          "column": 32
        },
        "end": {
          "row": 1820,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1820,
          "column": 32
        },
        "end": {
          "row": 1820,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1820,
          "column": 48
        },
        "end": {
          "row": 1820,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1820,
          "column": 48
        },
        "end": {
          "row": 1820,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1820,
          "column": 64
        },
        "end": {
          "row": 1820,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1820,
          "column": 64
        },
        "end": {
          "row": 1820,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1820,
          "column": 70
        },
        "end": {
          "row": 1820,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1820,
          "column": 70
        },
        "end": {
          "row": 1820,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1820,
          "column": 77
        },
        "end": {
          "row": 1820,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1820,
          "column": 77
        },
        "end": {
          "row": 1820,
          "column": 81
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct GlobalAsm {\n    pub asm: Symbol,\n    pub ctxt: SyntaxContext,\n}",
        "start": {
          "row": 1821,
          "column": 1
        },
        "end": {
          "row": 1824,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1821,
          "column": 1
        },
        "end": {
          "row": 1821,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "GlobalAsm",
        "start": {
          "row": 1821,
          "column": 12
        },
        "end": {
          "row": 1821,
          "column": 21
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub asm: Symbol,\n    pub ctxt: SyntaxContext,\n}",
        "start": {
          "row": 1821,
          "column": 22
        },
        "end": {
          "row": 1824,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub asm: Symbol",
        "start": {
          "row": 1822,
          "column": 5
        },
        "end": {
          "row": 1822,
          "column": 20
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1822,
          "column": 5
        },
        "end": {
          "row": 1822,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "asm",
        "start": {
          "row": 1822,
          "column": 9
        },
        "end": {
          "row": 1822,
          "column": 12
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Symbol",
        "start": {
          "row": 1822,
          "column": 14
        },
        "end": {
          "row": 1822,
          "column": 20
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ctxt: SyntaxContext",
        "start": {
          "row": 1823,
          "column": 5
        },
        "end": {
          "row": 1823,
          "column": 28
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1823,
          "column": 5
        },
        "end": {
          "row": 1823,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ctxt",
        "start": {
          "row": 1823,
          "column": 9
        },
        "end": {
          "row": 1823,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "SyntaxContext",
        "start": {
          "row": 1823,
          "column": 15
        },
        "end": {
          "row": 1823,
          "column": 28
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1826,
          "column": 1
        },
        "end": {
          "row": 1826,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1826,
          "column": 3
        },
        "end": {
          "row": 1826,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1826,
          "column": 3
        },
        "end": {
          "row": 1826,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1826,
          "column": 9
        },
        "end": {
          "row": 1826,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1826,
          "column": 10
        },
        "end": {
          "row": 1826,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1826,
          "column": 10
        },
        "end": {
          "row": 1826,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1826,
          "column": 17
        },
        "end": {
          "row": 1826,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1826,
          "column": 17
        },
        "end": {
          "row": 1826,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1826,
          "column": 28
        },
        "end": {
          "row": 1826,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1826,
          "column": 28
        },
        "end": {
          "row": 1826,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1826,
          "column": 32
        },
        "end": {
          "row": 1826,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1826,
          "column": 32
        },
        "end": {
          "row": 1826,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1826,
          "column": 48
        },
        "end": {
          "row": 1826,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1826,
          "column": 48
        },
        "end": {
          "row": 1826,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1826,
          "column": 64
        },
        "end": {
          "row": 1826,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1826,
          "column": 64
        },
        "end": {
          "row": 1826,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1826,
          "column": 70
        },
        "end": {
          "row": 1826,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1826,
          "column": 70
        },
        "end": {
          "row": 1826,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct EnumDef {\n    pub variants: Vec<Variant>,\n}",
        "start": {
          "row": 1827,
          "column": 1
        },
        "end": {
          "row": 1829,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1827,
          "column": 1
        },
        "end": {
          "row": 1827,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "EnumDef",
        "start": {
          "row": 1827,
          "column": 12
        },
        "end": {
          "row": 1827,
          "column": 19
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub variants: Vec<Variant>,\n}",
        "start": {
          "row": 1827,
          "column": 20
        },
        "end": {
          "row": 1829,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub variants: Vec<Variant>",
        "start": {
          "row": 1828,
          "column": 5
        },
        "end": {
          "row": 1828,
          "column": 31
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1828,
          "column": 5
        },
        "end": {
          "row": 1828,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "variants",
        "start": {
          "row": 1828,
          "column": 9
        },
        "end": {
          "row": 1828,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Variant>",
        "start": {
          "row": 1828,
          "column": 19
        },
        "end": {
          "row": 1828,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1828,
          "column": 19
        },
        "end": {
          "row": 1828,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Variant>",
        "start": {
          "row": 1828,
          "column": 22
        },
        "end": {
          "row": 1828,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Variant",
        "start": {
          "row": 1828,
          "column": 23
        },
        "end": {
          "row": 1828,
          "column": 30
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1831,
          "column": 1
        },
        "end": {
          "row": 1831,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1831,
          "column": 3
        },
        "end": {
          "row": 1831,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1831,
          "column": 3
        },
        "end": {
          "row": 1831,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1831,
          "column": 9
        },
        "end": {
          "row": 1831,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1831,
          "column": 10
        },
        "end": {
          "row": 1831,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1831,
          "column": 10
        },
        "end": {
          "row": 1831,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1831,
          "column": 17
        },
        "end": {
          "row": 1831,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1831,
          "column": 17
        },
        "end": {
          "row": 1831,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1831,
          "column": 28
        },
        "end": {
          "row": 1831,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1831,
          "column": 28
        },
        "end": {
          "row": 1831,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1831,
          "column": 32
        },
        "end": {
          "row": 1831,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1831,
          "column": 32
        },
        "end": {
          "row": 1831,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1831,
          "column": 48
        },
        "end": {
          "row": 1831,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1831,
          "column": 48
        },
        "end": {
          "row": 1831,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1831,
          "column": 64
        },
        "end": {
          "row": 1831,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1831,
          "column": 64
        },
        "end": {
          "row": 1831,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1831,
          "column": 70
        },
        "end": {
          "row": 1831,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1831,
          "column": 70
        },
        "end": {
          "row": 1831,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Variant_ {\n    pub name: Ident,\n    pub attrs: Vec<Attribute>,\n    pub data: VariantData,\n    /// Explicit discriminant, e.g. `Foo = 1`\n    pub disr_expr: Option<P<Expr>>,\n}",
        "start": {
          "row": 1832,
          "column": 1
        },
        "end": {
          "row": 1838,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1832,
          "column": 1
        },
        "end": {
          "row": 1832,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Variant_",
        "start": {
          "row": 1832,
          "column": 12
        },
        "end": {
          "row": 1832,
          "column": 20
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub name: Ident,\n    pub attrs: Vec<Attribute>,\n    pub data: VariantData,\n    /// Explicit discriminant, e.g. `Foo = 1`\n    pub disr_expr: Option<P<Expr>>,\n}",
        "start": {
          "row": 1832,
          "column": 21
        },
        "end": {
          "row": 1838,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub name: Ident",
        "start": {
          "row": 1833,
          "column": 5
        },
        "end": {
          "row": 1833,
          "column": 20
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1833,
          "column": 5
        },
        "end": {
          "row": 1833,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "name",
        "start": {
          "row": 1833,
          "column": 9
        },
        "end": {
          "row": 1833,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 1833,
          "column": 15
        },
        "end": {
          "row": 1833,
          "column": 20
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: Vec<Attribute>",
        "start": {
          "row": 1834,
          "column": 5
        },
        "end": {
          "row": 1834,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1834,
          "column": 5
        },
        "end": {
          "row": 1834,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 1834,
          "column": 9
        },
        "end": {
          "row": 1834,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Attribute>",
        "start": {
          "row": 1834,
          "column": 16
        },
        "end": {
          "row": 1834,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1834,
          "column": 16
        },
        "end": {
          "row": 1834,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 1834,
          "column": 19
        },
        "end": {
          "row": 1834,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 1834,
          "column": 20
        },
        "end": {
          "row": 1834,
          "column": 29
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub data: VariantData",
        "start": {
          "row": 1835,
          "column": 5
        },
        "end": {
          "row": 1835,
          "column": 26
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1835,
          "column": 5
        },
        "end": {
          "row": 1835,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "data",
        "start": {
          "row": 1835,
          "column": 9
        },
        "end": {
          "row": 1835,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 1835,
          "column": 15
        },
        "end": {
          "row": 1835,
          "column": 26
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Explicit discriminant, e.g. `Foo = 1`",
        "start": {
          "row": 1836,
          "column": 5
        },
        "end": {
          "row": 1836,
          "column": 46
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub disr_expr: Option<P<Expr>>",
        "start": {
          "row": 1837,
          "column": 5
        },
        "end": {
          "row": 1837,
          "column": 35
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1837,
          "column": 5
        },
        "end": {
          "row": 1837,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "disr_expr",
        "start": {
          "row": 1837,
          "column": 9
        },
        "end": {
          "row": 1837,
          "column": 18
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<P<Expr>>",
        "start": {
          "row": 1837,
          "column": 20
        },
        "end": {
          "row": 1837,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1837,
          "column": 20
        },
        "end": {
          "row": 1837,
          "column": 26
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<P<Expr>>",
        "start": {
          "row": 1837,
          "column": 26
        },
        "end": {
          "row": 1837,
          "column": 35
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 1837,
          "column": 27
        },
        "end": {
          "row": 1837,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1837,
          "column": 27
        },
        "end": {
          "row": 1837,
          "column": 28
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 1837,
          "column": 28
        },
        "end": {
          "row": 1837,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 1837,
          "column": 29
        },
        "end": {
          "row": 1837,
          "column": 33
        }
      },
      {
        "kind": "type_item",
        "name": "query",
        "text": "pub type Variant = Spanned<Variant_>;",
        "start": {
          "row": 1840,
          "column": 1
        },
        "end": {
          "row": 1840,
          "column": 38
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1840,
          "column": 1
        },
        "end": {
          "row": 1840,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Variant",
        "start": {
          "row": 1840,
          "column": 10
        },
        "end": {
          "row": 1840,
          "column": 17
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Spanned<Variant_>",
        "start": {
          "row": 1840,
          "column": 20
        },
        "end": {
          "row": 1840,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Spanned",
        "start": {
          "row": 1840,
          "column": 20
        },
        "end": {
          "row": 1840,
          "column": 27
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Variant_>",
        "start": {
          "row": 1840,
          "column": 27
        },
        "end": {
          "row": 1840,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Variant_",
        "start": {
          "row": 1840,
          "column": 28
        },
        "end": {
          "row": 1840,
          "column": 36
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1842,
          "column": 1
        },
        "end": {
          "row": 1842,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1842,
          "column": 3
        },
        "end": {
          "row": 1842,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1842,
          "column": 3
        },
        "end": {
          "row": 1842,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1842,
          "column": 9
        },
        "end": {
          "row": 1842,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1842,
          "column": 10
        },
        "end": {
          "row": 1842,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1842,
          "column": 10
        },
        "end": {
          "row": 1842,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1842,
          "column": 17
        },
        "end": {
          "row": 1842,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1842,
          "column": 17
        },
        "end": {
          "row": 1842,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1842,
          "column": 28
        },
        "end": {
          "row": 1842,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1842,
          "column": 28
        },
        "end": {
          "row": 1842,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1842,
          "column": 32
        },
        "end": {
          "row": 1842,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1842,
          "column": 32
        },
        "end": {
          "row": 1842,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1842,
          "column": 48
        },
        "end": {
          "row": 1842,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1842,
          "column": 48
        },
        "end": {
          "row": 1842,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1842,
          "column": 64
        },
        "end": {
          "row": 1842,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1842,
          "column": 64
        },
        "end": {
          "row": 1842,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1842,
          "column": 70
        },
        "end": {
          "row": 1842,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1842,
          "column": 70
        },
        "end": {
          "row": 1842,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum UseTreeKind {\n    Simple(Ident),\n    Glob,\n    Nested(Vec<(UseTree, NodeId)>),\n}",
        "start": {
          "row": 1843,
          "column": 1
        },
        "end": {
          "row": 1847,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1843,
          "column": 1
        },
        "end": {
          "row": 1843,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UseTreeKind",
        "start": {
          "row": 1843,
          "column": 10
        },
        "end": {
          "row": 1843,
          "column": 21
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Simple(Ident),\n    Glob,\n    Nested(Vec<(UseTree, NodeId)>),\n}",
        "start": {
          "row": 1843,
          "column": 22
        },
        "end": {
          "row": 1847,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Simple(Ident)",
        "start": {
          "row": 1844,
          "column": 5
        },
        "end": {
          "row": 1844,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Simple",
        "start": {
          "row": 1844,
          "column": 5
        },
        "end": {
          "row": 1844,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Ident)",
        "start": {
          "row": 1844,
          "column": 11
        },
        "end": {
          "row": 1844,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 1844,
          "column": 12
        },
        "end": {
          "row": 1844,
          "column": 17
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Glob",
        "start": {
          "row": 1845,
          "column": 5
        },
        "end": {
          "row": 1845,
          "column": 9
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Glob",
        "start": {
          "row": 1845,
          "column": 5
        },
        "end": {
          "row": 1845,
          "column": 9
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Nested(Vec<(UseTree, NodeId)>)",
        "start": {
          "row": 1846,
          "column": 5
        },
        "end": {
          "row": 1846,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Nested",
        "start": {
          "row": 1846,
          "column": 5
        },
        "end": {
          "row": 1846,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Vec<(UseTree, NodeId)>)",
        "start": {
          "row": 1846,
          "column": 11
        },
        "end": {
          "row": 1846,
          "column": 35
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<(UseTree, NodeId)>",
        "start": {
          "row": 1846,
          "column": 12
        },
        "end": {
          "row": 1846,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1846,
          "column": 12
        },
        "end": {
          "row": 1846,
          "column": 15
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<(UseTree, NodeId)>",
        "start": {
          "row": 1846,
          "column": 15
        },
        "end": {
          "row": 1846,
          "column": 34
        }
      },
      {
        "kind": "tuple_type",
        "name": "query",
        "text": "(UseTree, NodeId)",
        "start": {
          "row": 1846,
          "column": 16
        },
        "end": {
          "row": 1846,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UseTree",
        "start": {
          "row": 1846,
          "column": 17
        },
        "end": {
          "row": 1846,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1846,
          "column": 26
        },
        "end": {
          "row": 1846,
          "column": 32
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1849,
          "column": 1
        },
        "end": {
          "row": 1849,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1849,
          "column": 3
        },
        "end": {
          "row": 1849,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1849,
          "column": 3
        },
        "end": {
          "row": 1849,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1849,
          "column": 9
        },
        "end": {
          "row": 1849,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1849,
          "column": 10
        },
        "end": {
          "row": 1849,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1849,
          "column": 10
        },
        "end": {
          "row": 1849,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1849,
          "column": 17
        },
        "end": {
          "row": 1849,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1849,
          "column": 17
        },
        "end": {
          "row": 1849,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1849,
          "column": 28
        },
        "end": {
          "row": 1849,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1849,
          "column": 28
        },
        "end": {
          "row": 1849,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1849,
          "column": 32
        },
        "end": {
          "row": 1849,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1849,
          "column": 32
        },
        "end": {
          "row": 1849,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1849,
          "column": 48
        },
        "end": {
          "row": 1849,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1849,
          "column": 48
        },
        "end": {
          "row": 1849,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1849,
          "column": 64
        },
        "end": {
          "row": 1849,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1849,
          "column": 64
        },
        "end": {
          "row": 1849,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1849,
          "column": 70
        },
        "end": {
          "row": 1849,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1849,
          "column": 70
        },
        "end": {
          "row": 1849,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct UseTree {\n    pub kind: UseTreeKind,\n    pub prefix: Path,\n    pub span: Span,\n}",
        "start": {
          "row": 1850,
          "column": 1
        },
        "end": {
          "row": 1854,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1850,
          "column": 1
        },
        "end": {
          "row": 1850,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UseTree",
        "start": {
          "row": 1850,
          "column": 12
        },
        "end": {
          "row": 1850,
          "column": 19
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub kind: UseTreeKind,\n    pub prefix: Path,\n    pub span: Span,\n}",
        "start": {
          "row": 1850,
          "column": 20
        },
        "end": {
          "row": 1854,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub kind: UseTreeKind",
        "start": {
          "row": 1851,
          "column": 5
        },
        "end": {
          "row": 1851,
          "column": 26
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1851,
          "column": 5
        },
        "end": {
          "row": 1851,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "kind",
        "start": {
          "row": 1851,
          "column": 9
        },
        "end": {
          "row": 1851,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UseTreeKind",
        "start": {
          "row": 1851,
          "column": 15
        },
        "end": {
          "row": 1851,
          "column": 26
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub prefix: Path",
        "start": {
          "row": 1852,
          "column": 5
        },
        "end": {
          "row": 1852,
          "column": 21
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1852,
          "column": 5
        },
        "end": {
          "row": 1852,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "prefix",
        "start": {
          "row": 1852,
          "column": 9
        },
        "end": {
          "row": 1852,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1852,
          "column": 17
        },
        "end": {
          "row": 1852,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 1853,
          "column": 5
        },
        "end": {
          "row": 1853,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1853,
          "column": 5
        },
        "end": {
          "row": 1853,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1853,
          "column": 9
        },
        "end": {
          "row": 1853,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1853,
          "column": 15
        },
        "end": {
          "row": 1853,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Distinguishes between Attributes that decorate items and Attributes that",
        "start": {
          "row": 1856,
          "column": 1
        },
        "end": {
          "row": 1856,
          "column": 77
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// are contained as statements within items. These two cases need to be",
        "start": {
          "row": 1857,
          "column": 1
        },
        "end": {
          "row": 1857,
          "column": 73
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// distinguished for pretty-printing.",
        "start": {
          "row": 1858,
          "column": 1
        },
        "end": {
          "row": 1858,
          "column": 39
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 1859,
          "column": 1
        },
        "end": {
          "row": 1859,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1859,
          "column": 3
        },
        "end": {
          "row": 1859,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1859,
          "column": 3
        },
        "end": {
          "row": 1859,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1859,
          "column": 9
        },
        "end": {
          "row": 1859,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1859,
          "column": 10
        },
        "end": {
          "row": 1859,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1859,
          "column": 10
        },
        "end": {
          "row": 1859,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1859,
          "column": 17
        },
        "end": {
          "row": 1859,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1859,
          "column": 17
        },
        "end": {
          "row": 1859,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1859,
          "column": 28
        },
        "end": {
          "row": 1859,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1859,
          "column": 28
        },
        "end": {
          "row": 1859,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1859,
          "column": 32
        },
        "end": {
          "row": 1859,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1859,
          "column": 32
        },
        "end": {
          "row": 1859,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1859,
          "column": 48
        },
        "end": {
          "row": 1859,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1859,
          "column": 48
        },
        "end": {
          "row": 1859,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1859,
          "column": 64
        },
        "end": {
          "row": 1859,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1859,
          "column": 64
        },
        "end": {
          "row": 1859,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1859,
          "column": 70
        },
        "end": {
          "row": 1859,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1859,
          "column": 70
        },
        "end": {
          "row": 1859,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1859,
          "column": 77
        },
        "end": {
          "row": 1859,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1859,
          "column": 77
        },
        "end": {
          "row": 1859,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum AttrStyle {\n    Outer,\n    Inner,\n}",
        "start": {
          "row": 1860,
          "column": 1
        },
        "end": {
          "row": 1863,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1860,
          "column": 1
        },
        "end": {
          "row": 1860,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "AttrStyle",
        "start": {
          "row": 1860,
          "column": 10
        },
        "end": {
          "row": 1860,
          "column": 19
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Outer,\n    Inner,\n}",
        "start": {
          "row": 1860,
          "column": 20
        },
        "end": {
          "row": 1863,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Outer",
        "start": {
          "row": 1861,
          "column": 5
        },
        "end": {
          "row": 1861,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Outer",
        "start": {
          "row": 1861,
          "column": 5
        },
        "end": {
          "row": 1861,
          "column": 10
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Inner",
        "start": {
          "row": 1862,
          "column": 5
        },
        "end": {
          "row": 1862,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Inner",
        "start": {
          "row": 1862,
          "column": 5
        },
        "end": {
          "row": 1862,
          "column": 10
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]",
        "start": {
          "row": 1865,
          "column": 1
        },
        "end": {
          "row": 1865,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1865,
          "column": 3
        },
        "end": {
          "row": 1865,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1865,
          "column": 3
        },
        "end": {
          "row": 1865,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)",
        "start": {
          "row": 1865,
          "column": 9
        },
        "end": {
          "row": 1865,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1865,
          "column": 10
        },
        "end": {
          "row": 1865,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1865,
          "column": 10
        },
        "end": {
          "row": 1865,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1865,
          "column": 17
        },
        "end": {
          "row": 1865,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1865,
          "column": 17
        },
        "end": {
          "row": 1865,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1865,
          "column": 28
        },
        "end": {
          "row": 1865,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1865,
          "column": 28
        },
        "end": {
          "row": 1865,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1865,
          "column": 32
        },
        "end": {
          "row": 1865,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1865,
          "column": 32
        },
        "end": {
          "row": 1865,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1865,
          "column": 48
        },
        "end": {
          "row": 1865,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1865,
          "column": 48
        },
        "end": {
          "row": 1865,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1865,
          "column": 64
        },
        "end": {
          "row": 1865,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1865,
          "column": 64
        },
        "end": {
          "row": 1865,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1865,
          "column": 70
        },
        "end": {
          "row": 1865,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1865,
          "column": 70
        },
        "end": {
          "row": 1865,
          "column": 75
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1865,
          "column": 77
        },
        "end": {
          "row": 1865,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1865,
          "column": 77
        },
        "end": {
          "row": 1865,
          "column": 81
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct AttrId(pub usize);",
        "start": {
          "row": 1866,
          "column": 1
        },
        "end": {
          "row": 1866,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1866,
          "column": 1
        },
        "end": {
          "row": 1866,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "AttrId",
        "start": {
          "row": 1866,
          "column": 12
        },
        "end": {
          "row": 1866,
          "column": 18
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(pub usize)",
        "start": {
          "row": 1866,
          "column": 18
        },
        "end": {
          "row": 1866,
          "column": 29
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1866,
          "column": 19
        },
        "end": {
          "row": 1866,
          "column": 22
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "usize",
        "start": {
          "row": 1866,
          "column": 23
        },
        "end": {
          "row": 1866,
          "column": 28
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Meta-data associated with an item",
        "start": {
          "row": 1868,
          "column": 1
        },
        "end": {
          "row": 1868,
          "column": 38
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Doc-comments are promoted to attributes that have is_sugared_doc = true",
        "start": {
          "row": 1869,
          "column": 1
        },
        "end": {
          "row": 1869,
          "column": 76
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1870,
          "column": 1
        },
        "end": {
          "row": 1870,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1870,
          "column": 3
        },
        "end": {
          "row": 1870,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1870,
          "column": 3
        },
        "end": {
          "row": 1870,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1870,
          "column": 9
        },
        "end": {
          "row": 1870,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1870,
          "column": 10
        },
        "end": {
          "row": 1870,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1870,
          "column": 10
        },
        "end": {
          "row": 1870,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1870,
          "column": 17
        },
        "end": {
          "row": 1870,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1870,
          "column": 17
        },
        "end": {
          "row": 1870,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1870,
          "column": 28
        },
        "end": {
          "row": 1870,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1870,
          "column": 28
        },
        "end": {
          "row": 1870,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1870,
          "column": 32
        },
        "end": {
          "row": 1870,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1870,
          "column": 32
        },
        "end": {
          "row": 1870,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1870,
          "column": 48
        },
        "end": {
          "row": 1870,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1870,
          "column": 48
        },
        "end": {
          "row": 1870,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1870,
          "column": 64
        },
        "end": {
          "row": 1870,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1870,
          "column": 64
        },
        "end": {
          "row": 1870,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1870,
          "column": 70
        },
        "end": {
          "row": 1870,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1870,
          "column": 70
        },
        "end": {
          "row": 1870,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Attribute {\n    pub id: AttrId,\n    pub style: AttrStyle,\n    pub path: Path,\n    pub tokens: TokenStream,\n    pub is_sugared_doc: bool,\n    pub span: Span,\n}",
        "start": {
          "row": 1871,
          "column": 1
        },
        "end": {
          "row": 1878,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1871,
          "column": 1
        },
        "end": {
          "row": 1871,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 1871,
          "column": 12
        },
        "end": {
          "row": 1871,
          "column": 21
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub id: AttrId,\n    pub style: AttrStyle,\n    pub path: Path,\n    pub tokens: TokenStream,\n    pub is_sugared_doc: bool,\n    pub span: Span,\n}",
        "start": {
          "row": 1871,
          "column": 22
        },
        "end": {
          "row": 1878,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: AttrId",
        "start": {
          "row": 1872,
          "column": 5
        },
        "end": {
          "row": 1872,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1872,
          "column": 5
        },
        "end": {
          "row": 1872,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1872,
          "column": 9
        },
        "end": {
          "row": 1872,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "AttrId",
        "start": {
          "row": 1872,
          "column": 13
        },
        "end": {
          "row": 1872,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub style: AttrStyle",
        "start": {
          "row": 1873,
          "column": 5
        },
        "end": {
          "row": 1873,
          "column": 25
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1873,
          "column": 5
        },
        "end": {
          "row": 1873,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "style",
        "start": {
          "row": 1873,
          "column": 9
        },
        "end": {
          "row": 1873,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "AttrStyle",
        "start": {
          "row": 1873,
          "column": 16
        },
        "end": {
          "row": 1873,
          "column": 25
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub path: Path",
        "start": {
          "row": 1874,
          "column": 5
        },
        "end": {
          "row": 1874,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1874,
          "column": 5
        },
        "end": {
          "row": 1874,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 1874,
          "column": 9
        },
        "end": {
          "row": 1874,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1874,
          "column": 15
        },
        "end": {
          "row": 1874,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub tokens: TokenStream",
        "start": {
          "row": 1875,
          "column": 5
        },
        "end": {
          "row": 1875,
          "column": 28
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1875,
          "column": 5
        },
        "end": {
          "row": 1875,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "tokens",
        "start": {
          "row": 1875,
          "column": 9
        },
        "end": {
          "row": 1875,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TokenStream",
        "start": {
          "row": 1875,
          "column": 17
        },
        "end": {
          "row": 1875,
          "column": 28
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub is_sugared_doc: bool",
        "start": {
          "row": 1876,
          "column": 5
        },
        "end": {
          "row": 1876,
          "column": 29
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1876,
          "column": 5
        },
        "end": {
          "row": 1876,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "is_sugared_doc",
        "start": {
          "row": 1876,
          "column": 9
        },
        "end": {
          "row": 1876,
          "column": 23
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1876,
          "column": 25
        },
        "end": {
          "row": 1876,
          "column": 29
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 1877,
          "column": 5
        },
        "end": {
          "row": 1877,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1877,
          "column": 5
        },
        "end": {
          "row": 1877,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1877,
          "column": 9
        },
        "end": {
          "row": 1877,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1877,
          "column": 15
        },
        "end": {
          "row": 1877,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// TraitRef's appear in impls.",
        "start": {
          "row": 1880,
          "column": 1
        },
        "end": {
          "row": 1880,
          "column": 32
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1881,
          "column": 1
        },
        "end": {
          "row": 1881,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// resolve maps each TraitRef's ref_id to its defining trait; that's all",
        "start": {
          "row": 1882,
          "column": 1
        },
        "end": {
          "row": 1882,
          "column": 74
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// that the ref_id is for. The impl_id maps to the \"self type\" of this impl.",
        "start": {
          "row": 1883,
          "column": 1
        },
        "end": {
          "row": 1883,
          "column": 78
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// If this impl is an ItemKind::Impl, the impl_id is redundant (it could be the",
        "start": {
          "row": 1884,
          "column": 1
        },
        "end": {
          "row": 1884,
          "column": 81
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// same as the impl's node id).",
        "start": {
          "row": 1885,
          "column": 1
        },
        "end": {
          "row": 1885,
          "column": 33
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1886,
          "column": 1
        },
        "end": {
          "row": 1886,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1886,
          "column": 3
        },
        "end": {
          "row": 1886,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1886,
          "column": 3
        },
        "end": {
          "row": 1886,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1886,
          "column": 9
        },
        "end": {
          "row": 1886,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1886,
          "column": 10
        },
        "end": {
          "row": 1886,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1886,
          "column": 10
        },
        "end": {
          "row": 1886,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1886,
          "column": 17
        },
        "end": {
          "row": 1886,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1886,
          "column": 17
        },
        "end": {
          "row": 1886,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1886,
          "column": 28
        },
        "end": {
          "row": 1886,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1886,
          "column": 28
        },
        "end": {
          "row": 1886,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1886,
          "column": 32
        },
        "end": {
          "row": 1886,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1886,
          "column": 32
        },
        "end": {
          "row": 1886,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1886,
          "column": 48
        },
        "end": {
          "row": 1886,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1886,
          "column": 48
        },
        "end": {
          "row": 1886,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1886,
          "column": 64
        },
        "end": {
          "row": 1886,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1886,
          "column": 64
        },
        "end": {
          "row": 1886,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1886,
          "column": 70
        },
        "end": {
          "row": 1886,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1886,
          "column": 70
        },
        "end": {
          "row": 1886,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct TraitRef {\n    pub path: Path,\n    pub ref_id: NodeId,\n}",
        "start": {
          "row": 1887,
          "column": 1
        },
        "end": {
          "row": 1890,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1887,
          "column": 1
        },
        "end": {
          "row": 1887,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TraitRef",
        "start": {
          "row": 1887,
          "column": 12
        },
        "end": {
          "row": 1887,
          "column": 20
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub path: Path,\n    pub ref_id: NodeId,\n}",
        "start": {
          "row": 1887,
          "column": 21
        },
        "end": {
          "row": 1890,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub path: Path",
        "start": {
          "row": 1888,
          "column": 5
        },
        "end": {
          "row": 1888,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1888,
          "column": 5
        },
        "end": {
          "row": 1888,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 1888,
          "column": 9
        },
        "end": {
          "row": 1888,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1888,
          "column": 15
        },
        "end": {
          "row": 1888,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ref_id: NodeId",
        "start": {
          "row": 1889,
          "column": 5
        },
        "end": {
          "row": 1889,
          "column": 23
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1889,
          "column": 5
        },
        "end": {
          "row": 1889,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ref_id",
        "start": {
          "row": 1889,
          "column": 9
        },
        "end": {
          "row": 1889,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1889,
          "column": 17
        },
        "end": {
          "row": 1889,
          "column": 23
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1892,
          "column": 1
        },
        "end": {
          "row": 1892,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1892,
          "column": 3
        },
        "end": {
          "row": 1892,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1892,
          "column": 3
        },
        "end": {
          "row": 1892,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1892,
          "column": 9
        },
        "end": {
          "row": 1892,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1892,
          "column": 10
        },
        "end": {
          "row": 1892,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1892,
          "column": 10
        },
        "end": {
          "row": 1892,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1892,
          "column": 17
        },
        "end": {
          "row": 1892,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1892,
          "column": 17
        },
        "end": {
          "row": 1892,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1892,
          "column": 28
        },
        "end": {
          "row": 1892,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1892,
          "column": 28
        },
        "end": {
          "row": 1892,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1892,
          "column": 32
        },
        "end": {
          "row": 1892,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1892,
          "column": 32
        },
        "end": {
          "row": 1892,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1892,
          "column": 48
        },
        "end": {
          "row": 1892,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1892,
          "column": 48
        },
        "end": {
          "row": 1892,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1892,
          "column": 64
        },
        "end": {
          "row": 1892,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1892,
          "column": 64
        },
        "end": {
          "row": 1892,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1892,
          "column": 70
        },
        "end": {
          "row": 1892,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1892,
          "column": 70
        },
        "end": {
          "row": 1892,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct PolyTraitRef {\n    /// The `'a` in `<'a> Foo<&'a T>`\n    pub bound_generic_params: Vec<GenericParam>,\n\n    /// The `Foo<&'a T>` in `<'a> Foo<&'a T>`\n    pub trait_ref: TraitRef,\n\n    pub span: Span,\n}",
        "start": {
          "row": 1893,
          "column": 1
        },
        "end": {
          "row": 1901,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1893,
          "column": 1
        },
        "end": {
          "row": 1893,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PolyTraitRef",
        "start": {
          "row": 1893,
          "column": 12
        },
        "end": {
          "row": 1893,
          "column": 24
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    /// The `'a` in `<'a> Foo<&'a T>`\n    pub bound_generic_params: Vec<GenericParam>,\n\n    /// The `Foo<&'a T>` in `<'a> Foo<&'a T>`\n    pub trait_ref: TraitRef,\n\n    pub span: Span,\n}",
        "start": {
          "row": 1893,
          "column": 25
        },
        "end": {
          "row": 1901,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `'a` in `<'a> Foo<&'a T>`",
        "start": {
          "row": 1894,
          "column": 5
        },
        "end": {
          "row": 1894,
          "column": 38
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub bound_generic_params: Vec<GenericParam>",
        "start": {
          "row": 1895,
          "column": 5
        },
        "end": {
          "row": 1895,
          "column": 48
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1895,
          "column": 5
        },
        "end": {
          "row": 1895,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "bound_generic_params",
        "start": {
          "row": 1895,
          "column": 9
        },
        "end": {
          "row": 1895,
          "column": 29
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<GenericParam>",
        "start": {
          "row": 1895,
          "column": 31
        },
        "end": {
          "row": 1895,
          "column": 48
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1895,
          "column": 31
        },
        "end": {
          "row": 1895,
          "column": 34
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<GenericParam>",
        "start": {
          "row": 1895,
          "column": 34
        },
        "end": {
          "row": 1895,
          "column": 48
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "GenericParam",
        "start": {
          "row": 1895,
          "column": 35
        },
        "end": {
          "row": 1895,
          "column": 47
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The `Foo<&'a T>` in `<'a> Foo<&'a T>`",
        "start": {
          "row": 1897,
          "column": 5
        },
        "end": {
          "row": 1897,
          "column": 46
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub trait_ref: TraitRef",
        "start": {
          "row": 1898,
          "column": 5
        },
        "end": {
          "row": 1898,
          "column": 28
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1898,
          "column": 5
        },
        "end": {
          "row": 1898,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "trait_ref",
        "start": {
          "row": 1898,
          "column": 9
        },
        "end": {
          "row": 1898,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TraitRef",
        "start": {
          "row": 1898,
          "column": 20
        },
        "end": {
          "row": 1898,
          "column": 28
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 1900,
          "column": 5
        },
        "end": {
          "row": 1900,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1900,
          "column": 5
        },
        "end": {
          "row": 1900,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1900,
          "column": 9
        },
        "end": {
          "row": 1900,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1900,
          "column": 15
        },
        "end": {
          "row": 1900,
          "column": 19
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl PolyTraitRef {\n    pub fn new(generic_params: Vec<GenericParam>, path: Path, span: Span) -> Self {\n        PolyTraitRef {\n            bound_generic_params: generic_params,\n            trait_ref: TraitRef { path: path, ref_id: DUMMY_NODE_ID },\n            span,\n        }\n    }\n}",
        "start": {
          "row": 1903,
          "column": 1
        },
        "end": {
          "row": 1911,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PolyTraitRef",
        "start": {
          "row": 1903,
          "column": 6
        },
        "end": {
          "row": 1903,
          "column": 18
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn new(generic_params: Vec<GenericParam>, path: Path, span: Span) -> Self {\n        PolyTraitRef {\n            bound_generic_params: generic_params,\n            trait_ref: TraitRef { path: path, ref_id: DUMMY_NODE_ID },\n            span,\n        }\n    }\n}",
        "start": {
          "row": 1903,
          "column": 19
        },
        "end": {
          "row": 1911,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn new(generic_params: Vec<GenericParam>, path: Path, span: Span) -> Self {\n        PolyTraitRef {\n            bound_generic_params: generic_params,\n            trait_ref: TraitRef { path: path, ref_id: DUMMY_NODE_ID },\n            span,\n        }\n    }",
        "start": {
          "row": 1904,
          "column": 5
        },
        "end": {
          "row": 1910,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1904,
          "column": 5
        },
        "end": {
          "row": 1904,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 1904,
          "column": 12
        },
        "end": {
          "row": 1904,
          "column": 15
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(generic_params: Vec<GenericParam>, path: Path, span: Span)",
        "start": {
          "row": 1904,
          "column": 15
        },
        "end": {
          "row": 1904,
          "column": 74
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "generic_params: Vec<GenericParam>",
        "start": {
          "row": 1904,
          "column": 16
        },
        "end": {
          "row": 1904,
          "column": 49
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "generic_params",
        "start": {
          "row": 1904,
          "column": 16
        },
        "end": {
          "row": 1904,
          "column": 30
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<GenericParam>",
        "start": {
          "row": 1904,
          "column": 32
        },
        "end": {
          "row": 1904,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1904,
          "column": 32
        },
        "end": {
          "row": 1904,
          "column": 35
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<GenericParam>",
        "start": {
          "row": 1904,
          "column": 35
        },
        "end": {
          "row": 1904,
          "column": 49
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "GenericParam",
        "start": {
          "row": 1904,
          "column": 36
        },
        "end": {
          "row": 1904,
          "column": 48
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "path: Path",
        "start": {
          "row": 1904,
          "column": 51
        },
        "end": {
          "row": 1904,
          "column": 61
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 1904,
          "column": 51
        },
        "end": {
          "row": 1904,
          "column": 55
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1904,
          "column": 57
        },
        "end": {
          "row": 1904,
          "column": 61
        }
      },
      {
        "kind": "parameter",
        "name": "query",
        "text": "span: Span",
        "start": {
          "row": 1904,
          "column": 63
        },
        "end": {
          "row": 1904,
          "column": 73
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1904,
          "column": 63
        },
        "end": {
          "row": 1904,
          "column": 67
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1904,
          "column": 69
        },
        "end": {
          "row": 1904,
          "column": 73
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Self",
        "start": {
          "row": 1904,
          "column": 78
        },
        "end": {
          "row": 1904,
          "column": 82
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        PolyTraitRef {\n            bound_generic_params: generic_params,\n            trait_ref: TraitRef { path: path, ref_id: DUMMY_NODE_ID },\n            span,\n        }\n    }",
        "start": {
          "row": 1904,
          "column": 83
        },
        "end": {
          "row": 1910,
          "column": 6
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "PolyTraitRef {\n            bound_generic_params: generic_params,\n            trait_ref: TraitRef { path: path, ref_id: DUMMY_NODE_ID },\n            span,\n        }",
        "start": {
          "row": 1905,
          "column": 9
        },
        "end": {
          "row": 1909,
          "column": 10
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "PolyTraitRef",
        "start": {
          "row": 1905,
          "column": 9
        },
        "end": {
          "row": 1905,
          "column": 21
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{\n            bound_generic_params: generic_params,\n            trait_ref: TraitRef { path: path, ref_id: DUMMY_NODE_ID },\n            span,\n        }",
        "start": {
          "row": 1905,
          "column": 22
        },
        "end": {
          "row": 1909,
          "column": 10
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "bound_generic_params: generic_params",
        "start": {
          "row": 1906,
          "column": 13
        },
        "end": {
          "row": 1906,
          "column": 49
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "bound_generic_params",
        "start": {
          "row": 1906,
          "column": 13
        },
        "end": {
          "row": 1906,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "generic_params",
        "start": {
          "row": 1906,
          "column": 35
        },
        "end": {
          "row": 1906,
          "column": 49
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "trait_ref: TraitRef { path: path, ref_id: DUMMY_NODE_ID }",
        "start": {
          "row": 1907,
          "column": 13
        },
        "end": {
          "row": 1907,
          "column": 70
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "trait_ref",
        "start": {
          "row": 1907,
          "column": 13
        },
        "end": {
          "row": 1907,
          "column": 22
        }
      },
      {
        "kind": "struct_expression",
        "name": "query",
        "text": "TraitRef { path: path, ref_id: DUMMY_NODE_ID }",
        "start": {
          "row": 1907,
          "column": 24
        },
        "end": {
          "row": 1907,
          "column": 70
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TraitRef",
        "start": {
          "row": 1907,
          "column": 24
        },
        "end": {
          "row": 1907,
          "column": 32
        }
      },
      {
        "kind": "field_initializer_list",
        "name": "query",
        "text": "{ path: path, ref_id: DUMMY_NODE_ID }",
        "start": {
          "row": 1907,
          "column": 33
        },
        "end": {
          "row": 1907,
          "column": 70
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "path: path",
        "start": {
          "row": 1907,
          "column": 35
        },
        "end": {
          "row": 1907,
          "column": 45
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 1907,
          "column": 35
        },
        "end": {
          "row": 1907,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 1907,
          "column": 41
        },
        "end": {
          "row": 1907,
          "column": 45
        }
      },
      {
        "kind": "field_initializer",
        "name": "query",
        "text": "ref_id: DUMMY_NODE_ID",
        "start": {
          "row": 1907,
          "column": 47
        },
        "end": {
          "row": 1907,
          "column": 68
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ref_id",
        "start": {
          "row": 1907,
          "column": 47
        },
        "end": {
          "row": 1907,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "DUMMY_NODE_ID",
        "start": {
          "row": 1907,
          "column": 55
        },
        "end": {
          "row": 1907,
          "column": 68
        }
      },
      {
        "kind": "shorthand_field_initializer",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1908,
          "column": 13
        },
        "end": {
          "row": 1908,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1908,
          "column": 13
        },
        "end": {
          "row": 1908,
          "column": 17
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1913,
          "column": 1
        },
        "end": {
          "row": 1913,
          "column": 83
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1913,
          "column": 3
        },
        "end": {
          "row": 1913,
          "column": 82
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1913,
          "column": 3
        },
        "end": {
          "row": 1913,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Copy, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1913,
          "column": 9
        },
        "end": {
          "row": 1913,
          "column": 82
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1913,
          "column": 10
        },
        "end": {
          "row": 1913,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Copy",
        "start": {
          "row": 1913,
          "column": 10
        },
        "end": {
          "row": 1913,
          "column": 14
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1913,
          "column": 16
        },
        "end": {
          "row": 1913,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1913,
          "column": 16
        },
        "end": {
          "row": 1913,
          "column": 21
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1913,
          "column": 23
        },
        "end": {
          "row": 1913,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1913,
          "column": 23
        },
        "end": {
          "row": 1913,
          "column": 32
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1913,
          "column": 34
        },
        "end": {
          "row": 1913,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1913,
          "column": 34
        },
        "end": {
          "row": 1913,
          "column": 36
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1913,
          "column": 38
        },
        "end": {
          "row": 1913,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1913,
          "column": 38
        },
        "end": {
          "row": 1913,
          "column": 52
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1913,
          "column": 54
        },
        "end": {
          "row": 1913,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1913,
          "column": 54
        },
        "end": {
          "row": 1913,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1913,
          "column": 70
        },
        "end": {
          "row": 1913,
          "column": 74
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1913,
          "column": 70
        },
        "end": {
          "row": 1913,
          "column": 74
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1913,
          "column": 76
        },
        "end": {
          "row": 1913,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1913,
          "column": 76
        },
        "end": {
          "row": 1913,
          "column": 81
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum CrateSugar {\n    /// Source is `pub(crate)`\n    PubCrate,\n\n    /// Source is (just) `crate`\n    JustCrate,\n}",
        "start": {
          "row": 1914,
          "column": 1
        },
        "end": {
          "row": 1920,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1914,
          "column": 1
        },
        "end": {
          "row": 1914,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "CrateSugar",
        "start": {
          "row": 1914,
          "column": 10
        },
        "end": {
          "row": 1914,
          "column": 20
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// Source is `pub(crate)`\n    PubCrate,\n\n    /// Source is (just) `crate`\n    JustCrate,\n}",
        "start": {
          "row": 1914,
          "column": 21
        },
        "end": {
          "row": 1920,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Source is `pub(crate)`",
        "start": {
          "row": 1915,
          "column": 5
        },
        "end": {
          "row": 1915,
          "column": 31
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "PubCrate",
        "start": {
          "row": 1916,
          "column": 5
        },
        "end": {
          "row": 1916,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PubCrate",
        "start": {
          "row": 1916,
          "column": 5
        },
        "end": {
          "row": 1916,
          "column": 13
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Source is (just) `crate`",
        "start": {
          "row": 1918,
          "column": 5
        },
        "end": {
          "row": 1918,
          "column": 33
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "JustCrate",
        "start": {
          "row": 1919,
          "column": 5
        },
        "end": {
          "row": 1919,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "JustCrate",
        "start": {
          "row": 1919,
          "column": 5
        },
        "end": {
          "row": 1919,
          "column": 14
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1922,
          "column": 1
        },
        "end": {
          "row": 1922,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1922,
          "column": 3
        },
        "end": {
          "row": 1922,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1922,
          "column": 3
        },
        "end": {
          "row": 1922,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1922,
          "column": 9
        },
        "end": {
          "row": 1922,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1922,
          "column": 10
        },
        "end": {
          "row": 1922,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1922,
          "column": 10
        },
        "end": {
          "row": 1922,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1922,
          "column": 17
        },
        "end": {
          "row": 1922,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1922,
          "column": 17
        },
        "end": {
          "row": 1922,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1922,
          "column": 28
        },
        "end": {
          "row": 1922,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1922,
          "column": 28
        },
        "end": {
          "row": 1922,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1922,
          "column": 32
        },
        "end": {
          "row": 1922,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1922,
          "column": 32
        },
        "end": {
          "row": 1922,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1922,
          "column": 48
        },
        "end": {
          "row": 1922,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1922,
          "column": 48
        },
        "end": {
          "row": 1922,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1922,
          "column": 64
        },
        "end": {
          "row": 1922,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1922,
          "column": 64
        },
        "end": {
          "row": 1922,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1922,
          "column": 70
        },
        "end": {
          "row": 1922,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1922,
          "column": 70
        },
        "end": {
          "row": 1922,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum Visibility {\n    Public,\n    Crate(Span, CrateSugar),\n    Restricted { path: P<Path>, id: NodeId },\n    Inherited,\n}",
        "start": {
          "row": 1923,
          "column": 1
        },
        "end": {
          "row": 1928,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1923,
          "column": 1
        },
        "end": {
          "row": 1923,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Visibility",
        "start": {
          "row": 1923,
          "column": 10
        },
        "end": {
          "row": 1923,
          "column": 20
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    Public,\n    Crate(Span, CrateSugar),\n    Restricted { path: P<Path>, id: NodeId },\n    Inherited,\n}",
        "start": {
          "row": 1923,
          "column": 21
        },
        "end": {
          "row": 1928,
          "column": 2
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Public",
        "start": {
          "row": 1924,
          "column": 5
        },
        "end": {
          "row": 1924,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Public",
        "start": {
          "row": 1924,
          "column": 5
        },
        "end": {
          "row": 1924,
          "column": 11
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Crate(Span, CrateSugar)",
        "start": {
          "row": 1925,
          "column": 5
        },
        "end": {
          "row": 1925,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Crate",
        "start": {
          "row": 1925,
          "column": 5
        },
        "end": {
          "row": 1925,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Span, CrateSugar)",
        "start": {
          "row": 1925,
          "column": 10
        },
        "end": {
          "row": 1925,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1925,
          "column": 11
        },
        "end": {
          "row": 1925,
          "column": 15
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "CrateSugar",
        "start": {
          "row": 1925,
          "column": 17
        },
        "end": {
          "row": 1925,
          "column": 27
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Restricted { path: P<Path>, id: NodeId }",
        "start": {
          "row": 1926,
          "column": 5
        },
        "end": {
          "row": 1926,
          "column": 45
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Restricted",
        "start": {
          "row": 1926,
          "column": 5
        },
        "end": {
          "row": 1926,
          "column": 15
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{ path: P<Path>, id: NodeId }",
        "start": {
          "row": 1926,
          "column": 16
        },
        "end": {
          "row": 1926,
          "column": 45
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "path: P<Path>",
        "start": {
          "row": 1926,
          "column": 18
        },
        "end": {
          "row": 1926,
          "column": 31
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 1926,
          "column": 18
        },
        "end": {
          "row": 1926,
          "column": 22
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Path>",
        "start": {
          "row": 1926,
          "column": 24
        },
        "end": {
          "row": 1926,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1926,
          "column": 24
        },
        "end": {
          "row": 1926,
          "column": 25
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Path>",
        "start": {
          "row": 1926,
          "column": 25
        },
        "end": {
          "row": 1926,
          "column": 31
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1926,
          "column": 26
        },
        "end": {
          "row": 1926,
          "column": 30
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "id: NodeId",
        "start": {
          "row": 1926,
          "column": 33
        },
        "end": {
          "row": 1926,
          "column": 43
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1926,
          "column": 33
        },
        "end": {
          "row": 1926,
          "column": 35
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1926,
          "column": 37
        },
        "end": {
          "row": 1926,
          "column": 43
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Inherited",
        "start": {
          "row": 1927,
          "column": 5
        },
        "end": {
          "row": 1927,
          "column": 14
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Inherited",
        "start": {
          "row": 1927,
          "column": 5
        },
        "end": {
          "row": 1927,
          "column": 14
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Field of a struct.",
        "start": {
          "row": 1930,
          "column": 1
        },
        "end": {
          "row": 1930,
          "column": 23
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1931,
          "column": 1
        },
        "end": {
          "row": 1931,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `bar: usize` as in `struct Foo { bar: usize }`",
        "start": {
          "row": 1932,
          "column": 1
        },
        "end": {
          "row": 1932,
          "column": 56
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1933,
          "column": 1
        },
        "end": {
          "row": 1933,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1933,
          "column": 3
        },
        "end": {
          "row": 1933,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1933,
          "column": 3
        },
        "end": {
          "row": 1933,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1933,
          "column": 9
        },
        "end": {
          "row": 1933,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1933,
          "column": 10
        },
        "end": {
          "row": 1933,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1933,
          "column": 10
        },
        "end": {
          "row": 1933,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1933,
          "column": 17
        },
        "end": {
          "row": 1933,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1933,
          "column": 17
        },
        "end": {
          "row": 1933,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1933,
          "column": 28
        },
        "end": {
          "row": 1933,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1933,
          "column": 28
        },
        "end": {
          "row": 1933,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1933,
          "column": 32
        },
        "end": {
          "row": 1933,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1933,
          "column": 32
        },
        "end": {
          "row": 1933,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1933,
          "column": 48
        },
        "end": {
          "row": 1933,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1933,
          "column": 48
        },
        "end": {
          "row": 1933,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1933,
          "column": 64
        },
        "end": {
          "row": 1933,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1933,
          "column": 64
        },
        "end": {
          "row": 1933,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1933,
          "column": 70
        },
        "end": {
          "row": 1933,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1933,
          "column": 70
        },
        "end": {
          "row": 1933,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct StructField {\n    pub span: Span,\n    pub ident: Option<Ident>,\n    pub vis: Visibility,\n    pub id: NodeId,\n    pub ty: P<Ty>,\n    pub attrs: Vec<Attribute>,\n}",
        "start": {
          "row": 1934,
          "column": 1
        },
        "end": {
          "row": 1941,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1934,
          "column": 1
        },
        "end": {
          "row": 1934,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "StructField",
        "start": {
          "row": 1934,
          "column": 12
        },
        "end": {
          "row": 1934,
          "column": 23
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub span: Span,\n    pub ident: Option<Ident>,\n    pub vis: Visibility,\n    pub id: NodeId,\n    pub ty: P<Ty>,\n    pub attrs: Vec<Attribute>,\n}",
        "start": {
          "row": 1934,
          "column": 24
        },
        "end": {
          "row": 1941,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 1935,
          "column": 5
        },
        "end": {
          "row": 1935,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1935,
          "column": 5
        },
        "end": {
          "row": 1935,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 1935,
          "column": 9
        },
        "end": {
          "row": 1935,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 1935,
          "column": 15
        },
        "end": {
          "row": 1935,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ident: Option<Ident>",
        "start": {
          "row": 1936,
          "column": 5
        },
        "end": {
          "row": 1936,
          "column": 29
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1936,
          "column": 5
        },
        "end": {
          "row": 1936,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 1936,
          "column": 9
        },
        "end": {
          "row": 1936,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<Ident>",
        "start": {
          "row": 1936,
          "column": 16
        },
        "end": {
          "row": 1936,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 1936,
          "column": 16
        },
        "end": {
          "row": 1936,
          "column": 22
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ident>",
        "start": {
          "row": 1936,
          "column": 22
        },
        "end": {
          "row": 1936,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 1936,
          "column": 23
        },
        "end": {
          "row": 1936,
          "column": 28
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub vis: Visibility",
        "start": {
          "row": 1937,
          "column": 5
        },
        "end": {
          "row": 1937,
          "column": 24
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1937,
          "column": 5
        },
        "end": {
          "row": 1937,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "vis",
        "start": {
          "row": 1937,
          "column": 9
        },
        "end": {
          "row": 1937,
          "column": 12
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Visibility",
        "start": {
          "row": 1937,
          "column": 14
        },
        "end": {
          "row": 1937,
          "column": 24
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 1938,
          "column": 5
        },
        "end": {
          "row": 1938,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1938,
          "column": 5
        },
        "end": {
          "row": 1938,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1938,
          "column": 9
        },
        "end": {
          "row": 1938,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1938,
          "column": 13
        },
        "end": {
          "row": 1938,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ty: P<Ty>",
        "start": {
          "row": 1939,
          "column": 5
        },
        "end": {
          "row": 1939,
          "column": 18
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1939,
          "column": 5
        },
        "end": {
          "row": 1939,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ty",
        "start": {
          "row": 1939,
          "column": 9
        },
        "end": {
          "row": 1939,
          "column": 11
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 1939,
          "column": 13
        },
        "end": {
          "row": 1939,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 1939,
          "column": 13
        },
        "end": {
          "row": 1939,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 1939,
          "column": 14
        },
        "end": {
          "row": 1939,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 1939,
          "column": 15
        },
        "end": {
          "row": 1939,
          "column": 17
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: Vec<Attribute>",
        "start": {
          "row": 1940,
          "column": 5
        },
        "end": {
          "row": 1940,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1940,
          "column": 5
        },
        "end": {
          "row": 1940,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 1940,
          "column": 9
        },
        "end": {
          "row": 1940,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Attribute>",
        "start": {
          "row": 1940,
          "column": 16
        },
        "end": {
          "row": 1940,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1940,
          "column": 16
        },
        "end": {
          "row": 1940,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 1940,
          "column": 19
        },
        "end": {
          "row": 1940,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 1940,
          "column": 20
        },
        "end": {
          "row": 1940,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Fields and Ids of enum variants and structs",
        "start": {
          "row": 1943,
          "column": 1
        },
        "end": {
          "row": 1943,
          "column": 48
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1944,
          "column": 1
        },
        "end": {
          "row": 1944,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// For enum variants: `NodeId` represents both an Id of the variant itself (relevant for all",
        "start": {
          "row": 1945,
          "column": 1
        },
        "end": {
          "row": 1945,
          "column": 94
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// variant kinds) and an Id of the variant's constructor (not relevant for `Struct`-variants).",
        "start": {
          "row": 1946,
          "column": 1
        },
        "end": {
          "row": 1946,
          "column": 96
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// One shared Id can be successfully used for these two purposes.",
        "start": {
          "row": 1947,
          "column": 1
        },
        "end": {
          "row": 1947,
          "column": 67
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Id of the whole enum lives in `Item`.",
        "start": {
          "row": 1948,
          "column": 1
        },
        "end": {
          "row": 1948,
          "column": 42
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1949,
          "column": 1
        },
        "end": {
          "row": 1949,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// For structs: `NodeId` represents an Id of the structure's constructor, so it is not actually",
        "start": {
          "row": 1950,
          "column": 1
        },
        "end": {
          "row": 1950,
          "column": 97
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// used for `Struct`-structs (but still presents). Structures don't have an analogue of \"Id of",
        "start": {
          "row": 1951,
          "column": 1
        },
        "end": {
          "row": 1951,
          "column": 96
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// the variant itself\" from enum variants.",
        "start": {
          "row": 1952,
          "column": 1
        },
        "end": {
          "row": 1952,
          "column": 44
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Id of the whole struct lives in `Item`.",
        "start": {
          "row": 1953,
          "column": 1
        },
        "end": {
          "row": 1953,
          "column": 44
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1954,
          "column": 1
        },
        "end": {
          "row": 1954,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1954,
          "column": 3
        },
        "end": {
          "row": 1954,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1954,
          "column": 3
        },
        "end": {
          "row": 1954,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1954,
          "column": 9
        },
        "end": {
          "row": 1954,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1954,
          "column": 10
        },
        "end": {
          "row": 1954,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1954,
          "column": 10
        },
        "end": {
          "row": 1954,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1954,
          "column": 17
        },
        "end": {
          "row": 1954,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1954,
          "column": 17
        },
        "end": {
          "row": 1954,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1954,
          "column": 28
        },
        "end": {
          "row": 1954,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1954,
          "column": 28
        },
        "end": {
          "row": 1954,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1954,
          "column": 32
        },
        "end": {
          "row": 1954,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1954,
          "column": 32
        },
        "end": {
          "row": 1954,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1954,
          "column": 48
        },
        "end": {
          "row": 1954,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1954,
          "column": 48
        },
        "end": {
          "row": 1954,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1954,
          "column": 64
        },
        "end": {
          "row": 1954,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1954,
          "column": 64
        },
        "end": {
          "row": 1954,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1954,
          "column": 70
        },
        "end": {
          "row": 1954,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1954,
          "column": 70
        },
        "end": {
          "row": 1954,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum VariantData {\n    /// Struct variant.\n    ///\n    /// E.g. `Bar { .. }` as in `enum Foo { Bar { .. } }`\n    Struct(Vec<StructField>, NodeId),\n    /// Tuple variant.\n    ///\n    /// E.g. `Bar(..)` as in `enum Foo { Bar(..) }`\n    Tuple(Vec<StructField>, NodeId),\n    /// Unit variant.\n    ///\n    /// E.g. `Bar = ..` as in `enum Foo { Bar = .. }`\n    Unit(NodeId),\n}",
        "start": {
          "row": 1955,
          "column": 1
        },
        "end": {
          "row": 1968,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1955,
          "column": 1
        },
        "end": {
          "row": 1955,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 1955,
          "column": 10
        },
        "end": {
          "row": 1955,
          "column": 21
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// Struct variant.\n    ///\n    /// E.g. `Bar { .. }` as in `enum Foo { Bar { .. } }`\n    Struct(Vec<StructField>, NodeId),\n    /// Tuple variant.\n    ///\n    /// E.g. `Bar(..)` as in `enum Foo { Bar(..) }`\n    Tuple(Vec<StructField>, NodeId),\n    /// Unit variant.\n    ///\n    /// E.g. `Bar = ..` as in `enum Foo { Bar = .. }`\n    Unit(NodeId),\n}",
        "start": {
          "row": 1955,
          "column": 22
        },
        "end": {
          "row": 1968,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Struct variant.",
        "start": {
          "row": 1956,
          "column": 5
        },
        "end": {
          "row": 1956,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1957,
          "column": 5
        },
        "end": {
          "row": 1957,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `Bar { .. }` as in `enum Foo { Bar { .. } }`",
        "start": {
          "row": 1958,
          "column": 5
        },
        "end": {
          "row": 1958,
          "column": 58
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Struct(Vec<StructField>, NodeId)",
        "start": {
          "row": 1959,
          "column": 5
        },
        "end": {
          "row": 1959,
          "column": 37
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Struct",
        "start": {
          "row": 1959,
          "column": 5
        },
        "end": {
          "row": 1959,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Vec<StructField>, NodeId)",
        "start": {
          "row": 1959,
          "column": 11
        },
        "end": {
          "row": 1959,
          "column": 37
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<StructField>",
        "start": {
          "row": 1959,
          "column": 12
        },
        "end": {
          "row": 1959,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1959,
          "column": 12
        },
        "end": {
          "row": 1959,
          "column": 15
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<StructField>",
        "start": {
          "row": 1959,
          "column": 15
        },
        "end": {
          "row": 1959,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "StructField",
        "start": {
          "row": 1959,
          "column": 16
        },
        "end": {
          "row": 1959,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1959,
          "column": 30
        },
        "end": {
          "row": 1959,
          "column": 36
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Tuple variant.",
        "start": {
          "row": 1960,
          "column": 5
        },
        "end": {
          "row": 1960,
          "column": 23
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1961,
          "column": 5
        },
        "end": {
          "row": 1961,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `Bar(..)` as in `enum Foo { Bar(..) }`",
        "start": {
          "row": 1962,
          "column": 5
        },
        "end": {
          "row": 1962,
          "column": 52
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Tuple(Vec<StructField>, NodeId)",
        "start": {
          "row": 1963,
          "column": 5
        },
        "end": {
          "row": 1963,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tuple",
        "start": {
          "row": 1963,
          "column": 5
        },
        "end": {
          "row": 1963,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Vec<StructField>, NodeId)",
        "start": {
          "row": 1963,
          "column": 10
        },
        "end": {
          "row": 1963,
          "column": 36
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<StructField>",
        "start": {
          "row": 1963,
          "column": 11
        },
        "end": {
          "row": 1963,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1963,
          "column": 11
        },
        "end": {
          "row": 1963,
          "column": 14
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<StructField>",
        "start": {
          "row": 1963,
          "column": 14
        },
        "end": {
          "row": 1963,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "StructField",
        "start": {
          "row": 1963,
          "column": 15
        },
        "end": {
          "row": 1963,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1963,
          "column": 29
        },
        "end": {
          "row": 1963,
          "column": 35
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Unit variant.",
        "start": {
          "row": 1964,
          "column": 5
        },
        "end": {
          "row": 1964,
          "column": 22
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1965,
          "column": 5
        },
        "end": {
          "row": 1965,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `Bar = ..` as in `enum Foo { Bar = .. }`",
        "start": {
          "row": 1966,
          "column": 5
        },
        "end": {
          "row": 1966,
          "column": 54
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Unit(NodeId)",
        "start": {
          "row": 1967,
          "column": 5
        },
        "end": {
          "row": 1967,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unit",
        "start": {
          "row": 1967,
          "column": 5
        },
        "end": {
          "row": 1967,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(NodeId)",
        "start": {
          "row": 1967,
          "column": 9
        },
        "end": {
          "row": 1967,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1967,
          "column": 10
        },
        "end": {
          "row": 1967,
          "column": 16
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl VariantData {\n    pub fn fields(&self) -> &[StructField] {\n        match *self {\n            VariantData::Struct(ref fields, _) | VariantData::Tuple(ref fields, _) => fields,\n            _ => &[],\n        }\n    }\n    pub fn id(&self) -> NodeId {\n        match *self {\n            VariantData::Struct(_, id) | VariantData::Tuple(_, id) | VariantData::Unit(id) => id\n        }\n    }\n    pub fn is_struct(&self) -> bool {\n        if let VariantData::Struct(..) = *self { true } else { false }\n    }\n    pub fn is_tuple(&self) -> bool {\n        if let VariantData::Tuple(..) = *self { true } else { false }\n    }\n    pub fn is_unit(&self) -> bool {\n        if let VariantData::Unit(..) = *self { true } else { false }\n    }\n}",
        "start": {
          "row": 1970,
          "column": 1
        },
        "end": {
          "row": 1991,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 1970,
          "column": 6
        },
        "end": {
          "row": 1970,
          "column": 17
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn fields(&self) -> &[StructField] {\n        match *self {\n            VariantData::Struct(ref fields, _) | VariantData::Tuple(ref fields, _) => fields,\n            _ => &[],\n        }\n    }\n    pub fn id(&self) -> NodeId {\n        match *self {\n            VariantData::Struct(_, id) | VariantData::Tuple(_, id) | VariantData::Unit(id) => id\n        }\n    }\n    pub fn is_struct(&self) -> bool {\n        if let VariantData::Struct(..) = *self { true } else { false }\n    }\n    pub fn is_tuple(&self) -> bool {\n        if let VariantData::Tuple(..) = *self { true } else { false }\n    }\n    pub fn is_unit(&self) -> bool {\n        if let VariantData::Unit(..) = *self { true } else { false }\n    }\n}",
        "start": {
          "row": 1970,
          "column": 18
        },
        "end": {
          "row": 1991,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn fields(&self) -> &[StructField] {\n        match *self {\n            VariantData::Struct(ref fields, _) | VariantData::Tuple(ref fields, _) => fields,\n            _ => &[],\n        }\n    }",
        "start": {
          "row": 1971,
          "column": 5
        },
        "end": {
          "row": 1976,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1971,
          "column": 5
        },
        "end": {
          "row": 1971,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fields",
        "start": {
          "row": 1971,
          "column": 12
        },
        "end": {
          "row": 1971,
          "column": 18
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1971,
          "column": 18
        },
        "end": {
          "row": 1971,
          "column": 25
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1971,
          "column": 19
        },
        "end": {
          "row": 1971,
          "column": 24
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1971,
          "column": 20
        },
        "end": {
          "row": 1971,
          "column": 24
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&[StructField]",
        "start": {
          "row": 1971,
          "column": 29
        },
        "end": {
          "row": 1971,
          "column": 43
        }
      },
      {
        "kind": "array_type",
        "name": "query",
        "text": "[StructField]",
        "start": {
          "row": 1971,
          "column": 30
        },
        "end": {
          "row": 1971,
          "column": 43
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "StructField",
        "start": {
          "row": 1971,
          "column": 31
        },
        "end": {
          "row": 1971,
          "column": 42
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            VariantData::Struct(ref fields, _) | VariantData::Tuple(ref fields, _) => fields,\n            _ => &[],\n        }\n    }",
        "start": {
          "row": 1971,
          "column": 44
        },
        "end": {
          "row": 1976,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            VariantData::Struct(ref fields, _) | VariantData::Tuple(ref fields, _) => fields,\n            _ => &[],\n        }",
        "start": {
          "row": 1972,
          "column": 9
        },
        "end": {
          "row": 1975,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1972,
          "column": 15
        },
        "end": {
          "row": 1972,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1972,
          "column": 16
        },
        "end": {
          "row": 1972,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            VariantData::Struct(ref fields, _) | VariantData::Tuple(ref fields, _) => fields,\n            _ => &[],\n        }",
        "start": {
          "row": 1972,
          "column": 21
        },
        "end": {
          "row": 1975,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "VariantData::Struct(ref fields, _) | VariantData::Tuple(ref fields, _) => fields,",
        "start": {
          "row": 1973,
          "column": 13
        },
        "end": {
          "row": 1973,
          "column": 94
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "VariantData::Struct(ref fields, _) | VariantData::Tuple(ref fields, _)",
        "start": {
          "row": 1973,
          "column": 13
        },
        "end": {
          "row": 1973,
          "column": 83
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "VariantData::Struct(ref fields, _) | VariantData::Tuple(ref fields, _)",
        "start": {
          "row": 1973,
          "column": 13
        },
        "end": {
          "row": 1973,
          "column": 83
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "VariantData::Struct(ref fields, _)",
        "start": {
          "row": 1973,
          "column": 13
        },
        "end": {
          "row": 1973,
          "column": 47
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "VariantData::Struct",
        "start": {
          "row": 1973,
          "column": 13
        },
        "end": {
          "row": 1973,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 1973,
          "column": 13
        },
        "end": {
          "row": 1973,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Struct",
        "start": {
          "row": 1973,
          "column": 26
        },
        "end": {
          "row": 1973,
          "column": 32
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref fields",
        "start": {
          "row": 1973,
          "column": 33
        },
        "end": {
          "row": 1973,
          "column": 43
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fields",
        "start": {
          "row": 1973,
          "column": 37
        },
        "end": {
          "row": 1973,
          "column": 43
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "VariantData::Tuple(ref fields, _)",
        "start": {
          "row": 1973,
          "column": 50
        },
        "end": {
          "row": 1973,
          "column": 83
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "VariantData::Tuple",
        "start": {
          "row": 1973,
          "column": 50
        },
        "end": {
          "row": 1973,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 1973,
          "column": 50
        },
        "end": {
          "row": 1973,
          "column": 61
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tuple",
        "start": {
          "row": 1973,
          "column": 63
        },
        "end": {
          "row": 1973,
          "column": 68
        }
      },
      {
        "kind": "ref_pattern",
        "name": "query",
        "text": "ref fields",
        "start": {
          "row": 1973,
          "column": 69
        },
        "end": {
          "row": 1973,
          "column": 79
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fields",
        "start": {
          "row": 1973,
          "column": 73
        },
        "end": {
          "row": 1973,
          "column": 79
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "fields",
        "start": {
          "row": 1973,
          "column": 87
        },
        "end": {
          "row": 1973,
          "column": 93
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "_ => &[],",
        "start": {
          "row": 1974,
          "column": 13
        },
        "end": {
          "row": 1974,
          "column": 22
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "_",
        "start": {
          "row": 1974,
          "column": 13
        },
        "end": {
          "row": 1974,
          "column": 14
        }
      },
      {
        "kind": "reference_expression",
        "name": "query",
        "text": "&[]",
        "start": {
          "row": 1974,
          "column": 18
        },
        "end": {
          "row": 1974,
          "column": 21
        }
      },
      {
        "kind": "array_expression",
        "name": "query",
        "text": "[]",
        "start": {
          "row": 1974,
          "column": 19
        },
        "end": {
          "row": 1974,
          "column": 21
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn id(&self) -> NodeId {\n        match *self {\n            VariantData::Struct(_, id) | VariantData::Tuple(_, id) | VariantData::Unit(id) => id\n        }\n    }",
        "start": {
          "row": 1977,
          "column": 5
        },
        "end": {
          "row": 1981,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1977,
          "column": 5
        },
        "end": {
          "row": 1977,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1977,
          "column": 12
        },
        "end": {
          "row": 1977,
          "column": 14
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1977,
          "column": 14
        },
        "end": {
          "row": 1977,
          "column": 21
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1977,
          "column": 15
        },
        "end": {
          "row": 1977,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1977,
          "column": 16
        },
        "end": {
          "row": 1977,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 1977,
          "column": 25
        },
        "end": {
          "row": 1977,
          "column": 31
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            VariantData::Struct(_, id) | VariantData::Tuple(_, id) | VariantData::Unit(id) => id\n        }\n    }",
        "start": {
          "row": 1977,
          "column": 32
        },
        "end": {
          "row": 1981,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            VariantData::Struct(_, id) | VariantData::Tuple(_, id) | VariantData::Unit(id) => id\n        }",
        "start": {
          "row": 1978,
          "column": 9
        },
        "end": {
          "row": 1980,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1978,
          "column": 15
        },
        "end": {
          "row": 1978,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1978,
          "column": 16
        },
        "end": {
          "row": 1978,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            VariantData::Struct(_, id) | VariantData::Tuple(_, id) | VariantData::Unit(id) => id\n        }",
        "start": {
          "row": 1978,
          "column": 21
        },
        "end": {
          "row": 1980,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "VariantData::Struct(_, id) | VariantData::Tuple(_, id) | VariantData::Unit(id) => id",
        "start": {
          "row": 1979,
          "column": 13
        },
        "end": {
          "row": 1979,
          "column": 97
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "VariantData::Struct(_, id) | VariantData::Tuple(_, id) | VariantData::Unit(id)",
        "start": {
          "row": 1979,
          "column": 13
        },
        "end": {
          "row": 1979,
          "column": 91
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "VariantData::Struct(_, id) | VariantData::Tuple(_, id) | VariantData::Unit(id)",
        "start": {
          "row": 1979,
          "column": 13
        },
        "end": {
          "row": 1979,
          "column": 91
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "VariantData::Struct(_, id) | VariantData::Tuple(_, id)",
        "start": {
          "row": 1979,
          "column": 13
        },
        "end": {
          "row": 1979,
          "column": 67
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "VariantData::Struct(_, id)",
        "start": {
          "row": 1979,
          "column": 13
        },
        "end": {
          "row": 1979,
          "column": 39
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "VariantData::Struct",
        "start": {
          "row": 1979,
          "column": 13
        },
        "end": {
          "row": 1979,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 1979,
          "column": 13
        },
        "end": {
          "row": 1979,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Struct",
        "start": {
          "row": 1979,
          "column": 26
        },
        "end": {
          "row": 1979,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1979,
          "column": 36
        },
        "end": {
          "row": 1979,
          "column": 38
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "VariantData::Tuple(_, id)",
        "start": {
          "row": 1979,
          "column": 42
        },
        "end": {
          "row": 1979,
          "column": 67
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "VariantData::Tuple",
        "start": {
          "row": 1979,
          "column": 42
        },
        "end": {
          "row": 1979,
          "column": 60
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 1979,
          "column": 42
        },
        "end": {
          "row": 1979,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tuple",
        "start": {
          "row": 1979,
          "column": 55
        },
        "end": {
          "row": 1979,
          "column": 60
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1979,
          "column": 64
        },
        "end": {
          "row": 1979,
          "column": 66
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "VariantData::Unit(id)",
        "start": {
          "row": 1979,
          "column": 70
        },
        "end": {
          "row": 1979,
          "column": 91
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "VariantData::Unit",
        "start": {
          "row": 1979,
          "column": 70
        },
        "end": {
          "row": 1979,
          "column": 87
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 1979,
          "column": 70
        },
        "end": {
          "row": 1979,
          "column": 81
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unit",
        "start": {
          "row": 1979,
          "column": 83
        },
        "end": {
          "row": 1979,
          "column": 87
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1979,
          "column": 88
        },
        "end": {
          "row": 1979,
          "column": 90
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 1979,
          "column": 95
        },
        "end": {
          "row": 1979,
          "column": 97
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_struct(&self) -> bool {\n        if let VariantData::Struct(..) = *self { true } else { false }\n    }",
        "start": {
          "row": 1982,
          "column": 5
        },
        "end": {
          "row": 1984,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1982,
          "column": 5
        },
        "end": {
          "row": 1982,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_struct",
        "start": {
          "row": 1982,
          "column": 12
        },
        "end": {
          "row": 1982,
          "column": 21
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1982,
          "column": 21
        },
        "end": {
          "row": 1982,
          "column": 28
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1982,
          "column": 22
        },
        "end": {
          "row": 1982,
          "column": 27
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1982,
          "column": 23
        },
        "end": {
          "row": 1982,
          "column": 27
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1982,
          "column": 32
        },
        "end": {
          "row": 1982,
          "column": 36
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        if let VariantData::Struct(..) = *self { true } else { false }\n    }",
        "start": {
          "row": 1982,
          "column": 37
        },
        "end": {
          "row": 1984,
          "column": 6
        }
      },
      {
        "kind": "if_let_expression",
        "name": "query",
        "text": "if let VariantData::Struct(..) = *self { true } else { false }",
        "start": {
          "row": 1983,
          "column": 9
        },
        "end": {
          "row": 1983,
          "column": 71
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "VariantData::Struct(..)",
        "start": {
          "row": 1983,
          "column": 16
        },
        "end": {
          "row": 1983,
          "column": 39
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "VariantData::Struct",
        "start": {
          "row": 1983,
          "column": 16
        },
        "end": {
          "row": 1983,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 1983,
          "column": 16
        },
        "end": {
          "row": 1983,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Struct",
        "start": {
          "row": 1983,
          "column": 29
        },
        "end": {
          "row": 1983,
          "column": 35
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1983,
          "column": 36
        },
        "end": {
          "row": 1983,
          "column": 38
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1983,
          "column": 42
        },
        "end": {
          "row": 1983,
          "column": 47
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1983,
          "column": 43
        },
        "end": {
          "row": 1983,
          "column": 47
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{ true }",
        "start": {
          "row": 1983,
          "column": 48
        },
        "end": {
          "row": 1983,
          "column": 56
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 1983,
          "column": 50
        },
        "end": {
          "row": 1983,
          "column": 54
        }
      },
      {
        "kind": "else_clause",
        "name": "query",
        "text": "else { false }",
        "start": {
          "row": 1983,
          "column": 57
        },
        "end": {
          "row": 1983,
          "column": 71
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{ false }",
        "start": {
          "row": 1983,
          "column": 62
        },
        "end": {
          "row": 1983,
          "column": 71
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 1983,
          "column": 64
        },
        "end": {
          "row": 1983,
          "column": 69
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_tuple(&self) -> bool {\n        if let VariantData::Tuple(..) = *self { true } else { false }\n    }",
        "start": {
          "row": 1985,
          "column": 5
        },
        "end": {
          "row": 1987,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1985,
          "column": 5
        },
        "end": {
          "row": 1985,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_tuple",
        "start": {
          "row": 1985,
          "column": 12
        },
        "end": {
          "row": 1985,
          "column": 20
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1985,
          "column": 20
        },
        "end": {
          "row": 1985,
          "column": 27
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1985,
          "column": 21
        },
        "end": {
          "row": 1985,
          "column": 26
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1985,
          "column": 22
        },
        "end": {
          "row": 1985,
          "column": 26
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1985,
          "column": 31
        },
        "end": {
          "row": 1985,
          "column": 35
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        if let VariantData::Tuple(..) = *self { true } else { false }\n    }",
        "start": {
          "row": 1985,
          "column": 36
        },
        "end": {
          "row": 1987,
          "column": 6
        }
      },
      {
        "kind": "if_let_expression",
        "name": "query",
        "text": "if let VariantData::Tuple(..) = *self { true } else { false }",
        "start": {
          "row": 1986,
          "column": 9
        },
        "end": {
          "row": 1986,
          "column": 70
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "VariantData::Tuple(..)",
        "start": {
          "row": 1986,
          "column": 16
        },
        "end": {
          "row": 1986,
          "column": 38
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "VariantData::Tuple",
        "start": {
          "row": 1986,
          "column": 16
        },
        "end": {
          "row": 1986,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 1986,
          "column": 16
        },
        "end": {
          "row": 1986,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Tuple",
        "start": {
          "row": 1986,
          "column": 29
        },
        "end": {
          "row": 1986,
          "column": 34
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1986,
          "column": 35
        },
        "end": {
          "row": 1986,
          "column": 37
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1986,
          "column": 41
        },
        "end": {
          "row": 1986,
          "column": 46
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1986,
          "column": 42
        },
        "end": {
          "row": 1986,
          "column": 46
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{ true }",
        "start": {
          "row": 1986,
          "column": 47
        },
        "end": {
          "row": 1986,
          "column": 55
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 1986,
          "column": 49
        },
        "end": {
          "row": 1986,
          "column": 53
        }
      },
      {
        "kind": "else_clause",
        "name": "query",
        "text": "else { false }",
        "start": {
          "row": 1986,
          "column": 56
        },
        "end": {
          "row": 1986,
          "column": 70
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{ false }",
        "start": {
          "row": 1986,
          "column": 61
        },
        "end": {
          "row": 1986,
          "column": 70
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 1986,
          "column": 63
        },
        "end": {
          "row": 1986,
          "column": 68
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn is_unit(&self) -> bool {\n        if let VariantData::Unit(..) = *self { true } else { false }\n    }",
        "start": {
          "row": 1988,
          "column": 5
        },
        "end": {
          "row": 1990,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1988,
          "column": 5
        },
        "end": {
          "row": 1988,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "is_unit",
        "start": {
          "row": 1988,
          "column": 12
        },
        "end": {
          "row": 1988,
          "column": 19
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 1988,
          "column": 19
        },
        "end": {
          "row": 1988,
          "column": 26
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 1988,
          "column": 20
        },
        "end": {
          "row": 1988,
          "column": 25
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1988,
          "column": 21
        },
        "end": {
          "row": 1988,
          "column": 25
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 1988,
          "column": 30
        },
        "end": {
          "row": 1988,
          "column": 34
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        if let VariantData::Unit(..) = *self { true } else { false }\n    }",
        "start": {
          "row": 1988,
          "column": 35
        },
        "end": {
          "row": 1990,
          "column": 6
        }
      },
      {
        "kind": "if_let_expression",
        "name": "query",
        "text": "if let VariantData::Unit(..) = *self { true } else { false }",
        "start": {
          "row": 1989,
          "column": 9
        },
        "end": {
          "row": 1989,
          "column": 69
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "VariantData::Unit(..)",
        "start": {
          "row": 1989,
          "column": 16
        },
        "end": {
          "row": 1989,
          "column": 37
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "VariantData::Unit",
        "start": {
          "row": 1989,
          "column": 16
        },
        "end": {
          "row": 1989,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 1989,
          "column": 16
        },
        "end": {
          "row": 1989,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Unit",
        "start": {
          "row": 1989,
          "column": 29
        },
        "end": {
          "row": 1989,
          "column": 33
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 1989,
          "column": 34
        },
        "end": {
          "row": 1989,
          "column": 36
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 1989,
          "column": 40
        },
        "end": {
          "row": 1989,
          "column": 45
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 1989,
          "column": 41
        },
        "end": {
          "row": 1989,
          "column": 45
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{ true }",
        "start": {
          "row": 1989,
          "column": 46
        },
        "end": {
          "row": 1989,
          "column": 54
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "true",
        "start": {
          "row": 1989,
          "column": 48
        },
        "end": {
          "row": 1989,
          "column": 52
        }
      },
      {
        "kind": "else_clause",
        "name": "query",
        "text": "else { false }",
        "start": {
          "row": 1989,
          "column": 55
        },
        "end": {
          "row": 1989,
          "column": 69
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{ false }",
        "start": {
          "row": 1989,
          "column": 60
        },
        "end": {
          "row": 1989,
          "column": 69
        }
      },
      {
        "kind": "boolean_literal",
        "name": "query",
        "text": "false",
        "start": {
          "row": 1989,
          "column": 62
        },
        "end": {
          "row": 1989,
          "column": 67
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An item",
        "start": {
          "row": 1993,
          "column": 1
        },
        "end": {
          "row": 1993,
          "column": 12
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 1994,
          "column": 1
        },
        "end": {
          "row": 1994,
          "column": 4
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The name might be a dummy name in case of anonymous items",
        "start": {
          "row": 1995,
          "column": 1
        },
        "end": {
          "row": 1995,
          "column": 62
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 1996,
          "column": 1
        },
        "end": {
          "row": 1996,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1996,
          "column": 3
        },
        "end": {
          "row": 1996,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 1996,
          "column": 3
        },
        "end": {
          "row": 1996,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 1996,
          "column": 9
        },
        "end": {
          "row": 1996,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1996,
          "column": 10
        },
        "end": {
          "row": 1996,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 1996,
          "column": 10
        },
        "end": {
          "row": 1996,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1996,
          "column": 17
        },
        "end": {
          "row": 1996,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 1996,
          "column": 17
        },
        "end": {
          "row": 1996,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1996,
          "column": 28
        },
        "end": {
          "row": 1996,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 1996,
          "column": 28
        },
        "end": {
          "row": 1996,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1996,
          "column": 32
        },
        "end": {
          "row": 1996,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 1996,
          "column": 32
        },
        "end": {
          "row": 1996,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1996,
          "column": 48
        },
        "end": {
          "row": 1996,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 1996,
          "column": 48
        },
        "end": {
          "row": 1996,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1996,
          "column": 64
        },
        "end": {
          "row": 1996,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 1996,
          "column": 64
        },
        "end": {
          "row": 1996,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1996,
          "column": 70
        },
        "end": {
          "row": 1996,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 1996,
          "column": 70
        },
        "end": {
          "row": 1996,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct Item {\n    pub ident: Ident,\n    pub attrs: Vec<Attribute>,\n    pub id: NodeId,\n    pub node: ItemKind,\n    pub vis: Visibility,\n    pub span: Span,\n\n    /// Original tokens this item was parsed from. This isn't necessarily\n    /// available for all items, although over time more and more items should\n    /// have this be `Some`. Right now this is primarily used for procedural\n    /// macros, notably custom attributes.\n    ///\n    /// Note that the tokens here do not include the outer attributes, but will\n    /// include inner attributes.\n    pub tokens: Option<TokenStream>,\n}",
        "start": {
          "row": 1997,
          "column": 1
        },
        "end": {
          "row": 2013,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1997,
          "column": 1
        },
        "end": {
          "row": 1997,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Item",
        "start": {
          "row": 1997,
          "column": 12
        },
        "end": {
          "row": 1997,
          "column": 16
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub ident: Ident,\n    pub attrs: Vec<Attribute>,\n    pub id: NodeId,\n    pub node: ItemKind,\n    pub vis: Visibility,\n    pub span: Span,\n\n    /// Original tokens this item was parsed from. This isn't necessarily\n    /// available for all items, although over time more and more items should\n    /// have this be `Some`. Right now this is primarily used for procedural\n    /// macros, notably custom attributes.\n    ///\n    /// Note that the tokens here do not include the outer attributes, but will\n    /// include inner attributes.\n    pub tokens: Option<TokenStream>,\n}",
        "start": {
          "row": 1997,
          "column": 17
        },
        "end": {
          "row": 2013,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ident: Ident",
        "start": {
          "row": 1998,
          "column": 5
        },
        "end": {
          "row": 1998,
          "column": 21
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1998,
          "column": 5
        },
        "end": {
          "row": 1998,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 1998,
          "column": 9
        },
        "end": {
          "row": 1998,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 1998,
          "column": 16
        },
        "end": {
          "row": 1998,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: Vec<Attribute>",
        "start": {
          "row": 1999,
          "column": 5
        },
        "end": {
          "row": 1999,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 1999,
          "column": 5
        },
        "end": {
          "row": 1999,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 1999,
          "column": 9
        },
        "end": {
          "row": 1999,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Attribute>",
        "start": {
          "row": 1999,
          "column": 16
        },
        "end": {
          "row": 1999,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 1999,
          "column": 16
        },
        "end": {
          "row": 1999,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 1999,
          "column": 19
        },
        "end": {
          "row": 1999,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 1999,
          "column": 20
        },
        "end": {
          "row": 1999,
          "column": 29
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 2000,
          "column": 5
        },
        "end": {
          "row": 2000,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2000,
          "column": 5
        },
        "end": {
          "row": 2000,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 2000,
          "column": 9
        },
        "end": {
          "row": 2000,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 2000,
          "column": 13
        },
        "end": {
          "row": 2000,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub node: ItemKind",
        "start": {
          "row": 2001,
          "column": 5
        },
        "end": {
          "row": 2001,
          "column": 23
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2001,
          "column": 5
        },
        "end": {
          "row": 2001,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 2001,
          "column": 9
        },
        "end": {
          "row": 2001,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2001,
          "column": 15
        },
        "end": {
          "row": 2001,
          "column": 23
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub vis: Visibility",
        "start": {
          "row": 2002,
          "column": 5
        },
        "end": {
          "row": 2002,
          "column": 24
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2002,
          "column": 5
        },
        "end": {
          "row": 2002,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "vis",
        "start": {
          "row": 2002,
          "column": 9
        },
        "end": {
          "row": 2002,
          "column": 12
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Visibility",
        "start": {
          "row": 2002,
          "column": 14
        },
        "end": {
          "row": 2002,
          "column": 24
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 2003,
          "column": 5
        },
        "end": {
          "row": 2003,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2003,
          "column": 5
        },
        "end": {
          "row": 2003,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 2003,
          "column": 9
        },
        "end": {
          "row": 2003,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 2003,
          "column": 15
        },
        "end": {
          "row": 2003,
          "column": 19
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Original tokens this item was parsed from. This isn't necessarily",
        "start": {
          "row": 2005,
          "column": 5
        },
        "end": {
          "row": 2005,
          "column": 74
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// available for all items, although over time more and more items should",
        "start": {
          "row": 2006,
          "column": 5
        },
        "end": {
          "row": 2006,
          "column": 79
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// have this be `Some`. Right now this is primarily used for procedural",
        "start": {
          "row": 2007,
          "column": 5
        },
        "end": {
          "row": 2007,
          "column": 77
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// macros, notably custom attributes.",
        "start": {
          "row": 2008,
          "column": 5
        },
        "end": {
          "row": 2008,
          "column": 43
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2009,
          "column": 5
        },
        "end": {
          "row": 2009,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Note that the tokens here do not include the outer attributes, but will",
        "start": {
          "row": 2010,
          "column": 5
        },
        "end": {
          "row": 2010,
          "column": 80
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// include inner attributes.",
        "start": {
          "row": 2011,
          "column": 5
        },
        "end": {
          "row": 2011,
          "column": 34
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub tokens: Option<TokenStream>",
        "start": {
          "row": 2012,
          "column": 5
        },
        "end": {
          "row": 2012,
          "column": 36
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2012,
          "column": 5
        },
        "end": {
          "row": 2012,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "tokens",
        "start": {
          "row": 2012,
          "column": 9
        },
        "end": {
          "row": 2012,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<TokenStream>",
        "start": {
          "row": 2012,
          "column": 17
        },
        "end": {
          "row": 2012,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 2012,
          "column": 17
        },
        "end": {
          "row": 2012,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<TokenStream>",
        "start": {
          "row": 2012,
          "column": 23
        },
        "end": {
          "row": 2012,
          "column": 36
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TokenStream",
        "start": {
          "row": 2012,
          "column": 24
        },
        "end": {
          "row": 2012,
          "column": 35
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 2015,
          "column": 1
        },
        "end": {
          "row": 2015,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 2015,
          "column": 3
        },
        "end": {
          "row": 2015,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 2015,
          "column": 3
        },
        "end": {
          "row": 2015,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 2015,
          "column": 9
        },
        "end": {
          "row": 2015,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 2015,
          "column": 10
        },
        "end": {
          "row": 2015,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 2015,
          "column": 10
        },
        "end": {
          "row": 2015,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 2015,
          "column": 17
        },
        "end": {
          "row": 2015,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 2015,
          "column": 17
        },
        "end": {
          "row": 2015,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 2015,
          "column": 28
        },
        "end": {
          "row": 2015,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 2015,
          "column": 28
        },
        "end": {
          "row": 2015,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 2015,
          "column": 32
        },
        "end": {
          "row": 2015,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 2015,
          "column": 32
        },
        "end": {
          "row": 2015,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 2015,
          "column": 48
        },
        "end": {
          "row": 2015,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 2015,
          "column": 48
        },
        "end": {
          "row": 2015,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 2015,
          "column": 64
        },
        "end": {
          "row": 2015,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 2015,
          "column": 64
        },
        "end": {
          "row": 2015,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 2015,
          "column": 70
        },
        "end": {
          "row": 2015,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 2015,
          "column": 70
        },
        "end": {
          "row": 2015,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum ItemKind {\n    /// An `extern crate` item, with optional original crate name.\n    ///\n    /// E.g. `extern crate foo` or `extern crate foo_bar as foo`\n    ExternCrate(Option<Name>),\n    /// A use declaration (`use` or `pub use`) item.\n    ///\n    /// E.g. `use foo;`, `use foo::bar;` or `use foo::bar as FooBar;`\n    Use(P<UseTree>),\n    /// A static item (`static` or `pub static`).\n    ///\n    /// E.g. `static FOO: i32 = 42;` or `static FOO: &'static str = \"bar\";`\n    Static(P<Ty>, Mutability, P<Expr>),\n    /// A constant item (`const` or `pub const`).\n    ///\n    /// E.g. `const FOO: i32 = 42;`\n    Const(P<Ty>, P<Expr>),\n    /// A function declaration (`fn` or `pub fn`).\n    ///\n    /// E.g. `fn foo(bar: usize) -> usize { .. }`\n    Fn(P<FnDecl>, Unsafety, Spanned<Constness>, Abi, Generics, P<Block>),\n    /// A module declaration (`mod` or `pub mod`).\n    ///\n    /// E.g. `mod foo;` or `mod foo { .. }`\n    Mod(Mod),\n    /// An external module (`extern` or `pub extern`).\n    ///\n    /// E.g. `extern {}` or `extern \"C\" {}`\n    ForeignMod(ForeignMod),\n    /// Module-level inline assembly (from `global_asm!()`)\n    GlobalAsm(P<GlobalAsm>),\n    /// A type alias (`type` or `pub type`).\n    ///\n    /// E.g. `type Foo = Bar<u8>;`\n    Ty(P<Ty>, Generics),\n    /// An enum definition (`enum` or `pub enum`).\n    ///\n    /// E.g. `enum Foo<A, B> { C<A>, D<B> }`\n    Enum(EnumDef, Generics),\n    /// A struct definition (`struct` or `pub struct`).\n    ///\n    /// E.g. `struct Foo<A> { x: A }`\n    Struct(VariantData, Generics),\n    /// A union definition (`union` or `pub union`).\n    ///\n    /// E.g. `union Foo<A, B> { x: A, y: B }`\n    Union(VariantData, Generics),\n    /// A Trait declaration (`trait` or `pub trait`).\n    ///\n    /// E.g. `trait Foo { .. }`, `trait Foo<T> { .. }` or `auto trait Foo {}`\n    Trait(IsAuto, Unsafety, Generics, TyParamBounds, Vec<TraitItem>),\n    /// Trait alias\n    ///\n    /// E.g. `trait Foo = Bar + Quux;`\n    TraitAlias(Generics, TyParamBounds),\n    /// An implementation.\n    ///\n    /// E.g. `impl<A> Foo<A> { .. }` or `impl<A> Trait for Foo<A> { .. }`\n    Impl(Unsafety,\n             ImplPolarity,\n             Defaultness,\n             Generics,\n             Option<TraitRef>, // (optional) trait this impl implements\n             P<Ty>, // self\n             Vec<ImplItem>),\n    /// A macro invocation.\n    ///\n    /// E.g. `macro_rules! foo { .. }` or `foo!(..)`\n    Mac(Mac),\n\n    /// A macro definition.\n    MacroDef(MacroDef),\n}",
        "start": {
          "row": 2016,
          "column": 1
        },
        "end": {
          "row": 2088,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2016,
          "column": 1
        },
        "end": {
          "row": 2016,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2016,
          "column": 10
        },
        "end": {
          "row": 2016,
          "column": 18
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// An `extern crate` item, with optional original crate name.\n    ///\n    /// E.g. `extern crate foo` or `extern crate foo_bar as foo`\n    ExternCrate(Option<Name>),\n    /// A use declaration (`use` or `pub use`) item.\n    ///\n    /// E.g. `use foo;`, `use foo::bar;` or `use foo::bar as FooBar;`\n    Use(P<UseTree>),\n    /// A static item (`static` or `pub static`).\n    ///\n    /// E.g. `static FOO: i32 = 42;` or `static FOO: &'static str = \"bar\";`\n    Static(P<Ty>, Mutability, P<Expr>),\n    /// A constant item (`const` or `pub const`).\n    ///\n    /// E.g. `const FOO: i32 = 42;`\n    Const(P<Ty>, P<Expr>),\n    /// A function declaration (`fn` or `pub fn`).\n    ///\n    /// E.g. `fn foo(bar: usize) -> usize { .. }`\n    Fn(P<FnDecl>, Unsafety, Spanned<Constness>, Abi, Generics, P<Block>),\n    /// A module declaration (`mod` or `pub mod`).\n    ///\n    /// E.g. `mod foo;` or `mod foo { .. }`\n    Mod(Mod),\n    /// An external module (`extern` or `pub extern`).\n    ///\n    /// E.g. `extern {}` or `extern \"C\" {}`\n    ForeignMod(ForeignMod),\n    /// Module-level inline assembly (from `global_asm!()`)\n    GlobalAsm(P<GlobalAsm>),\n    /// A type alias (`type` or `pub type`).\n    ///\n    /// E.g. `type Foo = Bar<u8>;`\n    Ty(P<Ty>, Generics),\n    /// An enum definition (`enum` or `pub enum`).\n    ///\n    /// E.g. `enum Foo<A, B> { C<A>, D<B> }`\n    Enum(EnumDef, Generics),\n    /// A struct definition (`struct` or `pub struct`).\n    ///\n    /// E.g. `struct Foo<A> { x: A }`\n    Struct(VariantData, Generics),\n    /// A union definition (`union` or `pub union`).\n    ///\n    /// E.g. `union Foo<A, B> { x: A, y: B }`\n    Union(VariantData, Generics),\n    /// A Trait declaration (`trait` or `pub trait`).\n    ///\n    /// E.g. `trait Foo { .. }`, `trait Foo<T> { .. }` or `auto trait Foo {}`\n    Trait(IsAuto, Unsafety, Generics, TyParamBounds, Vec<TraitItem>),\n    /// Trait alias\n    ///\n    /// E.g. `trait Foo = Bar + Quux;`\n    TraitAlias(Generics, TyParamBounds),\n    /// An implementation.\n    ///\n    /// E.g. `impl<A> Foo<A> { .. }` or `impl<A> Trait for Foo<A> { .. }`\n    Impl(Unsafety,\n             ImplPolarity,\n             Defaultness,\n             Generics,\n             Option<TraitRef>, // (optional) trait this impl implements\n             P<Ty>, // self\n             Vec<ImplItem>),\n    /// A macro invocation.\n    ///\n    /// E.g. `macro_rules! foo { .. }` or `foo!(..)`\n    Mac(Mac),\n\n    /// A macro definition.\n    MacroDef(MacroDef),\n}",
        "start": {
          "row": 2016,
          "column": 19
        },
        "end": {
          "row": 2088,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An `extern crate` item, with optional original crate name.",
        "start": {
          "row": 2017,
          "column": 5
        },
        "end": {
          "row": 2017,
          "column": 67
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2018,
          "column": 5
        },
        "end": {
          "row": 2018,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `extern crate foo` or `extern crate foo_bar as foo`",
        "start": {
          "row": 2019,
          "column": 5
        },
        "end": {
          "row": 2019,
          "column": 65
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "ExternCrate(Option<Name>)",
        "start": {
          "row": 2020,
          "column": 5
        },
        "end": {
          "row": 2020,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExternCrate",
        "start": {
          "row": 2020,
          "column": 5
        },
        "end": {
          "row": 2020,
          "column": 16
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Option<Name>)",
        "start": {
          "row": 2020,
          "column": 16
        },
        "end": {
          "row": 2020,
          "column": 30
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<Name>",
        "start": {
          "row": 2020,
          "column": 17
        },
        "end": {
          "row": 2020,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 2020,
          "column": 17
        },
        "end": {
          "row": 2020,
          "column": 23
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Name>",
        "start": {
          "row": 2020,
          "column": 23
        },
        "end": {
          "row": 2020,
          "column": 29
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Name",
        "start": {
          "row": 2020,
          "column": 24
        },
        "end": {
          "row": 2020,
          "column": 28
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A use declaration (`use` or `pub use`) item.",
        "start": {
          "row": 2021,
          "column": 5
        },
        "end": {
          "row": 2021,
          "column": 53
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2022,
          "column": 5
        },
        "end": {
          "row": 2022,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `use foo;`, `use foo::bar;` or `use foo::bar as FooBar;`",
        "start": {
          "row": 2023,
          "column": 5
        },
        "end": {
          "row": 2023,
          "column": 70
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Use(P<UseTree>)",
        "start": {
          "row": 2024,
          "column": 5
        },
        "end": {
          "row": 2024,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Use",
        "start": {
          "row": 2024,
          "column": 5
        },
        "end": {
          "row": 2024,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<UseTree>)",
        "start": {
          "row": 2024,
          "column": 8
        },
        "end": {
          "row": 2024,
          "column": 20
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<UseTree>",
        "start": {
          "row": 2024,
          "column": 9
        },
        "end": {
          "row": 2024,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 2024,
          "column": 9
        },
        "end": {
          "row": 2024,
          "column": 10
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<UseTree>",
        "start": {
          "row": 2024,
          "column": 10
        },
        "end": {
          "row": 2024,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "UseTree",
        "start": {
          "row": 2024,
          "column": 11
        },
        "end": {
          "row": 2024,
          "column": 18
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A static item (`static` or `pub static`).",
        "start": {
          "row": 2025,
          "column": 5
        },
        "end": {
          "row": 2025,
          "column": 50
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2026,
          "column": 5
        },
        "end": {
          "row": 2026,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `static FOO: i32 = 42;` or `static FOO: &'static str = \"bar\";`",
        "start": {
          "row": 2027,
          "column": 5
        },
        "end": {
          "row": 2027,
          "column": 76
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Static(P<Ty>, Mutability, P<Expr>)",
        "start": {
          "row": 2028,
          "column": 5
        },
        "end": {
          "row": 2028,
          "column": 39
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Static",
        "start": {
          "row": 2028,
          "column": 5
        },
        "end": {
          "row": 2028,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Ty>, Mutability, P<Expr>)",
        "start": {
          "row": 2028,
          "column": 11
        },
        "end": {
          "row": 2028,
          "column": 39
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 2028,
          "column": 12
        },
        "end": {
          "row": 2028,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 2028,
          "column": 12
        },
        "end": {
          "row": 2028,
          "column": 13
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 2028,
          "column": 13
        },
        "end": {
          "row": 2028,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 2028,
          "column": 14
        },
        "end": {
          "row": 2028,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mutability",
        "start": {
          "row": 2028,
          "column": 19
        },
        "end": {
          "row": 2028,
          "column": 29
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 2028,
          "column": 31
        },
        "end": {
          "row": 2028,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 2028,
          "column": 31
        },
        "end": {
          "row": 2028,
          "column": 32
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 2028,
          "column": 32
        },
        "end": {
          "row": 2028,
          "column": 38
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 2028,
          "column": 33
        },
        "end": {
          "row": 2028,
          "column": 37
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A constant item (`const` or `pub const`).",
        "start": {
          "row": 2029,
          "column": 5
        },
        "end": {
          "row": 2029,
          "column": 50
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2030,
          "column": 5
        },
        "end": {
          "row": 2030,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `const FOO: i32 = 42;`",
        "start": {
          "row": 2031,
          "column": 5
        },
        "end": {
          "row": 2031,
          "column": 36
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Const(P<Ty>, P<Expr>)",
        "start": {
          "row": 2032,
          "column": 5
        },
        "end": {
          "row": 2032,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Const",
        "start": {
          "row": 2032,
          "column": 5
        },
        "end": {
          "row": 2032,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Ty>, P<Expr>)",
        "start": {
          "row": 2032,
          "column": 10
        },
        "end": {
          "row": 2032,
          "column": 26
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 2032,
          "column": 11
        },
        "end": {
          "row": 2032,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 2032,
          "column": 11
        },
        "end": {
          "row": 2032,
          "column": 12
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 2032,
          "column": 12
        },
        "end": {
          "row": 2032,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 2032,
          "column": 13
        },
        "end": {
          "row": 2032,
          "column": 15
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Expr>",
        "start": {
          "row": 2032,
          "column": 18
        },
        "end": {
          "row": 2032,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 2032,
          "column": 18
        },
        "end": {
          "row": 2032,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Expr>",
        "start": {
          "row": 2032,
          "column": 19
        },
        "end": {
          "row": 2032,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Expr",
        "start": {
          "row": 2032,
          "column": 20
        },
        "end": {
          "row": 2032,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A function declaration (`fn` or `pub fn`).",
        "start": {
          "row": 2033,
          "column": 5
        },
        "end": {
          "row": 2033,
          "column": 51
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2034,
          "column": 5
        },
        "end": {
          "row": 2034,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `fn foo(bar: usize) -> usize { .. }`",
        "start": {
          "row": 2035,
          "column": 5
        },
        "end": {
          "row": 2035,
          "column": 50
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Fn(P<FnDecl>, Unsafety, Spanned<Constness>, Abi, Generics, P<Block>)",
        "start": {
          "row": 2036,
          "column": 5
        },
        "end": {
          "row": 2036,
          "column": 73
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Fn",
        "start": {
          "row": 2036,
          "column": 5
        },
        "end": {
          "row": 2036,
          "column": 7
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<FnDecl>, Unsafety, Spanned<Constness>, Abi, Generics, P<Block>)",
        "start": {
          "row": 2036,
          "column": 7
        },
        "end": {
          "row": 2036,
          "column": 73
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<FnDecl>",
        "start": {
          "row": 2036,
          "column": 8
        },
        "end": {
          "row": 2036,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 2036,
          "column": 8
        },
        "end": {
          "row": 2036,
          "column": 9
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<FnDecl>",
        "start": {
          "row": 2036,
          "column": 9
        },
        "end": {
          "row": 2036,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FnDecl",
        "start": {
          "row": 2036,
          "column": 10
        },
        "end": {
          "row": 2036,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Unsafety",
        "start": {
          "row": 2036,
          "column": 19
        },
        "end": {
          "row": 2036,
          "column": 27
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Spanned<Constness>",
        "start": {
          "row": 2036,
          "column": 29
        },
        "end": {
          "row": 2036,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Spanned",
        "start": {
          "row": 2036,
          "column": 29
        },
        "end": {
          "row": 2036,
          "column": 36
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Constness>",
        "start": {
          "row": 2036,
          "column": 36
        },
        "end": {
          "row": 2036,
          "column": 47
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Constness",
        "start": {
          "row": 2036,
          "column": 37
        },
        "end": {
          "row": 2036,
          "column": 46
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Abi",
        "start": {
          "row": 2036,
          "column": 49
        },
        "end": {
          "row": 2036,
          "column": 52
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 2036,
          "column": 54
        },
        "end": {
          "row": 2036,
          "column": 62
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Block>",
        "start": {
          "row": 2036,
          "column": 64
        },
        "end": {
          "row": 2036,
          "column": 72
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 2036,
          "column": 64
        },
        "end": {
          "row": 2036,
          "column": 65
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Block>",
        "start": {
          "row": 2036,
          "column": 65
        },
        "end": {
          "row": 2036,
          "column": 72
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Block",
        "start": {
          "row": 2036,
          "column": 66
        },
        "end": {
          "row": 2036,
          "column": 71
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A module declaration (`mod` or `pub mod`).",
        "start": {
          "row": 2037,
          "column": 5
        },
        "end": {
          "row": 2037,
          "column": 51
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2038,
          "column": 5
        },
        "end": {
          "row": 2038,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `mod foo;` or `mod foo { .. }`",
        "start": {
          "row": 2039,
          "column": 5
        },
        "end": {
          "row": 2039,
          "column": 44
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Mod(Mod)",
        "start": {
          "row": 2040,
          "column": 5
        },
        "end": {
          "row": 2040,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mod",
        "start": {
          "row": 2040,
          "column": 5
        },
        "end": {
          "row": 2040,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Mod)",
        "start": {
          "row": 2040,
          "column": 8
        },
        "end": {
          "row": 2040,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mod",
        "start": {
          "row": 2040,
          "column": 9
        },
        "end": {
          "row": 2040,
          "column": 12
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An external module (`extern` or `pub extern`).",
        "start": {
          "row": 2041,
          "column": 5
        },
        "end": {
          "row": 2041,
          "column": 55
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2042,
          "column": 5
        },
        "end": {
          "row": 2042,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `extern {}` or `extern \"C\" {}`",
        "start": {
          "row": 2043,
          "column": 5
        },
        "end": {
          "row": 2043,
          "column": 44
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "ForeignMod(ForeignMod)",
        "start": {
          "row": 2044,
          "column": 5
        },
        "end": {
          "row": 2044,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ForeignMod",
        "start": {
          "row": 2044,
          "column": 5
        },
        "end": {
          "row": 2044,
          "column": 15
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(ForeignMod)",
        "start": {
          "row": 2044,
          "column": 15
        },
        "end": {
          "row": 2044,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ForeignMod",
        "start": {
          "row": 2044,
          "column": 16
        },
        "end": {
          "row": 2044,
          "column": 26
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Module-level inline assembly (from `global_asm!()`)",
        "start": {
          "row": 2045,
          "column": 5
        },
        "end": {
          "row": 2045,
          "column": 60
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "GlobalAsm(P<GlobalAsm>)",
        "start": {
          "row": 2046,
          "column": 5
        },
        "end": {
          "row": 2046,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "GlobalAsm",
        "start": {
          "row": 2046,
          "column": 5
        },
        "end": {
          "row": 2046,
          "column": 14
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<GlobalAsm>)",
        "start": {
          "row": 2046,
          "column": 14
        },
        "end": {
          "row": 2046,
          "column": 28
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<GlobalAsm>",
        "start": {
          "row": 2046,
          "column": 15
        },
        "end": {
          "row": 2046,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 2046,
          "column": 15
        },
        "end": {
          "row": 2046,
          "column": 16
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<GlobalAsm>",
        "start": {
          "row": 2046,
          "column": 16
        },
        "end": {
          "row": 2046,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "GlobalAsm",
        "start": {
          "row": 2046,
          "column": 17
        },
        "end": {
          "row": 2046,
          "column": 26
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A type alias (`type` or `pub type`).",
        "start": {
          "row": 2047,
          "column": 5
        },
        "end": {
          "row": 2047,
          "column": 45
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2048,
          "column": 5
        },
        "end": {
          "row": 2048,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `type Foo = Bar<u8>;`",
        "start": {
          "row": 2049,
          "column": 5
        },
        "end": {
          "row": 2049,
          "column": 35
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Ty(P<Ty>, Generics)",
        "start": {
          "row": 2050,
          "column": 5
        },
        "end": {
          "row": 2050,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 2050,
          "column": 5
        },
        "end": {
          "row": 2050,
          "column": 7
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Ty>, Generics)",
        "start": {
          "row": 2050,
          "column": 7
        },
        "end": {
          "row": 2050,
          "column": 24
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 2050,
          "column": 8
        },
        "end": {
          "row": 2050,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 2050,
          "column": 8
        },
        "end": {
          "row": 2050,
          "column": 9
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 2050,
          "column": 9
        },
        "end": {
          "row": 2050,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 2050,
          "column": 10
        },
        "end": {
          "row": 2050,
          "column": 12
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 2050,
          "column": 15
        },
        "end": {
          "row": 2050,
          "column": 23
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An enum definition (`enum` or `pub enum`).",
        "start": {
          "row": 2051,
          "column": 5
        },
        "end": {
          "row": 2051,
          "column": 51
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2052,
          "column": 5
        },
        "end": {
          "row": 2052,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `enum Foo<A, B> { C<A>, D<B> }`",
        "start": {
          "row": 2053,
          "column": 5
        },
        "end": {
          "row": 2053,
          "column": 45
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Enum(EnumDef, Generics)",
        "start": {
          "row": 2054,
          "column": 5
        },
        "end": {
          "row": 2054,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Enum",
        "start": {
          "row": 2054,
          "column": 5
        },
        "end": {
          "row": 2054,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(EnumDef, Generics)",
        "start": {
          "row": 2054,
          "column": 9
        },
        "end": {
          "row": 2054,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "EnumDef",
        "start": {
          "row": 2054,
          "column": 10
        },
        "end": {
          "row": 2054,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 2054,
          "column": 19
        },
        "end": {
          "row": 2054,
          "column": 27
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A struct definition (`struct` or `pub struct`).",
        "start": {
          "row": 2055,
          "column": 5
        },
        "end": {
          "row": 2055,
          "column": 56
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2056,
          "column": 5
        },
        "end": {
          "row": 2056,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `struct Foo<A> { x: A }`",
        "start": {
          "row": 2057,
          "column": 5
        },
        "end": {
          "row": 2057,
          "column": 38
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Struct(VariantData, Generics)",
        "start": {
          "row": 2058,
          "column": 5
        },
        "end": {
          "row": 2058,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Struct",
        "start": {
          "row": 2058,
          "column": 5
        },
        "end": {
          "row": 2058,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(VariantData, Generics)",
        "start": {
          "row": 2058,
          "column": 11
        },
        "end": {
          "row": 2058,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 2058,
          "column": 12
        },
        "end": {
          "row": 2058,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 2058,
          "column": 25
        },
        "end": {
          "row": 2058,
          "column": 33
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A union definition (`union` or `pub union`).",
        "start": {
          "row": 2059,
          "column": 5
        },
        "end": {
          "row": 2059,
          "column": 53
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2060,
          "column": 5
        },
        "end": {
          "row": 2060,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `union Foo<A, B> { x: A, y: B }`",
        "start": {
          "row": 2061,
          "column": 5
        },
        "end": {
          "row": 2061,
          "column": 46
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Union(VariantData, Generics)",
        "start": {
          "row": 2062,
          "column": 5
        },
        "end": {
          "row": 2062,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Union",
        "start": {
          "row": 2062,
          "column": 5
        },
        "end": {
          "row": 2062,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(VariantData, Generics)",
        "start": {
          "row": 2062,
          "column": 10
        },
        "end": {
          "row": 2062,
          "column": 33
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "VariantData",
        "start": {
          "row": 2062,
          "column": 11
        },
        "end": {
          "row": 2062,
          "column": 22
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 2062,
          "column": 24
        },
        "end": {
          "row": 2062,
          "column": 32
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A Trait declaration (`trait` or `pub trait`).",
        "start": {
          "row": 2063,
          "column": 5
        },
        "end": {
          "row": 2063,
          "column": 54
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2064,
          "column": 5
        },
        "end": {
          "row": 2064,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `trait Foo { .. }`, `trait Foo<T> { .. }` or `auto trait Foo {}`",
        "start": {
          "row": 2065,
          "column": 5
        },
        "end": {
          "row": 2065,
          "column": 78
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Trait(IsAuto, Unsafety, Generics, TyParamBounds, Vec<TraitItem>)",
        "start": {
          "row": 2066,
          "column": 5
        },
        "end": {
          "row": 2066,
          "column": 69
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Trait",
        "start": {
          "row": 2066,
          "column": 5
        },
        "end": {
          "row": 2066,
          "column": 10
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(IsAuto, Unsafety, Generics, TyParamBounds, Vec<TraitItem>)",
        "start": {
          "row": 2066,
          "column": 10
        },
        "end": {
          "row": 2066,
          "column": 69
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "IsAuto",
        "start": {
          "row": 2066,
          "column": 11
        },
        "end": {
          "row": 2066,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Unsafety",
        "start": {
          "row": 2066,
          "column": 19
        },
        "end": {
          "row": 2066,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 2066,
          "column": 29
        },
        "end": {
          "row": 2066,
          "column": 37
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParamBounds",
        "start": {
          "row": 2066,
          "column": 39
        },
        "end": {
          "row": 2066,
          "column": 52
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<TraitItem>",
        "start": {
          "row": 2066,
          "column": 54
        },
        "end": {
          "row": 2066,
          "column": 68
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 2066,
          "column": 54
        },
        "end": {
          "row": 2066,
          "column": 57
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<TraitItem>",
        "start": {
          "row": 2066,
          "column": 57
        },
        "end": {
          "row": 2066,
          "column": 68
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TraitItem",
        "start": {
          "row": 2066,
          "column": 58
        },
        "end": {
          "row": 2066,
          "column": 67
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Trait alias",
        "start": {
          "row": 2067,
          "column": 5
        },
        "end": {
          "row": 2067,
          "column": 20
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2068,
          "column": 5
        },
        "end": {
          "row": 2068,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `trait Foo = Bar + Quux;`",
        "start": {
          "row": 2069,
          "column": 5
        },
        "end": {
          "row": 2069,
          "column": 39
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "TraitAlias(Generics, TyParamBounds)",
        "start": {
          "row": 2070,
          "column": 5
        },
        "end": {
          "row": 2070,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TraitAlias",
        "start": {
          "row": 2070,
          "column": 5
        },
        "end": {
          "row": 2070,
          "column": 15
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Generics, TyParamBounds)",
        "start": {
          "row": 2070,
          "column": 15
        },
        "end": {
          "row": 2070,
          "column": 40
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 2070,
          "column": 16
        },
        "end": {
          "row": 2070,
          "column": 24
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TyParamBounds",
        "start": {
          "row": 2070,
          "column": 26
        },
        "end": {
          "row": 2070,
          "column": 39
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An implementation.",
        "start": {
          "row": 2071,
          "column": 5
        },
        "end": {
          "row": 2071,
          "column": 27
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2072,
          "column": 5
        },
        "end": {
          "row": 2072,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `impl<A> Foo<A> { .. }` or `impl<A> Trait for Foo<A> { .. }`",
        "start": {
          "row": 2073,
          "column": 5
        },
        "end": {
          "row": 2073,
          "column": 74
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Impl(Unsafety,\n             ImplPolarity,\n             Defaultness,\n             Generics,\n             Option<TraitRef>, // (optional) trait this impl implements\n             P<Ty>, // self\n             Vec<ImplItem>)",
        "start": {
          "row": 2074,
          "column": 5
        },
        "end": {
          "row": 2080,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Impl",
        "start": {
          "row": 2074,
          "column": 5
        },
        "end": {
          "row": 2074,
          "column": 9
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Unsafety,\n             ImplPolarity,\n             Defaultness,\n             Generics,\n             Option<TraitRef>, // (optional) trait this impl implements\n             P<Ty>, // self\n             Vec<ImplItem>)",
        "start": {
          "row": 2074,
          "column": 9
        },
        "end": {
          "row": 2080,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Unsafety",
        "start": {
          "row": 2074,
          "column": 10
        },
        "end": {
          "row": 2074,
          "column": 18
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ImplPolarity",
        "start": {
          "row": 2075,
          "column": 14
        },
        "end": {
          "row": 2075,
          "column": 26
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Defaultness",
        "start": {
          "row": 2076,
          "column": 14
        },
        "end": {
          "row": 2076,
          "column": 25
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 2077,
          "column": 14
        },
        "end": {
          "row": 2077,
          "column": 22
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Option<TraitRef>",
        "start": {
          "row": 2078,
          "column": 14
        },
        "end": {
          "row": 2078,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Option",
        "start": {
          "row": 2078,
          "column": 14
        },
        "end": {
          "row": 2078,
          "column": 20
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<TraitRef>",
        "start": {
          "row": 2078,
          "column": 20
        },
        "end": {
          "row": 2078,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "TraitRef",
        "start": {
          "row": 2078,
          "column": 21
        },
        "end": {
          "row": 2078,
          "column": 29
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// (optional) trait this impl implements",
        "start": {
          "row": 2078,
          "column": 32
        },
        "end": {
          "row": 2078,
          "column": 72
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 2079,
          "column": 14
        },
        "end": {
          "row": 2079,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 2079,
          "column": 14
        },
        "end": {
          "row": 2079,
          "column": 15
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 2079,
          "column": 15
        },
        "end": {
          "row": 2079,
          "column": 19
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 2079,
          "column": 16
        },
        "end": {
          "row": 2079,
          "column": 18
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// self",
        "start": {
          "row": 2079,
          "column": 21
        },
        "end": {
          "row": 2079,
          "column": 28
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<ImplItem>",
        "start": {
          "row": 2080,
          "column": 14
        },
        "end": {
          "row": 2080,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 2080,
          "column": 14
        },
        "end": {
          "row": 2080,
          "column": 17
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<ImplItem>",
        "start": {
          "row": 2080,
          "column": 17
        },
        "end": {
          "row": 2080,
          "column": 27
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ImplItem",
        "start": {
          "row": 2080,
          "column": 18
        },
        "end": {
          "row": 2080,
          "column": 26
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A macro invocation.",
        "start": {
          "row": 2081,
          "column": 5
        },
        "end": {
          "row": 2081,
          "column": 28
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 2082,
          "column": 5
        },
        "end": {
          "row": 2082,
          "column": 8
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// E.g. `macro_rules! foo { .. }` or `foo!(..)`",
        "start": {
          "row": 2083,
          "column": 5
        },
        "end": {
          "row": 2083,
          "column": 53
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Mac(Mac)",
        "start": {
          "row": 2084,
          "column": 5
        },
        "end": {
          "row": 2084,
          "column": 13
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 2084,
          "column": 5
        },
        "end": {
          "row": 2084,
          "column": 8
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(Mac)",
        "start": {
          "row": 2084,
          "column": 8
        },
        "end": {
          "row": 2084,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 2084,
          "column": 9
        },
        "end": {
          "row": 2084,
          "column": 12
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A macro definition.",
        "start": {
          "row": 2086,
          "column": 5
        },
        "end": {
          "row": 2086,
          "column": 28
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "MacroDef(MacroDef)",
        "start": {
          "row": 2087,
          "column": 5
        },
        "end": {
          "row": 2087,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "MacroDef",
        "start": {
          "row": 2087,
          "column": 5
        },
        "end": {
          "row": 2087,
          "column": 13
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(MacroDef)",
        "start": {
          "row": 2087,
          "column": 13
        },
        "end": {
          "row": 2087,
          "column": 23
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "MacroDef",
        "start": {
          "row": 2087,
          "column": 14
        },
        "end": {
          "row": 2087,
          "column": 22
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl ItemKind {\n    pub fn descriptive_variant(&self) -> &str {\n        match *self {\n            ItemKind::ExternCrate(..) => \"extern crate\",\n            ItemKind::Use(..) => \"use\",\n            ItemKind::Static(..) => \"static item\",\n            ItemKind::Const(..) => \"constant item\",\n            ItemKind::Fn(..) => \"function\",\n            ItemKind::Mod(..) => \"module\",\n            ItemKind::ForeignMod(..) => \"foreign module\",\n            ItemKind::GlobalAsm(..) => \"global asm\",\n            ItemKind::Ty(..) => \"type alias\",\n            ItemKind::Enum(..) => \"enum\",\n            ItemKind::Struct(..) => \"struct\",\n            ItemKind::Union(..) => \"union\",\n            ItemKind::Trait(..) => \"trait\",\n            ItemKind::TraitAlias(..) => \"trait alias\",\n            ItemKind::Mac(..) |\n            ItemKind::MacroDef(..) |\n            ItemKind::Impl(..) => \"item\"\n        }\n    }\n}",
        "start": {
          "row": 2090,
          "column": 1
        },
        "end": {
          "row": 2112,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2090,
          "column": 6
        },
        "end": {
          "row": 2090,
          "column": 14
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn descriptive_variant(&self) -> &str {\n        match *self {\n            ItemKind::ExternCrate(..) => \"extern crate\",\n            ItemKind::Use(..) => \"use\",\n            ItemKind::Static(..) => \"static item\",\n            ItemKind::Const(..) => \"constant item\",\n            ItemKind::Fn(..) => \"function\",\n            ItemKind::Mod(..) => \"module\",\n            ItemKind::ForeignMod(..) => \"foreign module\",\n            ItemKind::GlobalAsm(..) => \"global asm\",\n            ItemKind::Ty(..) => \"type alias\",\n            ItemKind::Enum(..) => \"enum\",\n            ItemKind::Struct(..) => \"struct\",\n            ItemKind::Union(..) => \"union\",\n            ItemKind::Trait(..) => \"trait\",\n            ItemKind::TraitAlias(..) => \"trait alias\",\n            ItemKind::Mac(..) |\n            ItemKind::MacroDef(..) |\n            ItemKind::Impl(..) => \"item\"\n        }\n    }\n}",
        "start": {
          "row": 2090,
          "column": 15
        },
        "end": {
          "row": 2112,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn descriptive_variant(&self) -> &str {\n        match *self {\n            ItemKind::ExternCrate(..) => \"extern crate\",\n            ItemKind::Use(..) => \"use\",\n            ItemKind::Static(..) => \"static item\",\n            ItemKind::Const(..) => \"constant item\",\n            ItemKind::Fn(..) => \"function\",\n            ItemKind::Mod(..) => \"module\",\n            ItemKind::ForeignMod(..) => \"foreign module\",\n            ItemKind::GlobalAsm(..) => \"global asm\",\n            ItemKind::Ty(..) => \"type alias\",\n            ItemKind::Enum(..) => \"enum\",\n            ItemKind::Struct(..) => \"struct\",\n            ItemKind::Union(..) => \"union\",\n            ItemKind::Trait(..) => \"trait\",\n            ItemKind::TraitAlias(..) => \"trait alias\",\n            ItemKind::Mac(..) |\n            ItemKind::MacroDef(..) |\n            ItemKind::Impl(..) => \"item\"\n        }\n    }",
        "start": {
          "row": 2091,
          "column": 5
        },
        "end": {
          "row": 2111,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2091,
          "column": 5
        },
        "end": {
          "row": 2091,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "descriptive_variant",
        "start": {
          "row": 2091,
          "column": 12
        },
        "end": {
          "row": 2091,
          "column": 31
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 2091,
          "column": 31
        },
        "end": {
          "row": 2091,
          "column": 38
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 2091,
          "column": 32
        },
        "end": {
          "row": 2091,
          "column": 37
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 2091,
          "column": 33
        },
        "end": {
          "row": 2091,
          "column": 37
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&str",
        "start": {
          "row": 2091,
          "column": 42
        },
        "end": {
          "row": 2091,
          "column": 46
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 2091,
          "column": 43
        },
        "end": {
          "row": 2091,
          "column": 46
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            ItemKind::ExternCrate(..) => \"extern crate\",\n            ItemKind::Use(..) => \"use\",\n            ItemKind::Static(..) => \"static item\",\n            ItemKind::Const(..) => \"constant item\",\n            ItemKind::Fn(..) => \"function\",\n            ItemKind::Mod(..) => \"module\",\n            ItemKind::ForeignMod(..) => \"foreign module\",\n            ItemKind::GlobalAsm(..) => \"global asm\",\n            ItemKind::Ty(..) => \"type alias\",\n            ItemKind::Enum(..) => \"enum\",\n            ItemKind::Struct(..) => \"struct\",\n            ItemKind::Union(..) => \"union\",\n            ItemKind::Trait(..) => \"trait\",\n            ItemKind::TraitAlias(..) => \"trait alias\",\n            ItemKind::Mac(..) |\n            ItemKind::MacroDef(..) |\n            ItemKind::Impl(..) => \"item\"\n        }\n    }",
        "start": {
          "row": 2091,
          "column": 47
        },
        "end": {
          "row": 2111,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            ItemKind::ExternCrate(..) => \"extern crate\",\n            ItemKind::Use(..) => \"use\",\n            ItemKind::Static(..) => \"static item\",\n            ItemKind::Const(..) => \"constant item\",\n            ItemKind::Fn(..) => \"function\",\n            ItemKind::Mod(..) => \"module\",\n            ItemKind::ForeignMod(..) => \"foreign module\",\n            ItemKind::GlobalAsm(..) => \"global asm\",\n            ItemKind::Ty(..) => \"type alias\",\n            ItemKind::Enum(..) => \"enum\",\n            ItemKind::Struct(..) => \"struct\",\n            ItemKind::Union(..) => \"union\",\n            ItemKind::Trait(..) => \"trait\",\n            ItemKind::TraitAlias(..) => \"trait alias\",\n            ItemKind::Mac(..) |\n            ItemKind::MacroDef(..) |\n            ItemKind::Impl(..) => \"item\"\n        }",
        "start": {
          "row": 2092,
          "column": 9
        },
        "end": {
          "row": 2110,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 2092,
          "column": 15
        },
        "end": {
          "row": 2092,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 2092,
          "column": 16
        },
        "end": {
          "row": 2092,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            ItemKind::ExternCrate(..) => \"extern crate\",\n            ItemKind::Use(..) => \"use\",\n            ItemKind::Static(..) => \"static item\",\n            ItemKind::Const(..) => \"constant item\",\n            ItemKind::Fn(..) => \"function\",\n            ItemKind::Mod(..) => \"module\",\n            ItemKind::ForeignMod(..) => \"foreign module\",\n            ItemKind::GlobalAsm(..) => \"global asm\",\n            ItemKind::Ty(..) => \"type alias\",\n            ItemKind::Enum(..) => \"enum\",\n            ItemKind::Struct(..) => \"struct\",\n            ItemKind::Union(..) => \"union\",\n            ItemKind::Trait(..) => \"trait\",\n            ItemKind::TraitAlias(..) => \"trait alias\",\n            ItemKind::Mac(..) |\n            ItemKind::MacroDef(..) |\n            ItemKind::Impl(..) => \"item\"\n        }",
        "start": {
          "row": 2092,
          "column": 21
        },
        "end": {
          "row": 2110,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::ExternCrate(..) => \"extern crate\",",
        "start": {
          "row": 2093,
          "column": 13
        },
        "end": {
          "row": 2093,
          "column": 57
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::ExternCrate(..)",
        "start": {
          "row": 2093,
          "column": 13
        },
        "end": {
          "row": 2093,
          "column": 38
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::ExternCrate(..)",
        "start": {
          "row": 2093,
          "column": 13
        },
        "end": {
          "row": 2093,
          "column": 38
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::ExternCrate",
        "start": {
          "row": 2093,
          "column": 13
        },
        "end": {
          "row": 2093,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2093,
          "column": 13
        },
        "end": {
          "row": 2093,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ExternCrate",
        "start": {
          "row": 2093,
          "column": 23
        },
        "end": {
          "row": 2093,
          "column": 34
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2093,
          "column": 35
        },
        "end": {
          "row": 2093,
          "column": 37
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"extern crate\"",
        "start": {
          "row": 2093,
          "column": 42
        },
        "end": {
          "row": 2093,
          "column": 56
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::Use(..) => \"use\",",
        "start": {
          "row": 2094,
          "column": 13
        },
        "end": {
          "row": 2094,
          "column": 40
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::Use(..)",
        "start": {
          "row": 2094,
          "column": 13
        },
        "end": {
          "row": 2094,
          "column": 30
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::Use(..)",
        "start": {
          "row": 2094,
          "column": 13
        },
        "end": {
          "row": 2094,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::Use",
        "start": {
          "row": 2094,
          "column": 13
        },
        "end": {
          "row": 2094,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2094,
          "column": 13
        },
        "end": {
          "row": 2094,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Use",
        "start": {
          "row": 2094,
          "column": 23
        },
        "end": {
          "row": 2094,
          "column": 26
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2094,
          "column": 27
        },
        "end": {
          "row": 2094,
          "column": 29
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"use\"",
        "start": {
          "row": 2094,
          "column": 34
        },
        "end": {
          "row": 2094,
          "column": 39
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::Static(..) => \"static item\",",
        "start": {
          "row": 2095,
          "column": 13
        },
        "end": {
          "row": 2095,
          "column": 51
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::Static(..)",
        "start": {
          "row": 2095,
          "column": 13
        },
        "end": {
          "row": 2095,
          "column": 33
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::Static(..)",
        "start": {
          "row": 2095,
          "column": 13
        },
        "end": {
          "row": 2095,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::Static",
        "start": {
          "row": 2095,
          "column": 13
        },
        "end": {
          "row": 2095,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2095,
          "column": 13
        },
        "end": {
          "row": 2095,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Static",
        "start": {
          "row": 2095,
          "column": 23
        },
        "end": {
          "row": 2095,
          "column": 29
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2095,
          "column": 30
        },
        "end": {
          "row": 2095,
          "column": 32
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"static item\"",
        "start": {
          "row": 2095,
          "column": 37
        },
        "end": {
          "row": 2095,
          "column": 50
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::Const(..) => \"constant item\",",
        "start": {
          "row": 2096,
          "column": 13
        },
        "end": {
          "row": 2096,
          "column": 52
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::Const(..)",
        "start": {
          "row": 2096,
          "column": 13
        },
        "end": {
          "row": 2096,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::Const(..)",
        "start": {
          "row": 2096,
          "column": 13
        },
        "end": {
          "row": 2096,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::Const",
        "start": {
          "row": 2096,
          "column": 13
        },
        "end": {
          "row": 2096,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2096,
          "column": 13
        },
        "end": {
          "row": 2096,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Const",
        "start": {
          "row": 2096,
          "column": 23
        },
        "end": {
          "row": 2096,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2096,
          "column": 29
        },
        "end": {
          "row": 2096,
          "column": 31
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"constant item\"",
        "start": {
          "row": 2096,
          "column": 36
        },
        "end": {
          "row": 2096,
          "column": 51
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::Fn(..) => \"function\",",
        "start": {
          "row": 2097,
          "column": 13
        },
        "end": {
          "row": 2097,
          "column": 44
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::Fn(..)",
        "start": {
          "row": 2097,
          "column": 13
        },
        "end": {
          "row": 2097,
          "column": 29
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::Fn(..)",
        "start": {
          "row": 2097,
          "column": 13
        },
        "end": {
          "row": 2097,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::Fn",
        "start": {
          "row": 2097,
          "column": 13
        },
        "end": {
          "row": 2097,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2097,
          "column": 13
        },
        "end": {
          "row": 2097,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Fn",
        "start": {
          "row": 2097,
          "column": 23
        },
        "end": {
          "row": 2097,
          "column": 25
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2097,
          "column": 26
        },
        "end": {
          "row": 2097,
          "column": 28
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"function\"",
        "start": {
          "row": 2097,
          "column": 33
        },
        "end": {
          "row": 2097,
          "column": 43
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::Mod(..) => \"module\",",
        "start": {
          "row": 2098,
          "column": 13
        },
        "end": {
          "row": 2098,
          "column": 43
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::Mod(..)",
        "start": {
          "row": 2098,
          "column": 13
        },
        "end": {
          "row": 2098,
          "column": 30
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::Mod(..)",
        "start": {
          "row": 2098,
          "column": 13
        },
        "end": {
          "row": 2098,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::Mod",
        "start": {
          "row": 2098,
          "column": 13
        },
        "end": {
          "row": 2098,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2098,
          "column": 13
        },
        "end": {
          "row": 2098,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mod",
        "start": {
          "row": 2098,
          "column": 23
        },
        "end": {
          "row": 2098,
          "column": 26
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2098,
          "column": 27
        },
        "end": {
          "row": 2098,
          "column": 29
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"module\"",
        "start": {
          "row": 2098,
          "column": 34
        },
        "end": {
          "row": 2098,
          "column": 42
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::ForeignMod(..) => \"foreign module\",",
        "start": {
          "row": 2099,
          "column": 13
        },
        "end": {
          "row": 2099,
          "column": 58
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::ForeignMod(..)",
        "start": {
          "row": 2099,
          "column": 13
        },
        "end": {
          "row": 2099,
          "column": 37
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::ForeignMod(..)",
        "start": {
          "row": 2099,
          "column": 13
        },
        "end": {
          "row": 2099,
          "column": 37
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::ForeignMod",
        "start": {
          "row": 2099,
          "column": 13
        },
        "end": {
          "row": 2099,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2099,
          "column": 13
        },
        "end": {
          "row": 2099,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ForeignMod",
        "start": {
          "row": 2099,
          "column": 23
        },
        "end": {
          "row": 2099,
          "column": 33
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2099,
          "column": 34
        },
        "end": {
          "row": 2099,
          "column": 36
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"foreign module\"",
        "start": {
          "row": 2099,
          "column": 41
        },
        "end": {
          "row": 2099,
          "column": 57
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::GlobalAsm(..) => \"global asm\",",
        "start": {
          "row": 2100,
          "column": 13
        },
        "end": {
          "row": 2100,
          "column": 53
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::GlobalAsm(..)",
        "start": {
          "row": 2100,
          "column": 13
        },
        "end": {
          "row": 2100,
          "column": 36
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::GlobalAsm(..)",
        "start": {
          "row": 2100,
          "column": 13
        },
        "end": {
          "row": 2100,
          "column": 36
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::GlobalAsm",
        "start": {
          "row": 2100,
          "column": 13
        },
        "end": {
          "row": 2100,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2100,
          "column": 13
        },
        "end": {
          "row": 2100,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "GlobalAsm",
        "start": {
          "row": 2100,
          "column": 23
        },
        "end": {
          "row": 2100,
          "column": 32
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2100,
          "column": 33
        },
        "end": {
          "row": 2100,
          "column": 35
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"global asm\"",
        "start": {
          "row": 2100,
          "column": 40
        },
        "end": {
          "row": 2100,
          "column": 52
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::Ty(..) => \"type alias\",",
        "start": {
          "row": 2101,
          "column": 13
        },
        "end": {
          "row": 2101,
          "column": 46
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::Ty(..)",
        "start": {
          "row": 2101,
          "column": 13
        },
        "end": {
          "row": 2101,
          "column": 29
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::Ty(..)",
        "start": {
          "row": 2101,
          "column": 13
        },
        "end": {
          "row": 2101,
          "column": 29
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::Ty",
        "start": {
          "row": 2101,
          "column": 13
        },
        "end": {
          "row": 2101,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2101,
          "column": 13
        },
        "end": {
          "row": 2101,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 2101,
          "column": 23
        },
        "end": {
          "row": 2101,
          "column": 25
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2101,
          "column": 26
        },
        "end": {
          "row": 2101,
          "column": 28
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"type alias\"",
        "start": {
          "row": 2101,
          "column": 33
        },
        "end": {
          "row": 2101,
          "column": 45
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::Enum(..) => \"enum\",",
        "start": {
          "row": 2102,
          "column": 13
        },
        "end": {
          "row": 2102,
          "column": 42
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::Enum(..)",
        "start": {
          "row": 2102,
          "column": 13
        },
        "end": {
          "row": 2102,
          "column": 31
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::Enum(..)",
        "start": {
          "row": 2102,
          "column": 13
        },
        "end": {
          "row": 2102,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::Enum",
        "start": {
          "row": 2102,
          "column": 13
        },
        "end": {
          "row": 2102,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2102,
          "column": 13
        },
        "end": {
          "row": 2102,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Enum",
        "start": {
          "row": 2102,
          "column": 23
        },
        "end": {
          "row": 2102,
          "column": 27
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2102,
          "column": 28
        },
        "end": {
          "row": 2102,
          "column": 30
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"enum\"",
        "start": {
          "row": 2102,
          "column": 35
        },
        "end": {
          "row": 2102,
          "column": 41
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::Struct(..) => \"struct\",",
        "start": {
          "row": 2103,
          "column": 13
        },
        "end": {
          "row": 2103,
          "column": 46
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::Struct(..)",
        "start": {
          "row": 2103,
          "column": 13
        },
        "end": {
          "row": 2103,
          "column": 33
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::Struct(..)",
        "start": {
          "row": 2103,
          "column": 13
        },
        "end": {
          "row": 2103,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::Struct",
        "start": {
          "row": 2103,
          "column": 13
        },
        "end": {
          "row": 2103,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2103,
          "column": 13
        },
        "end": {
          "row": 2103,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Struct",
        "start": {
          "row": 2103,
          "column": 23
        },
        "end": {
          "row": 2103,
          "column": 29
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2103,
          "column": 30
        },
        "end": {
          "row": 2103,
          "column": 32
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"struct\"",
        "start": {
          "row": 2103,
          "column": 37
        },
        "end": {
          "row": 2103,
          "column": 45
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::Union(..) => \"union\",",
        "start": {
          "row": 2104,
          "column": 13
        },
        "end": {
          "row": 2104,
          "column": 44
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::Union(..)",
        "start": {
          "row": 2104,
          "column": 13
        },
        "end": {
          "row": 2104,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::Union(..)",
        "start": {
          "row": 2104,
          "column": 13
        },
        "end": {
          "row": 2104,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::Union",
        "start": {
          "row": 2104,
          "column": 13
        },
        "end": {
          "row": 2104,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2104,
          "column": 13
        },
        "end": {
          "row": 2104,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Union",
        "start": {
          "row": 2104,
          "column": 23
        },
        "end": {
          "row": 2104,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2104,
          "column": 29
        },
        "end": {
          "row": 2104,
          "column": 31
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"union\"",
        "start": {
          "row": 2104,
          "column": 36
        },
        "end": {
          "row": 2104,
          "column": 43
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::Trait(..) => \"trait\",",
        "start": {
          "row": 2105,
          "column": 13
        },
        "end": {
          "row": 2105,
          "column": 44
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::Trait(..)",
        "start": {
          "row": 2105,
          "column": 13
        },
        "end": {
          "row": 2105,
          "column": 32
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::Trait(..)",
        "start": {
          "row": 2105,
          "column": 13
        },
        "end": {
          "row": 2105,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::Trait",
        "start": {
          "row": 2105,
          "column": 13
        },
        "end": {
          "row": 2105,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2105,
          "column": 13
        },
        "end": {
          "row": 2105,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Trait",
        "start": {
          "row": 2105,
          "column": 23
        },
        "end": {
          "row": 2105,
          "column": 28
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2105,
          "column": 29
        },
        "end": {
          "row": 2105,
          "column": 31
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"trait\"",
        "start": {
          "row": 2105,
          "column": 36
        },
        "end": {
          "row": 2105,
          "column": 43
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::TraitAlias(..) => \"trait alias\",",
        "start": {
          "row": 2106,
          "column": 13
        },
        "end": {
          "row": 2106,
          "column": 55
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::TraitAlias(..)",
        "start": {
          "row": 2106,
          "column": 13
        },
        "end": {
          "row": 2106,
          "column": 37
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::TraitAlias(..)",
        "start": {
          "row": 2106,
          "column": 13
        },
        "end": {
          "row": 2106,
          "column": 37
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::TraitAlias",
        "start": {
          "row": 2106,
          "column": 13
        },
        "end": {
          "row": 2106,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2106,
          "column": 13
        },
        "end": {
          "row": 2106,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "TraitAlias",
        "start": {
          "row": 2106,
          "column": 23
        },
        "end": {
          "row": 2106,
          "column": 33
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2106,
          "column": 34
        },
        "end": {
          "row": 2106,
          "column": 36
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"trait alias\"",
        "start": {
          "row": 2106,
          "column": 41
        },
        "end": {
          "row": 2106,
          "column": 54
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ItemKind::Mac(..) |\n            ItemKind::MacroDef(..) |\n            ItemKind::Impl(..) => \"item\"",
        "start": {
          "row": 2107,
          "column": 13
        },
        "end": {
          "row": 2109,
          "column": 41
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ItemKind::Mac(..) |\n            ItemKind::MacroDef(..) |\n            ItemKind::Impl(..)",
        "start": {
          "row": 2107,
          "column": 13
        },
        "end": {
          "row": 2109,
          "column": 31
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "ItemKind::Mac(..) |\n            ItemKind::MacroDef(..) |\n            ItemKind::Impl(..)",
        "start": {
          "row": 2107,
          "column": 13
        },
        "end": {
          "row": 2109,
          "column": 31
        }
      },
      {
        "kind": "or_pattern",
        "name": "query",
        "text": "ItemKind::Mac(..) |\n            ItemKind::MacroDef(..)",
        "start": {
          "row": 2107,
          "column": 13
        },
        "end": {
          "row": 2108,
          "column": 35
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::Mac(..)",
        "start": {
          "row": 2107,
          "column": 13
        },
        "end": {
          "row": 2107,
          "column": 30
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::Mac",
        "start": {
          "row": 2107,
          "column": 13
        },
        "end": {
          "row": 2107,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2107,
          "column": 13
        },
        "end": {
          "row": 2107,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Mac",
        "start": {
          "row": 2107,
          "column": 23
        },
        "end": {
          "row": 2107,
          "column": 26
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2107,
          "column": 27
        },
        "end": {
          "row": 2107,
          "column": 29
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::MacroDef(..)",
        "start": {
          "row": 2108,
          "column": 13
        },
        "end": {
          "row": 2108,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::MacroDef",
        "start": {
          "row": 2108,
          "column": 13
        },
        "end": {
          "row": 2108,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2108,
          "column": 13
        },
        "end": {
          "row": 2108,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "MacroDef",
        "start": {
          "row": 2108,
          "column": 23
        },
        "end": {
          "row": 2108,
          "column": 31
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2108,
          "column": 32
        },
        "end": {
          "row": 2108,
          "column": 34
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ItemKind::Impl(..)",
        "start": {
          "row": 2109,
          "column": 13
        },
        "end": {
          "row": 2109,
          "column": 31
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ItemKind::Impl",
        "start": {
          "row": 2109,
          "column": 13
        },
        "end": {
          "row": 2109,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ItemKind",
        "start": {
          "row": 2109,
          "column": 13
        },
        "end": {
          "row": 2109,
          "column": 21
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Impl",
        "start": {
          "row": 2109,
          "column": 23
        },
        "end": {
          "row": 2109,
          "column": 27
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2109,
          "column": 28
        },
        "end": {
          "row": 2109,
          "column": 30
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"item\"",
        "start": {
          "row": 2109,
          "column": 35
        },
        "end": {
          "row": 2109,
          "column": 41
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 2114,
          "column": 1
        },
        "end": {
          "row": 2114,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 2114,
          "column": 3
        },
        "end": {
          "row": 2114,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 2114,
          "column": 3
        },
        "end": {
          "row": 2114,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 2114,
          "column": 9
        },
        "end": {
          "row": 2114,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 2114,
          "column": 10
        },
        "end": {
          "row": 2114,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 2114,
          "column": 10
        },
        "end": {
          "row": 2114,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 2114,
          "column": 17
        },
        "end": {
          "row": 2114,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 2114,
          "column": 17
        },
        "end": {
          "row": 2114,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 2114,
          "column": 28
        },
        "end": {
          "row": 2114,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 2114,
          "column": 28
        },
        "end": {
          "row": 2114,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 2114,
          "column": 32
        },
        "end": {
          "row": 2114,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 2114,
          "column": 32
        },
        "end": {
          "row": 2114,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 2114,
          "column": 48
        },
        "end": {
          "row": 2114,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 2114,
          "column": 48
        },
        "end": {
          "row": 2114,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 2114,
          "column": 64
        },
        "end": {
          "row": 2114,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 2114,
          "column": 64
        },
        "end": {
          "row": 2114,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 2114,
          "column": 70
        },
        "end": {
          "row": 2114,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 2114,
          "column": 70
        },
        "end": {
          "row": 2114,
          "column": 75
        }
      },
      {
        "kind": "struct_item",
        "name": "query",
        "text": "pub struct ForeignItem {\n    pub ident: Ident,\n    pub attrs: Vec<Attribute>,\n    pub node: ForeignItemKind,\n    pub id: NodeId,\n    pub span: Span,\n    pub vis: Visibility,\n}",
        "start": {
          "row": 2115,
          "column": 1
        },
        "end": {
          "row": 2122,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2115,
          "column": 1
        },
        "end": {
          "row": 2115,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ForeignItem",
        "start": {
          "row": 2115,
          "column": 12
        },
        "end": {
          "row": 2115,
          "column": 23
        }
      },
      {
        "kind": "field_declaration_list",
        "name": "query",
        "text": "{\n    pub ident: Ident,\n    pub attrs: Vec<Attribute>,\n    pub node: ForeignItemKind,\n    pub id: NodeId,\n    pub span: Span,\n    pub vis: Visibility,\n}",
        "start": {
          "row": 2115,
          "column": 24
        },
        "end": {
          "row": 2122,
          "column": 2
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub ident: Ident",
        "start": {
          "row": 2116,
          "column": 5
        },
        "end": {
          "row": 2116,
          "column": 21
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2116,
          "column": 5
        },
        "end": {
          "row": 2116,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "ident",
        "start": {
          "row": 2116,
          "column": 9
        },
        "end": {
          "row": 2116,
          "column": 14
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ident",
        "start": {
          "row": 2116,
          "column": 16
        },
        "end": {
          "row": 2116,
          "column": 21
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub attrs: Vec<Attribute>",
        "start": {
          "row": 2117,
          "column": 5
        },
        "end": {
          "row": 2117,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2117,
          "column": 5
        },
        "end": {
          "row": 2117,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "attrs",
        "start": {
          "row": 2117,
          "column": 9
        },
        "end": {
          "row": 2117,
          "column": 14
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "Vec<Attribute>",
        "start": {
          "row": 2117,
          "column": 16
        },
        "end": {
          "row": 2117,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Vec",
        "start": {
          "row": 2117,
          "column": 16
        },
        "end": {
          "row": 2117,
          "column": 19
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Attribute>",
        "start": {
          "row": 2117,
          "column": 19
        },
        "end": {
          "row": 2117,
          "column": 30
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Attribute",
        "start": {
          "row": 2117,
          "column": 20
        },
        "end": {
          "row": 2117,
          "column": 29
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub node: ForeignItemKind",
        "start": {
          "row": 2118,
          "column": 5
        },
        "end": {
          "row": 2118,
          "column": 30
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2118,
          "column": 5
        },
        "end": {
          "row": 2118,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "node",
        "start": {
          "row": 2118,
          "column": 9
        },
        "end": {
          "row": 2118,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ForeignItemKind",
        "start": {
          "row": 2118,
          "column": 15
        },
        "end": {
          "row": 2118,
          "column": 30
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub id: NodeId",
        "start": {
          "row": 2119,
          "column": 5
        },
        "end": {
          "row": 2119,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2119,
          "column": 5
        },
        "end": {
          "row": 2119,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "id",
        "start": {
          "row": 2119,
          "column": 9
        },
        "end": {
          "row": 2119,
          "column": 11
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "NodeId",
        "start": {
          "row": 2119,
          "column": 13
        },
        "end": {
          "row": 2119,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub span: Span",
        "start": {
          "row": 2120,
          "column": 5
        },
        "end": {
          "row": 2120,
          "column": 19
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2120,
          "column": 5
        },
        "end": {
          "row": 2120,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "span",
        "start": {
          "row": 2120,
          "column": 9
        },
        "end": {
          "row": 2120,
          "column": 13
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Span",
        "start": {
          "row": 2120,
          "column": 15
        },
        "end": {
          "row": 2120,
          "column": 19
        }
      },
      {
        "kind": "field_declaration",
        "name": "query",
        "text": "pub vis: Visibility",
        "start": {
          "row": 2121,
          "column": 5
        },
        "end": {
          "row": 2121,
          "column": 24
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2121,
          "column": 5
        },
        "end": {
          "row": 2121,
          "column": 8
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "vis",
        "start": {
          "row": 2121,
          "column": 9
        },
        "end": {
          "row": 2121,
          "column": 12
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Visibility",
        "start": {
          "row": 2121,
          "column": 14
        },
        "end": {
          "row": 2121,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// An item within an `extern` block",
        "start": {
          "row": 2124,
          "column": 1
        },
        "end": {
          "row": 2124,
          "column": 37
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]",
        "start": {
          "row": 2125,
          "column": 1
        },
        "end": {
          "row": 2125,
          "column": 77
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 2125,
          "column": 3
        },
        "end": {
          "row": 2125,
          "column": 76
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "derive",
        "start": {
          "row": 2125,
          "column": 3
        },
        "end": {
          "row": 2125,
          "column": 9
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)",
        "start": {
          "row": 2125,
          "column": 9
        },
        "end": {
          "row": 2125,
          "column": 76
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 2125,
          "column": 10
        },
        "end": {
          "row": 2125,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Clone",
        "start": {
          "row": 2125,
          "column": 10
        },
        "end": {
          "row": 2125,
          "column": 15
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 2125,
          "column": 17
        },
        "end": {
          "row": 2125,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "PartialEq",
        "start": {
          "row": 2125,
          "column": 17
        },
        "end": {
          "row": 2125,
          "column": 26
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 2125,
          "column": 28
        },
        "end": {
          "row": 2125,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Eq",
        "start": {
          "row": 2125,
          "column": 28
        },
        "end": {
          "row": 2125,
          "column": 30
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 2125,
          "column": 32
        },
        "end": {
          "row": 2125,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcEncodable",
        "start": {
          "row": 2125,
          "column": 32
        },
        "end": {
          "row": 2125,
          "column": 46
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 2125,
          "column": 48
        },
        "end": {
          "row": 2125,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "RustcDecodable",
        "start": {
          "row": 2125,
          "column": 48
        },
        "end": {
          "row": 2125,
          "column": 62
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 2125,
          "column": 64
        },
        "end": {
          "row": 2125,
          "column": 68
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Hash",
        "start": {
          "row": 2125,
          "column": 64
        },
        "end": {
          "row": 2125,
          "column": 68
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 2125,
          "column": 70
        },
        "end": {
          "row": 2125,
          "column": 75
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Debug",
        "start": {
          "row": 2125,
          "column": 70
        },
        "end": {
          "row": 2125,
          "column": 75
        }
      },
      {
        "kind": "enum_item",
        "name": "query",
        "text": "pub enum ForeignItemKind {\n    /// A foreign function\n    Fn(P<FnDecl>, Generics),\n    /// A foreign static item (`static ext: u8`), with optional mutability\n    /// (the boolean is true when mutable)\n    Static(P<Ty>, bool),\n    /// A foreign type\n    Ty,\n}",
        "start": {
          "row": 2126,
          "column": 1
        },
        "end": {
          "row": 2134,
          "column": 2
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2126,
          "column": 1
        },
        "end": {
          "row": 2126,
          "column": 4
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ForeignItemKind",
        "start": {
          "row": 2126,
          "column": 10
        },
        "end": {
          "row": 2126,
          "column": 25
        }
      },
      {
        "kind": "enum_variant_list",
        "name": "query",
        "text": "{\n    /// A foreign function\n    Fn(P<FnDecl>, Generics),\n    /// A foreign static item (`static ext: u8`), with optional mutability\n    /// (the boolean is true when mutable)\n    Static(P<Ty>, bool),\n    /// A foreign type\n    Ty,\n}",
        "start": {
          "row": 2126,
          "column": 26
        },
        "end": {
          "row": 2134,
          "column": 2
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A foreign function",
        "start": {
          "row": 2127,
          "column": 5
        },
        "end": {
          "row": 2127,
          "column": 27
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Fn(P<FnDecl>, Generics)",
        "start": {
          "row": 2128,
          "column": 5
        },
        "end": {
          "row": 2128,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Fn",
        "start": {
          "row": 2128,
          "column": 5
        },
        "end": {
          "row": 2128,
          "column": 7
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<FnDecl>, Generics)",
        "start": {
          "row": 2128,
          "column": 7
        },
        "end": {
          "row": 2128,
          "column": 28
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<FnDecl>",
        "start": {
          "row": 2128,
          "column": 8
        },
        "end": {
          "row": 2128,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 2128,
          "column": 8
        },
        "end": {
          "row": 2128,
          "column": 9
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<FnDecl>",
        "start": {
          "row": 2128,
          "column": 9
        },
        "end": {
          "row": 2128,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "FnDecl",
        "start": {
          "row": 2128,
          "column": 10
        },
        "end": {
          "row": 2128,
          "column": 16
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Generics",
        "start": {
          "row": 2128,
          "column": 19
        },
        "end": {
          "row": 2128,
          "column": 27
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A foreign static item (`static ext: u8`), with optional mutability",
        "start": {
          "row": 2129,
          "column": 5
        },
        "end": {
          "row": 2129,
          "column": 75
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// (the boolean is true when mutable)",
        "start": {
          "row": 2130,
          "column": 5
        },
        "end": {
          "row": 2130,
          "column": 43
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Static(P<Ty>, bool)",
        "start": {
          "row": 2131,
          "column": 5
        },
        "end": {
          "row": 2131,
          "column": 24
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Static",
        "start": {
          "row": 2131,
          "column": 5
        },
        "end": {
          "row": 2131,
          "column": 11
        }
      },
      {
        "kind": "ordered_field_declaration_list",
        "name": "query",
        "text": "(P<Ty>, bool)",
        "start": {
          "row": 2131,
          "column": 11
        },
        "end": {
          "row": 2131,
          "column": 24
        }
      },
      {
        "kind": "generic_type",
        "name": "query",
        "text": "P<Ty>",
        "start": {
          "row": 2131,
          "column": 12
        },
        "end": {
          "row": 2131,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "P",
        "start": {
          "row": 2131,
          "column": 12
        },
        "end": {
          "row": 2131,
          "column": 13
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Ty>",
        "start": {
          "row": 2131,
          "column": 13
        },
        "end": {
          "row": 2131,
          "column": 17
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 2131,
          "column": 14
        },
        "end": {
          "row": 2131,
          "column": 16
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "bool",
        "start": {
          "row": 2131,
          "column": 19
        },
        "end": {
          "row": 2131,
          "column": 23
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// A foreign type",
        "start": {
          "row": 2132,
          "column": 5
        },
        "end": {
          "row": 2132,
          "column": 23
        }
      },
      {
        "kind": "enum_variant",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 2133,
          "column": 5
        },
        "end": {
          "row": 2133,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 2133,
          "column": 5
        },
        "end": {
          "row": 2133,
          "column": 7
        }
      },
      {
        "kind": "impl_item",
        "name": "query",
        "text": "impl ForeignItemKind {\n    pub fn descriptive_variant(&self) -> &str {\n        match *self {\n            ForeignItemKind::Fn(..) => \"foreign function\",\n            ForeignItemKind::Static(..) => \"foreign static item\",\n            ForeignItemKind::Ty => \"foreign type\",\n        }\n    }\n}",
        "start": {
          "row": 2136,
          "column": 1
        },
        "end": {
          "row": 2144,
          "column": 2
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "ForeignItemKind",
        "start": {
          "row": 2136,
          "column": 6
        },
        "end": {
          "row": 2136,
          "column": 21
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    pub fn descriptive_variant(&self) -> &str {\n        match *self {\n            ForeignItemKind::Fn(..) => \"foreign function\",\n            ForeignItemKind::Static(..) => \"foreign static item\",\n            ForeignItemKind::Ty => \"foreign type\",\n        }\n    }\n}",
        "start": {
          "row": 2136,
          "column": 22
        },
        "end": {
          "row": 2144,
          "column": 2
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn descriptive_variant(&self) -> &str {\n        match *self {\n            ForeignItemKind::Fn(..) => \"foreign function\",\n            ForeignItemKind::Static(..) => \"foreign static item\",\n            ForeignItemKind::Ty => \"foreign type\",\n        }\n    }",
        "start": {
          "row": 2137,
          "column": 5
        },
        "end": {
          "row": 2143,
          "column": 6
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 2137,
          "column": 5
        },
        "end": {
          "row": 2137,
          "column": 8
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "descriptive_variant",
        "start": {
          "row": 2137,
          "column": 12
        },
        "end": {
          "row": 2137,
          "column": 31
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "(&self)",
        "start": {
          "row": 2137,
          "column": 31
        },
        "end": {
          "row": 2137,
          "column": 38
        }
      },
      {
        "kind": "self_parameter",
        "name": "query",
        "text": "&self",
        "start": {
          "row": 2137,
          "column": 32
        },
        "end": {
          "row": 2137,
          "column": 37
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 2137,
          "column": 33
        },
        "end": {
          "row": 2137,
          "column": 37
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&str",
        "start": {
          "row": 2137,
          "column": 42
        },
        "end": {
          "row": 2137,
          "column": 46
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 2137,
          "column": 43
        },
        "end": {
          "row": 2137,
          "column": 46
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        match *self {\n            ForeignItemKind::Fn(..) => \"foreign function\",\n            ForeignItemKind::Static(..) => \"foreign static item\",\n            ForeignItemKind::Ty => \"foreign type\",\n        }\n    }",
        "start": {
          "row": 2137,
          "column": 47
        },
        "end": {
          "row": 2143,
          "column": 6
        }
      },
      {
        "kind": "match_expression",
        "name": "query",
        "text": "match *self {\n            ForeignItemKind::Fn(..) => \"foreign function\",\n            ForeignItemKind::Static(..) => \"foreign static item\",\n            ForeignItemKind::Ty => \"foreign type\",\n        }",
        "start": {
          "row": 2138,
          "column": 9
        },
        "end": {
          "row": 2142,
          "column": 10
        }
      },
      {
        "kind": "unary_expression",
        "name": "query",
        "text": "*self",
        "start": {
          "row": 2138,
          "column": 15
        },
        "end": {
          "row": 2138,
          "column": 20
        }
      },
      {
        "kind": "self",
        "name": "query",
        "text": "self",
        "start": {
          "row": 2138,
          "column": 16
        },
        "end": {
          "row": 2138,
          "column": 20
        }
      },
      {
        "kind": "match_block",
        "name": "query",
        "text": "{\n            ForeignItemKind::Fn(..) => \"foreign function\",\n            ForeignItemKind::Static(..) => \"foreign static item\",\n            ForeignItemKind::Ty => \"foreign type\",\n        }",
        "start": {
          "row": 2138,
          "column": 21
        },
        "end": {
          "row": 2142,
          "column": 10
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ForeignItemKind::Fn(..) => \"foreign function\",",
        "start": {
          "row": 2139,
          "column": 13
        },
        "end": {
          "row": 2139,
          "column": 59
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ForeignItemKind::Fn(..)",
        "start": {
          "row": 2139,
          "column": 13
        },
        "end": {
          "row": 2139,
          "column": 36
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ForeignItemKind::Fn(..)",
        "start": {
          "row": 2139,
          "column": 13
        },
        "end": {
          "row": 2139,
          "column": 36
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ForeignItemKind::Fn",
        "start": {
          "row": 2139,
          "column": 13
        },
        "end": {
          "row": 2139,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ForeignItemKind",
        "start": {
          "row": 2139,
          "column": 13
        },
        "end": {
          "row": 2139,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Fn",
        "start": {
          "row": 2139,
          "column": 30
        },
        "end": {
          "row": 2139,
          "column": 32
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2139,
          "column": 33
        },
        "end": {
          "row": 2139,
          "column": 35
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"foreign function\"",
        "start": {
          "row": 2139,
          "column": 40
        },
        "end": {
          "row": 2139,
          "column": 58
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ForeignItemKind::Static(..) => \"foreign static item\",",
        "start": {
          "row": 2140,
          "column": 13
        },
        "end": {
          "row": 2140,
          "column": 66
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ForeignItemKind::Static(..)",
        "start": {
          "row": 2140,
          "column": 13
        },
        "end": {
          "row": 2140,
          "column": 40
        }
      },
      {
        "kind": "tuple_struct_pattern",
        "name": "query",
        "text": "ForeignItemKind::Static(..)",
        "start": {
          "row": 2140,
          "column": 13
        },
        "end": {
          "row": 2140,
          "column": 40
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ForeignItemKind::Static",
        "start": {
          "row": 2140,
          "column": 13
        },
        "end": {
          "row": 2140,
          "column": 36
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ForeignItemKind",
        "start": {
          "row": 2140,
          "column": 13
        },
        "end": {
          "row": 2140,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Static",
        "start": {
          "row": 2140,
          "column": 30
        },
        "end": {
          "row": 2140,
          "column": 36
        }
      },
      {
        "kind": "remaining_field_pattern",
        "name": "query",
        "text": "..",
        "start": {
          "row": 2140,
          "column": 37
        },
        "end": {
          "row": 2140,
          "column": 39
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"foreign static item\"",
        "start": {
          "row": 2140,
          "column": 44
        },
        "end": {
          "row": 2140,
          "column": 65
        }
      },
      {
        "kind": "match_arm",
        "name": "query",
        "text": "ForeignItemKind::Ty => \"foreign type\",",
        "start": {
          "row": 2141,
          "column": 13
        },
        "end": {
          "row": 2141,
          "column": 51
        }
      },
      {
        "kind": "match_pattern",
        "name": "query",
        "text": "ForeignItemKind::Ty",
        "start": {
          "row": 2141,
          "column": 13
        },
        "end": {
          "row": 2141,
          "column": 32
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "ForeignItemKind::Ty",
        "start": {
          "row": 2141,
          "column": 13
        },
        "end": {
          "row": 2141,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "ForeignItemKind",
        "start": {
          "row": 2141,
          "column": 13
        },
        "end": {
          "row": 2141,
          "column": 28
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Ty",
        "start": {
          "row": 2141,
          "column": 30
        },
        "end": {
          "row": 2141,
          "column": 32
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"foreign type\"",
        "start": {
          "row": 2141,
          "column": 36
        },
        "end": {
          "row": 2141,
          "column": 50
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[cfg(test)]",
        "start": {
          "row": 2146,
          "column": 1
        },
        "end": {
          "row": 2146,
          "column": 13
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "cfg(test)",
        "start": {
          "row": 2146,
          "column": 3
        },
        "end": {
          "row": 2146,
          "column": 12
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "cfg",
        "start": {
          "row": 2146,
          "column": 3
        },
        "end": {
          "row": 2146,
          "column": 6
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(test)",
        "start": {
          "row": 2146,
          "column": 6
        },
        "end": {
          "row": 2146,
          "column": 12
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "test",
        "start": {
          "row": 2146,
          "column": 7
        },
        "end": {
          "row": 2146,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "test",
        "start": {
          "row": 2146,
          "column": 7
        },
        "end": {
          "row": 2146,
          "column": 11
        }
      },
      {
        "kind": "mod_item",
        "name": "query",
        "text": "mod tests {\n    use serialize;\n    use super::*;\n\n    // are ASTs encodable?\n    #[test]\n    fn check_asts_encodable() {\n        fn assert_encodable<T: serialize::Encodable>() {}\n        assert_encodable::<Crate>();\n    }\n}",
        "start": {
          "row": 2147,
          "column": 1
        },
        "end": {
          "row": 2157,
          "column": 2
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tests",
        "start": {
          "row": 2147,
          "column": 5
        },
        "end": {
          "row": 2147,
          "column": 10
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    use serialize;\n    use super::*;\n\n    // are ASTs encodable?\n    #[test]\n    fn check_asts_encodable() {\n        fn assert_encodable<T: serialize::Encodable>() {}\n        assert_encodable::<Crate>();\n    }\n}",
        "start": {
          "row": 2147,
          "column": 11
        },
        "end": {
          "row": 2157,
          "column": 2
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use serialize;",
        "start": {
          "row": 2148,
          "column": 5
        },
        "end": {
          "row": 2148,
          "column": 19
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "serialize",
        "start": {
          "row": 2148,
          "column": 9
        },
        "end": {
          "row": 2148,
          "column": 18
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use super::*;",
        "start": {
          "row": 2149,
          "column": 5
        },
        "end": {
          "row": 2149,
          "column": 18
        }
      },
      {
        "kind": "use_wildcard",
        "name": "query",
        "text": "super::*",
        "start": {
          "row": 2149,
          "column": 9
        },
        "end": {
          "row": 2149,
          "column": 17
        }
      },
      {
        "kind": "super",
        "name": "query",
        "text": "super",
        "start": {
          "row": 2149,
          "column": 9
        },
        "end": {
          "row": 2149,
          "column": 14
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// are ASTs encodable?",
        "start": {
          "row": 2151,
          "column": 5
        },
        "end": {
          "row": 2151,
          "column": 27
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[test]",
        "start": {
          "row": 2152,
          "column": 5
        },
        "end": {
          "row": 2152,
          "column": 12
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "test",
        "start": {
          "row": 2152,
          "column": 7
        },
        "end": {
          "row": 2152,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "test",
        "start": {
          "row": 2152,
          "column": 7
        },
        "end": {
          "row": 2152,
          "column": 11
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn check_asts_encodable() {\n        fn assert_encodable<T: serialize::Encodable>() {}\n        assert_encodable::<Crate>();\n    }",
        "start": {
          "row": 2153,
          "column": 5
        },
        "end": {
          "row": 2156,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "check_asts_encodable",
        "start": {
          "row": 2153,
          "column": 8
        },
        "end": {
          "row": 2153,
          "column": 28
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "()",
        "start": {
          "row": 2153,
          "column": 28
        },
        "end": {
          "row": 2153,
          "column": 30
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        fn assert_encodable<T: serialize::Encodable>() {}\n        assert_encodable::<Crate>();\n    }",
        "start": {
          "row": 2153,
          "column": 31
        },
        "end": {
          "row": 2156,
          "column": 6
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn assert_encodable<T: serialize::Encodable>() {}",
        "start": {
          "row": 2154,
          "column": 9
        },
        "end": {
          "row": 2154,
          "column": 58
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "assert_encodable",
        "start": {
          "row": 2154,
          "column": 12
        },
        "end": {
          "row": 2154,
          "column": 28
        }
      },
      {
        "kind": "type_parameters",
        "name": "query",
        "text": "<T: serialize::Encodable>",
        "start": {
          "row": 2154,
          "column": 28
        },
        "end": {
          "row": 2154,
          "column": 53
        }
      },
      {
        "kind": "constrained_type_parameter",
        "name": "query",
        "text": "T: serialize::Encodable",
        "start": {
          "row": 2154,
          "column": 29
        },
        "end": {
          "row": 2154,
          "column": 52
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "T",
        "start": {
          "row": 2154,
          "column": 29
        },
        "end": {
          "row": 2154,
          "column": 30
        }
      },
      {
        "kind": "trait_bounds",
        "name": "query",
        "text": ": serialize::Encodable",
        "start": {
          "row": 2154,
          "column": 30
        },
        "end": {
          "row": 2154,
          "column": 52
        }
      },
      {
        "kind": "scoped_type_identifier",
        "name": "query",
        "text": "serialize::Encodable",
        "start": {
          "row": 2154,
          "column": 32
        },
        "end": {
          "row": 2154,
          "column": 52
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "serialize",
        "start": {
          "row": 2154,
          "column": 32
        },
        "end": {
          "row": 2154,
          "column": 41
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Encodable",
        "start": {
          "row": 2154,
          "column": 43
        },
        "end": {
          "row": 2154,
          "column": 52
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "()",
        "start": {
          "row": 2154,
          "column": 53
        },
        "end": {
          "row": 2154,
          "column": 55
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{}",
        "start": {
          "row": 2154,
          "column": 56
        },
        "end": {
          "row": 2154,
          "column": 58
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "assert_encodable::<Crate>()",
        "start": {
          "row": 2155,
          "column": 9
        },
        "end": {
          "row": 2155,
          "column": 36
        }
      },
      {
        "kind": "generic_function",
        "name": "query",
        "text": "assert_encodable::<Crate>",
        "start": {
          "row": 2155,
          "column": 9
        },
        "end": {
          "row": 2155,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "assert_encodable",
        "start": {
          "row": 2155,
          "column": 9
        },
        "end": {
          "row": 2155,
          "column": 25
        }
      },
      {
        "kind": "type_arguments",
        "name": "query",
        "text": "<Crate>",
        "start": {
          "row": 2155,
          "column": 27
        },
        "end": {
          "row": 2155,
          "column": 34
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Crate",
        "start": {
          "row": 2155,
          "column": 28
        },
        "end": {
          "row": 2155,
          "column": 33
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 2155,
          "column": 34
        },
        "end": {
          "row": 2155,
          "column": 36
        }
      }
    ]
  }
]
