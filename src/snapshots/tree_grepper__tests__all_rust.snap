---
source: src/main.rs
expression: "call(&[\"tree-grepper\", \"-q\", \"rust\", \"(_)\", \"--format=pretty-json\", \"--sort\",\n       \"vendor/tree-sitter-rust\"])"

---
[
  {
    "file": "vendor/tree-sitter-rust/bindings/rust/build.rs",
    "file_type": "rust",
    "matches": [
      {
        "kind": "source_file",
        "name": "query",
        "text": "fn main() {\n    let src_dir = std::path::Path::new(\"src\");\n    let mut config = cc::Build::new();\n    config.include(&src_dir);\n    config\n        .flag_if_supported(\"-Wno-unused-parameter\")\n        .flag_if_supported(\"-Wno-unused-but-set-variable\")\n        .flag_if_supported(\"-Wno-trigraphs\");\n    let parser_path = src_dir.join(\"parser.c\");\n    let scanner_path = src_dir.join(\"scanner.c\");\n    println!(\"cargo:rerun-if-changed={}\", parser_path.to_str().unwrap());\n    println!(\"cargo:rerun-if-changed={}\", scanner_path.to_str().unwrap());\n    config.file(&parser_path);\n    config.file(&scanner_path);\n    config.compile(\"parser-scanner\");\n}\n",
        "start": {
          "row": 0,
          "column": 0
        },
        "end": {
          "row": 16,
          "column": 0
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn main() {\n    let src_dir = std::path::Path::new(\"src\");\n    let mut config = cc::Build::new();\n    config.include(&src_dir);\n    config\n        .flag_if_supported(\"-Wno-unused-parameter\")\n        .flag_if_supported(\"-Wno-unused-but-set-variable\")\n        .flag_if_supported(\"-Wno-trigraphs\");\n    let parser_path = src_dir.join(\"parser.c\");\n    let scanner_path = src_dir.join(\"scanner.c\");\n    println!(\"cargo:rerun-if-changed={}\", parser_path.to_str().unwrap());\n    println!(\"cargo:rerun-if-changed={}\", scanner_path.to_str().unwrap());\n    config.file(&parser_path);\n    config.file(&scanner_path);\n    config.compile(\"parser-scanner\");\n}",
        "start": {
          "row": 0,
          "column": 0
        },
        "end": {
          "row": 15,
          "column": 1
        }
      },
      {
        "kind": "fn",
        "name": "query",
        "text": "fn",
        "start": {
          "row": 0,
          "column": 0
        },
        "end": {
          "row": 0,
          "column": 2
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "main",
        "start": {
          "row": 0,
          "column": 3
        },
        "end": {
          "row": 0,
          "column": 7
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "()",
        "start": {
          "row": 0,
          "column": 7
        },
        "end": {
          "row": 0,
          "column": 9
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 0,
          "column": 7
        },
        "end": {
          "row": 0,
          "column": 8
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 0,
          "column": 8
        },
        "end": {
          "row": 0,
          "column": 9
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n    let src_dir = std::path::Path::new(\"src\");\n    let mut config = cc::Build::new();\n    config.include(&src_dir);\n    config\n        .flag_if_supported(\"-Wno-unused-parameter\")\n        .flag_if_supported(\"-Wno-unused-but-set-variable\")\n        .flag_if_supported(\"-Wno-trigraphs\");\n    let parser_path = src_dir.join(\"parser.c\");\n    let scanner_path = src_dir.join(\"scanner.c\");\n    println!(\"cargo:rerun-if-changed={}\", parser_path.to_str().unwrap());\n    println!(\"cargo:rerun-if-changed={}\", scanner_path.to_str().unwrap());\n    config.file(&parser_path);\n    config.file(&scanner_path);\n    config.compile(\"parser-scanner\");\n}",
        "start": {
          "row": 0,
          "column": 10
        },
        "end": {
          "row": 15,
          "column": 1
        }
      },
      {
        "kind": "{",
        "name": "query",
        "text": "{",
        "start": {
          "row": 0,
          "column": 10
        },
        "end": {
          "row": 0,
          "column": 11
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let src_dir = std::path::Path::new(\"src\");",
        "start": {
          "row": 1,
          "column": 4
        },
        "end": {
          "row": 1,
          "column": 46
        }
      },
      {
        "kind": "let",
        "name": "query",
        "text": "let",
        "start": {
          "row": 1,
          "column": 4
        },
        "end": {
          "row": 1,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "src_dir",
        "start": {
          "row": 1,
          "column": 8
        },
        "end": {
          "row": 1,
          "column": 15
        }
      },
      {
        "kind": "=",
        "name": "query",
        "text": "=",
        "start": {
          "row": 1,
          "column": 16
        },
        "end": {
          "row": 1,
          "column": 17
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "std::path::Path::new(\"src\")",
        "start": {
          "row": 1,
          "column": 18
        },
        "end": {
          "row": 1,
          "column": 45
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "std::path::Path::new",
        "start": {
          "row": 1,
          "column": 18
        },
        "end": {
          "row": 1,
          "column": 38
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "std::path::Path",
        "start": {
          "row": 1,
          "column": 18
        },
        "end": {
          "row": 1,
          "column": 33
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "std::path",
        "start": {
          "row": 1,
          "column": 18
        },
        "end": {
          "row": 1,
          "column": 27
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "std",
        "start": {
          "row": 1,
          "column": 18
        },
        "end": {
          "row": 1,
          "column": 21
        }
      },
      {
        "kind": "::",
        "name": "query",
        "text": "::",
        "start": {
          "row": 1,
          "column": 21
        },
        "end": {
          "row": 1,
          "column": 23
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "path",
        "start": {
          "row": 1,
          "column": 23
        },
        "end": {
          "row": 1,
          "column": 27
        }
      },
      {
        "kind": "::",
        "name": "query",
        "text": "::",
        "start": {
          "row": 1,
          "column": 27
        },
        "end": {
          "row": 1,
          "column": 29
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Path",
        "start": {
          "row": 1,
          "column": 29
        },
        "end": {
          "row": 1,
          "column": 33
        }
      },
      {
        "kind": "::",
        "name": "query",
        "text": "::",
        "start": {
          "row": 1,
          "column": 33
        },
        "end": {
          "row": 1,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 1,
          "column": 35
        },
        "end": {
          "row": 1,
          "column": 38
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(\"src\")",
        "start": {
          "row": 1,
          "column": 38
        },
        "end": {
          "row": 1,
          "column": 45
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 1,
          "column": 38
        },
        "end": {
          "row": 1,
          "column": 39
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"src\"",
        "start": {
          "row": 1,
          "column": 39
        },
        "end": {
          "row": 1,
          "column": 44
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 1,
          "column": 39
        },
        "end": {
          "row": 1,
          "column": 40
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 1,
          "column": 43
        },
        "end": {
          "row": 1,
          "column": 44
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 1,
          "column": 44
        },
        "end": {
          "row": 1,
          "column": 45
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 1,
          "column": 45
        },
        "end": {
          "row": 1,
          "column": 46
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let mut config = cc::Build::new();",
        "start": {
          "row": 2,
          "column": 4
        },
        "end": {
          "row": 2,
          "column": 38
        }
      },
      {
        "kind": "let",
        "name": "query",
        "text": "let",
        "start": {
          "row": 2,
          "column": 4
        },
        "end": {
          "row": 2,
          "column": 7
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 2,
          "column": 8
        },
        "end": {
          "row": 2,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "config",
        "start": {
          "row": 2,
          "column": 12
        },
        "end": {
          "row": 2,
          "column": 18
        }
      },
      {
        "kind": "=",
        "name": "query",
        "text": "=",
        "start": {
          "row": 2,
          "column": 19
        },
        "end": {
          "row": 2,
          "column": 20
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "cc::Build::new()",
        "start": {
          "row": 2,
          "column": 21
        },
        "end": {
          "row": 2,
          "column": 37
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "cc::Build::new",
        "start": {
          "row": 2,
          "column": 21
        },
        "end": {
          "row": 2,
          "column": 35
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "cc::Build",
        "start": {
          "row": 2,
          "column": 21
        },
        "end": {
          "row": 2,
          "column": 30
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "cc",
        "start": {
          "row": 2,
          "column": 21
        },
        "end": {
          "row": 2,
          "column": 23
        }
      },
      {
        "kind": "::",
        "name": "query",
        "text": "::",
        "start": {
          "row": 2,
          "column": 23
        },
        "end": {
          "row": 2,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Build",
        "start": {
          "row": 2,
          "column": 25
        },
        "end": {
          "row": 2,
          "column": 30
        }
      },
      {
        "kind": "::",
        "name": "query",
        "text": "::",
        "start": {
          "row": 2,
          "column": 30
        },
        "end": {
          "row": 2,
          "column": 32
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 2,
          "column": 32
        },
        "end": {
          "row": 2,
          "column": 35
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 2,
          "column": 35
        },
        "end": {
          "row": 2,
          "column": 37
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 2,
          "column": 35
        },
        "end": {
          "row": 2,
          "column": 36
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 2,
          "column": 36
        },
        "end": {
          "row": 2,
          "column": 37
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 2,
          "column": 37
        },
        "end": {
          "row": 2,
          "column": 38
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "config.include(&src_dir)",
        "start": {
          "row": 3,
          "column": 4
        },
        "end": {
          "row": 3,
          "column": 28
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "config.include",
        "start": {
          "row": 3,
          "column": 4
        },
        "end": {
          "row": 3,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "config",
        "start": {
          "row": 3,
          "column": 4
        },
        "end": {
          "row": 3,
          "column": 10
        }
      },
      {
        "kind": ".",
        "name": "query",
        "text": ".",
        "start": {
          "row": 3,
          "column": 10
        },
        "end": {
          "row": 3,
          "column": 11
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "include",
        "start": {
          "row": 3,
          "column": 11
        },
        "end": {
          "row": 3,
          "column": 18
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(&src_dir)",
        "start": {
          "row": 3,
          "column": 18
        },
        "end": {
          "row": 3,
          "column": 28
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 3,
          "column": 18
        },
        "end": {
          "row": 3,
          "column": 19
        }
      },
      {
        "kind": "reference_expression",
        "name": "query",
        "text": "&src_dir",
        "start": {
          "row": 3,
          "column": 19
        },
        "end": {
          "row": 3,
          "column": 27
        }
      },
      {
        "kind": "&",
        "name": "query",
        "text": "&",
        "start": {
          "row": 3,
          "column": 19
        },
        "end": {
          "row": 3,
          "column": 20
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "src_dir",
        "start": {
          "row": 3,
          "column": 20
        },
        "end": {
          "row": 3,
          "column": 27
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 3,
          "column": 27
        },
        "end": {
          "row": 3,
          "column": 28
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 3,
          "column": 28
        },
        "end": {
          "row": 3,
          "column": 29
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "config\n        .flag_if_supported(\"-Wno-unused-parameter\")\n        .flag_if_supported(\"-Wno-unused-but-set-variable\")\n        .flag_if_supported(\"-Wno-trigraphs\")",
        "start": {
          "row": 4,
          "column": 4
        },
        "end": {
          "row": 7,
          "column": 44
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "config\n        .flag_if_supported(\"-Wno-unused-parameter\")\n        .flag_if_supported(\"-Wno-unused-but-set-variable\")\n        .flag_if_supported",
        "start": {
          "row": 4,
          "column": 4
        },
        "end": {
          "row": 7,
          "column": 26
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "config\n        .flag_if_supported(\"-Wno-unused-parameter\")\n        .flag_if_supported(\"-Wno-unused-but-set-variable\")",
        "start": {
          "row": 4,
          "column": 4
        },
        "end": {
          "row": 6,
          "column": 58
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "config\n        .flag_if_supported(\"-Wno-unused-parameter\")\n        .flag_if_supported",
        "start": {
          "row": 4,
          "column": 4
        },
        "end": {
          "row": 6,
          "column": 26
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "config\n        .flag_if_supported(\"-Wno-unused-parameter\")",
        "start": {
          "row": 4,
          "column": 4
        },
        "end": {
          "row": 5,
          "column": 51
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "config\n        .flag_if_supported",
        "start": {
          "row": 4,
          "column": 4
        },
        "end": {
          "row": 5,
          "column": 26
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "config",
        "start": {
          "row": 4,
          "column": 4
        },
        "end": {
          "row": 4,
          "column": 10
        }
      },
      {
        "kind": ".",
        "name": "query",
        "text": ".",
        "start": {
          "row": 5,
          "column": 8
        },
        "end": {
          "row": 5,
          "column": 9
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "flag_if_supported",
        "start": {
          "row": 5,
          "column": 9
        },
        "end": {
          "row": 5,
          "column": 26
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(\"-Wno-unused-parameter\")",
        "start": {
          "row": 5,
          "column": 26
        },
        "end": {
          "row": 5,
          "column": 51
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 5,
          "column": 26
        },
        "end": {
          "row": 5,
          "column": 27
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"-Wno-unused-parameter\"",
        "start": {
          "row": 5,
          "column": 27
        },
        "end": {
          "row": 5,
          "column": 50
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 5,
          "column": 27
        },
        "end": {
          "row": 5,
          "column": 28
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 5,
          "column": 49
        },
        "end": {
          "row": 5,
          "column": 50
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 5,
          "column": 50
        },
        "end": {
          "row": 5,
          "column": 51
        }
      },
      {
        "kind": ".",
        "name": "query",
        "text": ".",
        "start": {
          "row": 6,
          "column": 8
        },
        "end": {
          "row": 6,
          "column": 9
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "flag_if_supported",
        "start": {
          "row": 6,
          "column": 9
        },
        "end": {
          "row": 6,
          "column": 26
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(\"-Wno-unused-but-set-variable\")",
        "start": {
          "row": 6,
          "column": 26
        },
        "end": {
          "row": 6,
          "column": 58
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 6,
          "column": 26
        },
        "end": {
          "row": 6,
          "column": 27
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"-Wno-unused-but-set-variable\"",
        "start": {
          "row": 6,
          "column": 27
        },
        "end": {
          "row": 6,
          "column": 57
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 6,
          "column": 27
        },
        "end": {
          "row": 6,
          "column": 28
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 6,
          "column": 56
        },
        "end": {
          "row": 6,
          "column": 57
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 6,
          "column": 57
        },
        "end": {
          "row": 6,
          "column": 58
        }
      },
      {
        "kind": ".",
        "name": "query",
        "text": ".",
        "start": {
          "row": 7,
          "column": 8
        },
        "end": {
          "row": 7,
          "column": 9
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "flag_if_supported",
        "start": {
          "row": 7,
          "column": 9
        },
        "end": {
          "row": 7,
          "column": 26
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(\"-Wno-trigraphs\")",
        "start": {
          "row": 7,
          "column": 26
        },
        "end": {
          "row": 7,
          "column": 44
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 7,
          "column": 26
        },
        "end": {
          "row": 7,
          "column": 27
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"-Wno-trigraphs\"",
        "start": {
          "row": 7,
          "column": 27
        },
        "end": {
          "row": 7,
          "column": 43
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 7,
          "column": 27
        },
        "end": {
          "row": 7,
          "column": 28
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 7,
          "column": 42
        },
        "end": {
          "row": 7,
          "column": 43
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 7,
          "column": 43
        },
        "end": {
          "row": 7,
          "column": 44
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 7,
          "column": 44
        },
        "end": {
          "row": 7,
          "column": 45
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let parser_path = src_dir.join(\"parser.c\");",
        "start": {
          "row": 8,
          "column": 4
        },
        "end": {
          "row": 8,
          "column": 47
        }
      },
      {
        "kind": "let",
        "name": "query",
        "text": "let",
        "start": {
          "row": 8,
          "column": 4
        },
        "end": {
          "row": 8,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "parser_path",
        "start": {
          "row": 8,
          "column": 8
        },
        "end": {
          "row": 8,
          "column": 19
        }
      },
      {
        "kind": "=",
        "name": "query",
        "text": "=",
        "start": {
          "row": 8,
          "column": 20
        },
        "end": {
          "row": 8,
          "column": 21
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "src_dir.join(\"parser.c\")",
        "start": {
          "row": 8,
          "column": 22
        },
        "end": {
          "row": 8,
          "column": 46
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "src_dir.join",
        "start": {
          "row": 8,
          "column": 22
        },
        "end": {
          "row": 8,
          "column": 34
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "src_dir",
        "start": {
          "row": 8,
          "column": 22
        },
        "end": {
          "row": 8,
          "column": 29
        }
      },
      {
        "kind": ".",
        "name": "query",
        "text": ".",
        "start": {
          "row": 8,
          "column": 29
        },
        "end": {
          "row": 8,
          "column": 30
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "join",
        "start": {
          "row": 8,
          "column": 30
        },
        "end": {
          "row": 8,
          "column": 34
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(\"parser.c\")",
        "start": {
          "row": 8,
          "column": 34
        },
        "end": {
          "row": 8,
          "column": 46
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 8,
          "column": 34
        },
        "end": {
          "row": 8,
          "column": 35
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"parser.c\"",
        "start": {
          "row": 8,
          "column": 35
        },
        "end": {
          "row": 8,
          "column": 45
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 8,
          "column": 35
        },
        "end": {
          "row": 8,
          "column": 36
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 8,
          "column": 44
        },
        "end": {
          "row": 8,
          "column": 45
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 8,
          "column": 45
        },
        "end": {
          "row": 8,
          "column": 46
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 8,
          "column": 46
        },
        "end": {
          "row": 8,
          "column": 47
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let scanner_path = src_dir.join(\"scanner.c\");",
        "start": {
          "row": 9,
          "column": 4
        },
        "end": {
          "row": 9,
          "column": 49
        }
      },
      {
        "kind": "let",
        "name": "query",
        "text": "let",
        "start": {
          "row": 9,
          "column": 4
        },
        "end": {
          "row": 9,
          "column": 7
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "scanner_path",
        "start": {
          "row": 9,
          "column": 8
        },
        "end": {
          "row": 9,
          "column": 20
        }
      },
      {
        "kind": "=",
        "name": "query",
        "text": "=",
        "start": {
          "row": 9,
          "column": 21
        },
        "end": {
          "row": 9,
          "column": 22
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "src_dir.join(\"scanner.c\")",
        "start": {
          "row": 9,
          "column": 23
        },
        "end": {
          "row": 9,
          "column": 48
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "src_dir.join",
        "start": {
          "row": 9,
          "column": 23
        },
        "end": {
          "row": 9,
          "column": 35
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "src_dir",
        "start": {
          "row": 9,
          "column": 23
        },
        "end": {
          "row": 9,
          "column": 30
        }
      },
      {
        "kind": ".",
        "name": "query",
        "text": ".",
        "start": {
          "row": 9,
          "column": 30
        },
        "end": {
          "row": 9,
          "column": 31
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "join",
        "start": {
          "row": 9,
          "column": 31
        },
        "end": {
          "row": 9,
          "column": 35
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(\"scanner.c\")",
        "start": {
          "row": 9,
          "column": 35
        },
        "end": {
          "row": 9,
          "column": 48
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 9,
          "column": 35
        },
        "end": {
          "row": 9,
          "column": 36
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"scanner.c\"",
        "start": {
          "row": 9,
          "column": 36
        },
        "end": {
          "row": 9,
          "column": 47
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 9,
          "column": 36
        },
        "end": {
          "row": 9,
          "column": 37
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 9,
          "column": 46
        },
        "end": {
          "row": 9,
          "column": 47
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 9,
          "column": 47
        },
        "end": {
          "row": 9,
          "column": 48
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 9,
          "column": 48
        },
        "end": {
          "row": 9,
          "column": 49
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "println!(\"cargo:rerun-if-changed={}\", parser_path.to_str().unwrap())",
        "start": {
          "row": 10,
          "column": 4
        },
        "end": {
          "row": 10,
          "column": 72
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "println",
        "start": {
          "row": 10,
          "column": 4
        },
        "end": {
          "row": 10,
          "column": 11
        }
      },
      {
        "kind": "!",
        "name": "query",
        "text": "!",
        "start": {
          "row": 10,
          "column": 11
        },
        "end": {
          "row": 10,
          "column": 12
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(\"cargo:rerun-if-changed={}\", parser_path.to_str().unwrap())",
        "start": {
          "row": 10,
          "column": 12
        },
        "end": {
          "row": 10,
          "column": 72
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 10,
          "column": 12
        },
        "end": {
          "row": 10,
          "column": 13
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"cargo:rerun-if-changed={}\"",
        "start": {
          "row": 10,
          "column": 13
        },
        "end": {
          "row": 10,
          "column": 40
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 10,
          "column": 13
        },
        "end": {
          "row": 10,
          "column": 14
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 10,
          "column": 39
        },
        "end": {
          "row": 10,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "parser_path",
        "start": {
          "row": 10,
          "column": 42
        },
        "end": {
          "row": 10,
          "column": 53
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "to_str",
        "start": {
          "row": 10,
          "column": 54
        },
        "end": {
          "row": 10,
          "column": 60
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "()",
        "start": {
          "row": 10,
          "column": 60
        },
        "end": {
          "row": 10,
          "column": 62
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 10,
          "column": 60
        },
        "end": {
          "row": 10,
          "column": 61
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 10,
          "column": 61
        },
        "end": {
          "row": 10,
          "column": 62
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "unwrap",
        "start": {
          "row": 10,
          "column": 63
        },
        "end": {
          "row": 10,
          "column": 69
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "()",
        "start": {
          "row": 10,
          "column": 69
        },
        "end": {
          "row": 10,
          "column": 71
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 10,
          "column": 69
        },
        "end": {
          "row": 10,
          "column": 70
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 10,
          "column": 70
        },
        "end": {
          "row": 10,
          "column": 71
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 10,
          "column": 71
        },
        "end": {
          "row": 10,
          "column": 72
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 10,
          "column": 72
        },
        "end": {
          "row": 10,
          "column": 73
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "println!(\"cargo:rerun-if-changed={}\", scanner_path.to_str().unwrap())",
        "start": {
          "row": 11,
          "column": 4
        },
        "end": {
          "row": 11,
          "column": 73
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "println",
        "start": {
          "row": 11,
          "column": 4
        },
        "end": {
          "row": 11,
          "column": 11
        }
      },
      {
        "kind": "!",
        "name": "query",
        "text": "!",
        "start": {
          "row": 11,
          "column": 11
        },
        "end": {
          "row": 11,
          "column": 12
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(\"cargo:rerun-if-changed={}\", scanner_path.to_str().unwrap())",
        "start": {
          "row": 11,
          "column": 12
        },
        "end": {
          "row": 11,
          "column": 73
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 11,
          "column": 12
        },
        "end": {
          "row": 11,
          "column": 13
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"cargo:rerun-if-changed={}\"",
        "start": {
          "row": 11,
          "column": 13
        },
        "end": {
          "row": 11,
          "column": 40
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 11,
          "column": 13
        },
        "end": {
          "row": 11,
          "column": 14
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 11,
          "column": 39
        },
        "end": {
          "row": 11,
          "column": 40
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "scanner_path",
        "start": {
          "row": 11,
          "column": 42
        },
        "end": {
          "row": 11,
          "column": 54
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "to_str",
        "start": {
          "row": 11,
          "column": 55
        },
        "end": {
          "row": 11,
          "column": 61
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "()",
        "start": {
          "row": 11,
          "column": 61
        },
        "end": {
          "row": 11,
          "column": 63
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 11,
          "column": 61
        },
        "end": {
          "row": 11,
          "column": 62
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 11,
          "column": 62
        },
        "end": {
          "row": 11,
          "column": 63
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "unwrap",
        "start": {
          "row": 11,
          "column": 64
        },
        "end": {
          "row": 11,
          "column": 70
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "()",
        "start": {
          "row": 11,
          "column": 70
        },
        "end": {
          "row": 11,
          "column": 72
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 11,
          "column": 70
        },
        "end": {
          "row": 11,
          "column": 71
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 11,
          "column": 71
        },
        "end": {
          "row": 11,
          "column": 72
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 11,
          "column": 72
        },
        "end": {
          "row": 11,
          "column": 73
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 11,
          "column": 73
        },
        "end": {
          "row": 11,
          "column": 74
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "config.file(&parser_path)",
        "start": {
          "row": 12,
          "column": 4
        },
        "end": {
          "row": 12,
          "column": 29
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "config.file",
        "start": {
          "row": 12,
          "column": 4
        },
        "end": {
          "row": 12,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "config",
        "start": {
          "row": 12,
          "column": 4
        },
        "end": {
          "row": 12,
          "column": 10
        }
      },
      {
        "kind": ".",
        "name": "query",
        "text": ".",
        "start": {
          "row": 12,
          "column": 10
        },
        "end": {
          "row": 12,
          "column": 11
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "file",
        "start": {
          "row": 12,
          "column": 11
        },
        "end": {
          "row": 12,
          "column": 15
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(&parser_path)",
        "start": {
          "row": 12,
          "column": 15
        },
        "end": {
          "row": 12,
          "column": 29
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 12,
          "column": 15
        },
        "end": {
          "row": 12,
          "column": 16
        }
      },
      {
        "kind": "reference_expression",
        "name": "query",
        "text": "&parser_path",
        "start": {
          "row": 12,
          "column": 16
        },
        "end": {
          "row": 12,
          "column": 28
        }
      },
      {
        "kind": "&",
        "name": "query",
        "text": "&",
        "start": {
          "row": 12,
          "column": 16
        },
        "end": {
          "row": 12,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "parser_path",
        "start": {
          "row": 12,
          "column": 17
        },
        "end": {
          "row": 12,
          "column": 28
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 12,
          "column": 28
        },
        "end": {
          "row": 12,
          "column": 29
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 12,
          "column": 29
        },
        "end": {
          "row": 12,
          "column": 30
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "config.file(&scanner_path)",
        "start": {
          "row": 13,
          "column": 4
        },
        "end": {
          "row": 13,
          "column": 30
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "config.file",
        "start": {
          "row": 13,
          "column": 4
        },
        "end": {
          "row": 13,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "config",
        "start": {
          "row": 13,
          "column": 4
        },
        "end": {
          "row": 13,
          "column": 10
        }
      },
      {
        "kind": ".",
        "name": "query",
        "text": ".",
        "start": {
          "row": 13,
          "column": 10
        },
        "end": {
          "row": 13,
          "column": 11
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "file",
        "start": {
          "row": 13,
          "column": 11
        },
        "end": {
          "row": 13,
          "column": 15
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(&scanner_path)",
        "start": {
          "row": 13,
          "column": 15
        },
        "end": {
          "row": 13,
          "column": 30
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 13,
          "column": 15
        },
        "end": {
          "row": 13,
          "column": 16
        }
      },
      {
        "kind": "reference_expression",
        "name": "query",
        "text": "&scanner_path",
        "start": {
          "row": 13,
          "column": 16
        },
        "end": {
          "row": 13,
          "column": 29
        }
      },
      {
        "kind": "&",
        "name": "query",
        "text": "&",
        "start": {
          "row": 13,
          "column": 16
        },
        "end": {
          "row": 13,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "scanner_path",
        "start": {
          "row": 13,
          "column": 17
        },
        "end": {
          "row": 13,
          "column": 29
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 13,
          "column": 29
        },
        "end": {
          "row": 13,
          "column": 30
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 13,
          "column": 30
        },
        "end": {
          "row": 13,
          "column": 31
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "config.compile(\"parser-scanner\")",
        "start": {
          "row": 14,
          "column": 4
        },
        "end": {
          "row": 14,
          "column": 36
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "config.compile",
        "start": {
          "row": 14,
          "column": 4
        },
        "end": {
          "row": 14,
          "column": 18
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "config",
        "start": {
          "row": 14,
          "column": 4
        },
        "end": {
          "row": 14,
          "column": 10
        }
      },
      {
        "kind": ".",
        "name": "query",
        "text": ".",
        "start": {
          "row": 14,
          "column": 10
        },
        "end": {
          "row": 14,
          "column": 11
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "compile",
        "start": {
          "row": 14,
          "column": 11
        },
        "end": {
          "row": 14,
          "column": 18
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(\"parser-scanner\")",
        "start": {
          "row": 14,
          "column": 18
        },
        "end": {
          "row": 14,
          "column": 36
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 14,
          "column": 18
        },
        "end": {
          "row": 14,
          "column": 19
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"parser-scanner\"",
        "start": {
          "row": 14,
          "column": 19
        },
        "end": {
          "row": 14,
          "column": 35
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 14,
          "column": 19
        },
        "end": {
          "row": 14,
          "column": 20
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 14,
          "column": 34
        },
        "end": {
          "row": 14,
          "column": 35
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 14,
          "column": 35
        },
        "end": {
          "row": 14,
          "column": 36
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 14,
          "column": 36
        },
        "end": {
          "row": 14,
          "column": 37
        }
      },
      {
        "kind": "}",
        "name": "query",
        "text": "}",
        "start": {
          "row": 15,
          "column": 0
        },
        "end": {
          "row": 15,
          "column": 1
        }
      }
    ]
  },
  {
    "file": "vendor/tree-sitter-rust/bindings/rust/lib.rs",
    "file_type": "rust",
    "matches": [
      {
        "kind": "source_file",
        "name": "query",
        "text": "// -*- coding: utf-8 -*-\n// ------------------------------------------------------------------------------------------------\n// Copyright © 2021, tree-sitter-rust authors.\n// See the LICENSE file in this repo for license details.\n// ------------------------------------------------------------------------------------------------\n\n//! This crate provides a Rust grammar for the [tree-sitter][] parsing library.\n//!\n//! Typically, you will use the [language][language func] function to add this grammar to a\n//! tree-sitter [Parser][], and then use the parser to parse some code:\n//!\n//! ```\n//! use tree_sitter::Parser;\n//!\n//! let code = r#\"\n//!     fn double(x: i32) -> i32 {\n//!         x * 2\n//!     }\n//! \"#;\n//! let mut parser = Parser::new();\n//! parser.set_language(tree_sitter_rust::language()).expect(\"Error loading Rust grammar\");\n//! let parsed = parser.parse(code, None);\n//! # let parsed = parsed.unwrap();\n//! # let root = parsed.root_node();\n//! # assert!(!root.has_error());\n//! ```\n//!\n//! [Language]: https://docs.rs/tree-sitter/*/tree_sitter/struct.Language.html\n//! [language func]: fn.language.html\n//! [Parser]: https://docs.rs/tree-sitter/*/tree_sitter/struct.Parser.html\n//! [tree-sitter]: https://tree-sitter.github.io/\n\nuse tree_sitter::Language;\n\nextern \"C\" {\n    fn tree_sitter_rust() -> Language;\n}\n\n/// Returns the tree-sitter [Language][] for this grammar.\n///\n/// [Language]: https://docs.rs/tree-sitter/*/tree_sitter/struct.Language.html\npub fn language() -> Language {\n    unsafe { tree_sitter_rust() }\n}\n\n/// The source of the Rust tree-sitter grammar description.\npub const GRAMMAR: &str = include_str!(\"../../grammar.js\");\n\n/// The syntax highlighting query for this language.\npub const HIGHLIGHT_QUERY: &str = include_str!(\"../../queries/highlights.scm\");\n\n/// The content of the [`node-types.json`][] file for this grammar.\n///\n/// [`node-types.json`]: https://tree-sitter.github.io/tree-sitter/using-parsers#static-node-types\npub const NODE_TYPES: &str = include_str!(\"../../src/node-types.json\");\n\n#[cfg(test)]\nmod tests {\n    #[test]\n    fn can_load_grammar() {\n        let mut parser = tree_sitter::Parser::new();\n        parser\n            .set_language(super::language())\n            .expect(\"Error loading Rust grammar\");\n    }\n}\n",
        "start": {
          "row": 0,
          "column": 0
        },
        "end": {
          "row": 66,
          "column": 0
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// -*- coding: utf-8 -*-",
        "start": {
          "row": 0,
          "column": 0
        },
        "end": {
          "row": 0,
          "column": 24
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// ------------------------------------------------------------------------------------------------",
        "start": {
          "row": 1,
          "column": 0
        },
        "end": {
          "row": 1,
          "column": 99
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// Copyright © 2021, tree-sitter-rust authors.",
        "start": {
          "row": 2,
          "column": 0
        },
        "end": {
          "row": 2,
          "column": 47
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// See the LICENSE file in this repo for license details.",
        "start": {
          "row": 3,
          "column": 0
        },
        "end": {
          "row": 3,
          "column": 57
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "// ------------------------------------------------------------------------------------------------",
        "start": {
          "row": 4,
          "column": 0
        },
        "end": {
          "row": 4,
          "column": 99
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! This crate provides a Rust grammar for the [tree-sitter][] parsing library.",
        "start": {
          "row": 6,
          "column": 0
        },
        "end": {
          "row": 6,
          "column": 79
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//!",
        "start": {
          "row": 7,
          "column": 0
        },
        "end": {
          "row": 7,
          "column": 3
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! Typically, you will use the [language][language func] function to add this grammar to a",
        "start": {
          "row": 8,
          "column": 0
        },
        "end": {
          "row": 8,
          "column": 91
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! tree-sitter [Parser][], and then use the parser to parse some code:",
        "start": {
          "row": 9,
          "column": 0
        },
        "end": {
          "row": 9,
          "column": 71
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//!",
        "start": {
          "row": 10,
          "column": 0
        },
        "end": {
          "row": 10,
          "column": 3
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! ```",
        "start": {
          "row": 11,
          "column": 0
        },
        "end": {
          "row": 11,
          "column": 7
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! use tree_sitter::Parser;",
        "start": {
          "row": 12,
          "column": 0
        },
        "end": {
          "row": 12,
          "column": 28
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//!",
        "start": {
          "row": 13,
          "column": 0
        },
        "end": {
          "row": 13,
          "column": 3
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! let code = r#\"",
        "start": {
          "row": 14,
          "column": 0
        },
        "end": {
          "row": 14,
          "column": 18
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//!     fn double(x: i32) -> i32 {",
        "start": {
          "row": 15,
          "column": 0
        },
        "end": {
          "row": 15,
          "column": 34
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//!         x * 2",
        "start": {
          "row": 16,
          "column": 0
        },
        "end": {
          "row": 16,
          "column": 17
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//!     }",
        "start": {
          "row": 17,
          "column": 0
        },
        "end": {
          "row": 17,
          "column": 9
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! \"#;",
        "start": {
          "row": 18,
          "column": 0
        },
        "end": {
          "row": 18,
          "column": 7
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! let mut parser = Parser::new();",
        "start": {
          "row": 19,
          "column": 0
        },
        "end": {
          "row": 19,
          "column": 35
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! parser.set_language(tree_sitter_rust::language()).expect(\"Error loading Rust grammar\");",
        "start": {
          "row": 20,
          "column": 0
        },
        "end": {
          "row": 20,
          "column": 91
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! let parsed = parser.parse(code, None);",
        "start": {
          "row": 21,
          "column": 0
        },
        "end": {
          "row": 21,
          "column": 42
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! # let parsed = parsed.unwrap();",
        "start": {
          "row": 22,
          "column": 0
        },
        "end": {
          "row": 22,
          "column": 35
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! # let root = parsed.root_node();",
        "start": {
          "row": 23,
          "column": 0
        },
        "end": {
          "row": 23,
          "column": 36
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! # assert!(!root.has_error());",
        "start": {
          "row": 24,
          "column": 0
        },
        "end": {
          "row": 24,
          "column": 33
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! ```",
        "start": {
          "row": 25,
          "column": 0
        },
        "end": {
          "row": 25,
          "column": 7
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//!",
        "start": {
          "row": 26,
          "column": 0
        },
        "end": {
          "row": 26,
          "column": 3
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! [Language]: https://docs.rs/tree-sitter/*/tree_sitter/struct.Language.html",
        "start": {
          "row": 27,
          "column": 0
        },
        "end": {
          "row": 27,
          "column": 78
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! [language func]: fn.language.html",
        "start": {
          "row": 28,
          "column": 0
        },
        "end": {
          "row": 28,
          "column": 37
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! [Parser]: https://docs.rs/tree-sitter/*/tree_sitter/struct.Parser.html",
        "start": {
          "row": 29,
          "column": 0
        },
        "end": {
          "row": 29,
          "column": 74
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "//! [tree-sitter]: https://tree-sitter.github.io/",
        "start": {
          "row": 30,
          "column": 0
        },
        "end": {
          "row": 30,
          "column": 49
        }
      },
      {
        "kind": "use_declaration",
        "name": "query",
        "text": "use tree_sitter::Language;",
        "start": {
          "row": 32,
          "column": 0
        },
        "end": {
          "row": 32,
          "column": 26
        }
      },
      {
        "kind": "use",
        "name": "query",
        "text": "use",
        "start": {
          "row": 32,
          "column": 0
        },
        "end": {
          "row": 32,
          "column": 3
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "tree_sitter::Language",
        "start": {
          "row": 32,
          "column": 4
        },
        "end": {
          "row": 32,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tree_sitter",
        "start": {
          "row": 32,
          "column": 4
        },
        "end": {
          "row": 32,
          "column": 15
        }
      },
      {
        "kind": "::",
        "name": "query",
        "text": "::",
        "start": {
          "row": 32,
          "column": 15
        },
        "end": {
          "row": 32,
          "column": 17
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Language",
        "start": {
          "row": 32,
          "column": 17
        },
        "end": {
          "row": 32,
          "column": 25
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 32,
          "column": 25
        },
        "end": {
          "row": 32,
          "column": 26
        }
      },
      {
        "kind": "foreign_mod_item",
        "name": "query",
        "text": "extern \"C\" {\n    fn tree_sitter_rust() -> Language;\n}",
        "start": {
          "row": 34,
          "column": 0
        },
        "end": {
          "row": 36,
          "column": 1
        }
      },
      {
        "kind": "extern_modifier",
        "name": "query",
        "text": "extern \"C\"",
        "start": {
          "row": 34,
          "column": 0
        },
        "end": {
          "row": 34,
          "column": 10
        }
      },
      {
        "kind": "extern",
        "name": "query",
        "text": "extern",
        "start": {
          "row": 34,
          "column": 0
        },
        "end": {
          "row": 34,
          "column": 6
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"C\"",
        "start": {
          "row": 34,
          "column": 7
        },
        "end": {
          "row": 34,
          "column": 10
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 34,
          "column": 7
        },
        "end": {
          "row": 34,
          "column": 8
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 34,
          "column": 9
        },
        "end": {
          "row": 34,
          "column": 10
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    fn tree_sitter_rust() -> Language;\n}",
        "start": {
          "row": 34,
          "column": 11
        },
        "end": {
          "row": 36,
          "column": 1
        }
      },
      {
        "kind": "{",
        "name": "query",
        "text": "{",
        "start": {
          "row": 34,
          "column": 11
        },
        "end": {
          "row": 34,
          "column": 12
        }
      },
      {
        "kind": "function_signature_item",
        "name": "query",
        "text": "fn tree_sitter_rust() -> Language;",
        "start": {
          "row": 35,
          "column": 4
        },
        "end": {
          "row": 35,
          "column": 38
        }
      },
      {
        "kind": "fn",
        "name": "query",
        "text": "fn",
        "start": {
          "row": 35,
          "column": 4
        },
        "end": {
          "row": 35,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tree_sitter_rust",
        "start": {
          "row": 35,
          "column": 7
        },
        "end": {
          "row": 35,
          "column": 23
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "()",
        "start": {
          "row": 35,
          "column": 23
        },
        "end": {
          "row": 35,
          "column": 25
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 35,
          "column": 23
        },
        "end": {
          "row": 35,
          "column": 24
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 35,
          "column": 24
        },
        "end": {
          "row": 35,
          "column": 25
        }
      },
      {
        "kind": "->",
        "name": "query",
        "text": "->",
        "start": {
          "row": 35,
          "column": 26
        },
        "end": {
          "row": 35,
          "column": 28
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Language",
        "start": {
          "row": 35,
          "column": 29
        },
        "end": {
          "row": 35,
          "column": 37
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 35,
          "column": 37
        },
        "end": {
          "row": 35,
          "column": 38
        }
      },
      {
        "kind": "}",
        "name": "query",
        "text": "}",
        "start": {
          "row": 36,
          "column": 0
        },
        "end": {
          "row": 36,
          "column": 1
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// Returns the tree-sitter [Language][] for this grammar.",
        "start": {
          "row": 38,
          "column": 0
        },
        "end": {
          "row": 38,
          "column": 58
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 39,
          "column": 0
        },
        "end": {
          "row": 39,
          "column": 3
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// [Language]: https://docs.rs/tree-sitter/*/tree_sitter/struct.Language.html",
        "start": {
          "row": 40,
          "column": 0
        },
        "end": {
          "row": 40,
          "column": 78
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "pub fn language() -> Language {\n    unsafe { tree_sitter_rust() }\n}",
        "start": {
          "row": 41,
          "column": 0
        },
        "end": {
          "row": 43,
          "column": 1
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 41,
          "column": 0
        },
        "end": {
          "row": 41,
          "column": 3
        }
      },
      {
        "kind": "pub",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 41,
          "column": 0
        },
        "end": {
          "row": 41,
          "column": 3
        }
      },
      {
        "kind": "fn",
        "name": "query",
        "text": "fn",
        "start": {
          "row": 41,
          "column": 4
        },
        "end": {
          "row": 41,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "language",
        "start": {
          "row": 41,
          "column": 7
        },
        "end": {
          "row": 41,
          "column": 15
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "()",
        "start": {
          "row": 41,
          "column": 15
        },
        "end": {
          "row": 41,
          "column": 17
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 41,
          "column": 15
        },
        "end": {
          "row": 41,
          "column": 16
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 41,
          "column": 16
        },
        "end": {
          "row": 41,
          "column": 17
        }
      },
      {
        "kind": "->",
        "name": "query",
        "text": "->",
        "start": {
          "row": 41,
          "column": 18
        },
        "end": {
          "row": 41,
          "column": 20
        }
      },
      {
        "kind": "type_identifier",
        "name": "query",
        "text": "Language",
        "start": {
          "row": 41,
          "column": 21
        },
        "end": {
          "row": 41,
          "column": 29
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n    unsafe { tree_sitter_rust() }\n}",
        "start": {
          "row": 41,
          "column": 30
        },
        "end": {
          "row": 43,
          "column": 1
        }
      },
      {
        "kind": "{",
        "name": "query",
        "text": "{",
        "start": {
          "row": 41,
          "column": 30
        },
        "end": {
          "row": 41,
          "column": 31
        }
      },
      {
        "kind": "unsafe_block",
        "name": "query",
        "text": "unsafe { tree_sitter_rust() }",
        "start": {
          "row": 42,
          "column": 4
        },
        "end": {
          "row": 42,
          "column": 33
        }
      },
      {
        "kind": "unsafe",
        "name": "query",
        "text": "unsafe",
        "start": {
          "row": 42,
          "column": 4
        },
        "end": {
          "row": 42,
          "column": 10
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{ tree_sitter_rust() }",
        "start": {
          "row": 42,
          "column": 11
        },
        "end": {
          "row": 42,
          "column": 33
        }
      },
      {
        "kind": "{",
        "name": "query",
        "text": "{",
        "start": {
          "row": 42,
          "column": 11
        },
        "end": {
          "row": 42,
          "column": 12
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "tree_sitter_rust()",
        "start": {
          "row": 42,
          "column": 13
        },
        "end": {
          "row": 42,
          "column": 31
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tree_sitter_rust",
        "start": {
          "row": 42,
          "column": 13
        },
        "end": {
          "row": 42,
          "column": 29
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 42,
          "column": 29
        },
        "end": {
          "row": 42,
          "column": 31
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 42,
          "column": 29
        },
        "end": {
          "row": 42,
          "column": 30
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 42,
          "column": 30
        },
        "end": {
          "row": 42,
          "column": 31
        }
      },
      {
        "kind": "}",
        "name": "query",
        "text": "}",
        "start": {
          "row": 42,
          "column": 32
        },
        "end": {
          "row": 42,
          "column": 33
        }
      },
      {
        "kind": "}",
        "name": "query",
        "text": "}",
        "start": {
          "row": 43,
          "column": 0
        },
        "end": {
          "row": 43,
          "column": 1
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The source of the Rust tree-sitter grammar description.",
        "start": {
          "row": 45,
          "column": 0
        },
        "end": {
          "row": 45,
          "column": 59
        }
      },
      {
        "kind": "const_item",
        "name": "query",
        "text": "pub const GRAMMAR: &str = include_str!(\"../../grammar.js\");",
        "start": {
          "row": 46,
          "column": 0
        },
        "end": {
          "row": 46,
          "column": 59
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 46,
          "column": 0
        },
        "end": {
          "row": 46,
          "column": 3
        }
      },
      {
        "kind": "pub",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 46,
          "column": 0
        },
        "end": {
          "row": 46,
          "column": 3
        }
      },
      {
        "kind": "const",
        "name": "query",
        "text": "const",
        "start": {
          "row": 46,
          "column": 4
        },
        "end": {
          "row": 46,
          "column": 9
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "GRAMMAR",
        "start": {
          "row": 46,
          "column": 10
        },
        "end": {
          "row": 46,
          "column": 17
        }
      },
      {
        "kind": ":",
        "name": "query",
        "text": ":",
        "start": {
          "row": 46,
          "column": 17
        },
        "end": {
          "row": 46,
          "column": 18
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&str",
        "start": {
          "row": 46,
          "column": 19
        },
        "end": {
          "row": 46,
          "column": 23
        }
      },
      {
        "kind": "&",
        "name": "query",
        "text": "&",
        "start": {
          "row": 46,
          "column": 19
        },
        "end": {
          "row": 46,
          "column": 20
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 46,
          "column": 20
        },
        "end": {
          "row": 46,
          "column": 23
        }
      },
      {
        "kind": "=",
        "name": "query",
        "text": "=",
        "start": {
          "row": 46,
          "column": 24
        },
        "end": {
          "row": 46,
          "column": 25
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "include_str!(\"../../grammar.js\")",
        "start": {
          "row": 46,
          "column": 26
        },
        "end": {
          "row": 46,
          "column": 58
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "include_str",
        "start": {
          "row": 46,
          "column": 26
        },
        "end": {
          "row": 46,
          "column": 37
        }
      },
      {
        "kind": "!",
        "name": "query",
        "text": "!",
        "start": {
          "row": 46,
          "column": 37
        },
        "end": {
          "row": 46,
          "column": 38
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(\"../../grammar.js\")",
        "start": {
          "row": 46,
          "column": 38
        },
        "end": {
          "row": 46,
          "column": 58
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 46,
          "column": 38
        },
        "end": {
          "row": 46,
          "column": 39
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"../../grammar.js\"",
        "start": {
          "row": 46,
          "column": 39
        },
        "end": {
          "row": 46,
          "column": 57
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 46,
          "column": 39
        },
        "end": {
          "row": 46,
          "column": 40
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 46,
          "column": 56
        },
        "end": {
          "row": 46,
          "column": 57
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 46,
          "column": 57
        },
        "end": {
          "row": 46,
          "column": 58
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 46,
          "column": 58
        },
        "end": {
          "row": 46,
          "column": 59
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The syntax highlighting query for this language.",
        "start": {
          "row": 48,
          "column": 0
        },
        "end": {
          "row": 48,
          "column": 52
        }
      },
      {
        "kind": "const_item",
        "name": "query",
        "text": "pub const HIGHLIGHT_QUERY: &str = include_str!(\"../../queries/highlights.scm\");",
        "start": {
          "row": 49,
          "column": 0
        },
        "end": {
          "row": 49,
          "column": 79
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 49,
          "column": 0
        },
        "end": {
          "row": 49,
          "column": 3
        }
      },
      {
        "kind": "pub",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 49,
          "column": 0
        },
        "end": {
          "row": 49,
          "column": 3
        }
      },
      {
        "kind": "const",
        "name": "query",
        "text": "const",
        "start": {
          "row": 49,
          "column": 4
        },
        "end": {
          "row": 49,
          "column": 9
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "HIGHLIGHT_QUERY",
        "start": {
          "row": 49,
          "column": 10
        },
        "end": {
          "row": 49,
          "column": 25
        }
      },
      {
        "kind": ":",
        "name": "query",
        "text": ":",
        "start": {
          "row": 49,
          "column": 25
        },
        "end": {
          "row": 49,
          "column": 26
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&str",
        "start": {
          "row": 49,
          "column": 27
        },
        "end": {
          "row": 49,
          "column": 31
        }
      },
      {
        "kind": "&",
        "name": "query",
        "text": "&",
        "start": {
          "row": 49,
          "column": 27
        },
        "end": {
          "row": 49,
          "column": 28
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 49,
          "column": 28
        },
        "end": {
          "row": 49,
          "column": 31
        }
      },
      {
        "kind": "=",
        "name": "query",
        "text": "=",
        "start": {
          "row": 49,
          "column": 32
        },
        "end": {
          "row": 49,
          "column": 33
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "include_str!(\"../../queries/highlights.scm\")",
        "start": {
          "row": 49,
          "column": 34
        },
        "end": {
          "row": 49,
          "column": 78
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "include_str",
        "start": {
          "row": 49,
          "column": 34
        },
        "end": {
          "row": 49,
          "column": 45
        }
      },
      {
        "kind": "!",
        "name": "query",
        "text": "!",
        "start": {
          "row": 49,
          "column": 45
        },
        "end": {
          "row": 49,
          "column": 46
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(\"../../queries/highlights.scm\")",
        "start": {
          "row": 49,
          "column": 46
        },
        "end": {
          "row": 49,
          "column": 78
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 49,
          "column": 46
        },
        "end": {
          "row": 49,
          "column": 47
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"../../queries/highlights.scm\"",
        "start": {
          "row": 49,
          "column": 47
        },
        "end": {
          "row": 49,
          "column": 77
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 49,
          "column": 47
        },
        "end": {
          "row": 49,
          "column": 48
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 49,
          "column": 76
        },
        "end": {
          "row": 49,
          "column": 77
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 49,
          "column": 77
        },
        "end": {
          "row": 49,
          "column": 78
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 49,
          "column": 78
        },
        "end": {
          "row": 49,
          "column": 79
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// The content of the [`node-types.json`][] file for this grammar.",
        "start": {
          "row": 51,
          "column": 0
        },
        "end": {
          "row": 51,
          "column": 67
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "///",
        "start": {
          "row": 52,
          "column": 0
        },
        "end": {
          "row": 52,
          "column": 3
        }
      },
      {
        "kind": "line_comment",
        "name": "query",
        "text": "/// [`node-types.json`]: https://tree-sitter.github.io/tree-sitter/using-parsers#static-node-types",
        "start": {
          "row": 53,
          "column": 0
        },
        "end": {
          "row": 53,
          "column": 98
        }
      },
      {
        "kind": "const_item",
        "name": "query",
        "text": "pub const NODE_TYPES: &str = include_str!(\"../../src/node-types.json\");",
        "start": {
          "row": 54,
          "column": 0
        },
        "end": {
          "row": 54,
          "column": 71
        }
      },
      {
        "kind": "visibility_modifier",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 54,
          "column": 0
        },
        "end": {
          "row": 54,
          "column": 3
        }
      },
      {
        "kind": "pub",
        "name": "query",
        "text": "pub",
        "start": {
          "row": 54,
          "column": 0
        },
        "end": {
          "row": 54,
          "column": 3
        }
      },
      {
        "kind": "const",
        "name": "query",
        "text": "const",
        "start": {
          "row": 54,
          "column": 4
        },
        "end": {
          "row": 54,
          "column": 9
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "NODE_TYPES",
        "start": {
          "row": 54,
          "column": 10
        },
        "end": {
          "row": 54,
          "column": 20
        }
      },
      {
        "kind": ":",
        "name": "query",
        "text": ":",
        "start": {
          "row": 54,
          "column": 20
        },
        "end": {
          "row": 54,
          "column": 21
        }
      },
      {
        "kind": "reference_type",
        "name": "query",
        "text": "&str",
        "start": {
          "row": 54,
          "column": 22
        },
        "end": {
          "row": 54,
          "column": 26
        }
      },
      {
        "kind": "&",
        "name": "query",
        "text": "&",
        "start": {
          "row": 54,
          "column": 22
        },
        "end": {
          "row": 54,
          "column": 23
        }
      },
      {
        "kind": "primitive_type",
        "name": "query",
        "text": "str",
        "start": {
          "row": 54,
          "column": 23
        },
        "end": {
          "row": 54,
          "column": 26
        }
      },
      {
        "kind": "=",
        "name": "query",
        "text": "=",
        "start": {
          "row": 54,
          "column": 27
        },
        "end": {
          "row": 54,
          "column": 28
        }
      },
      {
        "kind": "macro_invocation",
        "name": "query",
        "text": "include_str!(\"../../src/node-types.json\")",
        "start": {
          "row": 54,
          "column": 29
        },
        "end": {
          "row": 54,
          "column": 70
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "include_str",
        "start": {
          "row": 54,
          "column": 29
        },
        "end": {
          "row": 54,
          "column": 40
        }
      },
      {
        "kind": "!",
        "name": "query",
        "text": "!",
        "start": {
          "row": 54,
          "column": 40
        },
        "end": {
          "row": 54,
          "column": 41
        }
      },
      {
        "kind": "token_tree",
        "name": "query",
        "text": "(\"../../src/node-types.json\")",
        "start": {
          "row": 54,
          "column": 41
        },
        "end": {
          "row": 54,
          "column": 70
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 54,
          "column": 41
        },
        "end": {
          "row": 54,
          "column": 42
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"../../src/node-types.json\"",
        "start": {
          "row": 54,
          "column": 42
        },
        "end": {
          "row": 54,
          "column": 69
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 54,
          "column": 42
        },
        "end": {
          "row": 54,
          "column": 43
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 54,
          "column": 68
        },
        "end": {
          "row": 54,
          "column": 69
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 54,
          "column": 69
        },
        "end": {
          "row": 54,
          "column": 70
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 54,
          "column": 70
        },
        "end": {
          "row": 54,
          "column": 71
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[cfg(test)]",
        "start": {
          "row": 56,
          "column": 0
        },
        "end": {
          "row": 56,
          "column": 12
        }
      },
      {
        "kind": "#",
        "name": "query",
        "text": "#",
        "start": {
          "row": 56,
          "column": 0
        },
        "end": {
          "row": 56,
          "column": 1
        }
      },
      {
        "kind": "[",
        "name": "query",
        "text": "[",
        "start": {
          "row": 56,
          "column": 1
        },
        "end": {
          "row": 56,
          "column": 2
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "cfg(test)",
        "start": {
          "row": 56,
          "column": 2
        },
        "end": {
          "row": 56,
          "column": 11
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "cfg",
        "start": {
          "row": 56,
          "column": 2
        },
        "end": {
          "row": 56,
          "column": 5
        }
      },
      {
        "kind": "meta_arguments",
        "name": "query",
        "text": "(test)",
        "start": {
          "row": 56,
          "column": 5
        },
        "end": {
          "row": 56,
          "column": 11
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 56,
          "column": 5
        },
        "end": {
          "row": 56,
          "column": 6
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "test",
        "start": {
          "row": 56,
          "column": 6
        },
        "end": {
          "row": 56,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "test",
        "start": {
          "row": 56,
          "column": 6
        },
        "end": {
          "row": 56,
          "column": 10
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 56,
          "column": 10
        },
        "end": {
          "row": 56,
          "column": 11
        }
      },
      {
        "kind": "]",
        "name": "query",
        "text": "]",
        "start": {
          "row": 56,
          "column": 11
        },
        "end": {
          "row": 56,
          "column": 12
        }
      },
      {
        "kind": "mod_item",
        "name": "query",
        "text": "mod tests {\n    #[test]\n    fn can_load_grammar() {\n        let mut parser = tree_sitter::Parser::new();\n        parser\n            .set_language(super::language())\n            .expect(\"Error loading Rust grammar\");\n    }\n}",
        "start": {
          "row": 57,
          "column": 0
        },
        "end": {
          "row": 65,
          "column": 1
        }
      },
      {
        "kind": "mod",
        "name": "query",
        "text": "mod",
        "start": {
          "row": 57,
          "column": 0
        },
        "end": {
          "row": 57,
          "column": 3
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tests",
        "start": {
          "row": 57,
          "column": 4
        },
        "end": {
          "row": 57,
          "column": 9
        }
      },
      {
        "kind": "declaration_list",
        "name": "query",
        "text": "{\n    #[test]\n    fn can_load_grammar() {\n        let mut parser = tree_sitter::Parser::new();\n        parser\n            .set_language(super::language())\n            .expect(\"Error loading Rust grammar\");\n    }\n}",
        "start": {
          "row": 57,
          "column": 10
        },
        "end": {
          "row": 65,
          "column": 1
        }
      },
      {
        "kind": "{",
        "name": "query",
        "text": "{",
        "start": {
          "row": 57,
          "column": 10
        },
        "end": {
          "row": 57,
          "column": 11
        }
      },
      {
        "kind": "attribute_item",
        "name": "query",
        "text": "#[test]",
        "start": {
          "row": 58,
          "column": 4
        },
        "end": {
          "row": 58,
          "column": 11
        }
      },
      {
        "kind": "#",
        "name": "query",
        "text": "#",
        "start": {
          "row": 58,
          "column": 4
        },
        "end": {
          "row": 58,
          "column": 5
        }
      },
      {
        "kind": "[",
        "name": "query",
        "text": "[",
        "start": {
          "row": 58,
          "column": 5
        },
        "end": {
          "row": 58,
          "column": 6
        }
      },
      {
        "kind": "meta_item",
        "name": "query",
        "text": "test",
        "start": {
          "row": 58,
          "column": 6
        },
        "end": {
          "row": 58,
          "column": 10
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "test",
        "start": {
          "row": 58,
          "column": 6
        },
        "end": {
          "row": 58,
          "column": 10
        }
      },
      {
        "kind": "]",
        "name": "query",
        "text": "]",
        "start": {
          "row": 58,
          "column": 10
        },
        "end": {
          "row": 58,
          "column": 11
        }
      },
      {
        "kind": "function_item",
        "name": "query",
        "text": "fn can_load_grammar() {\n        let mut parser = tree_sitter::Parser::new();\n        parser\n            .set_language(super::language())\n            .expect(\"Error loading Rust grammar\");\n    }",
        "start": {
          "row": 59,
          "column": 4
        },
        "end": {
          "row": 64,
          "column": 5
        }
      },
      {
        "kind": "fn",
        "name": "query",
        "text": "fn",
        "start": {
          "row": 59,
          "column": 4
        },
        "end": {
          "row": 59,
          "column": 6
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "can_load_grammar",
        "start": {
          "row": 59,
          "column": 7
        },
        "end": {
          "row": 59,
          "column": 23
        }
      },
      {
        "kind": "parameters",
        "name": "query",
        "text": "()",
        "start": {
          "row": 59,
          "column": 23
        },
        "end": {
          "row": 59,
          "column": 25
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 59,
          "column": 23
        },
        "end": {
          "row": 59,
          "column": 24
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 59,
          "column": 24
        },
        "end": {
          "row": 59,
          "column": 25
        }
      },
      {
        "kind": "block",
        "name": "query",
        "text": "{\n        let mut parser = tree_sitter::Parser::new();\n        parser\n            .set_language(super::language())\n            .expect(\"Error loading Rust grammar\");\n    }",
        "start": {
          "row": 59,
          "column": 26
        },
        "end": {
          "row": 64,
          "column": 5
        }
      },
      {
        "kind": "{",
        "name": "query",
        "text": "{",
        "start": {
          "row": 59,
          "column": 26
        },
        "end": {
          "row": 59,
          "column": 27
        }
      },
      {
        "kind": "let_declaration",
        "name": "query",
        "text": "let mut parser = tree_sitter::Parser::new();",
        "start": {
          "row": 60,
          "column": 8
        },
        "end": {
          "row": 60,
          "column": 52
        }
      },
      {
        "kind": "let",
        "name": "query",
        "text": "let",
        "start": {
          "row": 60,
          "column": 8
        },
        "end": {
          "row": 60,
          "column": 11
        }
      },
      {
        "kind": "mutable_specifier",
        "name": "query",
        "text": "mut",
        "start": {
          "row": 60,
          "column": 12
        },
        "end": {
          "row": 60,
          "column": 15
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "parser",
        "start": {
          "row": 60,
          "column": 16
        },
        "end": {
          "row": 60,
          "column": 22
        }
      },
      {
        "kind": "=",
        "name": "query",
        "text": "=",
        "start": {
          "row": 60,
          "column": 23
        },
        "end": {
          "row": 60,
          "column": 24
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "tree_sitter::Parser::new()",
        "start": {
          "row": 60,
          "column": 25
        },
        "end": {
          "row": 60,
          "column": 51
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "tree_sitter::Parser::new",
        "start": {
          "row": 60,
          "column": 25
        },
        "end": {
          "row": 60,
          "column": 49
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "tree_sitter::Parser",
        "start": {
          "row": 60,
          "column": 25
        },
        "end": {
          "row": 60,
          "column": 44
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "tree_sitter",
        "start": {
          "row": 60,
          "column": 25
        },
        "end": {
          "row": 60,
          "column": 36
        }
      },
      {
        "kind": "::",
        "name": "query",
        "text": "::",
        "start": {
          "row": 60,
          "column": 36
        },
        "end": {
          "row": 60,
          "column": 38
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "Parser",
        "start": {
          "row": 60,
          "column": 38
        },
        "end": {
          "row": 60,
          "column": 44
        }
      },
      {
        "kind": "::",
        "name": "query",
        "text": "::",
        "start": {
          "row": 60,
          "column": 44
        },
        "end": {
          "row": 60,
          "column": 46
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "new",
        "start": {
          "row": 60,
          "column": 46
        },
        "end": {
          "row": 60,
          "column": 49
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 60,
          "column": 49
        },
        "end": {
          "row": 60,
          "column": 51
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 60,
          "column": 49
        },
        "end": {
          "row": 60,
          "column": 50
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 60,
          "column": 50
        },
        "end": {
          "row": 60,
          "column": 51
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 60,
          "column": 51
        },
        "end": {
          "row": 60,
          "column": 52
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "parser\n            .set_language(super::language())\n            .expect(\"Error loading Rust grammar\")",
        "start": {
          "row": 61,
          "column": 8
        },
        "end": {
          "row": 63,
          "column": 49
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "parser\n            .set_language(super::language())\n            .expect",
        "start": {
          "row": 61,
          "column": 8
        },
        "end": {
          "row": 63,
          "column": 19
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "parser\n            .set_language(super::language())",
        "start": {
          "row": 61,
          "column": 8
        },
        "end": {
          "row": 62,
          "column": 44
        }
      },
      {
        "kind": "field_expression",
        "name": "query",
        "text": "parser\n            .set_language",
        "start": {
          "row": 61,
          "column": 8
        },
        "end": {
          "row": 62,
          "column": 25
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "parser",
        "start": {
          "row": 61,
          "column": 8
        },
        "end": {
          "row": 61,
          "column": 14
        }
      },
      {
        "kind": ".",
        "name": "query",
        "text": ".",
        "start": {
          "row": 62,
          "column": 12
        },
        "end": {
          "row": 62,
          "column": 13
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "set_language",
        "start": {
          "row": 62,
          "column": 13
        },
        "end": {
          "row": 62,
          "column": 25
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(super::language())",
        "start": {
          "row": 62,
          "column": 25
        },
        "end": {
          "row": 62,
          "column": 44
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 62,
          "column": 25
        },
        "end": {
          "row": 62,
          "column": 26
        }
      },
      {
        "kind": "call_expression",
        "name": "query",
        "text": "super::language()",
        "start": {
          "row": 62,
          "column": 26
        },
        "end": {
          "row": 62,
          "column": 43
        }
      },
      {
        "kind": "scoped_identifier",
        "name": "query",
        "text": "super::language",
        "start": {
          "row": 62,
          "column": 26
        },
        "end": {
          "row": 62,
          "column": 41
        }
      },
      {
        "kind": "super",
        "name": "query",
        "text": "super",
        "start": {
          "row": 62,
          "column": 26
        },
        "end": {
          "row": 62,
          "column": 31
        }
      },
      {
        "kind": "::",
        "name": "query",
        "text": "::",
        "start": {
          "row": 62,
          "column": 31
        },
        "end": {
          "row": 62,
          "column": 33
        }
      },
      {
        "kind": "identifier",
        "name": "query",
        "text": "language",
        "start": {
          "row": 62,
          "column": 33
        },
        "end": {
          "row": 62,
          "column": 41
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "()",
        "start": {
          "row": 62,
          "column": 41
        },
        "end": {
          "row": 62,
          "column": 43
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 62,
          "column": 41
        },
        "end": {
          "row": 62,
          "column": 42
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 62,
          "column": 42
        },
        "end": {
          "row": 62,
          "column": 43
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 62,
          "column": 43
        },
        "end": {
          "row": 62,
          "column": 44
        }
      },
      {
        "kind": ".",
        "name": "query",
        "text": ".",
        "start": {
          "row": 63,
          "column": 12
        },
        "end": {
          "row": 63,
          "column": 13
        }
      },
      {
        "kind": "field_identifier",
        "name": "query",
        "text": "expect",
        "start": {
          "row": 63,
          "column": 13
        },
        "end": {
          "row": 63,
          "column": 19
        }
      },
      {
        "kind": "arguments",
        "name": "query",
        "text": "(\"Error loading Rust grammar\")",
        "start": {
          "row": 63,
          "column": 19
        },
        "end": {
          "row": 63,
          "column": 49
        }
      },
      {
        "kind": "(",
        "name": "query",
        "text": "(",
        "start": {
          "row": 63,
          "column": 19
        },
        "end": {
          "row": 63,
          "column": 20
        }
      },
      {
        "kind": "string_literal",
        "name": "query",
        "text": "\"Error loading Rust grammar\"",
        "start": {
          "row": 63,
          "column": 20
        },
        "end": {
          "row": 63,
          "column": 48
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 63,
          "column": 20
        },
        "end": {
          "row": 63,
          "column": 21
        }
      },
      {
        "kind": "\"",
        "name": "query",
        "text": "\"",
        "start": {
          "row": 63,
          "column": 47
        },
        "end": {
          "row": 63,
          "column": 48
        }
      },
      {
        "kind": ")",
        "name": "query",
        "text": ")",
        "start": {
          "row": 63,
          "column": 48
        },
        "end": {
          "row": 63,
          "column": 49
        }
      },
      {
        "kind": ";",
        "name": "query",
        "text": ";",
        "start": {
          "row": 63,
          "column": 49
        },
        "end": {
          "row": 63,
          "column": 50
        }
      },
      {
        "kind": "}",
        "name": "query",
        "text": "}",
        "start": {
          "row": 64,
          "column": 4
        },
        "end": {
          "row": 64,
          "column": 5
        }
      },
      {
        "kind": "}",
        "name": "query",
        "text": "}",
        "start": {
          "row": 65,
          "column": 0
        },
        "end": {
          "row": 65,
          "column": 1
        }
      }
    ]
  }
]
